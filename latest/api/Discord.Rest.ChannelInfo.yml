### YamlMime:ManagedReference
items:
- uid: Discord.Rest.ChannelInfo
  commentId: T:Discord.Rest.ChannelInfo
  id: ChannelInfo
  parent: Discord.Rest
  children:
  - Discord.Rest.ChannelInfo.Bitrate
  - Discord.Rest.ChannelInfo.IsNsfw
  - Discord.Rest.ChannelInfo.Name
  - Discord.Rest.ChannelInfo.SlowModeInterval
  - Discord.Rest.ChannelInfo.Topic
  langs:
  - csharp
  - vb
  name: ChannelInfo
  nameWithType: ChannelInfo
  fullName: Discord.Rest.ChannelInfo
  type: Struct
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelInfo
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelInfo.cs
    startLine: 5
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nRepresents information for a channel.\n"
  example: []
  syntax:
    content: public struct ChannelInfo
    content.vb: Public Structure ChannelInfo
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Discord.Rest.ChannelInfo.Name
  commentId: P:Discord.Rest.ChannelInfo.Name
  id: Name
  parent: Discord.Rest.ChannelInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ChannelInfo.Name
  fullName: Discord.Rest.ChannelInfo.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelInfo.cs
    startLine: 22
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the name of this channel.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the name of this channel.\n"
    content.vb: Public ReadOnly Property Name As String
  overload: Discord.Rest.ChannelInfo.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.ChannelInfo.Topic
  commentId: P:Discord.Rest.ChannelInfo.Topic
  id: Topic
  parent: Discord.Rest.ChannelInfo
  langs:
  - csharp
  - vb
  name: Topic
  nameWithType: ChannelInfo.Topic
  fullName: Discord.Rest.ChannelInfo.Topic
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Topic
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelInfo.cs
    startLine: 29
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the topic of this channel.\n"
  example: []
  syntax:
    content: public string Topic { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the topic of this channel, if any.\n"
    content.vb: Public ReadOnly Property Topic As String
  overload: Discord.Rest.ChannelInfo.Topic*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.ChannelInfo.SlowModeInterval
  commentId: P:Discord.Rest.ChannelInfo.SlowModeInterval
  id: SlowModeInterval
  parent: Discord.Rest.ChannelInfo
  langs:
  - csharp
  - vb
  name: SlowModeInterval
  nameWithType: ChannelInfo.SlowModeInterval
  fullName: Discord.Rest.ChannelInfo.SlowModeInterval
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SlowModeInterval
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelInfo.cs
    startLine: 38
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the current slow-mode delay of this channel.\n"
  example: []
  syntax:
    content: public int? SlowModeInterval { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn <see cref=\"!:Int32\"></see> representing the time in seconds required before the user can send another\nmessage; <code>0</code> if disabled.\n<code>null</code> if this is not mentioned in this entry.\n"
    content.vb: Public ReadOnly Property SlowModeInterval As Integer?
  overload: Discord.Rest.ChannelInfo.SlowModeInterval*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.ChannelInfo.IsNsfw
  commentId: P:Discord.Rest.ChannelInfo.IsNsfw
  id: IsNsfw
  parent: Discord.Rest.ChannelInfo
  langs:
  - csharp
  - vb
  name: IsNsfw
  nameWithType: ChannelInfo.IsNsfw
  fullName: Discord.Rest.ChannelInfo.IsNsfw
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsNsfw
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelInfo.cs
    startLine: 46
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the value that indicates whether this channel is NSFW.\n"
  example: []
  syntax:
    content: public bool? IsNsfw { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: "\n<code>true</code> if this channel has the NSFW flag enabled; otherwise <code>false</code>.\n<code>null</code> if this is not mentioned in this entry.\n"
    content.vb: Public ReadOnly Property IsNsfw As Boolean?
  overload: Discord.Rest.ChannelInfo.IsNsfw*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.ChannelInfo.Bitrate
  commentId: P:Discord.Rest.ChannelInfo.Bitrate
  id: Bitrate
  parent: Discord.Rest.ChannelInfo
  langs:
  - csharp
  - vb
  name: Bitrate
  nameWithType: ChannelInfo.Bitrate
  fullName: Discord.Rest.ChannelInfo.Bitrate
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Bitrate
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelInfo.cs
    startLine: 54
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the bit-rate of this channel if applicable.\n"
  example: []
  syntax:
    content: public int? Bitrate { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn <see cref=\"!:Int32\"></see> representing the bit-rate set for the voice channel;\n<code>null</code> if this is not mentioned in this entry.\n"
    content.vb: Public ReadOnly Property Bitrate As Integer?
  overload: Discord.Rest.ChannelInfo.Bitrate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: Discord.Rest.ChannelInfo.Name*
  commentId: Overload:Discord.Rest.ChannelInfo.Name
  name: Name
  nameWithType: ChannelInfo.Name
  fullName: Discord.Rest.ChannelInfo.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Rest.ChannelInfo.Topic*
  commentId: Overload:Discord.Rest.ChannelInfo.Topic
  name: Topic
  nameWithType: ChannelInfo.Topic
  fullName: Discord.Rest.ChannelInfo.Topic
- uid: Discord.Rest.ChannelInfo.SlowModeInterval*
  commentId: Overload:Discord.Rest.ChannelInfo.SlowModeInterval
  name: SlowModeInterval
  nameWithType: ChannelInfo.SlowModeInterval
  fullName: Discord.Rest.ChannelInfo.SlowModeInterval
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.ChannelInfo.IsNsfw*
  commentId: Overload:Discord.Rest.ChannelInfo.IsNsfw
  name: IsNsfw
  nameWithType: ChannelInfo.IsNsfw
  fullName: Discord.Rest.ChannelInfo.IsNsfw
- uid: System.Nullable{System.Boolean}
  commentId: '!:System.Nullable{System.Boolean}'
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.ChannelInfo.Bitrate*
  commentId: Overload:Discord.Rest.ChannelInfo.Bitrate
  name: Bitrate
  nameWithType: ChannelInfo.Bitrate
  fullName: Discord.Rest.ChannelInfo.Bitrate
