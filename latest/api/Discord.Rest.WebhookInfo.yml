### YamlMime:ManagedReference
items:
- uid: Discord.Rest.WebhookInfo
  commentId: T:Discord.Rest.WebhookInfo
  id: WebhookInfo
  parent: Discord.Rest
  children:
  - Discord.Rest.WebhookInfo.Avatar
  - Discord.Rest.WebhookInfo.ChannelId
  - Discord.Rest.WebhookInfo.Name
  langs:
  - csharp
  - vb
  name: WebhookInfo
  nameWithType: WebhookInfo
  fullName: Discord.Rest.WebhookInfo
  type: Struct
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WebhookInfo
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookInfo.cs
    startLine: 5
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nRepresents information for a webhook.\n"
  example: []
  syntax:
    content: public struct WebhookInfo
    content.vb: Public Structure WebhookInfo
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Discord.Rest.WebhookInfo.Name
  commentId: P:Discord.Rest.WebhookInfo.Name
  id: Name
  parent: Discord.Rest.WebhookInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: WebhookInfo.Name
  fullName: Discord.Rest.WebhookInfo.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookInfo.cs
    startLine: 20
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the name of this webhook.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the name of this webhook.\n"
    content.vb: Public ReadOnly Property Name As String
  overload: Discord.Rest.WebhookInfo.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.WebhookInfo.ChannelId
  commentId: P:Discord.Rest.WebhookInfo.ChannelId
  id: ChannelId
  parent: Discord.Rest.WebhookInfo
  langs:
  - csharp
  - vb
  name: ChannelId
  nameWithType: WebhookInfo.ChannelId
  fullName: Discord.Rest.WebhookInfo.ChannelId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelId
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookInfo.cs
    startLine: 28
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the ID of the channel that this webhook sends to.\n"
  example: []
  syntax:
    content: public ulong? ChannelId { get; }
    parameters: []
    return:
      type: System.Nullable{System.UInt64}
      description: "\nA <see cref=\"!:System.UInt64\"></see> representing the snowflake identifier of the channel that this webhook can send\nto.\n"
    content.vb: Public ReadOnly Property ChannelId As ULong?
  overload: Discord.Rest.WebhookInfo.ChannelId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.WebhookInfo.Avatar
  commentId: P:Discord.Rest.WebhookInfo.Avatar
  id: Avatar
  parent: Discord.Rest.WebhookInfo
  langs:
  - csharp
  - vb
  name: Avatar
  nameWithType: WebhookInfo.Avatar
  fullName: Discord.Rest.WebhookInfo.Avatar
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Avatar
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookInfo.cs
    startLine: 35
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the hash value of this webhook&apos;s avatar.\n"
  example: []
  syntax:
    content: public string Avatar { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the hash of this webhook&apos;s avatar.\n"
    content.vb: Public ReadOnly Property Avatar As String
  overload: Discord.Rest.WebhookInfo.Avatar*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: Discord.Rest.WebhookInfo.Name*
  commentId: Overload:Discord.Rest.WebhookInfo.Name
  name: Name
  nameWithType: WebhookInfo.Name
  fullName: Discord.Rest.WebhookInfo.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Rest.WebhookInfo.ChannelId*
  commentId: Overload:Discord.Rest.WebhookInfo.ChannelId
  name: ChannelId
  nameWithType: WebhookInfo.ChannelId
  fullName: Discord.Rest.WebhookInfo.ChannelId
- uid: System.Nullable{System.UInt64}
  commentId: '!:System.Nullable{System.UInt64}'
  definition: System.Nullable`1
  name: Nullable<UInt64>
  nameWithType: Nullable<UInt64>
  fullName: System.Nullable<System.UInt64>
  nameWithType.vb: Nullable(Of UInt64)
  fullName.vb: System.Nullable(Of System.UInt64)
  name.vb: Nullable(Of UInt64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.WebhookInfo.Avatar*
  commentId: Overload:Discord.Rest.WebhookInfo.Avatar
  name: Avatar
  nameWithType: WebhookInfo.Avatar
  fullName: Discord.Rest.WebhookInfo.Avatar
