### YamlMime:ManagedReference
items:
- uid: Discord.WebSocket.DiscordSocketConfig
  commentId: T:Discord.WebSocket.DiscordSocketConfig
  id: DiscordSocketConfig
  parent: Discord.WebSocket
  children:
  - Discord.WebSocket.DiscordSocketConfig.#ctor
  - Discord.WebSocket.DiscordSocketConfig.AlwaysDownloadUsers
  - Discord.WebSocket.DiscordSocketConfig.ConnectionTimeout
  - Discord.WebSocket.DiscordSocketConfig.ExclusiveBulkDelete
  - Discord.WebSocket.DiscordSocketConfig.GatewayEncoding
  - Discord.WebSocket.DiscordSocketConfig.GatewayHost
  - Discord.WebSocket.DiscordSocketConfig.HandlerTimeout
  - Discord.WebSocket.DiscordSocketConfig.LargeThreshold
  - Discord.WebSocket.DiscordSocketConfig.MessageCacheSize
  - Discord.WebSocket.DiscordSocketConfig.ShardId
  - Discord.WebSocket.DiscordSocketConfig.TotalShards
  - Discord.WebSocket.DiscordSocketConfig.UdpSocketProvider
  - Discord.WebSocket.DiscordSocketConfig.WebSocketProvider
  langs:
  - csharp
  - vb
  name: DiscordSocketConfig
  nameWithType: DiscordSocketConfig
  fullName: Discord.WebSocket.DiscordSocketConfig
  type: Class
  source:
    remote:
      path: src/Discord.Net.WebSocket/DiscordSocketConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: DiscordSocketConfig
    path: ../src/Discord.Net.WebSocket/DiscordSocketConfig.cs
    startLine: 25
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nRepresents a configuration class for <xref href=\"Discord.WebSocket.DiscordSocketClient\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis configuration, based on <xref href=\"Discord.Rest.DiscordRestConfig\" data-throw-if-not-resolved=\"false\"></xref>, helps determine several key configurations the\nsocket client depend on. For instance, shards and connection timeout.\n"
  example:
  - "\nThe following config enables the message cache and configures the client to always download user upon guild\navailability.\n<pre><code class=\"lang-cs\">var config = new DiscordSocketConfig\n{\n    AlwaysDownloadUsers = true,\n    MessageCacheSize = 100\n};\nvar client = new DiscordSocketClient(config);</code></pre>\n"
  syntax:
    content: 'public class DiscordSocketConfig : DiscordRestConfig'
    content.vb: >-
      Public Class DiscordSocketConfig
          Inherits DiscordRestConfig
  inheritance:
  - System.Object
  - Discord.DiscordConfig
  - Discord.Rest.DiscordRestConfig
  inheritedMembers:
  - Discord.Rest.DiscordRestConfig.RestClientProvider
  - Discord.DiscordConfig.APIVersion
  - Discord.DiscordConfig.VoiceAPIVersion
  - Discord.DiscordConfig.Version
  - Discord.DiscordConfig.UserAgent
  - Discord.DiscordConfig.APIUrl
  - Discord.DiscordConfig.CDNUrl
  - Discord.DiscordConfig.InviteUrl
  - Discord.DiscordConfig.DefaultRequestTimeout
  - Discord.DiscordConfig.MaxMessageSize
  - Discord.DiscordConfig.MaxMessagesPerBatch
  - Discord.DiscordConfig.MaxUsersPerBatch
  - Discord.DiscordConfig.MaxGuildsPerBatch
  - Discord.DiscordConfig.MaxUserReactionsPerBatch
  - Discord.DiscordConfig.MaxAuditLogEntriesPerBatch
  - Discord.DiscordConfig.DefaultRetryMode
  - Discord.DiscordConfig.LogLevel
  - Discord.DiscordConfig.RateLimitPrecision
  - Discord.DiscordConfig.UseSystemClock
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.WebSocket.DiscordSocketConfig.GatewayEncoding
  commentId: F:Discord.WebSocket.DiscordSocketConfig.GatewayEncoding
  id: GatewayEncoding
  parent: Discord.WebSocket.DiscordSocketConfig
  langs:
  - csharp
  - vb
  name: GatewayEncoding
  nameWithType: DiscordSocketConfig.GatewayEncoding
  fullName: Discord.WebSocket.DiscordSocketConfig.GatewayEncoding
  type: Field
  source:
    remote:
      path: src/Discord.Net.WebSocket/DiscordSocketConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GatewayEncoding
    path: ../src/Discord.Net.WebSocket/DiscordSocketConfig.cs
    startLine: 30
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nReturns the encoding gateway should use.\n"
  example: []
  syntax:
    content: public const string GatewayEncoding = "json"
    return:
      type: System.String
    content.vb: Public Const GatewayEncoding As String = "json"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.WebSocket.DiscordSocketConfig.GatewayHost
  commentId: P:Discord.WebSocket.DiscordSocketConfig.GatewayHost
  id: GatewayHost
  parent: Discord.WebSocket.DiscordSocketConfig
  langs:
  - csharp
  - vb
  name: GatewayHost
  nameWithType: DiscordSocketConfig.GatewayHost
  fullName: Discord.WebSocket.DiscordSocketConfig.GatewayHost
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/DiscordSocketConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GatewayHost
    path: ../src/Discord.Net.WebSocket/DiscordSocketConfig.cs
    startLine: 36
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets or sets the WebSocket host to connect to. If <code>null</code>, the client will use the\n/gateway endpoint.\n"
  example: []
  syntax:
    content: public string GatewayHost { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GatewayHost As String
  overload: Discord.WebSocket.DiscordSocketConfig.GatewayHost*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.WebSocket.DiscordSocketConfig.ConnectionTimeout
  commentId: P:Discord.WebSocket.DiscordSocketConfig.ConnectionTimeout
  id: ConnectionTimeout
  parent: Discord.WebSocket.DiscordSocketConfig
  langs:
  - csharp
  - vb
  name: ConnectionTimeout
  nameWithType: DiscordSocketConfig.ConnectionTimeout
  fullName: Discord.WebSocket.DiscordSocketConfig.ConnectionTimeout
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/DiscordSocketConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ConnectionTimeout
    path: ../src/Discord.Net.WebSocket/DiscordSocketConfig.cs
    startLine: 41
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets or sets the time, in milliseconds, to wait for a connection to complete before aborting.\n"
  example: []
  syntax:
    content: public int ConnectionTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ConnectionTimeout As Integer
  overload: Discord.WebSocket.DiscordSocketConfig.ConnectionTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.WebSocket.DiscordSocketConfig.ShardId
  commentId: P:Discord.WebSocket.DiscordSocketConfig.ShardId
  id: ShardId
  parent: Discord.WebSocket.DiscordSocketConfig
  langs:
  - csharp
  - vb
  name: ShardId
  nameWithType: DiscordSocketConfig.ShardId
  fullName: Discord.WebSocket.DiscordSocketConfig.ShardId
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/DiscordSocketConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ShardId
    path: ../src/Discord.Net.WebSocket/DiscordSocketConfig.cs
    startLine: 46
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets or sets the ID for this shard. Must be less than <xref href=\"Discord.WebSocket.DiscordSocketConfig.TotalShards\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public int? ShardId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property ShardId As Integer?
  overload: Discord.WebSocket.DiscordSocketConfig.ShardId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.WebSocket.DiscordSocketConfig.TotalShards
  commentId: P:Discord.WebSocket.DiscordSocketConfig.TotalShards
  id: TotalShards
  parent: Discord.WebSocket.DiscordSocketConfig
  langs:
  - csharp
  - vb
  name: TotalShards
  nameWithType: DiscordSocketConfig.TotalShards
  fullName: Discord.WebSocket.DiscordSocketConfig.TotalShards
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/DiscordSocketConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: TotalShards
    path: ../src/Discord.Net.WebSocket/DiscordSocketConfig.cs
    startLine: 50
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets or sets the total number of shards for this application.\n"
  example: []
  syntax:
    content: public int? TotalShards { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property TotalShards As Integer?
  overload: Discord.WebSocket.DiscordSocketConfig.TotalShards*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.WebSocket.DiscordSocketConfig.MessageCacheSize
  commentId: P:Discord.WebSocket.DiscordSocketConfig.MessageCacheSize
  id: MessageCacheSize
  parent: Discord.WebSocket.DiscordSocketConfig
  langs:
  - csharp
  - vb
  name: MessageCacheSize
  nameWithType: DiscordSocketConfig.MessageCacheSize
  fullName: Discord.WebSocket.DiscordSocketConfig.MessageCacheSize
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/DiscordSocketConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MessageCacheSize
    path: ../src/Discord.Net.WebSocket/DiscordSocketConfig.cs
    startLine: 56
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets or sets the number of messages per channel that should be kept in cache. Setting this to zero\ndisables the message cache entirely.\n"
  example: []
  syntax:
    content: public int MessageCacheSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MessageCacheSize As Integer
  overload: Discord.WebSocket.DiscordSocketConfig.MessageCacheSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.WebSocket.DiscordSocketConfig.LargeThreshold
  commentId: P:Discord.WebSocket.DiscordSocketConfig.LargeThreshold
  id: LargeThreshold
  parent: Discord.WebSocket.DiscordSocketConfig
  langs:
  - csharp
  - vb
  name: LargeThreshold
  nameWithType: DiscordSocketConfig.LargeThreshold
  fullName: Discord.WebSocket.DiscordSocketConfig.LargeThreshold
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/DiscordSocketConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: LargeThreshold
    path: ../src/Discord.Net.WebSocket/DiscordSocketConfig.cs
    startLine: 61
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets or sets the max number of users a guild may have for offline users to be included in the READY\npacket. Max is 250.\n"
  example: []
  syntax:
    content: public int LargeThreshold { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property LargeThreshold As Integer
  overload: Discord.WebSocket.DiscordSocketConfig.LargeThreshold*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.WebSocket.DiscordSocketConfig.WebSocketProvider
  commentId: P:Discord.WebSocket.DiscordSocketConfig.WebSocketProvider
  id: WebSocketProvider
  parent: Discord.WebSocket.DiscordSocketConfig
  langs:
  - csharp
  - vb
  name: WebSocketProvider
  nameWithType: DiscordSocketConfig.WebSocketProvider
  fullName: Discord.WebSocket.DiscordSocketConfig.WebSocketProvider
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/DiscordSocketConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WebSocketProvider
    path: ../src/Discord.Net.WebSocket/DiscordSocketConfig.cs
    startLine: 66
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets or sets the provider used to generate new WebSocket connections.\n"
  example: []
  syntax:
    content: public WebSocketProvider WebSocketProvider { get; set; }
    parameters: []
    return:
      type: Discord.Net.WebSockets.WebSocketProvider
    content.vb: Public Property WebSocketProvider As WebSocketProvider
  overload: Discord.WebSocket.DiscordSocketConfig.WebSocketProvider*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.WebSocket.DiscordSocketConfig.UdpSocketProvider
  commentId: P:Discord.WebSocket.DiscordSocketConfig.UdpSocketProvider
  id: UdpSocketProvider
  parent: Discord.WebSocket.DiscordSocketConfig
  langs:
  - csharp
  - vb
  name: UdpSocketProvider
  nameWithType: DiscordSocketConfig.UdpSocketProvider
  fullName: Discord.WebSocket.DiscordSocketConfig.UdpSocketProvider
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/DiscordSocketConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: UdpSocketProvider
    path: ../src/Discord.Net.WebSocket/DiscordSocketConfig.cs
    startLine: 70
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets or sets the provider used to generate new UDP sockets.\n"
  example: []
  syntax:
    content: public UdpSocketProvider UdpSocketProvider { get; set; }
    parameters: []
    return:
      type: Discord.Net.Udp.UdpSocketProvider
    content.vb: Public Property UdpSocketProvider As UdpSocketProvider
  overload: Discord.WebSocket.DiscordSocketConfig.UdpSocketProvider*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.WebSocket.DiscordSocketConfig.AlwaysDownloadUsers
  commentId: P:Discord.WebSocket.DiscordSocketConfig.AlwaysDownloadUsers
  id: AlwaysDownloadUsers
  parent: Discord.WebSocket.DiscordSocketConfig
  langs:
  - csharp
  - vb
  name: AlwaysDownloadUsers
  nameWithType: DiscordSocketConfig.AlwaysDownloadUsers
  fullName: Discord.WebSocket.DiscordSocketConfig.AlwaysDownloadUsers
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/DiscordSocketConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AlwaysDownloadUsers
    path: ../src/Discord.Net.WebSocket/DiscordSocketConfig.cs
    startLine: 102
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets or sets whether or not all users should be downloaded as guilds come available.\n"
  remarks: "\n<p>\n    By default, the Discord gateway will only send offline members if a guild has less than a certain number\n    of members (determined by <xref href=\"Discord.WebSocket.DiscordSocketConfig.LargeThreshold\" data-throw-if-not-resolved=\"false\"></xref> in this library). This behaviour is why\n    sometimes a user may be missing from the WebSocket cache for collections such as \n<xref href=\"Discord.WebSocket.SocketGuild.Users\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\n    This property ensures that whenever a guild becomes available (determined by\n<xref href=\"Discord.WebSocket.BaseSocketClient.GuildAvailable\" data-throw-if-not-resolved=\"false\"></xref>), incomplete user chunks will be\ndownloaded to the WebSocket cache.\n</p>\n<p>\n    For more information, please see \n<a href=\"https://discordapp.com/developers/docs/topics/gateway#request-guild-members\">Request Guild Members</a>\non the official Discord API documentation.\n</p>\n<div class=\"NOTE\"><h5>note</h5><p>\n    Please note that it can be difficult to fill the cache completely on large guilds depending on the\n    traffic. If you are using the command system, the default user TypeReader may fail to find the user\n    due to this issue. This may be resolved at v3 of the library. Until then, you may want to consider\n    overriding the TypeReader and use\n<xref href=\"Discord.Rest.DiscordRestClient.GetUserAsync(System.UInt64%2cDiscord.RequestOptions)\" data-throw-if-not-resolved=\"false\"></xref> \nor <xref href=\"Discord.Rest.DiscordRestClient.GetGuildUserAsync(System.UInt64%2cSystem.UInt64%2cDiscord.RequestOptions)\" data-throw-if-not-resolved=\"false\"></xref>\nas a backup.\n</p></div>\n"
  example: []
  syntax:
    content: public bool AlwaysDownloadUsers { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AlwaysDownloadUsers As Boolean
  overload: Discord.WebSocket.DiscordSocketConfig.AlwaysDownloadUsers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.WebSocket.DiscordSocketConfig.HandlerTimeout
  commentId: P:Discord.WebSocket.DiscordSocketConfig.HandlerTimeout
  id: HandlerTimeout
  parent: Discord.WebSocket.DiscordSocketConfig
  langs:
  - csharp
  - vb
  name: HandlerTimeout
  nameWithType: DiscordSocketConfig.HandlerTimeout
  fullName: Discord.WebSocket.DiscordSocketConfig.HandlerTimeout
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/DiscordSocketConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: HandlerTimeout
    path: ../src/Discord.Net.WebSocket/DiscordSocketConfig.cs
    startLine: 107
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets or sets the timeout for event handlers, in milliseconds, after which a warning will be logged. Null\ndisables this check.\n"
  example: []
  syntax:
    content: public int? HandlerTimeout { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property HandlerTimeout As Integer?
  overload: Discord.WebSocket.DiscordSocketConfig.HandlerTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.WebSocket.DiscordSocketConfig.ExclusiveBulkDelete
  commentId: P:Discord.WebSocket.DiscordSocketConfig.ExclusiveBulkDelete
  id: ExclusiveBulkDelete
  parent: Discord.WebSocket.DiscordSocketConfig
  langs:
  - csharp
  - vb
  name: ExclusiveBulkDelete
  nameWithType: DiscordSocketConfig.ExclusiveBulkDelete
  fullName: Discord.WebSocket.DiscordSocketConfig.ExclusiveBulkDelete
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/DiscordSocketConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ExclusiveBulkDelete
    path: ../src/Discord.Net.WebSocket/DiscordSocketConfig.cs
    startLine: 119
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets or sets the behavior for <xref href=\"Discord.WebSocket.BaseSocketClient.MessageDeleted\" data-throw-if-not-resolved=\"false\"></xref> on bulk deletes.\n\nIf true, the <xref href=\"Discord.WebSocket.BaseSocketClient.MessageDeleted\" data-throw-if-not-resolved=\"false\"></xref> event will not be raised for bulk deletes, and\nonly the <xref href=\"Discord.WebSocket.BaseSocketClient.MessagesBulkDeleted\" data-throw-if-not-resolved=\"false\"></xref> will be raised.\n\nIf false, both events will be raised.\n\nIf unset, both events will be raised, but a warning will be raised the first time a bulk delete event is received.\n"
  example: []
  syntax:
    content: public bool? ExclusiveBulkDelete { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property ExclusiveBulkDelete As Boolean?
  overload: Discord.WebSocket.DiscordSocketConfig.ExclusiveBulkDelete*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.WebSocket.DiscordSocketConfig.#ctor
  commentId: M:Discord.WebSocket.DiscordSocketConfig.#ctor
  id: '#ctor'
  parent: Discord.WebSocket.DiscordSocketConfig
  langs:
  - csharp
  - vb
  name: DiscordSocketConfig()
  nameWithType: DiscordSocketConfig.DiscordSocketConfig()
  fullName: Discord.WebSocket.DiscordSocketConfig.DiscordSocketConfig()
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.WebSocket/DiscordSocketConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.WebSocket/DiscordSocketConfig.cs
    startLine: 124
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nInitializes a default configuration.\n"
  example: []
  syntax:
    content: public DiscordSocketConfig()
    content.vb: Public Sub New
  overload: Discord.WebSocket.DiscordSocketConfig.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Discord.WebSocket.DiscordSocketClient
  commentId: T:Discord.WebSocket.DiscordSocketClient
  parent: Discord.WebSocket
  name: DiscordSocketClient
  nameWithType: DiscordSocketClient
  fullName: Discord.WebSocket.DiscordSocketClient
- uid: Discord.Rest.DiscordRestConfig
  commentId: T:Discord.Rest.DiscordRestConfig
  parent: Discord.Rest
  name: DiscordRestConfig
  nameWithType: DiscordRestConfig
  fullName: Discord.Rest.DiscordRestConfig
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.DiscordConfig
  commentId: T:Discord.DiscordConfig
  parent: Discord
  name: DiscordConfig
  nameWithType: DiscordConfig
  fullName: Discord.DiscordConfig
- uid: Discord.Rest.DiscordRestConfig.RestClientProvider
  commentId: P:Discord.Rest.DiscordRestConfig.RestClientProvider
  parent: Discord.Rest.DiscordRestConfig
  name: RestClientProvider
  nameWithType: DiscordRestConfig.RestClientProvider
  fullName: Discord.Rest.DiscordRestConfig.RestClientProvider
- uid: Discord.DiscordConfig.APIVersion
  commentId: F:Discord.DiscordConfig.APIVersion
  parent: Discord.DiscordConfig
  name: APIVersion
  nameWithType: DiscordConfig.APIVersion
  fullName: Discord.DiscordConfig.APIVersion
- uid: Discord.DiscordConfig.VoiceAPIVersion
  commentId: F:Discord.DiscordConfig.VoiceAPIVersion
  parent: Discord.DiscordConfig
  name: VoiceAPIVersion
  nameWithType: DiscordConfig.VoiceAPIVersion
  fullName: Discord.DiscordConfig.VoiceAPIVersion
- uid: Discord.DiscordConfig.Version
  commentId: P:Discord.DiscordConfig.Version
  parent: Discord.DiscordConfig
  name: Version
  nameWithType: DiscordConfig.Version
  fullName: Discord.DiscordConfig.Version
- uid: Discord.DiscordConfig.UserAgent
  commentId: P:Discord.DiscordConfig.UserAgent
  parent: Discord.DiscordConfig
  name: UserAgent
  nameWithType: DiscordConfig.UserAgent
  fullName: Discord.DiscordConfig.UserAgent
- uid: Discord.DiscordConfig.APIUrl
  commentId: F:Discord.DiscordConfig.APIUrl
  parent: Discord.DiscordConfig
  name: APIUrl
  nameWithType: DiscordConfig.APIUrl
  fullName: Discord.DiscordConfig.APIUrl
- uid: Discord.DiscordConfig.CDNUrl
  commentId: F:Discord.DiscordConfig.CDNUrl
  parent: Discord.DiscordConfig
  name: CDNUrl
  nameWithType: DiscordConfig.CDNUrl
  fullName: Discord.DiscordConfig.CDNUrl
- uid: Discord.DiscordConfig.InviteUrl
  commentId: F:Discord.DiscordConfig.InviteUrl
  parent: Discord.DiscordConfig
  name: InviteUrl
  nameWithType: DiscordConfig.InviteUrl
  fullName: Discord.DiscordConfig.InviteUrl
- uid: Discord.DiscordConfig.DefaultRequestTimeout
  commentId: F:Discord.DiscordConfig.DefaultRequestTimeout
  parent: Discord.DiscordConfig
  name: DefaultRequestTimeout
  nameWithType: DiscordConfig.DefaultRequestTimeout
  fullName: Discord.DiscordConfig.DefaultRequestTimeout
- uid: Discord.DiscordConfig.MaxMessageSize
  commentId: F:Discord.DiscordConfig.MaxMessageSize
  parent: Discord.DiscordConfig
  name: MaxMessageSize
  nameWithType: DiscordConfig.MaxMessageSize
  fullName: Discord.DiscordConfig.MaxMessageSize
- uid: Discord.DiscordConfig.MaxMessagesPerBatch
  commentId: F:Discord.DiscordConfig.MaxMessagesPerBatch
  parent: Discord.DiscordConfig
  name: MaxMessagesPerBatch
  nameWithType: DiscordConfig.MaxMessagesPerBatch
  fullName: Discord.DiscordConfig.MaxMessagesPerBatch
- uid: Discord.DiscordConfig.MaxUsersPerBatch
  commentId: F:Discord.DiscordConfig.MaxUsersPerBatch
  parent: Discord.DiscordConfig
  name: MaxUsersPerBatch
  nameWithType: DiscordConfig.MaxUsersPerBatch
  fullName: Discord.DiscordConfig.MaxUsersPerBatch
- uid: Discord.DiscordConfig.MaxGuildsPerBatch
  commentId: F:Discord.DiscordConfig.MaxGuildsPerBatch
  parent: Discord.DiscordConfig
  name: MaxGuildsPerBatch
  nameWithType: DiscordConfig.MaxGuildsPerBatch
  fullName: Discord.DiscordConfig.MaxGuildsPerBatch
- uid: Discord.DiscordConfig.MaxUserReactionsPerBatch
  commentId: F:Discord.DiscordConfig.MaxUserReactionsPerBatch
  parent: Discord.DiscordConfig
  name: MaxUserReactionsPerBatch
  nameWithType: DiscordConfig.MaxUserReactionsPerBatch
  fullName: Discord.DiscordConfig.MaxUserReactionsPerBatch
- uid: Discord.DiscordConfig.MaxAuditLogEntriesPerBatch
  commentId: F:Discord.DiscordConfig.MaxAuditLogEntriesPerBatch
  parent: Discord.DiscordConfig
  name: MaxAuditLogEntriesPerBatch
  nameWithType: DiscordConfig.MaxAuditLogEntriesPerBatch
  fullName: Discord.DiscordConfig.MaxAuditLogEntriesPerBatch
- uid: Discord.DiscordConfig.DefaultRetryMode
  commentId: P:Discord.DiscordConfig.DefaultRetryMode
  parent: Discord.DiscordConfig
  name: DefaultRetryMode
  nameWithType: DiscordConfig.DefaultRetryMode
  fullName: Discord.DiscordConfig.DefaultRetryMode
- uid: Discord.DiscordConfig.LogLevel
  commentId: P:Discord.DiscordConfig.LogLevel
  parent: Discord.DiscordConfig
  name: LogLevel
  nameWithType: DiscordConfig.LogLevel
  fullName: Discord.DiscordConfig.LogLevel
- uid: Discord.DiscordConfig.RateLimitPrecision
  commentId: P:Discord.DiscordConfig.RateLimitPrecision
  parent: Discord.DiscordConfig
  name: RateLimitPrecision
  nameWithType: DiscordConfig.RateLimitPrecision
  fullName: Discord.DiscordConfig.RateLimitPrecision
- uid: Discord.DiscordConfig.UseSystemClock
  commentId: P:Discord.DiscordConfig.UseSystemClock
  parent: Discord.DiscordConfig
  name: UseSystemClock
  nameWithType: DiscordConfig.UseSystemClock
  fullName: Discord.DiscordConfig.UseSystemClock
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.WebSocket.DiscordSocketConfig.GatewayHost*
  commentId: Overload:Discord.WebSocket.DiscordSocketConfig.GatewayHost
  name: GatewayHost
  nameWithType: DiscordSocketConfig.GatewayHost
  fullName: Discord.WebSocket.DiscordSocketConfig.GatewayHost
- uid: Discord.WebSocket.DiscordSocketConfig.ConnectionTimeout*
  commentId: Overload:Discord.WebSocket.DiscordSocketConfig.ConnectionTimeout
  name: ConnectionTimeout
  nameWithType: DiscordSocketConfig.ConnectionTimeout
  fullName: Discord.WebSocket.DiscordSocketConfig.ConnectionTimeout
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Discord.WebSocket.DiscordSocketConfig.TotalShards
  commentId: P:Discord.WebSocket.DiscordSocketConfig.TotalShards
  isExternal: true
- uid: Discord.WebSocket.DiscordSocketConfig.ShardId*
  commentId: Overload:Discord.WebSocket.DiscordSocketConfig.ShardId
  name: ShardId
  nameWithType: DiscordSocketConfig.ShardId
  fullName: Discord.WebSocket.DiscordSocketConfig.ShardId
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.DiscordSocketConfig.TotalShards*
  commentId: Overload:Discord.WebSocket.DiscordSocketConfig.TotalShards
  name: TotalShards
  nameWithType: DiscordSocketConfig.TotalShards
  fullName: Discord.WebSocket.DiscordSocketConfig.TotalShards
- uid: Discord.WebSocket.DiscordSocketConfig.MessageCacheSize*
  commentId: Overload:Discord.WebSocket.DiscordSocketConfig.MessageCacheSize
  name: MessageCacheSize
  nameWithType: DiscordSocketConfig.MessageCacheSize
  fullName: Discord.WebSocket.DiscordSocketConfig.MessageCacheSize
- uid: Discord.WebSocket.DiscordSocketConfig.LargeThreshold*
  commentId: Overload:Discord.WebSocket.DiscordSocketConfig.LargeThreshold
  name: LargeThreshold
  nameWithType: DiscordSocketConfig.LargeThreshold
  fullName: Discord.WebSocket.DiscordSocketConfig.LargeThreshold
- uid: Discord.WebSocket.DiscordSocketConfig.WebSocketProvider*
  commentId: Overload:Discord.WebSocket.DiscordSocketConfig.WebSocketProvider
  name: WebSocketProvider
  nameWithType: DiscordSocketConfig.WebSocketProvider
  fullName: Discord.WebSocket.DiscordSocketConfig.WebSocketProvider
- uid: Discord.Net.WebSockets.WebSocketProvider
  commentId: T:Discord.Net.WebSockets.WebSocketProvider
  parent: Discord.Net.WebSockets
  name: WebSocketProvider
  nameWithType: WebSocketProvider
  fullName: Discord.Net.WebSockets.WebSocketProvider
- uid: Discord.Net.WebSockets
  commentId: N:Discord.Net.WebSockets
  name: Discord.Net.WebSockets
  nameWithType: Discord.Net.WebSockets
  fullName: Discord.Net.WebSockets
- uid: Discord.WebSocket.DiscordSocketConfig.UdpSocketProvider*
  commentId: Overload:Discord.WebSocket.DiscordSocketConfig.UdpSocketProvider
  name: UdpSocketProvider
  nameWithType: DiscordSocketConfig.UdpSocketProvider
  fullName: Discord.WebSocket.DiscordSocketConfig.UdpSocketProvider
- uid: Discord.Net.Udp.UdpSocketProvider
  commentId: T:Discord.Net.Udp.UdpSocketProvider
  parent: Discord.Net.Udp
  name: UdpSocketProvider
  nameWithType: UdpSocketProvider
  fullName: Discord.Net.Udp.UdpSocketProvider
- uid: Discord.Net.Udp
  commentId: N:Discord.Net.Udp
  name: Discord.Net.Udp
  nameWithType: Discord.Net.Udp
  fullName: Discord.Net.Udp
- uid: Discord.WebSocket.DiscordSocketConfig.LargeThreshold
  commentId: P:Discord.WebSocket.DiscordSocketConfig.LargeThreshold
  isExternal: true
- uid: Discord.WebSocket.SocketGuild.Users
  commentId: P:Discord.WebSocket.SocketGuild.Users
  isExternal: true
- uid: Discord.WebSocket.BaseSocketClient.GuildAvailable
  commentId: E:Discord.WebSocket.BaseSocketClient.GuildAvailable
  parent: Discord.WebSocket.BaseSocketClient
  name: GuildAvailable
  nameWithType: BaseSocketClient.GuildAvailable
  fullName: Discord.WebSocket.BaseSocketClient.GuildAvailable
- uid: Discord.Rest.DiscordRestClient.GetUserAsync(System.UInt64,Discord.RequestOptions)
  commentId: M:Discord.Rest.DiscordRestClient.GetUserAsync(System.UInt64,Discord.RequestOptions)
  parent: Discord.Rest.DiscordRestClient
  isExternal: true
  name: GetUserAsync(UInt64, RequestOptions)
  nameWithType: DiscordRestClient.GetUserAsync(UInt64, RequestOptions)
  fullName: Discord.Rest.DiscordRestClient.GetUserAsync(System.UInt64, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Rest.DiscordRestClient.GetUserAsync(System.UInt64,Discord.RequestOptions)
    name: GetUserAsync
    nameWithType: DiscordRestClient.GetUserAsync
    fullName: Discord.Rest.DiscordRestClient.GetUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.DiscordRestClient.GetUserAsync(System.UInt64,Discord.RequestOptions)
    name: GetUserAsync
    nameWithType: DiscordRestClient.GetUserAsync
    fullName: Discord.Rest.DiscordRestClient.GetUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.DiscordRestClient.GetGuildUserAsync(System.UInt64,System.UInt64,Discord.RequestOptions)
  commentId: M:Discord.Rest.DiscordRestClient.GetGuildUserAsync(System.UInt64,System.UInt64,Discord.RequestOptions)
  parent: Discord.Rest.DiscordRestClient
  isExternal: true
  name: GetGuildUserAsync(UInt64, UInt64, RequestOptions)
  nameWithType: DiscordRestClient.GetGuildUserAsync(UInt64, UInt64, RequestOptions)
  fullName: Discord.Rest.DiscordRestClient.GetGuildUserAsync(System.UInt64, System.UInt64, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Rest.DiscordRestClient.GetGuildUserAsync(System.UInt64,System.UInt64,Discord.RequestOptions)
    name: GetGuildUserAsync
    nameWithType: DiscordRestClient.GetGuildUserAsync
    fullName: Discord.Rest.DiscordRestClient.GetGuildUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.DiscordRestClient.GetGuildUserAsync(System.UInt64,System.UInt64,Discord.RequestOptions)
    name: GetGuildUserAsync
    nameWithType: DiscordRestClient.GetGuildUserAsync
    fullName: Discord.Rest.DiscordRestClient.GetGuildUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.DiscordSocketConfig.AlwaysDownloadUsers*
  commentId: Overload:Discord.WebSocket.DiscordSocketConfig.AlwaysDownloadUsers
  name: AlwaysDownloadUsers
  nameWithType: DiscordSocketConfig.AlwaysDownloadUsers
  fullName: Discord.WebSocket.DiscordSocketConfig.AlwaysDownloadUsers
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.WebSocket.BaseSocketClient
  commentId: T:Discord.WebSocket.BaseSocketClient
  parent: Discord.WebSocket
  name: BaseSocketClient
  nameWithType: BaseSocketClient
  fullName: Discord.WebSocket.BaseSocketClient
- uid: Discord.Rest.DiscordRestClient
  commentId: T:Discord.Rest.DiscordRestClient
  parent: Discord.Rest
  name: DiscordRestClient
  nameWithType: DiscordRestClient
  fullName: Discord.Rest.DiscordRestClient
- uid: Discord.WebSocket.DiscordSocketConfig.HandlerTimeout*
  commentId: Overload:Discord.WebSocket.DiscordSocketConfig.HandlerTimeout
  name: HandlerTimeout
  nameWithType: DiscordSocketConfig.HandlerTimeout
  fullName: Discord.WebSocket.DiscordSocketConfig.HandlerTimeout
- uid: Discord.WebSocket.BaseSocketClient.MessageDeleted
  commentId: E:Discord.WebSocket.BaseSocketClient.MessageDeleted
  parent: Discord.WebSocket.BaseSocketClient
  name: MessageDeleted
  nameWithType: BaseSocketClient.MessageDeleted
  fullName: Discord.WebSocket.BaseSocketClient.MessageDeleted
- uid: Discord.WebSocket.BaseSocketClient.MessagesBulkDeleted
  commentId: E:Discord.WebSocket.BaseSocketClient.MessagesBulkDeleted
  parent: Discord.WebSocket.BaseSocketClient
  name: MessagesBulkDeleted
  nameWithType: BaseSocketClient.MessagesBulkDeleted
  fullName: Discord.WebSocket.BaseSocketClient.MessagesBulkDeleted
- uid: Discord.WebSocket.DiscordSocketConfig.ExclusiveBulkDelete*
  commentId: Overload:Discord.WebSocket.DiscordSocketConfig.ExclusiveBulkDelete
  name: ExclusiveBulkDelete
  nameWithType: DiscordSocketConfig.ExclusiveBulkDelete
  fullName: Discord.WebSocket.DiscordSocketConfig.ExclusiveBulkDelete
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.DiscordSocketConfig.#ctor*
  commentId: Overload:Discord.WebSocket.DiscordSocketConfig.#ctor
  name: DiscordSocketConfig
  nameWithType: DiscordSocketConfig.DiscordSocketConfig
  fullName: Discord.WebSocket.DiscordSocketConfig.DiscordSocketConfig
