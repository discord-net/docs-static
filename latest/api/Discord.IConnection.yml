### YamlMime:ManagedReference
items:
- uid: Discord.IConnection
  commentId: T:Discord.IConnection
  id: IConnection
  parent: Discord
  children:
  - Discord.IConnection.Id
  - Discord.IConnection.IntegrationIds
  - Discord.IConnection.IsRevoked
  - Discord.IConnection.Name
  - Discord.IConnection.Type
  langs:
  - csharp
  - vb
  name: IConnection
  nameWithType: IConnection
  fullName: Discord.IConnection
  type: Interface
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/IConnection.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IConnection
    path: ../src/Discord.Net.Core/Entities/Users/IConnection.cs
    startLine: 4
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public interface IConnection
    content.vb: Public Interface IConnection
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Discord.IConnection.Id
  commentId: P:Discord.IConnection.Id
  id: Id
  parent: Discord.IConnection
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IConnection.Id
  fullName: Discord.IConnection.Id
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/IConnection.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Id
    path: ../src/Discord.Net.Core/Entities/Users/IConnection.cs
    startLine: 8
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets the ID of the connection account. '
  example: []
  syntax:
    content: string Id { get; }
    parameters: []
    return:
      type: System.String
      description: 'A <see cref="!:System.String"></see> representing the unique identifier value of this connection. '
    content.vb: ReadOnly Property Id As String
  overload: Discord.IConnection.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IConnection.Type
  commentId: P:Discord.IConnection.Type
  id: Type
  parent: Discord.IConnection
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: IConnection.Type
  fullName: Discord.IConnection.Type
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/IConnection.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Type
    path: ../src/Discord.Net.Core/Entities/Users/IConnection.cs
    startLine: 11
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets the service of the connection (twitch, youtube). '
  example: []
  syntax:
    content: string Type { get; }
    parameters: []
    return:
      type: System.String
      description: 'A string containing the name of this type of connection. '
    content.vb: ReadOnly Property Type As String
  overload: Discord.IConnection.Type*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IConnection.Name
  commentId: P:Discord.IConnection.Name
  id: Name
  parent: Discord.IConnection
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IConnection.Name
  fullName: Discord.IConnection.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/IConnection.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Core/Entities/Users/IConnection.cs
    startLine: 14
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets the username of the connection account. '
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
      description: 'A string containing the name of this connection. '
    content.vb: ReadOnly Property Name As String
  overload: Discord.IConnection.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IConnection.IsRevoked
  commentId: P:Discord.IConnection.IsRevoked
  id: IsRevoked
  parent: Discord.IConnection
  langs:
  - csharp
  - vb
  name: IsRevoked
  nameWithType: IConnection.IsRevoked
  fullName: Discord.IConnection.IsRevoked
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/IConnection.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IsRevoked
    path: ../src/Discord.Net.Core/Entities/Users/IConnection.cs
    startLine: 17
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets whether the connection is revoked. '
  example: []
  syntax:
    content: bool IsRevoked { get; }
    parameters: []
    return:
      type: System.Boolean
      description: 'A value which if true indicates that this connection has been revoked, otherwise false. '
    content.vb: ReadOnly Property IsRevoked As Boolean
  overload: Discord.IConnection.IsRevoked*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IConnection.IntegrationIds
  commentId: P:Discord.IConnection.IntegrationIds
  id: IntegrationIds
  parent: Discord.IConnection
  langs:
  - csharp
  - vb
  name: IntegrationIds
  nameWithType: IConnection.IntegrationIds
  fullName: Discord.IConnection.IntegrationIds
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/IConnection.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IntegrationIds
    path: ../src/Discord.Net.Core/Entities/Users/IConnection.cs
    startLine: 24
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets a <see cref="!:IReadOnlyCollection&lt;T>"></see> of integration IDs. '
  example: []
  syntax:
    content: IReadOnlyCollection<ulong> IntegrationIds { get; }
    parameters: []
    return:
      type: IReadOnlyCollection{System.UInt64}
      description: "\nAn <see cref=\"!:IReadOnlyCollection&lt;T>\"></see> containing <see cref=\"!:System.UInt64\"></see>\nrepresentations of unique identifier values of integrations.\n"
    content.vb: ReadOnly Property IntegrationIds As IReadOnlyCollection(Of ULong)
  overload: Discord.IConnection.IntegrationIds*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.IConnection.Id*
  commentId: Overload:Discord.IConnection.Id
  name: Id
  nameWithType: IConnection.Id
  fullName: Discord.IConnection.Id
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.IConnection.Type*
  commentId: Overload:Discord.IConnection.Type
  name: Type
  nameWithType: IConnection.Type
  fullName: Discord.IConnection.Type
- uid: Discord.IConnection.Name*
  commentId: Overload:Discord.IConnection.Name
  name: Name
  nameWithType: IConnection.Name
  fullName: Discord.IConnection.Name
- uid: Discord.IConnection.IsRevoked*
  commentId: Overload:Discord.IConnection.IsRevoked
  name: IsRevoked
  nameWithType: IConnection.IsRevoked
  fullName: Discord.IConnection.IsRevoked
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.IConnection.IntegrationIds*
  commentId: Overload:Discord.IConnection.IntegrationIds
  name: IntegrationIds
  nameWithType: IConnection.IntegrationIds
  fullName: Discord.IConnection.IntegrationIds
- uid: IReadOnlyCollection{System.UInt64}
  commentId: '!:IReadOnlyCollection{System.UInt64}'
  definition: IReadOnlyCollection`1
  name: IReadOnlyCollection<UInt64>
  nameWithType: IReadOnlyCollection<UInt64>
  fullName: IReadOnlyCollection<System.UInt64>
  nameWithType.vb: IReadOnlyCollection(Of UInt64)
  fullName.vb: IReadOnlyCollection(Of System.UInt64)
  name.vb: IReadOnlyCollection(Of UInt64)
  spec.csharp:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<>
  nameWithType: IReadOnlyCollection<>
  fullName: IReadOnlyCollection<>
  nameWithType.vb: IReadOnlyCollection(Of )
  fullName.vb: IReadOnlyCollection(Of )
  name.vb: IReadOnlyCollection(Of )
  spec.csharp:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
