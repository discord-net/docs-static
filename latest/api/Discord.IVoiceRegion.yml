### YamlMime:ManagedReference
items:
- uid: Discord.IVoiceRegion
  commentId: T:Discord.IVoiceRegion
  id: IVoiceRegion
  parent: Discord
  children:
  - Discord.IVoiceRegion.Id
  - Discord.IVoiceRegion.IsCustom
  - Discord.IVoiceRegion.IsDeprecated
  - Discord.IVoiceRegion.IsOptimal
  - Discord.IVoiceRegion.IsVip
  - Discord.IVoiceRegion.Name
  langs:
  - csharp
  - vb
  name: IVoiceRegion
  nameWithType: IVoiceRegion
  fullName: Discord.IVoiceRegion
  type: Interface
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/IVoiceRegion.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IVoiceRegion
    path: ../src/Discord.Net.Core/Entities/Guilds/IVoiceRegion.cs
    startLine: 5
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nRepresents a region of which the user connects to when using voice.\n"
  example: []
  syntax:
    content: public interface IVoiceRegion
    content.vb: Public Interface IVoiceRegion
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Discord.IVoiceRegion.Id
  commentId: P:Discord.IVoiceRegion.Id
  id: Id
  parent: Discord.IVoiceRegion
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IVoiceRegion.Id
  fullName: Discord.IVoiceRegion.Id
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/IVoiceRegion.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Id
    path: ../src/Discord.Net.Core/Entities/Guilds/IVoiceRegion.cs
    startLine: 13
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the unique identifier for this voice region.\n"
  example: []
  syntax:
    content: string Id { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string that represents the identifier for this voice region (e.g. <code>eu-central</code>).\n"
    content.vb: ReadOnly Property Id As String
  overload: Discord.IVoiceRegion.Id*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IVoiceRegion.Name
  commentId: P:Discord.IVoiceRegion.Name
  id: Name
  parent: Discord.IVoiceRegion
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IVoiceRegion.Name
  fullName: Discord.IVoiceRegion.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/IVoiceRegion.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Core/Entities/Guilds/IVoiceRegion.cs
    startLine: 20
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the name of this voice region.\n"
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string that represents the human-readable name of this voice region (e.g. <code>Central Europe</code>).\n"
    content.vb: ReadOnly Property Name As String
  overload: Discord.IVoiceRegion.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IVoiceRegion.IsVip
  commentId: P:Discord.IVoiceRegion.IsVip
  id: IsVip
  parent: Discord.IVoiceRegion
  langs:
  - csharp
  - vb
  name: IsVip
  nameWithType: IVoiceRegion.IsVip
  fullName: Discord.IVoiceRegion.IsVip
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/IVoiceRegion.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsVip
    path: ../src/Discord.Net.Core/Entities/Guilds/IVoiceRegion.cs
    startLine: 27
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets a value that indicates whether or not this voice region is exclusive to partnered servers.\n"
  example: []
  syntax:
    content: bool IsVip { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this voice region is exclusive to VIP accounts; otherwise <code>false</code>.\n"
    content.vb: ReadOnly Property IsVip As Boolean
  overload: Discord.IVoiceRegion.IsVip*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IVoiceRegion.IsOptimal
  commentId: P:Discord.IVoiceRegion.IsOptimal
  id: IsOptimal
  parent: Discord.IVoiceRegion
  langs:
  - csharp
  - vb
  name: IsOptimal
  nameWithType: IVoiceRegion.IsOptimal
  fullName: Discord.IVoiceRegion.IsOptimal
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/IVoiceRegion.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsOptimal
    path: ../src/Discord.Net.Core/Entities/Guilds/IVoiceRegion.cs
    startLine: 34
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets a value that indicates whether this voice region is optimal for your client in terms of latency.\n"
  example: []
  syntax:
    content: bool IsOptimal { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this voice region is the closest to your machine; otherwise <code>false</code> .\n"
    content.vb: ReadOnly Property IsOptimal As Boolean
  overload: Discord.IVoiceRegion.IsOptimal*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IVoiceRegion.IsDeprecated
  commentId: P:Discord.IVoiceRegion.IsDeprecated
  id: IsDeprecated
  parent: Discord.IVoiceRegion
  langs:
  - csharp
  - vb
  name: IsDeprecated
  nameWithType: IVoiceRegion.IsDeprecated
  fullName: Discord.IVoiceRegion.IsDeprecated
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/IVoiceRegion.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsDeprecated
    path: ../src/Discord.Net.Core/Entities/Guilds/IVoiceRegion.cs
    startLine: 41
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets a value that indicates whether this voice region is no longer being maintained.\n"
  example: []
  syntax:
    content: bool IsDeprecated { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this is a deprecated voice region; otherwise <code>false</code>.\n"
    content.vb: ReadOnly Property IsDeprecated As Boolean
  overload: Discord.IVoiceRegion.IsDeprecated*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IVoiceRegion.IsCustom
  commentId: P:Discord.IVoiceRegion.IsCustom
  id: IsCustom
  parent: Discord.IVoiceRegion
  langs:
  - csharp
  - vb
  name: IsCustom
  nameWithType: IVoiceRegion.IsCustom
  fullName: Discord.IVoiceRegion.IsCustom
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/IVoiceRegion.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsCustom
    path: ../src/Discord.Net.Core/Entities/Guilds/IVoiceRegion.cs
    startLine: 48
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets a value that indicates whether this voice region is custom-made for events.\n"
  example: []
  syntax:
    content: bool IsCustom { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this is a custom voice region (used for events/etc); otherwise <code>false</code>/\n"
    content.vb: ReadOnly Property IsCustom As Boolean
  overload: Discord.IVoiceRegion.IsCustom*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.IVoiceRegion.Id*
  commentId: Overload:Discord.IVoiceRegion.Id
  name: Id
  nameWithType: IVoiceRegion.Id
  fullName: Discord.IVoiceRegion.Id
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.IVoiceRegion.Name*
  commentId: Overload:Discord.IVoiceRegion.Name
  name: Name
  nameWithType: IVoiceRegion.Name
  fullName: Discord.IVoiceRegion.Name
- uid: Discord.IVoiceRegion.IsVip*
  commentId: Overload:Discord.IVoiceRegion.IsVip
  name: IsVip
  nameWithType: IVoiceRegion.IsVip
  fullName: Discord.IVoiceRegion.IsVip
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.IVoiceRegion.IsOptimal*
  commentId: Overload:Discord.IVoiceRegion.IsOptimal
  name: IsOptimal
  nameWithType: IVoiceRegion.IsOptimal
  fullName: Discord.IVoiceRegion.IsOptimal
- uid: Discord.IVoiceRegion.IsDeprecated*
  commentId: Overload:Discord.IVoiceRegion.IsDeprecated
  name: IsDeprecated
  nameWithType: IVoiceRegion.IsDeprecated
  fullName: Discord.IVoiceRegion.IsDeprecated
- uid: Discord.IVoiceRegion.IsCustom*
  commentId: Overload:Discord.IVoiceRegion.IsCustom
  name: IsCustom
  nameWithType: IVoiceRegion.IsCustom
  fullName: Discord.IVoiceRegion.IsCustom
