### YamlMime:ManagedReference
items:
- uid: Discord.DiscordComparers
  commentId: T:Discord.DiscordComparers
  id: DiscordComparers
  parent: Discord
  children:
  - Discord.DiscordComparers.ChannelComparer
  - Discord.DiscordComparers.GuildComparer
  - Discord.DiscordComparers.MessageComparer
  - Discord.DiscordComparers.RoleComparer
  - Discord.DiscordComparers.UserComparer
  langs:
  - csharp
  - vb
  name: DiscordComparers
  nameWithType: DiscordComparers
  fullName: Discord.DiscordComparers
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Comparers.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: DiscordComparers
    path: ../src/Discord.Net.Core/Utils/Comparers.cs
    startLine: 8
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nRepresents a collection of <xref href=\"System.Collections.Generic.IEqualityComparer%601\" data-throw-if-not-resolved=\"false\"></xref> for various Discord objects.\n"
  example: []
  syntax:
    content: public static class DiscordComparers
    content.vb: Public Module DiscordComparers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Discord.DiscordComparers.UserComparer
  commentId: P:Discord.DiscordComparers.UserComparer
  id: UserComparer
  parent: Discord.DiscordComparers
  langs:
  - csharp
  - vb
  name: UserComparer
  nameWithType: DiscordComparers.UserComparer
  fullName: Discord.DiscordComparers.UserComparer
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Comparers.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: UserComparer
    path: ../src/Discord.Net.Core/Utils/Comparers.cs
    startLine: 14
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets an <xref href=\"System.Collections.Generic.IEqualityComparer%601\" data-throw-if-not-resolved=\"false\"></xref> to be used to compare users.\n"
  example: []
  syntax:
    content: public static IEqualityComparer<IUser> UserComparer { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEqualityComparer{Discord.IUser}
    content.vb: Public Shared ReadOnly Property UserComparer As IEqualityComparer(Of IUser)
  overload: Discord.DiscordComparers.UserComparer*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Discord.DiscordComparers.GuildComparer
  commentId: P:Discord.DiscordComparers.GuildComparer
  id: GuildComparer
  parent: Discord.DiscordComparers
  langs:
  - csharp
  - vb
  name: GuildComparer
  nameWithType: DiscordComparers.GuildComparer
  fullName: Discord.DiscordComparers.GuildComparer
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Comparers.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GuildComparer
    path: ../src/Discord.Net.Core/Utils/Comparers.cs
    startLine: 18
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets an <xref href=\"System.Collections.Generic.IEqualityComparer%601\" data-throw-if-not-resolved=\"false\"></xref> to be used to compare guilds.\n"
  example: []
  syntax:
    content: public static IEqualityComparer<IGuild> GuildComparer { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEqualityComparer{Discord.IGuild}
    content.vb: Public Shared ReadOnly Property GuildComparer As IEqualityComparer(Of IGuild)
  overload: Discord.DiscordComparers.GuildComparer*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Discord.DiscordComparers.ChannelComparer
  commentId: P:Discord.DiscordComparers.ChannelComparer
  id: ChannelComparer
  parent: Discord.DiscordComparers
  langs:
  - csharp
  - vb
  name: ChannelComparer
  nameWithType: DiscordComparers.ChannelComparer
  fullName: Discord.DiscordComparers.ChannelComparer
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Comparers.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelComparer
    path: ../src/Discord.Net.Core/Utils/Comparers.cs
    startLine: 22
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets an <xref href=\"System.Collections.Generic.IEqualityComparer%601\" data-throw-if-not-resolved=\"false\"></xref> to be used to compare channels.\n"
  example: []
  syntax:
    content: public static IEqualityComparer<IChannel> ChannelComparer { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEqualityComparer{Discord.IChannel}
    content.vb: Public Shared ReadOnly Property ChannelComparer As IEqualityComparer(Of IChannel)
  overload: Discord.DiscordComparers.ChannelComparer*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Discord.DiscordComparers.RoleComparer
  commentId: P:Discord.DiscordComparers.RoleComparer
  id: RoleComparer
  parent: Discord.DiscordComparers
  langs:
  - csharp
  - vb
  name: RoleComparer
  nameWithType: DiscordComparers.RoleComparer
  fullName: Discord.DiscordComparers.RoleComparer
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Comparers.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RoleComparer
    path: ../src/Discord.Net.Core/Utils/Comparers.cs
    startLine: 26
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets an <xref href=\"System.Collections.Generic.IEqualityComparer%601\" data-throw-if-not-resolved=\"false\"></xref> to be used to compare roles.\n"
  example: []
  syntax:
    content: public static IEqualityComparer<IRole> RoleComparer { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEqualityComparer{Discord.IRole}
    content.vb: Public Shared ReadOnly Property RoleComparer As IEqualityComparer(Of IRole)
  overload: Discord.DiscordComparers.RoleComparer*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Discord.DiscordComparers.MessageComparer
  commentId: P:Discord.DiscordComparers.MessageComparer
  id: MessageComparer
  parent: Discord.DiscordComparers
  langs:
  - csharp
  - vb
  name: MessageComparer
  nameWithType: DiscordComparers.MessageComparer
  fullName: Discord.DiscordComparers.MessageComparer
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Comparers.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MessageComparer
    path: ../src/Discord.Net.Core/Utils/Comparers.cs
    startLine: 30
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets an <xref href=\"System.Collections.Generic.IEqualityComparer%601\" data-throw-if-not-resolved=\"false\"></xref> to be used to compare messages.\n"
  example: []
  syntax:
    content: public static IEqualityComparer<IMessage> MessageComparer { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEqualityComparer{Discord.IMessage}
    content.vb: Public Shared ReadOnly Property MessageComparer As IEqualityComparer(Of IMessage)
  overload: Discord.DiscordComparers.MessageComparer*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.DiscordComparers.UserComparer*
  commentId: Overload:Discord.DiscordComparers.UserComparer
  name: UserComparer
  nameWithType: DiscordComparers.UserComparer
  fullName: Discord.DiscordComparers.UserComparer
- uid: System.Collections.Generic.IEqualityComparer{Discord.IUser}
  commentId: T:System.Collections.Generic.IEqualityComparer{Discord.IUser}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<IUser>
  nameWithType: IEqualityComparer<IUser>
  fullName: System.Collections.Generic.IEqualityComparer<Discord.IUser>
  nameWithType.vb: IEqualityComparer(Of IUser)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of Discord.IUser)
  name.vb: IEqualityComparer(Of IUser)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.IUser
    name: IUser
    nameWithType: IUser
    fullName: Discord.IUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.IUser
    name: IUser
    nameWithType: IUser
    fullName: Discord.IUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Discord.DiscordComparers.GuildComparer*
  commentId: Overload:Discord.DiscordComparers.GuildComparer
  name: GuildComparer
  nameWithType: DiscordComparers.GuildComparer
  fullName: Discord.DiscordComparers.GuildComparer
- uid: System.Collections.Generic.IEqualityComparer{Discord.IGuild}
  commentId: T:System.Collections.Generic.IEqualityComparer{Discord.IGuild}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<IGuild>
  nameWithType: IEqualityComparer<IGuild>
  fullName: System.Collections.Generic.IEqualityComparer<Discord.IGuild>
  nameWithType.vb: IEqualityComparer(Of IGuild)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of Discord.IGuild)
  name.vb: IEqualityComparer(Of IGuild)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.IGuild
    name: IGuild
    nameWithType: IGuild
    fullName: Discord.IGuild
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.IGuild
    name: IGuild
    nameWithType: IGuild
    fullName: Discord.IGuild
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.DiscordComparers.ChannelComparer*
  commentId: Overload:Discord.DiscordComparers.ChannelComparer
  name: ChannelComparer
  nameWithType: DiscordComparers.ChannelComparer
  fullName: Discord.DiscordComparers.ChannelComparer
- uid: System.Collections.Generic.IEqualityComparer{Discord.IChannel}
  commentId: T:System.Collections.Generic.IEqualityComparer{Discord.IChannel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<IChannel>
  nameWithType: IEqualityComparer<IChannel>
  fullName: System.Collections.Generic.IEqualityComparer<Discord.IChannel>
  nameWithType.vb: IEqualityComparer(Of IChannel)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of Discord.IChannel)
  name.vb: IEqualityComparer(Of IChannel)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.IChannel
    name: IChannel
    nameWithType: IChannel
    fullName: Discord.IChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.IChannel
    name: IChannel
    nameWithType: IChannel
    fullName: Discord.IChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.DiscordComparers.RoleComparer*
  commentId: Overload:Discord.DiscordComparers.RoleComparer
  name: RoleComparer
  nameWithType: DiscordComparers.RoleComparer
  fullName: Discord.DiscordComparers.RoleComparer
- uid: System.Collections.Generic.IEqualityComparer{Discord.IRole}
  commentId: T:System.Collections.Generic.IEqualityComparer{Discord.IRole}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<IRole>
  nameWithType: IEqualityComparer<IRole>
  fullName: System.Collections.Generic.IEqualityComparer<Discord.IRole>
  nameWithType.vb: IEqualityComparer(Of IRole)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of Discord.IRole)
  name.vb: IEqualityComparer(Of IRole)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.IRole
    name: IRole
    nameWithType: IRole
    fullName: Discord.IRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.IRole
    name: IRole
    nameWithType: IRole
    fullName: Discord.IRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.DiscordComparers.MessageComparer*
  commentId: Overload:Discord.DiscordComparers.MessageComparer
  name: MessageComparer
  nameWithType: DiscordComparers.MessageComparer
  fullName: Discord.DiscordComparers.MessageComparer
- uid: System.Collections.Generic.IEqualityComparer{Discord.IMessage}
  commentId: T:System.Collections.Generic.IEqualityComparer{Discord.IMessage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<IMessage>
  nameWithType: IEqualityComparer<IMessage>
  fullName: System.Collections.Generic.IEqualityComparer<Discord.IMessage>
  nameWithType.vb: IEqualityComparer(Of IMessage)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of Discord.IMessage)
  name.vb: IEqualityComparer(Of IMessage)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Discord.IMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Discord.IMessage
  - name: )
    nameWithType: )
    fullName: )
