### YamlMime:ManagedReference
items:
- uid: Discord.Overwrite
  commentId: T:Discord.Overwrite
  id: Overwrite
  parent: Discord
  children:
  - Discord.Overwrite.#ctor(System.UInt64,Discord.PermissionTarget,Discord.OverwritePermissions)
  - Discord.Overwrite.Permissions
  - Discord.Overwrite.TargetId
  - Discord.Overwrite.TargetType
  langs:
  - csharp
  - vb
  name: Overwrite
  nameWithType: Overwrite
  fullName: Discord.Overwrite
  type: Struct
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/Overwrite.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Overwrite
    path: ../src/Discord.Net.Core/Entities/Permissions/Overwrite.cs
    startLine: 5
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nRepresent a permission object.\n"
  example: []
  syntax:
    content: public struct Overwrite
    content.vb: Public Structure Overwrite
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Discord.Overwrite.TargetId
  commentId: P:Discord.Overwrite.TargetId
  id: TargetId
  parent: Discord.Overwrite
  langs:
  - csharp
  - vb
  name: TargetId
  nameWithType: Overwrite.TargetId
  fullName: Discord.Overwrite.TargetId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/Overwrite.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: TargetId
    path: ../src/Discord.Net.Core/Entities/Permissions/Overwrite.cs
    startLine: 10
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the unique identifier for the object this overwrite is targeting.\n"
  example: []
  syntax:
    content: public ulong TargetId { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property TargetId As ULong
  overload: Discord.Overwrite.TargetId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Overwrite.TargetType
  commentId: P:Discord.Overwrite.TargetType
  id: TargetType
  parent: Discord.Overwrite
  langs:
  - csharp
  - vb
  name: TargetType
  nameWithType: Overwrite.TargetType
  fullName: Discord.Overwrite.TargetType
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/Overwrite.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: TargetType
    path: ../src/Discord.Net.Core/Entities/Permissions/Overwrite.cs
    startLine: 14
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the type of object this overwrite is targeting.\n"
  example: []
  syntax:
    content: public PermissionTarget TargetType { get; }
    parameters: []
    return:
      type: Discord.PermissionTarget
    content.vb: Public ReadOnly Property TargetType As PermissionTarget
  overload: Discord.Overwrite.TargetType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Overwrite.Permissions
  commentId: P:Discord.Overwrite.Permissions
  id: Permissions
  parent: Discord.Overwrite
  langs:
  - csharp
  - vb
  name: Permissions
  nameWithType: Overwrite.Permissions
  fullName: Discord.Overwrite.Permissions
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/Overwrite.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Permissions
    path: ../src/Discord.Net.Core/Entities/Permissions/Overwrite.cs
    startLine: 18
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the permissions associated with this overwrite entry.\n"
  example: []
  syntax:
    content: public OverwritePermissions Permissions { get; }
    parameters: []
    return:
      type: Discord.OverwritePermissions
    content.vb: Public ReadOnly Property Permissions As OverwritePermissions
  overload: Discord.Overwrite.Permissions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Overwrite.#ctor(System.UInt64,Discord.PermissionTarget,Discord.OverwritePermissions)
  commentId: M:Discord.Overwrite.#ctor(System.UInt64,Discord.PermissionTarget,Discord.OverwritePermissions)
  id: '#ctor(System.UInt64,Discord.PermissionTarget,Discord.OverwritePermissions)'
  parent: Discord.Overwrite
  langs:
  - csharp
  - vb
  name: Overwrite(UInt64, PermissionTarget, OverwritePermissions)
  nameWithType: Overwrite.Overwrite(UInt64, PermissionTarget, OverwritePermissions)
  fullName: Discord.Overwrite.Overwrite(System.UInt64, Discord.PermissionTarget, Discord.OverwritePermissions)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/Overwrite.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Core/Entities/Permissions/Overwrite.cs
    startLine: 23
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nInitializes a new <xref href=\"Discord.Overwrite\" data-throw-if-not-resolved=\"false\"></xref> with provided target information and modified permissions.\n"
  example: []
  syntax:
    content: public Overwrite(ulong targetId, PermissionTarget targetType, OverwritePermissions permissions)
    parameters:
    - id: targetId
      type: System.UInt64
    - id: targetType
      type: Discord.PermissionTarget
    - id: permissions
      type: Discord.OverwritePermissions
    content.vb: Public Sub New(targetId As ULong, targetType As PermissionTarget, permissions As OverwritePermissions)
  overload: Discord.Overwrite.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Overwrite.TargetId*
  commentId: Overload:Discord.Overwrite.TargetId
  name: TargetId
  nameWithType: Overwrite.TargetId
  fullName: Discord.Overwrite.TargetId
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.Overwrite.TargetType*
  commentId: Overload:Discord.Overwrite.TargetType
  name: TargetType
  nameWithType: Overwrite.TargetType
  fullName: Discord.Overwrite.TargetType
- uid: Discord.PermissionTarget
  commentId: T:Discord.PermissionTarget
  parent: Discord
  name: PermissionTarget
  nameWithType: PermissionTarget
  fullName: Discord.PermissionTarget
- uid: Discord.Overwrite.Permissions*
  commentId: Overload:Discord.Overwrite.Permissions
  name: Permissions
  nameWithType: Overwrite.Permissions
  fullName: Discord.Overwrite.Permissions
- uid: Discord.OverwritePermissions
  commentId: T:Discord.OverwritePermissions
  parent: Discord
  name: OverwritePermissions
  nameWithType: OverwritePermissions
  fullName: Discord.OverwritePermissions
- uid: Discord.Overwrite
  commentId: T:Discord.Overwrite
  parent: Discord
  name: Overwrite
  nameWithType: Overwrite
  fullName: Discord.Overwrite
- uid: Discord.Overwrite.#ctor*
  commentId: Overload:Discord.Overwrite.#ctor
  name: Overwrite
  nameWithType: Overwrite.Overwrite
  fullName: Discord.Overwrite.Overwrite
