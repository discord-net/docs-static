### YamlMime:ManagedReference
items:
- uid: Discord.IUserGuild
  commentId: T:Discord.IUserGuild
  id: IUserGuild
  parent: Discord
  children:
  - Discord.IUserGuild.IconUrl
  - Discord.IUserGuild.IsOwner
  - Discord.IUserGuild.Name
  - Discord.IUserGuild.Permissions
  langs:
  - csharp
  - vb
  name: IUserGuild
  nameWithType: IUserGuild
  fullName: Discord.IUserGuild
  type: Interface
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/IUserGuild.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IUserGuild
    path: ../src/Discord.Net.Core/Entities/Guilds/IUserGuild.cs
    startLine: 2
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: 'public interface IUserGuild : IDeletable, ISnowflakeEntity, IEntity<ulong>'
    content.vb: >-
      Public Interface IUserGuild
          Inherits IDeletable, ISnowflakeEntity
  inheritedMembers:
  - Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  - Discord.ISnowflakeEntity.CreatedAt
  - Discord.IEntity{System.UInt64}.Id
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Discord.IUserGuild.Name
  commentId: P:Discord.IUserGuild.Name
  id: Name
  parent: Discord.IUserGuild
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IUserGuild.Name
  fullName: Discord.IUserGuild.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/IUserGuild.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Core/Entities/Guilds/IUserGuild.cs
    startLine: 7
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the name of this guild.\n"
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Discord.IUserGuild.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IUserGuild.IconUrl
  commentId: P:Discord.IUserGuild.IconUrl
  id: IconUrl
  parent: Discord.IUserGuild
  langs:
  - csharp
  - vb
  name: IconUrl
  nameWithType: IUserGuild.IconUrl
  fullName: Discord.IUserGuild.IconUrl
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/IUserGuild.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IconUrl
    path: ../src/Discord.Net.Core/Entities/Guilds/IUserGuild.cs
    startLine: 11
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the icon URL associated with this guild, or <code>null</code> if one is not set.\n"
  example: []
  syntax:
    content: string IconUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property IconUrl As String
  overload: Discord.IUserGuild.IconUrl*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IUserGuild.IsOwner
  commentId: P:Discord.IUserGuild.IsOwner
  id: IsOwner
  parent: Discord.IUserGuild
  langs:
  - csharp
  - vb
  name: IsOwner
  nameWithType: IUserGuild.IsOwner
  fullName: Discord.IUserGuild.IsOwner
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/IUserGuild.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsOwner
    path: ../src/Discord.Net.Core/Entities/Guilds/IUserGuild.cs
    startLine: 15
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns <code>true</code> if the current user owns this guild.\n"
  example: []
  syntax:
    content: bool IsOwner { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsOwner As Boolean
  overload: Discord.IUserGuild.IsOwner*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IUserGuild.Permissions
  commentId: P:Discord.IUserGuild.Permissions
  id: Permissions
  parent: Discord.IUserGuild
  langs:
  - csharp
  - vb
  name: Permissions
  nameWithType: IUserGuild.Permissions
  fullName: Discord.IUserGuild.Permissions
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/IUserGuild.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Permissions
    path: ../src/Discord.Net.Core/Entities/Guilds/IUserGuild.cs
    startLine: 19
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the current user&apos;s permissions for this guild.\n"
  example: []
  syntax:
    content: GuildPermissions Permissions { get; }
    parameters: []
    return:
      type: Discord.GuildPermissions
    content.vb: ReadOnly Property Permissions As GuildPermissions
  overload: Discord.IUserGuild.Permissions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  commentId: M:Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  parent: Discord.IDeletable
  name: DeleteAsync(RequestOptions)
  nameWithType: IDeletable.DeleteAsync(RequestOptions)
  fullName: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
    name: DeleteAsync
    nameWithType: IDeletable.DeleteAsync
    fullName: Discord.IDeletable.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
    name: DeleteAsync
    nameWithType: IDeletable.DeleteAsync
    fullName: Discord.IDeletable.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.ISnowflakeEntity.CreatedAt
  commentId: P:Discord.ISnowflakeEntity.CreatedAt
  parent: Discord.ISnowflakeEntity
  name: CreatedAt
  nameWithType: ISnowflakeEntity.CreatedAt
  fullName: Discord.ISnowflakeEntity.CreatedAt
- uid: Discord.IEntity{System.UInt64}.Id
  commentId: P:Discord.IEntity{System.UInt64}.Id
  parent: Discord.IEntity{System.UInt64}
  definition: Discord.IEntity`1.Id
  name: Id
  nameWithType: IEntity<UInt64>.Id
  fullName: Discord.IEntity<System.UInt64>.Id
  nameWithType.vb: IEntity(Of UInt64).Id
  fullName.vb: Discord.IEntity(Of System.UInt64).Id
- uid: Discord.IDeletable
  commentId: T:Discord.IDeletable
  parent: Discord
  name: IDeletable
  nameWithType: IDeletable
  fullName: Discord.IDeletable
- uid: Discord.ISnowflakeEntity
  commentId: T:Discord.ISnowflakeEntity
  parent: Discord
  name: ISnowflakeEntity
  nameWithType: ISnowflakeEntity
  fullName: Discord.ISnowflakeEntity
- uid: Discord.IEntity`1.Id
  commentId: P:Discord.IEntity`1.Id
  name: Id
  nameWithType: IEntity<TId>.Id
  fullName: Discord.IEntity<TId>.Id
  nameWithType.vb: IEntity(Of TId).Id
  fullName.vb: Discord.IEntity(Of TId).Id
- uid: Discord.IEntity{System.UInt64}
  commentId: T:Discord.IEntity{System.UInt64}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<UInt64>
  nameWithType: IEntity<UInt64>
  fullName: Discord.IEntity<System.UInt64>
  nameWithType.vb: IEntity(Of UInt64)
  fullName.vb: Discord.IEntity(Of System.UInt64)
  name.vb: IEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IUserGuild.Name*
  commentId: Overload:Discord.IUserGuild.Name
  name: Name
  nameWithType: IUserGuild.Name
  fullName: Discord.IUserGuild.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.IUserGuild.IconUrl*
  commentId: Overload:Discord.IUserGuild.IconUrl
  name: IconUrl
  nameWithType: IUserGuild.IconUrl
  fullName: Discord.IUserGuild.IconUrl
- uid: Discord.IUserGuild.IsOwner*
  commentId: Overload:Discord.IUserGuild.IsOwner
  name: IsOwner
  nameWithType: IUserGuild.IsOwner
  fullName: Discord.IUserGuild.IsOwner
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.IUserGuild.Permissions*
  commentId: Overload:Discord.IUserGuild.Permissions
  name: Permissions
  nameWithType: IUserGuild.Permissions
  fullName: Discord.IUserGuild.Permissions
- uid: Discord.GuildPermissions
  commentId: T:Discord.GuildPermissions
  parent: Discord
  name: GuildPermissions
  nameWithType: GuildPermissions
  fullName: Discord.GuildPermissions
