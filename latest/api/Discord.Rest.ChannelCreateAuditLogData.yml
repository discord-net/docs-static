### YamlMime:ManagedReference
items:
- uid: Discord.Rest.ChannelCreateAuditLogData
  commentId: T:Discord.Rest.ChannelCreateAuditLogData
  id: ChannelCreateAuditLogData
  parent: Discord.Rest
  children:
  - Discord.Rest.ChannelCreateAuditLogData.ChannelId
  - Discord.Rest.ChannelCreateAuditLogData.ChannelName
  - Discord.Rest.ChannelCreateAuditLogData.ChannelType
  - Discord.Rest.ChannelCreateAuditLogData.Overwrites
  langs:
  - csharp
  - vb
  name: ChannelCreateAuditLogData
  nameWithType: ChannelCreateAuditLogData
  fullName: Discord.Rest.ChannelCreateAuditLogData
  type: Class
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelCreateAuditLogData
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
    startLine: 11
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nContains a piece of audit log data related to a channel creation.\n"
  example: []
  syntax:
    content: 'public class ChannelCreateAuditLogData : IAuditLogData'
    content.vb: >-
      Public Class ChannelCreateAuditLogData
          Implements IAuditLogData
  inheritance:
  - System.Object
  implements:
  - Discord.IAuditLogData
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Rest.ChannelCreateAuditLogData.ChannelId
  commentId: P:Discord.Rest.ChannelCreateAuditLogData.ChannelId
  id: ChannelId
  parent: Discord.Rest.ChannelCreateAuditLogData
  langs:
  - csharp
  - vb
  name: ChannelId
  nameWithType: ChannelCreateAuditLogData.ChannelId
  fullName: Discord.Rest.ChannelCreateAuditLogData.ChannelId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelId
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
    startLine: 52
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the snowflake ID of the created channel.\n"
  example: []
  syntax:
    content: public ulong ChannelId { get; }
    parameters: []
    return:
      type: System.UInt64
      description: "\nA <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> representing the snowflake identifier for the created channel.\n"
    content.vb: Public ReadOnly Property ChannelId As ULong
  overload: Discord.Rest.ChannelCreateAuditLogData.ChannelId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.ChannelCreateAuditLogData.ChannelName
  commentId: P:Discord.Rest.ChannelCreateAuditLogData.ChannelName
  id: ChannelName
  parent: Discord.Rest.ChannelCreateAuditLogData
  langs:
  - csharp
  - vb
  name: ChannelName
  nameWithType: ChannelCreateAuditLogData.ChannelName
  fullName: Discord.Rest.ChannelCreateAuditLogData.ChannelName
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelName
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
    startLine: 59
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the name of the created channel.\n"
  example: []
  syntax:
    content: public string ChannelName { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the name of the created channel.\n"
    content.vb: Public ReadOnly Property ChannelName As String
  overload: Discord.Rest.ChannelCreateAuditLogData.ChannelName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.ChannelCreateAuditLogData.ChannelType
  commentId: P:Discord.Rest.ChannelCreateAuditLogData.ChannelType
  id: ChannelType
  parent: Discord.Rest.ChannelCreateAuditLogData
  langs:
  - csharp
  - vb
  name: ChannelType
  nameWithType: ChannelCreateAuditLogData.ChannelType
  fullName: Discord.Rest.ChannelCreateAuditLogData.ChannelType
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelType
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
    startLine: 66
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the type of the created channel.\n"
  example: []
  syntax:
    content: public ChannelType ChannelType { get; }
    parameters: []
    return:
      type: Discord.ChannelType
      description: "\nThe type of channel that was created.\n"
    content.vb: Public ReadOnly Property ChannelType As ChannelType
  overload: Discord.Rest.ChannelCreateAuditLogData.ChannelType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.ChannelCreateAuditLogData.Overwrites
  commentId: P:Discord.Rest.ChannelCreateAuditLogData.Overwrites
  id: Overwrites
  parent: Discord.Rest.ChannelCreateAuditLogData
  langs:
  - csharp
  - vb
  name: Overwrites
  nameWithType: ChannelCreateAuditLogData.Overwrites
  fullName: Discord.Rest.ChannelCreateAuditLogData.Overwrites
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Overwrites
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
    startLine: 74
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets a collection of permission overwrites that was assigned to the created channel.\n"
  example: []
  syntax:
    content: public IReadOnlyCollection<Overwrite> Overwrites { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{Discord.Overwrite}
      description: "\nA collection of permission <xref href=\"Discord.Overwrite\" data-throw-if-not-resolved=\"false\"></xref>, containing the permission overwrites that were\nassigned to the created channel.\n"
    content.vb: Public ReadOnly Property Overwrites As IReadOnlyCollection(Of Overwrite)
  overload: Discord.Rest.ChannelCreateAuditLogData.Overwrites*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.IAuditLogData
  commentId: T:Discord.IAuditLogData
  parent: Discord
  name: IAuditLogData
  nameWithType: IAuditLogData
  fullName: Discord.IAuditLogData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.Rest.ChannelCreateAuditLogData.ChannelId*
  commentId: Overload:Discord.Rest.ChannelCreateAuditLogData.ChannelId
  name: ChannelId
  nameWithType: ChannelCreateAuditLogData.ChannelId
  fullName: Discord.Rest.ChannelCreateAuditLogData.ChannelId
- uid: Discord.Rest.ChannelCreateAuditLogData.ChannelName*
  commentId: Overload:Discord.Rest.ChannelCreateAuditLogData.ChannelName
  name: ChannelName
  nameWithType: ChannelCreateAuditLogData.ChannelName
  fullName: Discord.Rest.ChannelCreateAuditLogData.ChannelName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Rest.ChannelCreateAuditLogData.ChannelType*
  commentId: Overload:Discord.Rest.ChannelCreateAuditLogData.ChannelType
  name: ChannelType
  nameWithType: ChannelCreateAuditLogData.ChannelType
  fullName: Discord.Rest.ChannelCreateAuditLogData.ChannelType
- uid: Discord.ChannelType
  commentId: T:Discord.ChannelType
  parent: Discord
  name: ChannelType
  nameWithType: ChannelType
  fullName: Discord.ChannelType
- uid: Discord.Overwrite
  commentId: T:Discord.Overwrite
  parent: Discord
  name: Overwrite
  nameWithType: Overwrite
  fullName: Discord.Overwrite
- uid: Discord.Rest.ChannelCreateAuditLogData.Overwrites*
  commentId: Overload:Discord.Rest.ChannelCreateAuditLogData.Overwrites
  name: Overwrites
  nameWithType: ChannelCreateAuditLogData.Overwrites
  fullName: Discord.Rest.ChannelCreateAuditLogData.Overwrites
- uid: System.Collections.Generic.IReadOnlyCollection{Discord.Overwrite}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Discord.Overwrite}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<Overwrite>
  nameWithType: IReadOnlyCollection<Overwrite>
  fullName: System.Collections.Generic.IReadOnlyCollection<Discord.Overwrite>
  nameWithType.vb: IReadOnlyCollection(Of Overwrite)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Discord.Overwrite)
  name.vb: IReadOnlyCollection(Of Overwrite)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Overwrite
    name: Overwrite
    nameWithType: Overwrite
    fullName: Discord.Overwrite
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Overwrite
    name: Overwrite
    nameWithType: Overwrite
    fullName: Discord.Overwrite
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
