### YamlMime:ManagedReference
items:
- uid: Discord.Rest.ChannelCreateAuditLogData
  commentId: T:Discord.Rest.ChannelCreateAuditLogData
  id: ChannelCreateAuditLogData
  parent: Discord.Rest
  children:
  - Discord.Rest.ChannelCreateAuditLogData.Bitrate
  - Discord.Rest.ChannelCreateAuditLogData.ChannelId
  - Discord.Rest.ChannelCreateAuditLogData.ChannelName
  - Discord.Rest.ChannelCreateAuditLogData.ChannelType
  - Discord.Rest.ChannelCreateAuditLogData.IsNsfw
  - Discord.Rest.ChannelCreateAuditLogData.Overwrites
  - Discord.Rest.ChannelCreateAuditLogData.SlowModeInterval
  langs:
  - csharp
  - vb
  name: ChannelCreateAuditLogData
  nameWithType: ChannelCreateAuditLogData
  fullName: Discord.Rest.ChannelCreateAuditLogData
  type: Class
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelCreateAuditLogData
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
    startLine: 11
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nContains a piece of audit log data related to a channel creation.\n"
  example: []
  syntax:
    content: 'public class ChannelCreateAuditLogData : object, IAuditLogData'
    content.vb: >-
      Public Class ChannelCreateAuditLogData
          Inherits Object
          Implements IAuditLogData
  inheritance:
  - System.Object
  implements:
  - Discord.IAuditLogData
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Rest.ChannelCreateAuditLogData.ChannelId
  commentId: P:Discord.Rest.ChannelCreateAuditLogData.ChannelId
  id: ChannelId
  parent: Discord.Rest.ChannelCreateAuditLogData
  langs:
  - csharp
  - vb
  name: ChannelId
  nameWithType: ChannelCreateAuditLogData.ChannelId
  fullName: Discord.Rest.ChannelCreateAuditLogData.ChannelId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelId
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
    startLine: 61
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the snowflake ID of the created channel.\n"
  example: []
  syntax:
    content: public ulong ChannelId { get; }
    parameters: []
    return:
      type: System.UInt64
      description: "\nA <see cref=\"!:System.UInt64\"></see> representing the snowflake identifier for the created channel.\n"
    content.vb: Public ReadOnly Property ChannelId As ULong
  overload: Discord.Rest.ChannelCreateAuditLogData.ChannelId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.ChannelCreateAuditLogData.ChannelName
  commentId: P:Discord.Rest.ChannelCreateAuditLogData.ChannelName
  id: ChannelName
  parent: Discord.Rest.ChannelCreateAuditLogData
  langs:
  - csharp
  - vb
  name: ChannelName
  nameWithType: ChannelCreateAuditLogData.ChannelName
  fullName: Discord.Rest.ChannelCreateAuditLogData.ChannelName
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelName
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
    startLine: 68
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the name of the created channel.\n"
  example: []
  syntax:
    content: public string ChannelName { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the name of the created channel.\n"
    content.vb: Public ReadOnly Property ChannelName As String
  overload: Discord.Rest.ChannelCreateAuditLogData.ChannelName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.ChannelCreateAuditLogData.ChannelType
  commentId: P:Discord.Rest.ChannelCreateAuditLogData.ChannelType
  id: ChannelType
  parent: Discord.Rest.ChannelCreateAuditLogData
  langs:
  - csharp
  - vb
  name: ChannelType
  nameWithType: ChannelCreateAuditLogData.ChannelType
  fullName: Discord.Rest.ChannelCreateAuditLogData.ChannelType
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelType
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
    startLine: 75
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the type of the created channel.\n"
  example: []
  syntax:
    content: public ChannelType ChannelType { get; }
    parameters: []
    return:
      type: Discord.ChannelType
      description: "\nThe type of channel that was created.\n"
    content.vb: Public ReadOnly Property ChannelType As ChannelType
  overload: Discord.Rest.ChannelCreateAuditLogData.ChannelType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.ChannelCreateAuditLogData.SlowModeInterval
  commentId: P:Discord.Rest.ChannelCreateAuditLogData.SlowModeInterval
  id: SlowModeInterval
  parent: Discord.Rest.ChannelCreateAuditLogData
  langs:
  - csharp
  - vb
  name: SlowModeInterval
  nameWithType: ChannelCreateAuditLogData.SlowModeInterval
  fullName: Discord.Rest.ChannelCreateAuditLogData.SlowModeInterval
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SlowModeInterval
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
    startLine: 84
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the current slow-mode delay of the created channel.\n"
  example: []
  syntax:
    content: public int? SlowModeInterval { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn <see cref=\"!:Int32\"></see> representing the time in seconds required before the user can send another\nmessage; <code>0</code> if disabled.\n<code>null</code> if this is not mentioned in this entry.\n"
    content.vb: Public ReadOnly Property SlowModeInterval As Integer?
  overload: Discord.Rest.ChannelCreateAuditLogData.SlowModeInterval*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.ChannelCreateAuditLogData.IsNsfw
  commentId: P:Discord.Rest.ChannelCreateAuditLogData.IsNsfw
  id: IsNsfw
  parent: Discord.Rest.ChannelCreateAuditLogData
  langs:
  - csharp
  - vb
  name: IsNsfw
  nameWithType: ChannelCreateAuditLogData.IsNsfw
  fullName: Discord.Rest.ChannelCreateAuditLogData.IsNsfw
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsNsfw
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
    startLine: 92
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the value that indicates whether the created channel is NSFW.\n"
  example: []
  syntax:
    content: public bool? IsNsfw { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: "\n<code>true</code> if the created channel has the NSFW flag enabled; otherwise <code>false</code>.\n<code>null</code> if this is not mentioned in this entry.\n"
    content.vb: Public ReadOnly Property IsNsfw As Boolean?
  overload: Discord.Rest.ChannelCreateAuditLogData.IsNsfw*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.ChannelCreateAuditLogData.Bitrate
  commentId: P:Discord.Rest.ChannelCreateAuditLogData.Bitrate
  id: Bitrate
  parent: Discord.Rest.ChannelCreateAuditLogData
  langs:
  - csharp
  - vb
  name: Bitrate
  nameWithType: ChannelCreateAuditLogData.Bitrate
  fullName: Discord.Rest.ChannelCreateAuditLogData.Bitrate
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Bitrate
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
    startLine: 101
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the bit-rate that the clients in the created voice channel are requested to use.\n"
  example: []
  syntax:
    content: public int? Bitrate { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn <see cref=\"!:Int32\"></see> representing the bit-rate (bps) that the created voice channel defines and requests the\nclient(s) to use.\n<code>null</code> if this is not mentioned in this entry.\n"
    content.vb: Public ReadOnly Property Bitrate As Integer?
  overload: Discord.Rest.ChannelCreateAuditLogData.Bitrate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.ChannelCreateAuditLogData.Overwrites
  commentId: P:Discord.Rest.ChannelCreateAuditLogData.Overwrites
  id: Overwrites
  parent: Discord.Rest.ChannelCreateAuditLogData
  langs:
  - csharp
  - vb
  name: Overwrites
  nameWithType: ChannelCreateAuditLogData.Overwrites
  fullName: Discord.Rest.ChannelCreateAuditLogData.Overwrites
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Overwrites
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelCreateAuditLogData.cs
    startLine: 109
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets a collection of permission overwrites that was assigned to the created channel.\n"
  example: []
  syntax:
    content: public IReadOnlyCollection<Overwrite> Overwrites { get; }
    parameters: []
    return:
      type: IReadOnlyCollection{Discord.Overwrite}
      description: "\nA collection of permission <xref href=\"Discord.Overwrite\" data-throw-if-not-resolved=\"false\"></xref>, containing the permission overwrites that were\nassigned to the created channel.\n"
    content.vb: Public ReadOnly Property Overwrites As IReadOnlyCollection(Of Overwrite)
  overload: Discord.Rest.ChannelCreateAuditLogData.Overwrites*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.IAuditLogData
  commentId: T:Discord.IAuditLogData
  parent: Discord
  name: IAuditLogData
  nameWithType: IAuditLogData
  fullName: Discord.IAuditLogData
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Rest.ChannelCreateAuditLogData.ChannelId*
  commentId: Overload:Discord.Rest.ChannelCreateAuditLogData.ChannelId
  name: ChannelId
  nameWithType: ChannelCreateAuditLogData.ChannelId
  fullName: Discord.Rest.ChannelCreateAuditLogData.ChannelId
- uid: System.UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.Rest.ChannelCreateAuditLogData.ChannelName*
  commentId: Overload:Discord.Rest.ChannelCreateAuditLogData.ChannelName
  name: ChannelName
  nameWithType: ChannelCreateAuditLogData.ChannelName
  fullName: Discord.Rest.ChannelCreateAuditLogData.ChannelName
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Rest.ChannelCreateAuditLogData.ChannelType*
  commentId: Overload:Discord.Rest.ChannelCreateAuditLogData.ChannelType
  name: ChannelType
  nameWithType: ChannelCreateAuditLogData.ChannelType
  fullName: Discord.Rest.ChannelCreateAuditLogData.ChannelType
- uid: Discord.ChannelType
  commentId: T:Discord.ChannelType
  parent: Discord
  name: ChannelType
  nameWithType: ChannelType
  fullName: Discord.ChannelType
- uid: Discord.Rest.ChannelCreateAuditLogData.SlowModeInterval*
  commentId: Overload:Discord.Rest.ChannelCreateAuditLogData.SlowModeInterval
  name: SlowModeInterval
  nameWithType: ChannelCreateAuditLogData.SlowModeInterval
  fullName: Discord.Rest.ChannelCreateAuditLogData.SlowModeInterval
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.ChannelCreateAuditLogData.IsNsfw*
  commentId: Overload:Discord.Rest.ChannelCreateAuditLogData.IsNsfw
  name: IsNsfw
  nameWithType: ChannelCreateAuditLogData.IsNsfw
  fullName: Discord.Rest.ChannelCreateAuditLogData.IsNsfw
- uid: System.Nullable{System.Boolean}
  commentId: '!:System.Nullable{System.Boolean}'
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.ChannelCreateAuditLogData.Bitrate*
  commentId: Overload:Discord.Rest.ChannelCreateAuditLogData.Bitrate
  name: Bitrate
  nameWithType: ChannelCreateAuditLogData.Bitrate
  fullName: Discord.Rest.ChannelCreateAuditLogData.Bitrate
- uid: Discord.Overwrite
  commentId: T:Discord.Overwrite
  parent: Discord
  name: Overwrite
  nameWithType: Overwrite
  fullName: Discord.Overwrite
- uid: Discord.Rest.ChannelCreateAuditLogData.Overwrites*
  commentId: Overload:Discord.Rest.ChannelCreateAuditLogData.Overwrites
  name: Overwrites
  nameWithType: ChannelCreateAuditLogData.Overwrites
  fullName: Discord.Rest.ChannelCreateAuditLogData.Overwrites
- uid: IReadOnlyCollection{Discord.Overwrite}
  commentId: '!:IReadOnlyCollection{Discord.Overwrite}'
  definition: IReadOnlyCollection`1
  name: IReadOnlyCollection<Overwrite>
  nameWithType: IReadOnlyCollection<Overwrite>
  fullName: IReadOnlyCollection<Discord.Overwrite>
  nameWithType.vb: IReadOnlyCollection(Of Overwrite)
  fullName.vb: IReadOnlyCollection(Of Discord.Overwrite)
  name.vb: IReadOnlyCollection(Of Overwrite)
  spec.csharp:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Overwrite
    name: Overwrite
    nameWithType: Overwrite
    fullName: Discord.Overwrite
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Overwrite
    name: Overwrite
    nameWithType: Overwrite
    fullName: Discord.Overwrite
  - name: )
    nameWithType: )
    fullName: )
- uid: IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<>
  nameWithType: IReadOnlyCollection<>
  fullName: IReadOnlyCollection<>
  nameWithType.vb: IReadOnlyCollection(Of )
  fullName.vb: IReadOnlyCollection(Of )
  name.vb: IReadOnlyCollection(Of )
  spec.csharp:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
