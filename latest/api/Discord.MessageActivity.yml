### YamlMime:ManagedReference
items:
- uid: Discord.MessageActivity
  commentId: T:Discord.MessageActivity
  id: MessageActivity
  parent: Discord
  children:
  - Discord.MessageActivity.PartyId
  - Discord.MessageActivity.ToString
  - Discord.MessageActivity.Type
  langs:
  - csharp
  - vb
  name: MessageActivity
  nameWithType: MessageActivity
  fullName: Discord.MessageActivity
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/MessageActivity.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MessageActivity
    path: ../src/Discord.Net.Core/Entities/Messages/MessageActivity.cs
    startLine: 14
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nAn activity object found in a sent message.\n"
  remarks: "\n<p>\n    This class refers to an activity object, visually similar to an embed within a message. However, a message\n    activity is interactive as opposed to a standard static embed.\n</p>\n<p>For example, a Spotify party invitation counts as a message activity.</p>\n"
  example: []
  syntax:
    content: public class MessageActivity
    content.vb: Public Class MessageActivity
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.MessageActivity.Type
  commentId: P:Discord.MessageActivity.Type
  id: Type
  parent: Discord.MessageActivity
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: MessageActivity.Type
  fullName: Discord.MessageActivity.Type
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/MessageActivity.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Type
    path: ../src/Discord.Net.Core/Entities/Messages/MessageActivity.cs
    startLine: 20
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the type of activity of this message.\n"
  example: []
  syntax:
    content: public MessageActivityType Type { get; }
    parameters: []
    return:
      type: Discord.MessageActivityType
    content.vb: Public ReadOnly Property Type As MessageActivityType
  overload: Discord.MessageActivity.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.MessageActivity.PartyId
  commentId: P:Discord.MessageActivity.PartyId
  id: PartyId
  parent: Discord.MessageActivity
  langs:
  - csharp
  - vb
  name: PartyId
  nameWithType: MessageActivity.PartyId
  fullName: Discord.MessageActivity.PartyId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/MessageActivity.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: PartyId
    path: ../src/Discord.Net.Core/Entities/Messages/MessageActivity.cs
    startLine: 24
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the party ID of this activity, if any.\n"
  example: []
  syntax:
    content: public string PartyId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PartyId As String
  overload: Discord.MessageActivity.PartyId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.MessageActivity.ToString
  commentId: M:Discord.MessageActivity.ToString
  id: ToString
  parent: Discord.MessageActivity
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MessageActivity.ToString()
  fullName: Discord.MessageActivity.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/MessageActivity.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.Core/Entities/Messages/MessageActivity.cs
    startLine: 29
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Discord.MessageActivity.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.MessageActivity.Type*
  commentId: Overload:Discord.MessageActivity.Type
  name: Type
  nameWithType: MessageActivity.Type
  fullName: Discord.MessageActivity.Type
- uid: Discord.MessageActivityType
  commentId: T:Discord.MessageActivityType
  parent: Discord
  name: MessageActivityType
  nameWithType: MessageActivityType
  fullName: Discord.MessageActivityType
- uid: Discord.MessageActivity.PartyId*
  commentId: Overload:Discord.MessageActivity.PartyId
  name: PartyId
  nameWithType: MessageActivity.PartyId
  fullName: Discord.MessageActivity.PartyId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.MessageActivity.ToString*
  commentId: Overload:Discord.MessageActivity.ToString
  name: ToString
  nameWithType: MessageActivity.ToString
  fullName: Discord.MessageActivity.ToString
