### YamlMime:ManagedReference
items:
- uid: Discord.SelfUserProperties
  commentId: T:Discord.SelfUserProperties
  id: SelfUserProperties
  parent: Discord
  children:
  - Discord.SelfUserProperties.Avatar
  - Discord.SelfUserProperties.Username
  langs:
  - csharp
  - vb
  name: SelfUserProperties
  nameWithType: SelfUserProperties
  fullName: Discord.SelfUserProperties
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/SelfUserProperties.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: SelfUserProperties
    path: ../src/Discord.Net.Core/Entities/Users/SelfUserProperties.cs
    startLine: 6
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nProperties that are used to modify the <xref href=\"Discord.ISelfUser\" data-throw-if-not-resolved=\"false\"></xref> with the specified changes.\n"
  example: []
  syntax:
    content: 'public class SelfUserProperties : object'
    content.vb: >-
      Public Class SelfUserProperties
          Inherits Object
  seealso:
  - linkId: Discord.ISelfUser.ModifyAsync(Action{Discord.SelfUserProperties},Discord.RequestOptions)
    commentId: M:Discord.ISelfUser.ModifyAsync(Action{Discord.SelfUserProperties},Discord.RequestOptions)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.SelfUserProperties.Username
  commentId: P:Discord.SelfUserProperties.Username
  id: Username
  parent: Discord.SelfUserProperties
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: SelfUserProperties.Username
  fullName: Discord.SelfUserProperties.Username
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/SelfUserProperties.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Username
    path: ../src/Discord.Net.Core/Entities/Users/SelfUserProperties.cs
    startLine: 11
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the username.\n"
  example: []
  syntax:
    content: public Optional<string> Username { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.String}
    content.vb: 'Public Property Username As '
  overload: Discord.SelfUserProperties.Username*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.SelfUserProperties.Avatar
  commentId: P:Discord.SelfUserProperties.Avatar
  id: Avatar
  parent: Discord.SelfUserProperties
  langs:
  - csharp
  - vb
  name: Avatar
  nameWithType: SelfUserProperties.Avatar
  fullName: Discord.SelfUserProperties.Avatar
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/SelfUserProperties.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Avatar
    path: ../src/Discord.Net.Core/Entities/Users/SelfUserProperties.cs
    startLine: 15
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the avatar.\n"
  example: []
  syntax:
    content: public Optional<Image? > Avatar { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Nullable{Discord.Image}}
    content.vb: 'Public Property Avatar As '
  overload: Discord.SelfUserProperties.Avatar*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Discord.ISelfUser
  commentId: T:Discord.ISelfUser
  parent: Discord
  name: ISelfUser
  nameWithType: ISelfUser
  fullName: Discord.ISelfUser
- uid: Discord.ISelfUser.ModifyAsync(Action{Discord.SelfUserProperties},Discord.RequestOptions)
  commentId: M:Discord.ISelfUser.ModifyAsync(Action{Discord.SelfUserProperties},Discord.RequestOptions)
  isExternal: true
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.SelfUserProperties.Username*
  commentId: Overload:Discord.SelfUserProperties.Username
  name: Username
  nameWithType: SelfUserProperties.Username
  fullName: Discord.SelfUserProperties.Username
- uid: Discord.Optional{System.String}
  commentId: T:Discord.Optional{System.String}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<String>
  nameWithType: Optional<String>
  fullName: Discord.Optional<System.String>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Discord.Optional(Of System.String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Optional`1
  commentId: T:Discord.Optional`1
  parent: Discord
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: Discord.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: Discord.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.SelfUserProperties.Avatar*
  commentId: Overload:Discord.SelfUserProperties.Avatar
  name: Avatar
  nameWithType: SelfUserProperties.Avatar
  fullName: Discord.SelfUserProperties.Avatar
- uid: Discord.Optional{System.Nullable{Discord.Image}}
  commentId: T:Discord.Optional{System.Nullable{Discord.Image}}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<Nullable<Image>>
  nameWithType: Optional<Nullable<Image>>
  fullName: Discord.Optional<System.Nullable<Discord.Image>>
  nameWithType.vb: Optional(Of Nullable(Of Image))
  fullName.vb: Discord.Optional(Of System.Nullable(Of Discord.Image))
  name.vb: Optional(Of Nullable(Of Image))
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Image
    name: Image
    nameWithType: Image
    fullName: Discord.Image
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Image
    name: Image
    nameWithType: Image
    fullName: Discord.Image
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
