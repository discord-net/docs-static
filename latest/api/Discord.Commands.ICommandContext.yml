### YamlMime:ManagedReference
items:
- uid: Discord.Commands.ICommandContext
  commentId: T:Discord.Commands.ICommandContext
  id: ICommandContext
  parent: Discord.Commands
  children:
  - Discord.Commands.ICommandContext.Channel
  - Discord.Commands.ICommandContext.Client
  - Discord.Commands.ICommandContext.Guild
  - Discord.Commands.ICommandContext.Message
  - Discord.Commands.ICommandContext.User
  langs:
  - csharp
  - vb
  name: ICommandContext
  nameWithType: ICommandContext
  fullName: Discord.Commands.ICommandContext
  type: Interface
  source:
    remote:
      path: src/Discord.Net.Core/Commands/ICommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ICommandContext
    path: ../src/Discord.Net.Core/Commands/ICommandContext.cs
    startLine: 5
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Commands
  summary: "\nRepresents a context of a command. This may include the client, guild, channel, user, and message.\n"
  example: []
  syntax:
    content: public interface ICommandContext
    content.vb: Public Interface ICommandContext
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Discord.Commands.ICommandContext.Client
  commentId: P:Discord.Commands.ICommandContext.Client
  id: Client
  parent: Discord.Commands.ICommandContext
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: ICommandContext.Client
  fullName: Discord.Commands.ICommandContext.Client
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Commands/ICommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Client
    path: ../src/Discord.Net.Core/Commands/ICommandContext.cs
    startLine: 10
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.IDiscordClient\" data-throw-if-not-resolved=\"false\"></xref> that the command is executed with.\n"
  example: []
  syntax:
    content: IDiscordClient Client { get; }
    parameters: []
    return:
      type: Discord.IDiscordClient
    content.vb: ReadOnly Property Client As IDiscordClient
  overload: Discord.Commands.ICommandContext.Client*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.Commands.ICommandContext.Guild
  commentId: P:Discord.Commands.ICommandContext.Guild
  id: Guild
  parent: Discord.Commands.ICommandContext
  langs:
  - csharp
  - vb
  name: Guild
  nameWithType: ICommandContext.Guild
  fullName: Discord.Commands.ICommandContext.Guild
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Commands/ICommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Guild
    path: ../src/Discord.Net.Core/Commands/ICommandContext.cs
    startLine: 14
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.IGuild\" data-throw-if-not-resolved=\"false\"></xref> that the command is executed in.\n"
  example: []
  syntax:
    content: IGuild Guild { get; }
    parameters: []
    return:
      type: Discord.IGuild
    content.vb: ReadOnly Property Guild As IGuild
  overload: Discord.Commands.ICommandContext.Guild*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.Commands.ICommandContext.Channel
  commentId: P:Discord.Commands.ICommandContext.Channel
  id: Channel
  parent: Discord.Commands.ICommandContext
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: ICommandContext.Channel
  fullName: Discord.Commands.ICommandContext.Channel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Commands/ICommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Channel
    path: ../src/Discord.Net.Core/Commands/ICommandContext.cs
    startLine: 18
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.IMessageChannel\" data-throw-if-not-resolved=\"false\"></xref> that the command is executed in.\n"
  example: []
  syntax:
    content: IMessageChannel Channel { get; }
    parameters: []
    return:
      type: Discord.IMessageChannel
    content.vb: ReadOnly Property Channel As IMessageChannel
  overload: Discord.Commands.ICommandContext.Channel*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.Commands.ICommandContext.User
  commentId: P:Discord.Commands.ICommandContext.User
  id: User
  parent: Discord.Commands.ICommandContext
  langs:
  - csharp
  - vb
  name: User
  nameWithType: ICommandContext.User
  fullName: Discord.Commands.ICommandContext.User
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Commands/ICommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: User
    path: ../src/Discord.Net.Core/Commands/ICommandContext.cs
    startLine: 22
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.IUser\" data-throw-if-not-resolved=\"false\"></xref> who executed the command.\n"
  example: []
  syntax:
    content: IUser User { get; }
    parameters: []
    return:
      type: Discord.IUser
    content.vb: ReadOnly Property User As IUser
  overload: Discord.Commands.ICommandContext.User*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.Commands.ICommandContext.Message
  commentId: P:Discord.Commands.ICommandContext.Message
  id: Message
  parent: Discord.Commands.ICommandContext
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ICommandContext.Message
  fullName: Discord.Commands.ICommandContext.Message
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Commands/ICommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Message
    path: ../src/Discord.Net.Core/Commands/ICommandContext.cs
    startLine: 26
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.IUserMessage\" data-throw-if-not-resolved=\"false\"></xref> that the command is interpreted from.\n"
  example: []
  syntax:
    content: IUserMessage Message { get; }
    parameters: []
    return:
      type: Discord.IUserMessage
    content.vb: ReadOnly Property Message As IUserMessage
  overload: Discord.Commands.ICommandContext.Message*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Discord.Commands
  commentId: N:Discord.Commands
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
- uid: Discord.IDiscordClient
  commentId: T:Discord.IDiscordClient
  parent: Discord
  name: IDiscordClient
  nameWithType: IDiscordClient
  fullName: Discord.IDiscordClient
- uid: Discord.Commands.ICommandContext.Client*
  commentId: Overload:Discord.Commands.ICommandContext.Client
  name: Client
  nameWithType: ICommandContext.Client
  fullName: Discord.Commands.ICommandContext.Client
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: Discord.Commands.ICommandContext.Guild*
  commentId: Overload:Discord.Commands.ICommandContext.Guild
  name: Guild
  nameWithType: ICommandContext.Guild
  fullName: Discord.Commands.ICommandContext.Guild
- uid: Discord.IMessageChannel
  commentId: T:Discord.IMessageChannel
  parent: Discord
  name: IMessageChannel
  nameWithType: IMessageChannel
  fullName: Discord.IMessageChannel
- uid: Discord.Commands.ICommandContext.Channel*
  commentId: Overload:Discord.Commands.ICommandContext.Channel
  name: Channel
  nameWithType: ICommandContext.Channel
  fullName: Discord.Commands.ICommandContext.Channel
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord.Commands.ICommandContext.User*
  commentId: Overload:Discord.Commands.ICommandContext.User
  name: User
  nameWithType: ICommandContext.User
  fullName: Discord.Commands.ICommandContext.User
- uid: Discord.IUserMessage
  commentId: T:Discord.IUserMessage
  parent: Discord
  name: IUserMessage
  nameWithType: IUserMessage
  fullName: Discord.IUserMessage
- uid: Discord.Commands.ICommandContext.Message*
  commentId: Overload:Discord.Commands.ICommandContext.Message
  name: Message
  nameWithType: ICommandContext.Message
  fullName: Discord.Commands.ICommandContext.Message
