### YamlMime:ManagedReference
items:
- uid: Discord.Rest.RestSystemMessage
  commentId: T:Discord.Rest.RestSystemMessage
  id: RestSystemMessage
  parent: Discord.Rest
  children:
  - Discord.Rest.RestSystemMessage.Type
  langs:
  - csharp
  - vb
  name: RestSystemMessage
  nameWithType: RestSystemMessage
  fullName: Discord.Rest.RestSystemMessage
  type: Class
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Messages/RestSystemMessage.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RestSystemMessage
    path: ../src/Discord.Net.Rest/Entities/Messages/RestSystemMessage.cs
    startLine: 8
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nRepresents a REST-based system message.\n"
  example: []
  syntax:
    content: 'public class RestSystemMessage : RestMessage, IUpdateable, ISystemMessage, IMessage, ISnowflakeEntity, IEntity<ulong>, IDeletable'
    content.vb: >-
      Public Class RestSystemMessage
          Inherits RestMessage
          Implements IUpdateable, ISystemMessage, IMessage, ISnowflakeEntity, IEntity(Of ULong), IDeletable
  inheritance:
  - System.Object
  - Discord.Rest.RestEntity{System.UInt64}
  - Discord.Rest.RestMessage
  implements:
  - Discord.IUpdateable
  - Discord.ISystemMessage
  - Discord.IMessage
  - Discord.ISnowflakeEntity
  - Discord.IEntity{System.UInt64}
  - Discord.IDeletable
  inheritedMembers:
  - Discord.Rest.RestMessage.Channel
  - Discord.Rest.RestMessage.Author
  - Discord.Rest.RestMessage.Source
  - Discord.Rest.RestMessage.Content
  - Discord.Rest.RestMessage.CreatedAt
  - Discord.Rest.RestMessage.IsTTS
  - Discord.Rest.RestMessage.IsPinned
  - Discord.Rest.RestMessage.IsSuppressed
  - Discord.Rest.RestMessage.EditedTimestamp
  - Discord.Rest.RestMessage.Attachments
  - Discord.Rest.RestMessage.Embeds
  - Discord.Rest.RestMessage.MentionedChannelIds
  - Discord.Rest.RestMessage.MentionedRoleIds
  - Discord.Rest.RestMessage.MentionedUsers
  - Discord.Rest.RestMessage.Tags
  - Discord.Rest.RestMessage.Timestamp
  - Discord.Rest.RestMessage.Activity
  - Discord.Rest.RestMessage.Application
  - Discord.Rest.RestMessage.UpdateAsync(Discord.RequestOptions)
  - Discord.Rest.RestMessage.DeleteAsync(Discord.RequestOptions)
  - Discord.Rest.RestMessage.ToString
  - Discord.Rest.RestMessage.Discord#IMessage#Type
  - Discord.Rest.RestMessage.Discord#IMessage#Author
  - Discord.Rest.RestMessage.Discord#IMessage#Attachments
  - Discord.Rest.RestMessage.Discord#IMessage#Embeds
  - Discord.Rest.RestMessage.Discord#IMessage#MentionedUserIds
  - Discord.Rest.RestMessage.Reactions
  - Discord.Rest.RestMessage.AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
  - Discord.Rest.RestMessage.RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
  - Discord.Rest.RestMessage.RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
  - Discord.Rest.RestMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
  - Discord.Rest.RestMessage.GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions)
  - Discord.Rest.RestEntity{System.UInt64}.Id
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Rest.RestSystemMessage.Type
  commentId: P:Discord.Rest.RestSystemMessage.Type
  id: Type
  parent: Discord.Rest.RestSystemMessage
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: RestSystemMessage.Type
  fullName: Discord.Rest.RestSystemMessage.Type
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Messages/RestSystemMessage.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Type
    path: ../src/Discord.Net.Rest/Entities/Messages/RestSystemMessage.cs
    startLine: 12
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the type of this system message.\n"
  example: []
  syntax:
    content: public MessageType Type { get; }
    parameters: []
    return:
      type: Discord.MessageType
    content.vb: Public ReadOnly Property Type As MessageType
  overload: Discord.Rest.RestSystemMessage.Type*
  implements:
  - Discord.IMessage.Type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Rest.RestEntity{System.UInt64}
  commentId: T:Discord.Rest.RestEntity{System.UInt64}
  parent: Discord.Rest
  definition: Discord.Rest.RestEntity`1
  name: RestEntity<UInt64>
  nameWithType: RestEntity<UInt64>
  fullName: Discord.Rest.RestEntity<System.UInt64>
  nameWithType.vb: RestEntity(Of UInt64)
  fullName.vb: Discord.Rest.RestEntity(Of System.UInt64)
  name.vb: RestEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestMessage
  commentId: T:Discord.Rest.RestMessage
  parent: Discord.Rest
  name: RestMessage
  nameWithType: RestMessage
  fullName: Discord.Rest.RestMessage
- uid: Discord.IUpdateable
  commentId: T:Discord.IUpdateable
  parent: Discord
  name: IUpdateable
  nameWithType: IUpdateable
  fullName: Discord.IUpdateable
- uid: Discord.ISystemMessage
  commentId: T:Discord.ISystemMessage
  parent: Discord
  name: ISystemMessage
  nameWithType: ISystemMessage
  fullName: Discord.ISystemMessage
- uid: Discord.IMessage
  commentId: T:Discord.IMessage
  parent: Discord
  name: IMessage
  nameWithType: IMessage
  fullName: Discord.IMessage
- uid: Discord.ISnowflakeEntity
  commentId: T:Discord.ISnowflakeEntity
  parent: Discord
  name: ISnowflakeEntity
  nameWithType: ISnowflakeEntity
  fullName: Discord.ISnowflakeEntity
- uid: Discord.IEntity{System.UInt64}
  commentId: T:Discord.IEntity{System.UInt64}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<UInt64>
  nameWithType: IEntity<UInt64>
  fullName: Discord.IEntity<System.UInt64>
  nameWithType.vb: IEntity(Of UInt64)
  fullName.vb: Discord.IEntity(Of System.UInt64)
  name.vb: IEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IDeletable
  commentId: T:Discord.IDeletable
  parent: Discord
  name: IDeletable
  nameWithType: IDeletable
  fullName: Discord.IDeletable
- uid: Discord.Rest.RestMessage.Channel
  commentId: P:Discord.Rest.RestMessage.Channel
  parent: Discord.Rest.RestMessage
  name: Channel
  nameWithType: RestMessage.Channel
  fullName: Discord.Rest.RestMessage.Channel
- uid: Discord.Rest.RestMessage.Author
  commentId: P:Discord.Rest.RestMessage.Author
  parent: Discord.Rest.RestMessage
  name: Author
  nameWithType: RestMessage.Author
  fullName: Discord.Rest.RestMessage.Author
- uid: Discord.Rest.RestMessage.Source
  commentId: P:Discord.Rest.RestMessage.Source
  parent: Discord.Rest.RestMessage
  name: Source
  nameWithType: RestMessage.Source
  fullName: Discord.Rest.RestMessage.Source
- uid: Discord.Rest.RestMessage.Content
  commentId: P:Discord.Rest.RestMessage.Content
  parent: Discord.Rest.RestMessage
  name: Content
  nameWithType: RestMessage.Content
  fullName: Discord.Rest.RestMessage.Content
- uid: Discord.Rest.RestMessage.CreatedAt
  commentId: P:Discord.Rest.RestMessage.CreatedAt
  parent: Discord.Rest.RestMessage
  name: CreatedAt
  nameWithType: RestMessage.CreatedAt
  fullName: Discord.Rest.RestMessage.CreatedAt
- uid: Discord.Rest.RestMessage.IsTTS
  commentId: P:Discord.Rest.RestMessage.IsTTS
  parent: Discord.Rest.RestMessage
  name: IsTTS
  nameWithType: RestMessage.IsTTS
  fullName: Discord.Rest.RestMessage.IsTTS
- uid: Discord.Rest.RestMessage.IsPinned
  commentId: P:Discord.Rest.RestMessage.IsPinned
  parent: Discord.Rest.RestMessage
  name: IsPinned
  nameWithType: RestMessage.IsPinned
  fullName: Discord.Rest.RestMessage.IsPinned
- uid: Discord.Rest.RestMessage.IsSuppressed
  commentId: P:Discord.Rest.RestMessage.IsSuppressed
  parent: Discord.Rest.RestMessage
  name: IsSuppressed
  nameWithType: RestMessage.IsSuppressed
  fullName: Discord.Rest.RestMessage.IsSuppressed
- uid: Discord.Rest.RestMessage.EditedTimestamp
  commentId: P:Discord.Rest.RestMessage.EditedTimestamp
  parent: Discord.Rest.RestMessage
  name: EditedTimestamp
  nameWithType: RestMessage.EditedTimestamp
  fullName: Discord.Rest.RestMessage.EditedTimestamp
- uid: Discord.Rest.RestMessage.Attachments
  commentId: P:Discord.Rest.RestMessage.Attachments
  parent: Discord.Rest.RestMessage
  name: Attachments
  nameWithType: RestMessage.Attachments
  fullName: Discord.Rest.RestMessage.Attachments
- uid: Discord.Rest.RestMessage.Embeds
  commentId: P:Discord.Rest.RestMessage.Embeds
  parent: Discord.Rest.RestMessage
  name: Embeds
  nameWithType: RestMessage.Embeds
  fullName: Discord.Rest.RestMessage.Embeds
- uid: Discord.Rest.RestMessage.MentionedChannelIds
  commentId: P:Discord.Rest.RestMessage.MentionedChannelIds
  parent: Discord.Rest.RestMessage
  name: MentionedChannelIds
  nameWithType: RestMessage.MentionedChannelIds
  fullName: Discord.Rest.RestMessage.MentionedChannelIds
- uid: Discord.Rest.RestMessage.MentionedRoleIds
  commentId: P:Discord.Rest.RestMessage.MentionedRoleIds
  parent: Discord.Rest.RestMessage
  name: MentionedRoleIds
  nameWithType: RestMessage.MentionedRoleIds
  fullName: Discord.Rest.RestMessage.MentionedRoleIds
- uid: Discord.Rest.RestMessage.MentionedUsers
  commentId: P:Discord.Rest.RestMessage.MentionedUsers
  parent: Discord.Rest.RestMessage
  name: MentionedUsers
  nameWithType: RestMessage.MentionedUsers
  fullName: Discord.Rest.RestMessage.MentionedUsers
- uid: Discord.Rest.RestMessage.Tags
  commentId: P:Discord.Rest.RestMessage.Tags
  parent: Discord.Rest.RestMessage
  name: Tags
  nameWithType: RestMessage.Tags
  fullName: Discord.Rest.RestMessage.Tags
- uid: Discord.Rest.RestMessage.Timestamp
  commentId: P:Discord.Rest.RestMessage.Timestamp
  parent: Discord.Rest.RestMessage
  name: Timestamp
  nameWithType: RestMessage.Timestamp
  fullName: Discord.Rest.RestMessage.Timestamp
- uid: Discord.Rest.RestMessage.Activity
  commentId: P:Discord.Rest.RestMessage.Activity
  parent: Discord.Rest.RestMessage
  name: Activity
  nameWithType: RestMessage.Activity
  fullName: Discord.Rest.RestMessage.Activity
- uid: Discord.Rest.RestMessage.Application
  commentId: P:Discord.Rest.RestMessage.Application
  parent: Discord.Rest.RestMessage
  name: Application
  nameWithType: RestMessage.Application
  fullName: Discord.Rest.RestMessage.Application
- uid: Discord.Rest.RestMessage.UpdateAsync(Discord.RequestOptions)
  commentId: M:Discord.Rest.RestMessage.UpdateAsync(Discord.RequestOptions)
  parent: Discord.Rest.RestMessage
  name: UpdateAsync(RequestOptions)
  nameWithType: RestMessage.UpdateAsync(RequestOptions)
  fullName: Discord.Rest.RestMessage.UpdateAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Rest.RestMessage.UpdateAsync(Discord.RequestOptions)
    name: UpdateAsync
    nameWithType: RestMessage.UpdateAsync
    fullName: Discord.Rest.RestMessage.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestMessage.UpdateAsync(Discord.RequestOptions)
    name: UpdateAsync
    nameWithType: RestMessage.UpdateAsync
    fullName: Discord.Rest.RestMessage.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestMessage.DeleteAsync(Discord.RequestOptions)
  commentId: M:Discord.Rest.RestMessage.DeleteAsync(Discord.RequestOptions)
  parent: Discord.Rest.RestMessage
  name: DeleteAsync(RequestOptions)
  nameWithType: RestMessage.DeleteAsync(RequestOptions)
  fullName: Discord.Rest.RestMessage.DeleteAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Rest.RestMessage.DeleteAsync(Discord.RequestOptions)
    name: DeleteAsync
    nameWithType: RestMessage.DeleteAsync
    fullName: Discord.Rest.RestMessage.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestMessage.DeleteAsync(Discord.RequestOptions)
    name: DeleteAsync
    nameWithType: RestMessage.DeleteAsync
    fullName: Discord.Rest.RestMessage.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestMessage.ToString
  commentId: M:Discord.Rest.RestMessage.ToString
  parent: Discord.Rest.RestMessage
  name: ToString()
  nameWithType: RestMessage.ToString()
  fullName: Discord.Rest.RestMessage.ToString()
  spec.csharp:
  - uid: Discord.Rest.RestMessage.ToString
    name: ToString
    nameWithType: RestMessage.ToString
    fullName: Discord.Rest.RestMessage.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestMessage.ToString
    name: ToString
    nameWithType: RestMessage.ToString
    fullName: Discord.Rest.RestMessage.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestMessage.Discord#IMessage#Type
  commentId: P:Discord.Rest.RestMessage.Discord#IMessage#Type
  parent: Discord.Rest.RestMessage
  name: IMessage.Type
  nameWithType: RestMessage.IMessage.Type
  fullName: Discord.Rest.RestMessage.Discord.IMessage.Type
  nameWithType.vb: RestMessage.Discord.IMessage.Type
  name.vb: Discord.IMessage.Type
- uid: Discord.Rest.RestMessage.Discord#IMessage#Author
  commentId: P:Discord.Rest.RestMessage.Discord#IMessage#Author
  parent: Discord.Rest.RestMessage
  name: IMessage.Author
  nameWithType: RestMessage.IMessage.Author
  fullName: Discord.Rest.RestMessage.Discord.IMessage.Author
  nameWithType.vb: RestMessage.Discord.IMessage.Author
  name.vb: Discord.IMessage.Author
- uid: Discord.Rest.RestMessage.Discord#IMessage#Attachments
  commentId: P:Discord.Rest.RestMessage.Discord#IMessage#Attachments
  parent: Discord.Rest.RestMessage
  name: IMessage.Attachments
  nameWithType: RestMessage.IMessage.Attachments
  fullName: Discord.Rest.RestMessage.Discord.IMessage.Attachments
  nameWithType.vb: RestMessage.Discord.IMessage.Attachments
  name.vb: Discord.IMessage.Attachments
- uid: Discord.Rest.RestMessage.Discord#IMessage#Embeds
  commentId: P:Discord.Rest.RestMessage.Discord#IMessage#Embeds
  parent: Discord.Rest.RestMessage
  name: IMessage.Embeds
  nameWithType: RestMessage.IMessage.Embeds
  fullName: Discord.Rest.RestMessage.Discord.IMessage.Embeds
  nameWithType.vb: RestMessage.Discord.IMessage.Embeds
  name.vb: Discord.IMessage.Embeds
- uid: Discord.Rest.RestMessage.Discord#IMessage#MentionedUserIds
  commentId: P:Discord.Rest.RestMessage.Discord#IMessage#MentionedUserIds
  parent: Discord.Rest.RestMessage
  name: IMessage.MentionedUserIds
  nameWithType: RestMessage.IMessage.MentionedUserIds
  fullName: Discord.Rest.RestMessage.Discord.IMessage.MentionedUserIds
  nameWithType.vb: RestMessage.Discord.IMessage.MentionedUserIds
  name.vb: Discord.IMessage.MentionedUserIds
- uid: Discord.Rest.RestMessage.Reactions
  commentId: P:Discord.Rest.RestMessage.Reactions
  parent: Discord.Rest.RestMessage
  name: Reactions
  nameWithType: RestMessage.Reactions
  fullName: Discord.Rest.RestMessage.Reactions
- uid: Discord.Rest.RestMessage.AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
  commentId: M:Discord.Rest.RestMessage.AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
  parent: Discord.Rest.RestMessage
  name: AddReactionAsync(IEmote, RequestOptions)
  nameWithType: RestMessage.AddReactionAsync(IEmote, RequestOptions)
  fullName: Discord.Rest.RestMessage.AddReactionAsync(Discord.IEmote, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Rest.RestMessage.AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
    name: AddReactionAsync
    nameWithType: RestMessage.AddReactionAsync
    fullName: Discord.Rest.RestMessage.AddReactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IEmote
    name: IEmote
    nameWithType: IEmote
    fullName: Discord.IEmote
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestMessage.AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
    name: AddReactionAsync
    nameWithType: RestMessage.AddReactionAsync
    fullName: Discord.Rest.RestMessage.AddReactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IEmote
    name: IEmote
    nameWithType: IEmote
    fullName: Discord.IEmote
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestMessage.RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
  commentId: M:Discord.Rest.RestMessage.RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
  parent: Discord.Rest.RestMessage
  name: RemoveReactionAsync(IEmote, IUser, RequestOptions)
  nameWithType: RestMessage.RemoveReactionAsync(IEmote, IUser, RequestOptions)
  fullName: Discord.Rest.RestMessage.RemoveReactionAsync(Discord.IEmote, Discord.IUser, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Rest.RestMessage.RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
    name: RemoveReactionAsync
    nameWithType: RestMessage.RemoveReactionAsync
    fullName: Discord.Rest.RestMessage.RemoveReactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IEmote
    name: IEmote
    nameWithType: IEmote
    fullName: Discord.IEmote
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.IUser
    name: IUser
    nameWithType: IUser
    fullName: Discord.IUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestMessage.RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
    name: RemoveReactionAsync
    nameWithType: RestMessage.RemoveReactionAsync
    fullName: Discord.Rest.RestMessage.RemoveReactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IEmote
    name: IEmote
    nameWithType: IEmote
    fullName: Discord.IEmote
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.IUser
    name: IUser
    nameWithType: IUser
    fullName: Discord.IUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestMessage.RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
  commentId: M:Discord.Rest.RestMessage.RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
  parent: Discord.Rest.RestMessage
  isExternal: true
  name: RemoveReactionAsync(IEmote, UInt64, RequestOptions)
  nameWithType: RestMessage.RemoveReactionAsync(IEmote, UInt64, RequestOptions)
  fullName: Discord.Rest.RestMessage.RemoveReactionAsync(Discord.IEmote, System.UInt64, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Rest.RestMessage.RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
    name: RemoveReactionAsync
    nameWithType: RestMessage.RemoveReactionAsync
    fullName: Discord.Rest.RestMessage.RemoveReactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IEmote
    name: IEmote
    nameWithType: IEmote
    fullName: Discord.IEmote
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestMessage.RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
    name: RemoveReactionAsync
    nameWithType: RestMessage.RemoveReactionAsync
    fullName: Discord.Rest.RestMessage.RemoveReactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IEmote
    name: IEmote
    nameWithType: IEmote
    fullName: Discord.IEmote
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
  commentId: M:Discord.Rest.RestMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
  parent: Discord.Rest.RestMessage
  name: RemoveAllReactionsAsync(RequestOptions)
  nameWithType: RestMessage.RemoveAllReactionsAsync(RequestOptions)
  fullName: Discord.Rest.RestMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Rest.RestMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
    name: RemoveAllReactionsAsync
    nameWithType: RestMessage.RemoveAllReactionsAsync
    fullName: Discord.Rest.RestMessage.RemoveAllReactionsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
    name: RemoveAllReactionsAsync
    nameWithType: RestMessage.RemoveAllReactionsAsync
    fullName: Discord.Rest.RestMessage.RemoveAllReactionsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestMessage.GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions)
  commentId: M:Discord.Rest.RestMessage.GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions)
  parent: Discord.Rest.RestMessage
  isExternal: true
  name: GetReactionUsersAsync(IEmote, Int32, RequestOptions)
  nameWithType: RestMessage.GetReactionUsersAsync(IEmote, Int32, RequestOptions)
  fullName: Discord.Rest.RestMessage.GetReactionUsersAsync(Discord.IEmote, System.Int32, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Rest.RestMessage.GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions)
    name: GetReactionUsersAsync
    nameWithType: RestMessage.GetReactionUsersAsync
    fullName: Discord.Rest.RestMessage.GetReactionUsersAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IEmote
    name: IEmote
    nameWithType: IEmote
    fullName: Discord.IEmote
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestMessage.GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions)
    name: GetReactionUsersAsync
    nameWithType: RestMessage.GetReactionUsersAsync
    fullName: Discord.Rest.RestMessage.GetReactionUsersAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IEmote
    name: IEmote
    nameWithType: IEmote
    fullName: Discord.IEmote
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestEntity{System.UInt64}.Id
  commentId: P:Discord.Rest.RestEntity{System.UInt64}.Id
  parent: Discord.Rest.RestEntity{System.UInt64}
  definition: Discord.Rest.RestEntity`1.Id
  name: Id
  nameWithType: RestEntity<UInt64>.Id
  fullName: Discord.Rest.RestEntity<System.UInt64>.Id
  nameWithType.vb: RestEntity(Of UInt64).Id
  fullName.vb: Discord.Rest.RestEntity(Of System.UInt64).Id
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Rest.RestEntity`1
  commentId: T:Discord.Rest.RestEntity`1
  name: RestEntity<T>
  nameWithType: RestEntity<T>
  fullName: Discord.Rest.RestEntity<T>
  nameWithType.vb: RestEntity(Of T)
  fullName.vb: Discord.Rest.RestEntity(Of T)
  name.vb: RestEntity(Of T)
  spec.csharp:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestEntity`1.Id
  commentId: P:Discord.Rest.RestEntity`1.Id
  name: Id
  nameWithType: RestEntity<T>.Id
  fullName: Discord.Rest.RestEntity<T>.Id
  nameWithType.vb: RestEntity(Of T).Id
  fullName.vb: Discord.Rest.RestEntity(Of T).Id
- uid: Discord.Rest.RestSystemMessage.Type*
  commentId: Overload:Discord.Rest.RestSystemMessage.Type
  name: Type
  nameWithType: RestSystemMessage.Type
  fullName: Discord.Rest.RestSystemMessage.Type
- uid: Discord.IMessage.Type
  commentId: P:Discord.IMessage.Type
  parent: Discord.IMessage
  name: Type
  nameWithType: IMessage.Type
  fullName: Discord.IMessage.Type
- uid: Discord.MessageType
  commentId: T:Discord.MessageType
  parent: Discord
  name: MessageType
  nameWithType: MessageType
  fullName: Discord.MessageType
