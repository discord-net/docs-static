### YamlMime:ManagedReference
items:
- uid: Discord.Commands.SocketCommandContext
  commentId: T:Discord.Commands.SocketCommandContext
  id: SocketCommandContext
  parent: Discord.Commands
  children:
  - Discord.Commands.SocketCommandContext.#ctor(Discord.WebSocket.DiscordSocketClient,Discord.WebSocket.SocketUserMessage)
  - Discord.Commands.SocketCommandContext.Channel
  - Discord.Commands.SocketCommandContext.Client
  - Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Channel
  - Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Client
  - Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Guild
  - Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Message
  - Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#User
  - Discord.Commands.SocketCommandContext.Guild
  - Discord.Commands.SocketCommandContext.IsPrivate
  - Discord.Commands.SocketCommandContext.Message
  - Discord.Commands.SocketCommandContext.User
  langs:
  - csharp
  - vb
  name: SocketCommandContext
  nameWithType: SocketCommandContext
  fullName: Discord.Commands.SocketCommandContext
  type: Class
  source:
    remote:
      path: src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SocketCommandContext
    path: ../src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
    startLine: 7
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.Commands
  summary: "\nRepresents a WebSocket-based context of a command. This may include the client, guild, channel, user, and message.\n"
  example: []
  syntax:
    content: 'public class SocketCommandContext : ICommandContext'
    content.vb: >-
      Public Class SocketCommandContext
          Implements ICommandContext
  inheritance:
  - System.Object
  derivedClasses:
  - Discord.Commands.ShardedCommandContext
  implements:
  - Discord.Commands.ICommandContext
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Commands.SocketCommandContext.Client
  commentId: P:Discord.Commands.SocketCommandContext.Client
  id: Client
  parent: Discord.Commands.SocketCommandContext
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: SocketCommandContext.Client
  fullName: Discord.Commands.SocketCommandContext.Client
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Client
    path: ../src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
    startLine: 12
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.WebSocket.DiscordSocketClient\" data-throw-if-not-resolved=\"false\"></xref> that the command is executed with.\n"
  example: []
  syntax:
    content: public DiscordSocketClient Client { get; }
    parameters: []
    return:
      type: Discord.WebSocket.DiscordSocketClient
    content.vb: Public ReadOnly Property Client As DiscordSocketClient
  overload: Discord.Commands.SocketCommandContext.Client*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.SocketCommandContext.Guild
  commentId: P:Discord.Commands.SocketCommandContext.Guild
  id: Guild
  parent: Discord.Commands.SocketCommandContext
  langs:
  - csharp
  - vb
  name: Guild
  nameWithType: SocketCommandContext.Guild
  fullName: Discord.Commands.SocketCommandContext.Guild
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Guild
    path: ../src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
    startLine: 16
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.WebSocket.SocketGuild\" data-throw-if-not-resolved=\"false\"></xref> that the command is executed in.\n"
  example: []
  syntax:
    content: public SocketGuild Guild { get; }
    parameters: []
    return:
      type: Discord.WebSocket.SocketGuild
    content.vb: Public ReadOnly Property Guild As SocketGuild
  overload: Discord.Commands.SocketCommandContext.Guild*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.SocketCommandContext.Channel
  commentId: P:Discord.Commands.SocketCommandContext.Channel
  id: Channel
  parent: Discord.Commands.SocketCommandContext
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: SocketCommandContext.Channel
  fullName: Discord.Commands.SocketCommandContext.Channel
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Channel
    path: ../src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
    startLine: 20
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.WebSocket.ISocketMessageChannel\" data-throw-if-not-resolved=\"false\"></xref> that the command is executed in.\n"
  example: []
  syntax:
    content: public ISocketMessageChannel Channel { get; }
    parameters: []
    return:
      type: Discord.WebSocket.ISocketMessageChannel
    content.vb: Public ReadOnly Property Channel As ISocketMessageChannel
  overload: Discord.Commands.SocketCommandContext.Channel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.SocketCommandContext.User
  commentId: P:Discord.Commands.SocketCommandContext.User
  id: User
  parent: Discord.Commands.SocketCommandContext
  langs:
  - csharp
  - vb
  name: User
  nameWithType: SocketCommandContext.User
  fullName: Discord.Commands.SocketCommandContext.User
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: User
    path: ../src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
    startLine: 24
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.WebSocket.SocketUser\" data-throw-if-not-resolved=\"false\"></xref> who executed the command.\n"
  example: []
  syntax:
    content: public SocketUser User { get; }
    parameters: []
    return:
      type: Discord.WebSocket.SocketUser
    content.vb: Public ReadOnly Property User As SocketUser
  overload: Discord.Commands.SocketCommandContext.User*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.SocketCommandContext.Message
  commentId: P:Discord.Commands.SocketCommandContext.Message
  id: Message
  parent: Discord.Commands.SocketCommandContext
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: SocketCommandContext.Message
  fullName: Discord.Commands.SocketCommandContext.Message
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Message
    path: ../src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
    startLine: 28
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.WebSocket.SocketUserMessage\" data-throw-if-not-resolved=\"false\"></xref> that the command is interpreted from.\n"
  example: []
  syntax:
    content: public SocketUserMessage Message { get; }
    parameters: []
    return:
      type: Discord.WebSocket.SocketUserMessage
    content.vb: Public ReadOnly Property Message As SocketUserMessage
  overload: Discord.Commands.SocketCommandContext.Message*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.SocketCommandContext.IsPrivate
  commentId: P:Discord.Commands.SocketCommandContext.IsPrivate
  id: IsPrivate
  parent: Discord.Commands.SocketCommandContext
  langs:
  - csharp
  - vb
  name: IsPrivate
  nameWithType: SocketCommandContext.IsPrivate
  fullName: Discord.Commands.SocketCommandContext.IsPrivate
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsPrivate
    path: ../src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
    startLine: 33
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.Commands
  summary: "\nIndicates whether the channel that the command is executed in is a private channel.\n"
  example: []
  syntax:
    content: public bool IsPrivate { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPrivate As Boolean
  overload: Discord.Commands.SocketCommandContext.IsPrivate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.SocketCommandContext.#ctor(Discord.WebSocket.DiscordSocketClient,Discord.WebSocket.SocketUserMessage)
  commentId: M:Discord.Commands.SocketCommandContext.#ctor(Discord.WebSocket.DiscordSocketClient,Discord.WebSocket.SocketUserMessage)
  id: '#ctor(Discord.WebSocket.DiscordSocketClient,Discord.WebSocket.SocketUserMessage)'
  parent: Discord.Commands.SocketCommandContext
  langs:
  - csharp
  - vb
  name: SocketCommandContext(DiscordSocketClient, SocketUserMessage)
  nameWithType: SocketCommandContext.SocketCommandContext(DiscordSocketClient, SocketUserMessage)
  fullName: Discord.Commands.SocketCommandContext.SocketCommandContext(Discord.WebSocket.DiscordSocketClient, Discord.WebSocket.SocketUserMessage)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
    startLine: 40
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.Commands
  summary: "\nInitializes a new <xref href=\"Discord.Commands.SocketCommandContext\" data-throw-if-not-resolved=\"false\"></xref> class with the provided client and message.\n"
  example: []
  syntax:
    content: public SocketCommandContext(DiscordSocketClient client, SocketUserMessage msg)
    parameters:
    - id: client
      type: Discord.WebSocket.DiscordSocketClient
      description: The underlying client.
    - id: msg
      type: Discord.WebSocket.SocketUserMessage
      description: The underlying message.
    content.vb: Public Sub New(client As DiscordSocketClient, msg As SocketUserMessage)
  overload: Discord.Commands.SocketCommandContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Client
  commentId: P:Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Client
  id: Discord#Commands#ICommandContext#Client
  isEii: true
  parent: Discord.Commands.SocketCommandContext
  langs:
  - csharp
  - vb
  name: ICommandContext.Client
  nameWithType: SocketCommandContext.ICommandContext.Client
  fullName: Discord.Commands.SocketCommandContext.Discord.Commands.ICommandContext.Client
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.Commands.ICommandContext.Client
    path: ../src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
    startLine: 51
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.IDiscordClient\" data-throw-if-not-resolved=\"false\"></xref> that the command is executed with.\n"
  example: []
  syntax:
    content: IDiscordClient ICommandContext.Client { get; }
    parameters: []
    return:
      type: Discord.IDiscordClient
    content.vb: ReadOnly WriteOnly Property Discord.Commands.ICommandContext.Client As IDiscordClient Implements ICommandContext.Client
  overload: Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Client*
  implements:
  - Discord.Commands.ICommandContext.Client
  nameWithType.vb: SocketCommandContext.Discord.Commands.ICommandContext.Client
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.Commands.ICommandContext.Client
- uid: Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Guild
  commentId: P:Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Guild
  id: Discord#Commands#ICommandContext#Guild
  isEii: true
  parent: Discord.Commands.SocketCommandContext
  langs:
  - csharp
  - vb
  name: ICommandContext.Guild
  nameWithType: SocketCommandContext.ICommandContext.Guild
  fullName: Discord.Commands.SocketCommandContext.Discord.Commands.ICommandContext.Guild
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.Commands.ICommandContext.Guild
    path: ../src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
    startLine: 53
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.IGuild\" data-throw-if-not-resolved=\"false\"></xref> that the command is executed in.\n"
  example: []
  syntax:
    content: IGuild ICommandContext.Guild { get; }
    parameters: []
    return:
      type: Discord.IGuild
    content.vb: ReadOnly WriteOnly Property Discord.Commands.ICommandContext.Guild As IGuild Implements ICommandContext.Guild
  overload: Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Guild*
  implements:
  - Discord.Commands.ICommandContext.Guild
  nameWithType.vb: SocketCommandContext.Discord.Commands.ICommandContext.Guild
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.Commands.ICommandContext.Guild
- uid: Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Channel
  commentId: P:Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Channel
  id: Discord#Commands#ICommandContext#Channel
  isEii: true
  parent: Discord.Commands.SocketCommandContext
  langs:
  - csharp
  - vb
  name: ICommandContext.Channel
  nameWithType: SocketCommandContext.ICommandContext.Channel
  fullName: Discord.Commands.SocketCommandContext.Discord.Commands.ICommandContext.Channel
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.Commands.ICommandContext.Channel
    path: ../src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
    startLine: 55
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.IMessageChannel\" data-throw-if-not-resolved=\"false\"></xref> that the command is executed in.\n"
  example: []
  syntax:
    content: IMessageChannel ICommandContext.Channel { get; }
    parameters: []
    return:
      type: Discord.IMessageChannel
    content.vb: ReadOnly WriteOnly Property Discord.Commands.ICommandContext.Channel As IMessageChannel Implements ICommandContext.Channel
  overload: Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Channel*
  implements:
  - Discord.Commands.ICommandContext.Channel
  nameWithType.vb: SocketCommandContext.Discord.Commands.ICommandContext.Channel
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.Commands.ICommandContext.Channel
- uid: Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#User
  commentId: P:Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#User
  id: Discord#Commands#ICommandContext#User
  isEii: true
  parent: Discord.Commands.SocketCommandContext
  langs:
  - csharp
  - vb
  name: ICommandContext.User
  nameWithType: SocketCommandContext.ICommandContext.User
  fullName: Discord.Commands.SocketCommandContext.Discord.Commands.ICommandContext.User
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.Commands.ICommandContext.User
    path: ../src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
    startLine: 57
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.IUser\" data-throw-if-not-resolved=\"false\"></xref> who executed the command.\n"
  example: []
  syntax:
    content: IUser ICommandContext.User { get; }
    parameters: []
    return:
      type: Discord.IUser
    content.vb: ReadOnly WriteOnly Property Discord.Commands.ICommandContext.User As IUser Implements ICommandContext.User
  overload: Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#User*
  implements:
  - Discord.Commands.ICommandContext.User
  nameWithType.vb: SocketCommandContext.Discord.Commands.ICommandContext.User
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.Commands.ICommandContext.User
- uid: Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Message
  commentId: P:Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Message
  id: Discord#Commands#ICommandContext#Message
  isEii: true
  parent: Discord.Commands.SocketCommandContext
  langs:
  - csharp
  - vb
  name: ICommandContext.Message
  nameWithType: SocketCommandContext.ICommandContext.Message
  fullName: Discord.Commands.SocketCommandContext.Discord.Commands.ICommandContext.Message
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.Commands.ICommandContext.Message
    path: ../src/Discord.Net.WebSocket/Commands/SocketCommandContext.cs
    startLine: 59
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.IUserMessage\" data-throw-if-not-resolved=\"false\"></xref> that the command is interpreted from.\n"
  example: []
  syntax:
    content: IUserMessage ICommandContext.Message { get; }
    parameters: []
    return:
      type: Discord.IUserMessage
    content.vb: ReadOnly WriteOnly Property Discord.Commands.ICommandContext.Message As IUserMessage Implements ICommandContext.Message
  overload: Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Message*
  implements:
  - Discord.Commands.ICommandContext.Message
  nameWithType.vb: SocketCommandContext.Discord.Commands.ICommandContext.Message
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.Commands.ICommandContext.Message
references:
- uid: Discord.Commands
  commentId: N:Discord.Commands
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Commands.ICommandContext
  commentId: T:Discord.Commands.ICommandContext
  parent: Discord.Commands
  name: ICommandContext
  nameWithType: ICommandContext
  fullName: Discord.Commands.ICommandContext
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.WebSocket.DiscordSocketClient
  commentId: T:Discord.WebSocket.DiscordSocketClient
  parent: Discord.WebSocket
  name: DiscordSocketClient
  nameWithType: DiscordSocketClient
  fullName: Discord.WebSocket.DiscordSocketClient
- uid: Discord.Commands.SocketCommandContext.Client*
  commentId: Overload:Discord.Commands.SocketCommandContext.Client
  name: Client
  nameWithType: SocketCommandContext.Client
  fullName: Discord.Commands.SocketCommandContext.Client
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
- uid: Discord.WebSocket.SocketGuild
  commentId: T:Discord.WebSocket.SocketGuild
  parent: Discord.WebSocket
  name: SocketGuild
  nameWithType: SocketGuild
  fullName: Discord.WebSocket.SocketGuild
- uid: Discord.Commands.SocketCommandContext.Guild*
  commentId: Overload:Discord.Commands.SocketCommandContext.Guild
  name: Guild
  nameWithType: SocketCommandContext.Guild
  fullName: Discord.Commands.SocketCommandContext.Guild
- uid: Discord.WebSocket.ISocketMessageChannel
  commentId: T:Discord.WebSocket.ISocketMessageChannel
  parent: Discord.WebSocket
  name: ISocketMessageChannel
  nameWithType: ISocketMessageChannel
  fullName: Discord.WebSocket.ISocketMessageChannel
- uid: Discord.Commands.SocketCommandContext.Channel*
  commentId: Overload:Discord.Commands.SocketCommandContext.Channel
  name: Channel
  nameWithType: SocketCommandContext.Channel
  fullName: Discord.Commands.SocketCommandContext.Channel
- uid: Discord.WebSocket.SocketUser
  commentId: T:Discord.WebSocket.SocketUser
  parent: Discord.WebSocket
  name: SocketUser
  nameWithType: SocketUser
  fullName: Discord.WebSocket.SocketUser
- uid: Discord.Commands.SocketCommandContext.User*
  commentId: Overload:Discord.Commands.SocketCommandContext.User
  name: User
  nameWithType: SocketCommandContext.User
  fullName: Discord.Commands.SocketCommandContext.User
- uid: Discord.WebSocket.SocketUserMessage
  commentId: T:Discord.WebSocket.SocketUserMessage
  parent: Discord.WebSocket
  name: SocketUserMessage
  nameWithType: SocketUserMessage
  fullName: Discord.WebSocket.SocketUserMessage
- uid: Discord.Commands.SocketCommandContext.Message*
  commentId: Overload:Discord.Commands.SocketCommandContext.Message
  name: Message
  nameWithType: SocketCommandContext.Message
  fullName: Discord.Commands.SocketCommandContext.Message
- uid: Discord.Commands.SocketCommandContext.IsPrivate*
  commentId: Overload:Discord.Commands.SocketCommandContext.IsPrivate
  name: IsPrivate
  nameWithType: SocketCommandContext.IsPrivate
  fullName: Discord.Commands.SocketCommandContext.IsPrivate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.Commands.SocketCommandContext
  commentId: T:Discord.Commands.SocketCommandContext
  parent: Discord.Commands
  name: SocketCommandContext
  nameWithType: SocketCommandContext
  fullName: Discord.Commands.SocketCommandContext
- uid: Discord.Commands.SocketCommandContext.#ctor*
  commentId: Overload:Discord.Commands.SocketCommandContext.#ctor
  name: SocketCommandContext
  nameWithType: SocketCommandContext.SocketCommandContext
  fullName: Discord.Commands.SocketCommandContext.SocketCommandContext
- uid: Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Client*
  commentId: Overload:Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Client
  name: ICommandContext.Client
  nameWithType: SocketCommandContext.ICommandContext.Client
  fullName: Discord.Commands.SocketCommandContext.Discord.Commands.ICommandContext.Client
  nameWithType.vb: SocketCommandContext.Discord.Commands.ICommandContext.Client
  name.vb: Discord.Commands.ICommandContext.Client
- uid: Discord.Commands.ICommandContext.Client
  commentId: P:Discord.Commands.ICommandContext.Client
  parent: Discord.Commands.ICommandContext
  name: Client
  nameWithType: ICommandContext.Client
  fullName: Discord.Commands.ICommandContext.Client
- uid: Discord.IDiscordClient
  commentId: T:Discord.IDiscordClient
  parent: Discord
  name: IDiscordClient
  nameWithType: IDiscordClient
  fullName: Discord.IDiscordClient
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Guild*
  commentId: Overload:Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Guild
  name: ICommandContext.Guild
  nameWithType: SocketCommandContext.ICommandContext.Guild
  fullName: Discord.Commands.SocketCommandContext.Discord.Commands.ICommandContext.Guild
  nameWithType.vb: SocketCommandContext.Discord.Commands.ICommandContext.Guild
  name.vb: Discord.Commands.ICommandContext.Guild
- uid: Discord.Commands.ICommandContext.Guild
  commentId: P:Discord.Commands.ICommandContext.Guild
  parent: Discord.Commands.ICommandContext
  name: Guild
  nameWithType: ICommandContext.Guild
  fullName: Discord.Commands.ICommandContext.Guild
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Channel*
  commentId: Overload:Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Channel
  name: ICommandContext.Channel
  nameWithType: SocketCommandContext.ICommandContext.Channel
  fullName: Discord.Commands.SocketCommandContext.Discord.Commands.ICommandContext.Channel
  nameWithType.vb: SocketCommandContext.Discord.Commands.ICommandContext.Channel
  name.vb: Discord.Commands.ICommandContext.Channel
- uid: Discord.Commands.ICommandContext.Channel
  commentId: P:Discord.Commands.ICommandContext.Channel
  parent: Discord.Commands.ICommandContext
  name: Channel
  nameWithType: ICommandContext.Channel
  fullName: Discord.Commands.ICommandContext.Channel
- uid: Discord.IMessageChannel
  commentId: T:Discord.IMessageChannel
  parent: Discord
  name: IMessageChannel
  nameWithType: IMessageChannel
  fullName: Discord.IMessageChannel
- uid: Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#User*
  commentId: Overload:Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#User
  name: ICommandContext.User
  nameWithType: SocketCommandContext.ICommandContext.User
  fullName: Discord.Commands.SocketCommandContext.Discord.Commands.ICommandContext.User
  nameWithType.vb: SocketCommandContext.Discord.Commands.ICommandContext.User
  name.vb: Discord.Commands.ICommandContext.User
- uid: Discord.Commands.ICommandContext.User
  commentId: P:Discord.Commands.ICommandContext.User
  parent: Discord.Commands.ICommandContext
  name: User
  nameWithType: ICommandContext.User
  fullName: Discord.Commands.ICommandContext.User
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Message*
  commentId: Overload:Discord.Commands.SocketCommandContext.Discord#Commands#ICommandContext#Message
  name: ICommandContext.Message
  nameWithType: SocketCommandContext.ICommandContext.Message
  fullName: Discord.Commands.SocketCommandContext.Discord.Commands.ICommandContext.Message
  nameWithType.vb: SocketCommandContext.Discord.Commands.ICommandContext.Message
  name.vb: Discord.Commands.ICommandContext.Message
- uid: Discord.Commands.ICommandContext.Message
  commentId: P:Discord.Commands.ICommandContext.Message
  parent: Discord.Commands.ICommandContext
  name: Message
  nameWithType: ICommandContext.Message
  fullName: Discord.Commands.ICommandContext.Message
- uid: Discord.IUserMessage
  commentId: T:Discord.IUserMessage
  parent: Discord
  name: IUserMessage
  nameWithType: IUserMessage
  fullName: Discord.IUserMessage
