### YamlMime:ManagedReference
items:
- uid: Discord.WebSocket.SocketGuildUser
  commentId: T:Discord.WebSocket.SocketGuildUser
  id: SocketGuildUser
  parent: Discord.WebSocket
  children:
  - Discord.WebSocket.SocketGuildUser.AddRoleAsync(Discord.IRole,Discord.RequestOptions)
  - Discord.WebSocket.SocketGuildUser.AddRolesAsync(IEnumerable{Discord.IRole},Discord.RequestOptions)
  - Discord.WebSocket.SocketGuildUser.AudioStream
  - Discord.WebSocket.SocketGuildUser.AvatarId
  - Discord.WebSocket.SocketGuildUser.Discord#IGuildUser#Guild
  - Discord.WebSocket.SocketGuildUser.Discord#IVoiceState#VoiceChannel
  - Discord.WebSocket.SocketGuildUser.DiscriminatorValue
  - Discord.WebSocket.SocketGuildUser.GetPermissions(Discord.IGuildChannel)
  - Discord.WebSocket.SocketGuildUser.Guild
  - Discord.WebSocket.SocketGuildUser.GuildPermissions
  - Discord.WebSocket.SocketGuildUser.Hierarchy
  - Discord.WebSocket.SocketGuildUser.IsBot
  - Discord.WebSocket.SocketGuildUser.IsDeafened
  - Discord.WebSocket.SocketGuildUser.IsMuted
  - Discord.WebSocket.SocketGuildUser.IsSelfDeafened
  - Discord.WebSocket.SocketGuildUser.IsSelfMuted
  - Discord.WebSocket.SocketGuildUser.IsStreaming
  - Discord.WebSocket.SocketGuildUser.IsSuppressed
  - Discord.WebSocket.SocketGuildUser.IsWebhook
  - Discord.WebSocket.SocketGuildUser.JoinedAt
  - Discord.WebSocket.SocketGuildUser.KickAsync(System.String,Discord.RequestOptions)
  - Discord.WebSocket.SocketGuildUser.ModifyAsync(Action{Discord.GuildUserProperties},Discord.RequestOptions)
  - Discord.WebSocket.SocketGuildUser.Nickname
  - Discord.WebSocket.SocketGuildUser.PremiumSince
  - Discord.WebSocket.SocketGuildUser.RemoveRoleAsync(Discord.IRole,Discord.RequestOptions)
  - Discord.WebSocket.SocketGuildUser.RemoveRolesAsync(IEnumerable{Discord.IRole},Discord.RequestOptions)
  - Discord.WebSocket.SocketGuildUser.Roles
  - Discord.WebSocket.SocketGuildUser.Username
  - Discord.WebSocket.SocketGuildUser.VoiceChannel
  - Discord.WebSocket.SocketGuildUser.VoiceSessionId
  - Discord.WebSocket.SocketGuildUser.VoiceState
  langs:
  - csharp
  - vb
  name: SocketGuildUser
  nameWithType: SocketGuildUser
  fullName: Discord.WebSocket.SocketGuildUser
  type: Class
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SocketGuildUser
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 17
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nRepresents a WebSocket-based guild user.\n"
  example: []
  syntax:
    content: 'public class SocketGuildUser : SocketUser, IEntity<ulong>, IGuildUser, IUser, ISnowflakeEntity, IEntity<ulong>, IMentionable, IPresence, IVoiceState'
    content.vb: >-
      Public Class SocketGuildUser
          Inherits SocketUser
          Implements IEntity(Of ULong), IGuildUser, IUser, ISnowflakeEntity, IEntity(Of ULong), IMentionable, IPresence, IVoiceState
  inheritance:
  - System.Object
  - Discord.WebSocket.SocketEntity{System.UInt64}
  - Discord.WebSocket.SocketUser
  implements:
  - Discord.IEntity{System.UInt64}
  - Discord.IGuildUser
  - Discord.IUser
  - Discord.ISnowflakeEntity
  - Discord.IEntity{System.UInt64}
  - Discord.IMentionable
  - Discord.IPresence
  - Discord.IVoiceState
  inheritedMembers:
  - Discord.WebSocket.SocketUser.CreatedAt
  - Discord.WebSocket.SocketUser.Discriminator
  - Discord.WebSocket.SocketUser.Mention
  - Discord.WebSocket.SocketUser.Activity
  - Discord.WebSocket.SocketUser.Status
  - Discord.WebSocket.SocketUser.ActiveClients
  - Discord.WebSocket.SocketUser.MutualGuilds
  - Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  - Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  - Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  - Discord.WebSocket.SocketUser.ToString
  - Discord.WebSocket.SocketEntity{System.UInt64}.Id
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.WebSocket.SocketGuildUser.Guild
  commentId: P:Discord.WebSocket.SocketGuildUser.Guild
  id: Guild
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: Guild
  nameWithType: SocketGuildUser.Guild
  fullName: Discord.WebSocket.SocketGuildUser.Guild
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Guild
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 28
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the guild the user is in.\n"
  example: []
  syntax:
    content: public SocketGuild Guild { get; }
    parameters: []
    return:
      type: Discord.WebSocket.SocketGuild
    content.vb: Public ReadOnly Property Guild As SocketGuild
  overload: Discord.WebSocket.SocketGuildUser.Guild*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.Nickname
  commentId: P:Discord.WebSocket.SocketGuildUser.Nickname
  id: Nickname
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: Nickname
  nameWithType: SocketGuildUser.Nickname
  fullName: Discord.WebSocket.SocketGuildUser.Nickname
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Nickname
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 30
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public string Nickname { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Nickname As String
  overload: Discord.WebSocket.SocketGuildUser.Nickname*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.IsBot
  commentId: P:Discord.WebSocket.SocketGuildUser.IsBot
  id: IsBot
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: IsBot
  nameWithType: SocketGuildUser.IsBot
  fullName: Discord.WebSocket.SocketGuildUser.IsBot
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsBot
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 33
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public override bool IsBot { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsBot As Boolean
  overridden: Discord.WebSocket.SocketUser.IsBot
  overload: Discord.WebSocket.SocketGuildUser.IsBot*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.Username
  commentId: P:Discord.WebSocket.SocketGuildUser.Username
  id: Username
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: SocketGuildUser.Username
  fullName: Discord.WebSocket.SocketGuildUser.Username
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Username
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 35
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public override string Username { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Username As String
  overridden: Discord.WebSocket.SocketUser.Username
  overload: Discord.WebSocket.SocketGuildUser.Username*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.DiscriminatorValue
  commentId: P:Discord.WebSocket.SocketGuildUser.DiscriminatorValue
  id: DiscriminatorValue
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: DiscriminatorValue
  nameWithType: SocketGuildUser.DiscriminatorValue
  fullName: Discord.WebSocket.SocketGuildUser.DiscriminatorValue
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: DiscriminatorValue
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 37
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public override ushort DiscriminatorValue { get; }
    parameters: []
    return:
      type: System.UInt16
    content.vb: Public Overrides ReadOnly Property DiscriminatorValue As UShort
  overridden: Discord.WebSocket.SocketUser.DiscriminatorValue
  overload: Discord.WebSocket.SocketGuildUser.DiscriminatorValue*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.AvatarId
  commentId: P:Discord.WebSocket.SocketGuildUser.AvatarId
  id: AvatarId
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: AvatarId
  nameWithType: SocketGuildUser.AvatarId
  fullName: Discord.WebSocket.SocketGuildUser.AvatarId
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AvatarId
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 39
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public override string AvatarId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property AvatarId As String
  overridden: Discord.WebSocket.SocketUser.AvatarId
  overload: Discord.WebSocket.SocketGuildUser.AvatarId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.GuildPermissions
  commentId: P:Discord.WebSocket.SocketGuildUser.GuildPermissions
  id: GuildPermissions
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: GuildPermissions
  nameWithType: SocketGuildUser.GuildPermissions
  fullName: Discord.WebSocket.SocketGuildUser.GuildPermissions
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GuildPermissions
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 41
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the guild-level permissions for this user.\n"
  example: []
  syntax:
    content: public GuildPermissions GuildPermissions { get; }
    parameters: []
    return:
      type: Discord.GuildPermissions
      description: "\nA <xref href=\"Discord.GuildPermissions\" data-throw-if-not-resolved=\"false\"></xref> structure for this user, representing what\npermissions this user has in the guild.\n"
    content.vb: Public ReadOnly Property GuildPermissions As GuildPermissions
  overload: Discord.WebSocket.SocketGuildUser.GuildPermissions*
  implements:
  - Discord.IGuildUser.GuildPermissions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.IsWebhook
  commentId: P:Discord.WebSocket.SocketGuildUser.IsWebhook
  id: IsWebhook
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: IsWebhook
  nameWithType: SocketGuildUser.IsWebhook
  fullName: Discord.WebSocket.SocketGuildUser.IsWebhook
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsWebhook
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 45
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public override bool IsWebhook { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsWebhook As Boolean
  overridden: Discord.WebSocket.SocketUser.IsWebhook
  overload: Discord.WebSocket.SocketGuildUser.IsWebhook*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.IsSelfDeafened
  commentId: P:Discord.WebSocket.SocketGuildUser.IsSelfDeafened
  id: IsSelfDeafened
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: IsSelfDeafened
  nameWithType: SocketGuildUser.IsSelfDeafened
  fullName: Discord.WebSocket.SocketGuildUser.IsSelfDeafened
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsSelfDeafened
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 47
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public bool IsSelfDeafened { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSelfDeafened As Boolean
  overload: Discord.WebSocket.SocketGuildUser.IsSelfDeafened*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.IsSelfMuted
  commentId: P:Discord.WebSocket.SocketGuildUser.IsSelfMuted
  id: IsSelfMuted
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: IsSelfMuted
  nameWithType: SocketGuildUser.IsSelfMuted
  fullName: Discord.WebSocket.SocketGuildUser.IsSelfMuted
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsSelfMuted
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 49
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public bool IsSelfMuted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSelfMuted As Boolean
  overload: Discord.WebSocket.SocketGuildUser.IsSelfMuted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.IsSuppressed
  commentId: P:Discord.WebSocket.SocketGuildUser.IsSuppressed
  id: IsSuppressed
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: IsSuppressed
  nameWithType: SocketGuildUser.IsSuppressed
  fullName: Discord.WebSocket.SocketGuildUser.IsSuppressed
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsSuppressed
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 51
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public bool IsSuppressed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSuppressed As Boolean
  overload: Discord.WebSocket.SocketGuildUser.IsSuppressed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.IsDeafened
  commentId: P:Discord.WebSocket.SocketGuildUser.IsDeafened
  id: IsDeafened
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: IsDeafened
  nameWithType: SocketGuildUser.IsDeafened
  fullName: Discord.WebSocket.SocketGuildUser.IsDeafened
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsDeafened
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 53
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public bool IsDeafened { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDeafened As Boolean
  overload: Discord.WebSocket.SocketGuildUser.IsDeafened*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.IsMuted
  commentId: P:Discord.WebSocket.SocketGuildUser.IsMuted
  id: IsMuted
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: IsMuted
  nameWithType: SocketGuildUser.IsMuted
  fullName: Discord.WebSocket.SocketGuildUser.IsMuted
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsMuted
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 55
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public bool IsMuted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMuted As Boolean
  overload: Discord.WebSocket.SocketGuildUser.IsMuted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.IsStreaming
  commentId: P:Discord.WebSocket.SocketGuildUser.IsStreaming
  id: IsStreaming
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: IsStreaming
  nameWithType: SocketGuildUser.IsStreaming
  fullName: Discord.WebSocket.SocketGuildUser.IsStreaming
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsStreaming
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 57
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public bool IsStreaming { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsStreaming As Boolean
  overload: Discord.WebSocket.SocketGuildUser.IsStreaming*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.JoinedAt
  commentId: P:Discord.WebSocket.SocketGuildUser.JoinedAt
  id: JoinedAt
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: JoinedAt
  nameWithType: SocketGuildUser.JoinedAt
  fullName: Discord.WebSocket.SocketGuildUser.JoinedAt
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: JoinedAt
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 59
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public DateTimeOffset? JoinedAt { get; }
    parameters: []
    return:
      type: System.Nullable{DateTimeOffset}
    content.vb: Public ReadOnly Property JoinedAt As DateTimeOffset?
  overload: Discord.WebSocket.SocketGuildUser.JoinedAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.Roles
  commentId: P:Discord.WebSocket.SocketGuildUser.Roles
  id: Roles
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: Roles
  nameWithType: SocketGuildUser.Roles
  fullName: Discord.WebSocket.SocketGuildUser.Roles
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Roles
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 63
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nReturns a collection of roles that the user possesses.\n"
  example: []
  syntax:
    content: public IReadOnlyCollection<SocketRole> Roles { get; }
    parameters: []
    return:
      type: IReadOnlyCollection{Discord.WebSocket.SocketRole}
    content.vb: Public ReadOnly Property Roles As IReadOnlyCollection(Of SocketRole)
  overload: Discord.WebSocket.SocketGuildUser.Roles*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.VoiceChannel
  commentId: P:Discord.WebSocket.SocketGuildUser.VoiceChannel
  id: VoiceChannel
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: VoiceChannel
  nameWithType: SocketGuildUser.VoiceChannel
  fullName: Discord.WebSocket.SocketGuildUser.VoiceChannel
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: VoiceChannel
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 68
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nReturns the voice channel the user is in, or <code>null</code> if none.\n"
  example: []
  syntax:
    content: public SocketVoiceChannel VoiceChannel { get; }
    parameters: []
    return:
      type: Discord.WebSocket.SocketVoiceChannel
    content.vb: Public ReadOnly Property VoiceChannel As SocketVoiceChannel
  overload: Discord.WebSocket.SocketGuildUser.VoiceChannel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.VoiceSessionId
  commentId: P:Discord.WebSocket.SocketGuildUser.VoiceSessionId
  id: VoiceSessionId
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: VoiceSessionId
  nameWithType: SocketGuildUser.VoiceSessionId
  fullName: Discord.WebSocket.SocketGuildUser.VoiceSessionId
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: VoiceSessionId
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 70
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public string VoiceSessionId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property VoiceSessionId As String
  overload: Discord.WebSocket.SocketGuildUser.VoiceSessionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.VoiceState
  commentId: P:Discord.WebSocket.SocketGuildUser.VoiceState
  id: VoiceState
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: VoiceState
  nameWithType: SocketGuildUser.VoiceState
  fullName: Discord.WebSocket.SocketGuildUser.VoiceState
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: VoiceState
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 78
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the voice connection status of the user if any.\n"
  example: []
  syntax:
    content: public SocketVoiceState? VoiceState { get; }
    parameters: []
    return:
      type: System.Nullable{Discord.WebSocket.SocketVoiceState}
      description: "\nA <xref href=\"Discord.WebSocket.SocketVoiceState\" data-throw-if-not-resolved=\"false\"></xref> representing the user&apos;s voice status; <code>null</code> if the user is not\nconnected to a voice channel.\n"
    content.vb: Public ReadOnly Property VoiceState As SocketVoiceState?
  overload: Discord.WebSocket.SocketGuildUser.VoiceState*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.AudioStream
  commentId: P:Discord.WebSocket.SocketGuildUser.AudioStream
  id: AudioStream
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: AudioStream
  nameWithType: SocketGuildUser.AudioStream
  fullName: Discord.WebSocket.SocketGuildUser.AudioStream
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AudioStream
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 79
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  syntax:
    content: public AudioInStream AudioStream { get; }
    parameters: []
    return:
      type: Discord.Audio.AudioInStream
    content.vb: Public ReadOnly Property AudioStream As AudioInStream
  overload: Discord.WebSocket.SocketGuildUser.AudioStream*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.PremiumSince
  commentId: P:Discord.WebSocket.SocketGuildUser.PremiumSince
  id: PremiumSince
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: PremiumSince
  nameWithType: SocketGuildUser.PremiumSince
  fullName: Discord.WebSocket.SocketGuildUser.PremiumSince
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: PremiumSince
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 81
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public DateTimeOffset? PremiumSince { get; }
    parameters: []
    return:
      type: System.Nullable{DateTimeOffset}
    content.vb: Public ReadOnly Property PremiumSince As DateTimeOffset?
  overload: Discord.WebSocket.SocketGuildUser.PremiumSince*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.Hierarchy
  commentId: P:Discord.WebSocket.SocketGuildUser.Hierarchy
  id: Hierarchy
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: Hierarchy
  nameWithType: SocketGuildUser.Hierarchy
  fullName: Discord.WebSocket.SocketGuildUser.Hierarchy
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Hierarchy
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 90
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nReturns the position of the user within the role hierarchy.\n"
  remarks: "\nThe returned value equal to the position of the highest role the user has, or \n<see cref=\"!:int.MaxValue\"></see> if user is the server owner.\n"
  example: []
  syntax:
    content: public int Hierarchy { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Hierarchy As Integer
  overload: Discord.WebSocket.SocketGuildUser.Hierarchy*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketGuildUser.ModifyAsync(Action{Discord.GuildUserProperties},Discord.RequestOptions)
  commentId: M:Discord.WebSocket.SocketGuildUser.ModifyAsync(Action{Discord.GuildUserProperties},Discord.RequestOptions)
  id: ModifyAsync(Action{Discord.GuildUserProperties},Discord.RequestOptions)
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: ModifyAsync(Action<GuildUserProperties>, RequestOptions)
  nameWithType: SocketGuildUser.ModifyAsync(Action<GuildUserProperties>, RequestOptions)
  fullName: Discord.WebSocket.SocketGuildUser.ModifyAsync(Action<Discord.GuildUserProperties>, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ModifyAsync
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 167
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public Task ModifyAsync(Action<GuildUserProperties> func, RequestOptions options = null)
    parameters:
    - id: func
      type: Action{Discord.GuildUserProperties}
    - id: options
      type: Discord.RequestOptions
    return:
      type: Task
    content.vb: Public Function ModifyAsync(func As Action(Of GuildUserProperties), options As RequestOptions = Nothing) As Task
  overload: Discord.WebSocket.SocketGuildUser.ModifyAsync*
  nameWithType.vb: SocketGuildUser.ModifyAsync(Action(Of GuildUserProperties), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.WebSocket.SocketGuildUser.ModifyAsync(Action(Of Discord.GuildUserProperties), Discord.RequestOptions)
  name.vb: ModifyAsync(Action(Of GuildUserProperties), RequestOptions)
- uid: Discord.WebSocket.SocketGuildUser.KickAsync(System.String,Discord.RequestOptions)
  commentId: M:Discord.WebSocket.SocketGuildUser.KickAsync(System.String,Discord.RequestOptions)
  id: KickAsync(System.String,Discord.RequestOptions)
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: KickAsync(String, RequestOptions)
  nameWithType: SocketGuildUser.KickAsync(String, RequestOptions)
  fullName: Discord.WebSocket.SocketGuildUser.KickAsync(System.String, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: KickAsync
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 170
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public Task KickAsync(string reason = null, RequestOptions options = null)
    parameters:
    - id: reason
      type: System.String
    - id: options
      type: Discord.RequestOptions
    return:
      type: Task
    content.vb: Public Function KickAsync(reason As String = Nothing, options As RequestOptions = Nothing) As Task
  overload: Discord.WebSocket.SocketGuildUser.KickAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.WebSocket.SocketGuildUser.AddRoleAsync(Discord.IRole,Discord.RequestOptions)
  commentId: M:Discord.WebSocket.SocketGuildUser.AddRoleAsync(Discord.IRole,Discord.RequestOptions)
  id: AddRoleAsync(Discord.IRole,Discord.RequestOptions)
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: AddRoleAsync(IRole, RequestOptions)
  nameWithType: SocketGuildUser.AddRoleAsync(IRole, RequestOptions)
  fullName: Discord.WebSocket.SocketGuildUser.AddRoleAsync(Discord.IRole, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AddRoleAsync
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 173
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public Task AddRoleAsync(IRole role, RequestOptions options = null)
    parameters:
    - id: role
      type: Discord.IRole
    - id: options
      type: Discord.RequestOptions
    return:
      type: Task
    content.vb: Public Function AddRoleAsync(role As IRole, options As RequestOptions = Nothing) As Task
  overload: Discord.WebSocket.SocketGuildUser.AddRoleAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.WebSocket.SocketGuildUser.AddRolesAsync(IEnumerable{Discord.IRole},Discord.RequestOptions)
  commentId: M:Discord.WebSocket.SocketGuildUser.AddRolesAsync(IEnumerable{Discord.IRole},Discord.RequestOptions)
  id: AddRolesAsync(IEnumerable{Discord.IRole},Discord.RequestOptions)
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: AddRolesAsync(IEnumerable<IRole>, RequestOptions)
  nameWithType: SocketGuildUser.AddRolesAsync(IEnumerable<IRole>, RequestOptions)
  fullName: Discord.WebSocket.SocketGuildUser.AddRolesAsync(IEnumerable<Discord.IRole>, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AddRolesAsync
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 176
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public Task AddRolesAsync(IEnumerable<IRole> roles, RequestOptions options = null)
    parameters:
    - id: roles
      type: IEnumerable{Discord.IRole}
    - id: options
      type: Discord.RequestOptions
    return:
      type: Task
    content.vb: Public Function AddRolesAsync(roles As IEnumerable(Of IRole), options As RequestOptions = Nothing) As Task
  overload: Discord.WebSocket.SocketGuildUser.AddRolesAsync*
  nameWithType.vb: SocketGuildUser.AddRolesAsync(IEnumerable(Of IRole), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.WebSocket.SocketGuildUser.AddRolesAsync(IEnumerable(Of Discord.IRole), Discord.RequestOptions)
  name.vb: AddRolesAsync(IEnumerable(Of IRole), RequestOptions)
- uid: Discord.WebSocket.SocketGuildUser.RemoveRoleAsync(Discord.IRole,Discord.RequestOptions)
  commentId: M:Discord.WebSocket.SocketGuildUser.RemoveRoleAsync(Discord.IRole,Discord.RequestOptions)
  id: RemoveRoleAsync(Discord.IRole,Discord.RequestOptions)
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: RemoveRoleAsync(IRole, RequestOptions)
  nameWithType: SocketGuildUser.RemoveRoleAsync(IRole, RequestOptions)
  fullName: Discord.WebSocket.SocketGuildUser.RemoveRoleAsync(Discord.IRole, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RemoveRoleAsync
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 179
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public Task RemoveRoleAsync(IRole role, RequestOptions options = null)
    parameters:
    - id: role
      type: Discord.IRole
    - id: options
      type: Discord.RequestOptions
    return:
      type: Task
    content.vb: Public Function RemoveRoleAsync(role As IRole, options As RequestOptions = Nothing) As Task
  overload: Discord.WebSocket.SocketGuildUser.RemoveRoleAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.WebSocket.SocketGuildUser.RemoveRolesAsync(IEnumerable{Discord.IRole},Discord.RequestOptions)
  commentId: M:Discord.WebSocket.SocketGuildUser.RemoveRolesAsync(IEnumerable{Discord.IRole},Discord.RequestOptions)
  id: RemoveRolesAsync(IEnumerable{Discord.IRole},Discord.RequestOptions)
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: RemoveRolesAsync(IEnumerable<IRole>, RequestOptions)
  nameWithType: SocketGuildUser.RemoveRolesAsync(IEnumerable<IRole>, RequestOptions)
  fullName: Discord.WebSocket.SocketGuildUser.RemoveRolesAsync(IEnumerable<Discord.IRole>, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RemoveRolesAsync
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 182
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public Task RemoveRolesAsync(IEnumerable<IRole> roles, RequestOptions options = null)
    parameters:
    - id: roles
      type: IEnumerable{Discord.IRole}
    - id: options
      type: Discord.RequestOptions
    return:
      type: Task
    content.vb: Public Function RemoveRolesAsync(roles As IEnumerable(Of IRole), options As RequestOptions = Nothing) As Task
  overload: Discord.WebSocket.SocketGuildUser.RemoveRolesAsync*
  nameWithType.vb: SocketGuildUser.RemoveRolesAsync(IEnumerable(Of IRole), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.WebSocket.SocketGuildUser.RemoveRolesAsync(IEnumerable(Of Discord.IRole), Discord.RequestOptions)
  name.vb: RemoveRolesAsync(IEnumerable(Of IRole), RequestOptions)
- uid: Discord.WebSocket.SocketGuildUser.GetPermissions(Discord.IGuildChannel)
  commentId: M:Discord.WebSocket.SocketGuildUser.GetPermissions(Discord.IGuildChannel)
  id: GetPermissions(Discord.IGuildChannel)
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: GetPermissions(IGuildChannel)
  nameWithType: SocketGuildUser.GetPermissions(IGuildChannel)
  fullName: Discord.WebSocket.SocketGuildUser.GetPermissions(Discord.IGuildChannel)
  type: Method
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetPermissions
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 186
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the level permissions granted to this user to a given channel.\n"
  example: []
  syntax:
    content: public ChannelPermissions GetPermissions(IGuildChannel channel)
    parameters:
    - id: channel
      type: Discord.IGuildChannel
      description: The channel to get the permission from.
    return:
      type: Discord.ChannelPermissions
      description: "\nA <xref href=\"Discord.ChannelPermissions\" data-throw-if-not-resolved=\"false\"></xref> structure representing the permissions that a user has in the\nspecified channel.\n"
    content.vb: Public Function GetPermissions(channel As IGuildChannel) As ChannelPermissions
  overload: Discord.WebSocket.SocketGuildUser.GetPermissions*
  implements:
  - Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.WebSocket.SocketGuildUser.Discord#IGuildUser#Guild
  commentId: P:Discord.WebSocket.SocketGuildUser.Discord#IGuildUser#Guild
  id: Discord#IGuildUser#Guild
  isEii: true
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: IGuildUser.Guild
  nameWithType: SocketGuildUser.IGuildUser.Guild
  fullName: Discord.WebSocket.SocketGuildUser.Discord.IGuildUser.Guild
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IGuildUser.Guild
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 194
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the guild for this user.\n"
  example: []
  syntax:
    content: IGuild IGuildUser.Guild { get; }
    parameters: []
    return:
      type: Discord.IGuild
      description: "\nA guild object that this user belongs to.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IGuildUser.Guild As IGuild Implements IGuildUser.Guild
  overload: Discord.WebSocket.SocketGuildUser.Discord#IGuildUser#Guild*
  implements:
  - Discord.IGuildUser.Guild
  nameWithType.vb: SocketGuildUser.Discord.IGuildUser.Guild
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IGuildUser.Guild
- uid: Discord.WebSocket.SocketGuildUser.Discord#IVoiceState#VoiceChannel
  commentId: P:Discord.WebSocket.SocketGuildUser.Discord#IVoiceState#VoiceChannel
  id: Discord#IVoiceState#VoiceChannel
  isEii: true
  parent: Discord.WebSocket.SocketGuildUser
  langs:
  - csharp
  - vb
  name: IVoiceState.VoiceChannel
  nameWithType: SocketGuildUser.IVoiceState.VoiceChannel
  fullName: Discord.WebSocket.SocketGuildUser.Discord.IVoiceState.VoiceChannel
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IVoiceState.VoiceChannel
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGuildUser.cs
    startLine: 202
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the voice channel this user is currently in.\n"
  example: []
  syntax:
    content: IVoiceChannel IVoiceState.VoiceChannel { get; }
    parameters: []
    return:
      type: Discord.IVoiceChannel
      description: "\nA generic voice channel object representing the voice channel that the user is currently in; <code>null</code>\nif none.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IVoiceState.VoiceChannel As IVoiceChannel Implements IVoiceState.VoiceChannel
  overload: Discord.WebSocket.SocketGuildUser.Discord#IVoiceState#VoiceChannel*
  implements:
  - Discord.IVoiceState.VoiceChannel
  nameWithType.vb: SocketGuildUser.Discord.IVoiceState.VoiceChannel
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IVoiceState.VoiceChannel
references:
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.WebSocket.SocketEntity{System.UInt64}
  commentId: T:Discord.WebSocket.SocketEntity{System.UInt64}
  parent: Discord.WebSocket
  definition: Discord.WebSocket.SocketEntity`1
  name: SocketEntity<UInt64>
  nameWithType: SocketEntity<UInt64>
  fullName: Discord.WebSocket.SocketEntity<System.UInt64>
  nameWithType.vb: SocketEntity(Of UInt64)
  fullName.vb: Discord.WebSocket.SocketEntity(Of System.UInt64)
  name.vb: SocketEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.WebSocket.SocketEntity`1
    name: SocketEntity
    nameWithType: SocketEntity
    fullName: Discord.WebSocket.SocketEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.WebSocket.SocketEntity`1
    name: SocketEntity
    nameWithType: SocketEntity
    fullName: Discord.WebSocket.SocketEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketUser
  commentId: T:Discord.WebSocket.SocketUser
  parent: Discord.WebSocket
  name: SocketUser
  nameWithType: SocketUser
  fullName: Discord.WebSocket.SocketUser
- uid: Discord.IEntity{System.UInt64}
  commentId: T:Discord.IEntity{System.UInt64}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<UInt64>
  nameWithType: IEntity<UInt64>
  fullName: Discord.IEntity<System.UInt64>
  nameWithType.vb: IEntity(Of UInt64)
  fullName.vb: Discord.IEntity(Of System.UInt64)
  name.vb: IEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IGuildUser
  commentId: T:Discord.IGuildUser
  parent: Discord
  name: IGuildUser
  nameWithType: IGuildUser
  fullName: Discord.IGuildUser
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord.ISnowflakeEntity
  commentId: T:Discord.ISnowflakeEntity
  parent: Discord
  name: ISnowflakeEntity
  nameWithType: ISnowflakeEntity
  fullName: Discord.ISnowflakeEntity
- uid: Discord.IMentionable
  commentId: T:Discord.IMentionable
  parent: Discord
  name: IMentionable
  nameWithType: IMentionable
  fullName: Discord.IMentionable
- uid: Discord.IPresence
  commentId: T:Discord.IPresence
  parent: Discord
  name: IPresence
  nameWithType: IPresence
  fullName: Discord.IPresence
- uid: Discord.IVoiceState
  commentId: T:Discord.IVoiceState
  parent: Discord
  name: IVoiceState
  nameWithType: IVoiceState
  fullName: Discord.IVoiceState
- uid: Discord.WebSocket.SocketUser.CreatedAt
  commentId: P:Discord.WebSocket.SocketUser.CreatedAt
  parent: Discord.WebSocket.SocketUser
  name: CreatedAt
  nameWithType: SocketUser.CreatedAt
  fullName: Discord.WebSocket.SocketUser.CreatedAt
- uid: Discord.WebSocket.SocketUser.Discriminator
  commentId: P:Discord.WebSocket.SocketUser.Discriminator
  parent: Discord.WebSocket.SocketUser
  name: Discriminator
  nameWithType: SocketUser.Discriminator
  fullName: Discord.WebSocket.SocketUser.Discriminator
- uid: Discord.WebSocket.SocketUser.Mention
  commentId: P:Discord.WebSocket.SocketUser.Mention
  parent: Discord.WebSocket.SocketUser
  name: Mention
  nameWithType: SocketUser.Mention
  fullName: Discord.WebSocket.SocketUser.Mention
- uid: Discord.WebSocket.SocketUser.Activity
  commentId: P:Discord.WebSocket.SocketUser.Activity
  parent: Discord.WebSocket.SocketUser
  name: Activity
  nameWithType: SocketUser.Activity
  fullName: Discord.WebSocket.SocketUser.Activity
- uid: Discord.WebSocket.SocketUser.Status
  commentId: P:Discord.WebSocket.SocketUser.Status
  parent: Discord.WebSocket.SocketUser
  name: Status
  nameWithType: SocketUser.Status
  fullName: Discord.WebSocket.SocketUser.Status
- uid: Discord.WebSocket.SocketUser.ActiveClients
  commentId: P:Discord.WebSocket.SocketUser.ActiveClients
  parent: Discord.WebSocket.SocketUser
  name: ActiveClients
  nameWithType: SocketUser.ActiveClients
  fullName: Discord.WebSocket.SocketUser.ActiveClients
- uid: Discord.WebSocket.SocketUser.MutualGuilds
  commentId: P:Discord.WebSocket.SocketUser.MutualGuilds
  parent: Discord.WebSocket.SocketUser
  name: MutualGuilds
  nameWithType: SocketUser.MutualGuilds
  fullName: Discord.WebSocket.SocketUser.MutualGuilds
- uid: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  commentId: M:Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  parent: Discord.WebSocket.SocketUser
  name: GetOrCreateDMChannelAsync(RequestOptions)
  nameWithType: SocketUser.GetOrCreateDMChannelAsync(RequestOptions)
  fullName: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
    name: GetOrCreateDMChannelAsync
    nameWithType: SocketUser.GetOrCreateDMChannelAsync
    fullName: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
    name: GetOrCreateDMChannelAsync
    nameWithType: SocketUser.GetOrCreateDMChannelAsync
    fullName: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  commentId: M:Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  parent: Discord.WebSocket.SocketUser
  isExternal: true
  name: GetAvatarUrl(ImageFormat, UInt16)
  nameWithType: SocketUser.GetAvatarUrl(ImageFormat, UInt16)
  fullName: Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat, System.UInt16)
  spec.csharp:
  - uid: Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
    name: GetAvatarUrl
    nameWithType: SocketUser.GetAvatarUrl
    fullName: Discord.WebSocket.SocketUser.GetAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.ImageFormat
    name: ImageFormat
    nameWithType: ImageFormat
    fullName: Discord.ImageFormat
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
    name: GetAvatarUrl
    nameWithType: SocketUser.GetAvatarUrl
    fullName: Discord.WebSocket.SocketUser.GetAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.ImageFormat
    name: ImageFormat
    nameWithType: ImageFormat
    fullName: Discord.ImageFormat
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  commentId: M:Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  parent: Discord.WebSocket.SocketUser
  name: GetDefaultAvatarUrl()
  nameWithType: SocketUser.GetDefaultAvatarUrl()
  fullName: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl()
  spec.csharp:
  - uid: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
    name: GetDefaultAvatarUrl
    nameWithType: SocketUser.GetDefaultAvatarUrl
    fullName: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
    name: GetDefaultAvatarUrl
    nameWithType: SocketUser.GetDefaultAvatarUrl
    fullName: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketUser.ToString
  commentId: M:Discord.WebSocket.SocketUser.ToString
  parent: Discord.WebSocket.SocketUser
  name: ToString()
  nameWithType: SocketUser.ToString()
  fullName: Discord.WebSocket.SocketUser.ToString()
  spec.csharp:
  - uid: Discord.WebSocket.SocketUser.ToString
    name: ToString
    nameWithType: SocketUser.ToString
    fullName: Discord.WebSocket.SocketUser.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.WebSocket.SocketUser.ToString
    name: ToString
    nameWithType: SocketUser.ToString
    fullName: Discord.WebSocket.SocketUser.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketEntity{System.UInt64}.Id
  commentId: P:Discord.WebSocket.SocketEntity{System.UInt64}.Id
  parent: Discord.WebSocket.SocketEntity{System.UInt64}
  definition: Discord.WebSocket.SocketEntity`1.Id
  name: Id
  nameWithType: SocketEntity<UInt64>.Id
  fullName: Discord.WebSocket.SocketEntity<System.UInt64>.Id
  nameWithType.vb: SocketEntity(Of UInt64).Id
  fullName.vb: Discord.WebSocket.SocketEntity(Of System.UInt64).Id
- uid: Discord.WebSocket.SocketEntity`1
  commentId: T:Discord.WebSocket.SocketEntity`1
  name: SocketEntity<T>
  nameWithType: SocketEntity<T>
  fullName: Discord.WebSocket.SocketEntity<T>
  nameWithType.vb: SocketEntity(Of T)
  fullName.vb: Discord.WebSocket.SocketEntity(Of T)
  name.vb: SocketEntity(Of T)
  spec.csharp:
  - uid: Discord.WebSocket.SocketEntity`1
    name: SocketEntity
    nameWithType: SocketEntity
    fullName: Discord.WebSocket.SocketEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.WebSocket.SocketEntity`1
    name: SocketEntity
    nameWithType: SocketEntity
    fullName: Discord.WebSocket.SocketEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.WebSocket.SocketEntity`1.Id
  commentId: P:Discord.WebSocket.SocketEntity`1.Id
  name: Id
  nameWithType: SocketEntity<T>.Id
  fullName: Discord.WebSocket.SocketEntity<T>.Id
  nameWithType.vb: SocketEntity(Of T).Id
  fullName.vb: Discord.WebSocket.SocketEntity(Of T).Id
- uid: Discord.WebSocket.SocketGuildUser.Guild*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.Guild
  name: Guild
  nameWithType: SocketGuildUser.Guild
  fullName: Discord.WebSocket.SocketGuildUser.Guild
- uid: Discord.WebSocket.SocketGuild
  commentId: T:Discord.WebSocket.SocketGuild
  parent: Discord.WebSocket
  name: SocketGuild
  nameWithType: SocketGuild
  fullName: Discord.WebSocket.SocketGuild
- uid: Discord.WebSocket.SocketGuildUser.Nickname*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.Nickname
  name: Nickname
  nameWithType: SocketGuildUser.Nickname
  fullName: Discord.WebSocket.SocketGuildUser.Nickname
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.WebSocket.SocketUser.IsBot
  commentId: P:Discord.WebSocket.SocketUser.IsBot
  parent: Discord.WebSocket.SocketUser
  name: IsBot
  nameWithType: SocketUser.IsBot
  fullName: Discord.WebSocket.SocketUser.IsBot
- uid: Discord.WebSocket.SocketGuildUser.IsBot*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.IsBot
  name: IsBot
  nameWithType: SocketGuildUser.IsBot
  fullName: Discord.WebSocket.SocketGuildUser.IsBot
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.WebSocket.SocketUser.Username
  commentId: P:Discord.WebSocket.SocketUser.Username
  parent: Discord.WebSocket.SocketUser
  name: Username
  nameWithType: SocketUser.Username
  fullName: Discord.WebSocket.SocketUser.Username
- uid: Discord.WebSocket.SocketGuildUser.Username*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.Username
  name: Username
  nameWithType: SocketGuildUser.Username
  fullName: Discord.WebSocket.SocketGuildUser.Username
- uid: Discord.WebSocket.SocketUser.DiscriminatorValue
  commentId: P:Discord.WebSocket.SocketUser.DiscriminatorValue
  parent: Discord.WebSocket.SocketUser
  name: DiscriminatorValue
  nameWithType: SocketUser.DiscriminatorValue
  fullName: Discord.WebSocket.SocketUser.DiscriminatorValue
- uid: Discord.WebSocket.SocketGuildUser.DiscriminatorValue*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.DiscriminatorValue
  name: DiscriminatorValue
  nameWithType: SocketGuildUser.DiscriminatorValue
  fullName: Discord.WebSocket.SocketGuildUser.DiscriminatorValue
- uid: System.UInt16
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Discord.WebSocket.SocketUser.AvatarId
  commentId: P:Discord.WebSocket.SocketUser.AvatarId
  parent: Discord.WebSocket.SocketUser
  name: AvatarId
  nameWithType: SocketUser.AvatarId
  fullName: Discord.WebSocket.SocketUser.AvatarId
- uid: Discord.WebSocket.SocketGuildUser.AvatarId*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.AvatarId
  name: AvatarId
  nameWithType: SocketGuildUser.AvatarId
  fullName: Discord.WebSocket.SocketGuildUser.AvatarId
- uid: Discord.WebSocket.SocketGuildUser.GuildPermissions*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.GuildPermissions
  name: GuildPermissions
  nameWithType: SocketGuildUser.GuildPermissions
  fullName: Discord.WebSocket.SocketGuildUser.GuildPermissions
- uid: Discord.IGuildUser.GuildPermissions
  commentId: P:Discord.IGuildUser.GuildPermissions
  parent: Discord.IGuildUser
  name: GuildPermissions
  nameWithType: IGuildUser.GuildPermissions
  fullName: Discord.IGuildUser.GuildPermissions
- uid: Discord.GuildPermissions
  commentId: T:Discord.GuildPermissions
  parent: Discord
  name: GuildPermissions
  nameWithType: GuildPermissions
  fullName: Discord.GuildPermissions
- uid: Discord.WebSocket.SocketUser.IsWebhook
  commentId: P:Discord.WebSocket.SocketUser.IsWebhook
  parent: Discord.WebSocket.SocketUser
  name: IsWebhook
  nameWithType: SocketUser.IsWebhook
  fullName: Discord.WebSocket.SocketUser.IsWebhook
- uid: Discord.WebSocket.SocketGuildUser.IsWebhook*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.IsWebhook
  name: IsWebhook
  nameWithType: SocketGuildUser.IsWebhook
  fullName: Discord.WebSocket.SocketGuildUser.IsWebhook
- uid: Discord.WebSocket.SocketGuildUser.IsSelfDeafened*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.IsSelfDeafened
  name: IsSelfDeafened
  nameWithType: SocketGuildUser.IsSelfDeafened
  fullName: Discord.WebSocket.SocketGuildUser.IsSelfDeafened
- uid: Discord.WebSocket.SocketGuildUser.IsSelfMuted*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.IsSelfMuted
  name: IsSelfMuted
  nameWithType: SocketGuildUser.IsSelfMuted
  fullName: Discord.WebSocket.SocketGuildUser.IsSelfMuted
- uid: Discord.WebSocket.SocketGuildUser.IsSuppressed*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.IsSuppressed
  name: IsSuppressed
  nameWithType: SocketGuildUser.IsSuppressed
  fullName: Discord.WebSocket.SocketGuildUser.IsSuppressed
- uid: Discord.WebSocket.SocketGuildUser.IsDeafened*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.IsDeafened
  name: IsDeafened
  nameWithType: SocketGuildUser.IsDeafened
  fullName: Discord.WebSocket.SocketGuildUser.IsDeafened
- uid: Discord.WebSocket.SocketGuildUser.IsMuted*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.IsMuted
  name: IsMuted
  nameWithType: SocketGuildUser.IsMuted
  fullName: Discord.WebSocket.SocketGuildUser.IsMuted
- uid: Discord.WebSocket.SocketGuildUser.IsStreaming*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.IsStreaming
  name: IsStreaming
  nameWithType: SocketGuildUser.IsStreaming
  fullName: Discord.WebSocket.SocketGuildUser.IsStreaming
- uid: Discord.WebSocket.SocketGuildUser.JoinedAt*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.JoinedAt
  name: JoinedAt
  nameWithType: SocketGuildUser.JoinedAt
  fullName: Discord.WebSocket.SocketGuildUser.JoinedAt
- uid: System.Nullable{DateTimeOffset}
  commentId: '!:System.Nullable{DateTimeOffset}'
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketGuildUser.Roles*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.Roles
  name: Roles
  nameWithType: SocketGuildUser.Roles
  fullName: Discord.WebSocket.SocketGuildUser.Roles
- uid: IReadOnlyCollection{Discord.WebSocket.SocketRole}
  commentId: '!:IReadOnlyCollection{Discord.WebSocket.SocketRole}'
  definition: IReadOnlyCollection`1
  name: IReadOnlyCollection<SocketRole>
  nameWithType: IReadOnlyCollection<SocketRole>
  fullName: IReadOnlyCollection<Discord.WebSocket.SocketRole>
  nameWithType.vb: IReadOnlyCollection(Of SocketRole)
  fullName.vb: IReadOnlyCollection(Of Discord.WebSocket.SocketRole)
  name.vb: IReadOnlyCollection(Of SocketRole)
  spec.csharp:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.WebSocket.SocketRole
    name: SocketRole
    nameWithType: SocketRole
    fullName: Discord.WebSocket.SocketRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.WebSocket.SocketRole
    name: SocketRole
    nameWithType: SocketRole
    fullName: Discord.WebSocket.SocketRole
  - name: )
    nameWithType: )
    fullName: )
- uid: IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<>
  nameWithType: IReadOnlyCollection<>
  fullName: IReadOnlyCollection<>
  nameWithType.vb: IReadOnlyCollection(Of )
  fullName.vb: IReadOnlyCollection(Of )
  name.vb: IReadOnlyCollection(Of )
  spec.csharp:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketGuildUser.VoiceChannel*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.VoiceChannel
  name: VoiceChannel
  nameWithType: SocketGuildUser.VoiceChannel
  fullName: Discord.WebSocket.SocketGuildUser.VoiceChannel
- uid: Discord.WebSocket.SocketVoiceChannel
  commentId: T:Discord.WebSocket.SocketVoiceChannel
  parent: Discord.WebSocket
  name: SocketVoiceChannel
  nameWithType: SocketVoiceChannel
  fullName: Discord.WebSocket.SocketVoiceChannel
- uid: Discord.WebSocket.SocketGuildUser.VoiceSessionId*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.VoiceSessionId
  name: VoiceSessionId
  nameWithType: SocketGuildUser.VoiceSessionId
  fullName: Discord.WebSocket.SocketGuildUser.VoiceSessionId
- uid: Discord.WebSocket.SocketVoiceState
  commentId: T:Discord.WebSocket.SocketVoiceState
  parent: Discord.WebSocket
  name: SocketVoiceState
  nameWithType: SocketVoiceState
  fullName: Discord.WebSocket.SocketVoiceState
- uid: Discord.WebSocket.SocketGuildUser.VoiceState*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.VoiceState
  name: VoiceState
  nameWithType: SocketGuildUser.VoiceState
  fullName: Discord.WebSocket.SocketGuildUser.VoiceState
- uid: System.Nullable{Discord.WebSocket.SocketVoiceState}
  commentId: '!:System.Nullable{Discord.WebSocket.SocketVoiceState}'
  definition: System.Nullable`1
  name: Nullable<SocketVoiceState>
  nameWithType: Nullable<SocketVoiceState>
  fullName: System.Nullable<Discord.WebSocket.SocketVoiceState>
  nameWithType.vb: Nullable(Of SocketVoiceState)
  fullName.vb: System.Nullable(Of Discord.WebSocket.SocketVoiceState)
  name.vb: Nullable(Of SocketVoiceState)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.WebSocket.SocketVoiceState
    name: SocketVoiceState
    nameWithType: SocketVoiceState
    fullName: Discord.WebSocket.SocketVoiceState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.WebSocket.SocketVoiceState
    name: SocketVoiceState
    nameWithType: SocketVoiceState
    fullName: Discord.WebSocket.SocketVoiceState
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketGuildUser.AudioStream*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.AudioStream
  name: AudioStream
  nameWithType: SocketGuildUser.AudioStream
  fullName: Discord.WebSocket.SocketGuildUser.AudioStream
- uid: Discord.Audio.AudioInStream
  commentId: T:Discord.Audio.AudioInStream
  parent: Discord.Audio
  name: AudioInStream
  nameWithType: AudioInStream
  fullName: Discord.Audio.AudioInStream
- uid: Discord.Audio
  commentId: N:Discord.Audio
  name: Discord.Audio
  nameWithType: Discord.Audio
  fullName: Discord.Audio
- uid: Discord.WebSocket.SocketGuildUser.PremiumSince*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.PremiumSince
  name: PremiumSince
  nameWithType: SocketGuildUser.PremiumSince
  fullName: Discord.WebSocket.SocketGuildUser.PremiumSince
- uid: Discord.WebSocket.SocketGuildUser.Hierarchy*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.Hierarchy
  name: Hierarchy
  nameWithType: SocketGuildUser.Hierarchy
  fullName: Discord.WebSocket.SocketGuildUser.Hierarchy
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Discord.WebSocket.SocketGuildUser.ModifyAsync*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.ModifyAsync
  name: ModifyAsync
  nameWithType: SocketGuildUser.ModifyAsync
  fullName: Discord.WebSocket.SocketGuildUser.ModifyAsync
- uid: Action{Discord.GuildUserProperties}
  commentId: '!:Action{Discord.GuildUserProperties}'
  definition: Action`1
  name: Action<GuildUserProperties>
  nameWithType: Action<GuildUserProperties>
  fullName: Action<Discord.GuildUserProperties>
  nameWithType.vb: Action(Of GuildUserProperties)
  fullName.vb: Action(Of Discord.GuildUserProperties)
  name.vb: Action(Of GuildUserProperties)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.GuildUserProperties
    name: GuildUserProperties
    nameWithType: GuildUserProperties
    fullName: Discord.GuildUserProperties
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.GuildUserProperties
    name: GuildUserProperties
    nameWithType: GuildUserProperties
    fullName: Discord.GuildUserProperties
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.RequestOptions
  commentId: T:Discord.RequestOptions
  parent: Discord
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: Discord.RequestOptions
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketGuildUser.KickAsync*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.KickAsync
  name: KickAsync
  nameWithType: SocketGuildUser.KickAsync
  fullName: Discord.WebSocket.SocketGuildUser.KickAsync
- uid: Discord.WebSocket.SocketGuildUser.AddRoleAsync*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.AddRoleAsync
  name: AddRoleAsync
  nameWithType: SocketGuildUser.AddRoleAsync
  fullName: Discord.WebSocket.SocketGuildUser.AddRoleAsync
- uid: Discord.IRole
  commentId: T:Discord.IRole
  parent: Discord
  name: IRole
  nameWithType: IRole
  fullName: Discord.IRole
- uid: Discord.WebSocket.SocketGuildUser.AddRolesAsync*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.AddRolesAsync
  name: AddRolesAsync
  nameWithType: SocketGuildUser.AddRolesAsync
  fullName: Discord.WebSocket.SocketGuildUser.AddRolesAsync
- uid: IEnumerable{Discord.IRole}
  commentId: '!:IEnumerable{Discord.IRole}'
  definition: IEnumerable`1
  name: IEnumerable<IRole>
  nameWithType: IEnumerable<IRole>
  fullName: IEnumerable<Discord.IRole>
  nameWithType.vb: IEnumerable(Of IRole)
  fullName.vb: IEnumerable(Of Discord.IRole)
  name.vb: IEnumerable(Of IRole)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.IRole
    name: IRole
    nameWithType: IRole
    fullName: Discord.IRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.IRole
    name: IRole
    nameWithType: IRole
    fullName: Discord.IRole
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketGuildUser.RemoveRoleAsync*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.RemoveRoleAsync
  name: RemoveRoleAsync
  nameWithType: SocketGuildUser.RemoveRoleAsync
  fullName: Discord.WebSocket.SocketGuildUser.RemoveRoleAsync
- uid: Discord.WebSocket.SocketGuildUser.RemoveRolesAsync*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.RemoveRolesAsync
  name: RemoveRolesAsync
  nameWithType: SocketGuildUser.RemoveRolesAsync
  fullName: Discord.WebSocket.SocketGuildUser.RemoveRolesAsync
- uid: Discord.WebSocket.SocketGuildUser.GetPermissions*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.GetPermissions
  name: GetPermissions
  nameWithType: SocketGuildUser.GetPermissions
  fullName: Discord.WebSocket.SocketGuildUser.GetPermissions
- uid: Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
  commentId: M:Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
  parent: Discord.IGuildUser
  name: GetPermissions(IGuildChannel)
  nameWithType: IGuildUser.GetPermissions(IGuildChannel)
  fullName: Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
  spec.csharp:
  - uid: Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
    name: GetPermissions
    nameWithType: IGuildUser.GetPermissions
    fullName: Discord.IGuildUser.GetPermissions
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IGuildChannel
    name: IGuildChannel
    nameWithType: IGuildChannel
    fullName: Discord.IGuildChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
    name: GetPermissions
    nameWithType: IGuildUser.GetPermissions
    fullName: Discord.IGuildUser.GetPermissions
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IGuildChannel
    name: IGuildChannel
    nameWithType: IGuildChannel
    fullName: Discord.IGuildChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IGuildChannel
  commentId: T:Discord.IGuildChannel
  parent: Discord
  name: IGuildChannel
  nameWithType: IGuildChannel
  fullName: Discord.IGuildChannel
- uid: Discord.ChannelPermissions
  commentId: T:Discord.ChannelPermissions
  parent: Discord
  name: ChannelPermissions
  nameWithType: ChannelPermissions
  fullName: Discord.ChannelPermissions
- uid: Discord.WebSocket.SocketGuildUser.Discord#IGuildUser#Guild*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.Discord#IGuildUser#Guild
  name: IGuildUser.Guild
  nameWithType: SocketGuildUser.IGuildUser.Guild
  fullName: Discord.WebSocket.SocketGuildUser.Discord.IGuildUser.Guild
  nameWithType.vb: SocketGuildUser.Discord.IGuildUser.Guild
  name.vb: Discord.IGuildUser.Guild
- uid: Discord.IGuildUser.Guild
  commentId: P:Discord.IGuildUser.Guild
  parent: Discord.IGuildUser
  name: Guild
  nameWithType: IGuildUser.Guild
  fullName: Discord.IGuildUser.Guild
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: Discord.WebSocket.SocketGuildUser.Discord#IVoiceState#VoiceChannel*
  commentId: Overload:Discord.WebSocket.SocketGuildUser.Discord#IVoiceState#VoiceChannel
  name: IVoiceState.VoiceChannel
  nameWithType: SocketGuildUser.IVoiceState.VoiceChannel
  fullName: Discord.WebSocket.SocketGuildUser.Discord.IVoiceState.VoiceChannel
  nameWithType.vb: SocketGuildUser.Discord.IVoiceState.VoiceChannel
  name.vb: Discord.IVoiceState.VoiceChannel
- uid: Discord.IVoiceState.VoiceChannel
  commentId: P:Discord.IVoiceState.VoiceChannel
  parent: Discord.IVoiceState
  name: VoiceChannel
  nameWithType: IVoiceState.VoiceChannel
  fullName: Discord.IVoiceState.VoiceChannel
- uid: Discord.IVoiceChannel
  commentId: T:Discord.IVoiceChannel
  parent: Discord
  name: IVoiceChannel
  nameWithType: IVoiceChannel
  fullName: Discord.IVoiceChannel
