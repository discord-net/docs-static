### YamlMime:ManagedReference
items:
- uid: Discord.Rest.RestWebhookUser
  commentId: T:Discord.Rest.RestWebhookUser
  id: RestWebhookUser
  parent: Discord.Rest
  children:
  - Discord.Rest.RestWebhookUser.Discord#IGuildUser#GetPermissions(Discord.IGuildChannel)
  - Discord.Rest.RestWebhookUser.Discord#IGuildUser#Guild
  - Discord.Rest.RestWebhookUser.Discord#IGuildUser#GuildPermissions
  - Discord.Rest.RestWebhookUser.Discord#IVoiceState#VoiceChannel
  - Discord.Rest.RestWebhookUser.GuildId
  - Discord.Rest.RestWebhookUser.IsWebhook
  - Discord.Rest.RestWebhookUser.PremiumSince
  - Discord.Rest.RestWebhookUser.WebhookId
  langs:
  - csharp
  - vb
  name: RestWebhookUser
  nameWithType: RestWebhookUser
  fullName: Discord.Rest.RestWebhookUser
  type: Class
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RestWebhookUser
    path: ../src/Discord.Net.Rest/Entities/Users/RestWebhookUser.cs
    startLine: 9
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: 'public class RestWebhookUser : RestUser, IEntity<ulong>, IUpdateable, IWebhookUser, IGuildUser, IUser, ISnowflakeEntity, IEntity<ulong>, IMentionable, IPresence, IVoiceState'
    content.vb: >-
      Public Class RestWebhookUser
          Inherits RestUser
          Implements IEntity(Of ULong), IUpdateable, IWebhookUser, IGuildUser, IUser, ISnowflakeEntity, IEntity(Of ULong), IMentionable, IPresence, IVoiceState
  inheritance:
  - System.Object
  - Discord.Rest.RestEntity{System.UInt64}
  - Discord.Rest.RestUser
  implements:
  - Discord.IEntity{System.UInt64}
  - Discord.IUpdateable
  - Discord.IWebhookUser
  - Discord.IGuildUser
  - Discord.IUser
  - Discord.ISnowflakeEntity
  - Discord.IEntity{System.UInt64}
  - Discord.IMentionable
  - Discord.IPresence
  - Discord.IVoiceState
  inheritedMembers:
  - Discord.Rest.RestUser.IsBot
  - Discord.Rest.RestUser.Username
  - Discord.Rest.RestUser.DiscriminatorValue
  - Discord.Rest.RestUser.AvatarId
  - Discord.Rest.RestUser.CreatedAt
  - Discord.Rest.RestUser.Discriminator
  - Discord.Rest.RestUser.Mention
  - Discord.Rest.RestUser.Activity
  - Discord.Rest.RestUser.Status
  - Discord.Rest.RestUser.ActiveClients
  - Discord.Rest.RestUser.UpdateAsync(Discord.RequestOptions)
  - Discord.Rest.RestUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  - Discord.Rest.RestUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  - Discord.Rest.RestUser.GetDefaultAvatarUrl
  - Discord.Rest.RestUser.ToString
  - Discord.Rest.RestEntity{System.UInt64}.Id
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Rest.RestWebhookUser.WebhookId
  commentId: P:Discord.Rest.RestWebhookUser.WebhookId
  id: WebhookId
  parent: Discord.Rest.RestWebhookUser
  langs:
  - csharp
  - vb
  name: WebhookId
  nameWithType: RestWebhookUser.WebhookId
  fullName: Discord.Rest.RestWebhookUser.WebhookId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WebhookId
    path: ../src/Discord.Net.Rest/Entities/Users/RestWebhookUser.cs
    startLine: 13
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public ulong WebhookId { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property WebhookId As ULong
  overload: Discord.Rest.RestWebhookUser.WebhookId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestWebhookUser.PremiumSince
  commentId: P:Discord.Rest.RestWebhookUser.PremiumSince
  id: PremiumSince
  parent: Discord.Rest.RestWebhookUser
  langs:
  - csharp
  - vb
  name: PremiumSince
  nameWithType: RestWebhookUser.PremiumSince
  fullName: Discord.Rest.RestWebhookUser.PremiumSince
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: PremiumSince
    path: ../src/Discord.Net.Rest/Entities/Users/RestWebhookUser.cs
    startLine: 16
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public DateTimeOffset? PremiumSince { get; }
    parameters: []
    return:
      type: System.Nullable{DateTimeOffset}
    content.vb: Public ReadOnly Property PremiumSince As DateTimeOffset?
  overload: Discord.Rest.RestWebhookUser.PremiumSince*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestWebhookUser.IsWebhook
  commentId: P:Discord.Rest.RestWebhookUser.IsWebhook
  id: IsWebhook
  parent: Discord.Rest.RestWebhookUser
  langs:
  - csharp
  - vb
  name: IsWebhook
  nameWithType: RestWebhookUser.IsWebhook
  fullName: Discord.Rest.RestWebhookUser.IsWebhook
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsWebhook
    path: ../src/Discord.Net.Rest/Entities/Users/RestWebhookUser.cs
    startLine: 19
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public override bool IsWebhook { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsWebhook As Boolean
  overridden: Discord.Rest.RestUser.IsWebhook
  overload: Discord.Rest.RestWebhookUser.IsWebhook*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.Rest.RestWebhookUser.GuildId
  commentId: P:Discord.Rest.RestWebhookUser.GuildId
  id: GuildId
  parent: Discord.Rest.RestWebhookUser
  langs:
  - csharp
  - vb
  name: GuildId
  nameWithType: RestWebhookUser.GuildId
  fullName: Discord.Rest.RestWebhookUser.GuildId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GuildId
    path: ../src/Discord.Net.Rest/Entities/Users/RestWebhookUser.cs
    startLine: 21
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public ulong GuildId { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property GuildId As ULong
  overload: Discord.Rest.RestWebhookUser.GuildId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestWebhookUser.Discord#IGuildUser#Guild
  commentId: P:Discord.Rest.RestWebhookUser.Discord#IGuildUser#Guild
  id: Discord#IGuildUser#Guild
  isEii: true
  parent: Discord.Rest.RestWebhookUser
  langs:
  - csharp
  - vb
  name: IGuildUser.Guild
  nameWithType: RestWebhookUser.IGuildUser.Guild
  fullName: Discord.Rest.RestWebhookUser.Discord.IGuildUser.Guild
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IGuildUser.Guild
    path: ../src/Discord.Net.Rest/Entities/Users/RestWebhookUser.cs
    startLine: 38
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the guild for this user.\n"
  example: []
  syntax:
    content: IGuild IGuildUser.Guild { get; }
    parameters: []
    return:
      type: Discord.IGuild
      description: "\nA guild object that this user belongs to.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IGuildUser.Guild As IGuild Implements IGuildUser.Guild
  overload: Discord.Rest.RestWebhookUser.Discord#IGuildUser#Guild*
  implements:
  - Discord.IGuildUser.Guild
  nameWithType.vb: RestWebhookUser.Discord.IGuildUser.Guild
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IGuildUser.Guild
- uid: Discord.Rest.RestWebhookUser.Discord#IGuildUser#GuildPermissions
  commentId: P:Discord.Rest.RestWebhookUser.Discord#IGuildUser#GuildPermissions
  id: Discord#IGuildUser#GuildPermissions
  isEii: true
  parent: Discord.Rest.RestWebhookUser
  langs:
  - csharp
  - vb
  name: IGuildUser.GuildPermissions
  nameWithType: RestWebhookUser.IGuildUser.GuildPermissions
  fullName: Discord.Rest.RestWebhookUser.Discord.IGuildUser.GuildPermissions
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IGuildUser.GuildPermissions
    path: ../src/Discord.Net.Rest/Entities/Users/RestWebhookUser.cs
    startLine: 54
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the guild-level permissions for this user.\n"
  example: []
  syntax:
    content: GuildPermissions IGuildUser.GuildPermissions { get; }
    parameters: []
    return:
      type: Discord.GuildPermissions
      description: "\nA <xref href=\"Discord.GuildPermissions\" data-throw-if-not-resolved=\"false\"></xref> structure for this user, representing what\npermissions this user has in the guild.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IGuildUser.GuildPermissions As GuildPermissions Implements IGuildUser.GuildPermissions
  overload: Discord.Rest.RestWebhookUser.Discord#IGuildUser#GuildPermissions*
  implements:
  - Discord.IGuildUser.GuildPermissions
  nameWithType.vb: RestWebhookUser.Discord.IGuildUser.GuildPermissions
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IGuildUser.GuildPermissions
- uid: Discord.Rest.RestWebhookUser.Discord#IGuildUser#GetPermissions(Discord.IGuildChannel)
  commentId: M:Discord.Rest.RestWebhookUser.Discord#IGuildUser#GetPermissions(Discord.IGuildChannel)
  id: Discord#IGuildUser#GetPermissions(Discord.IGuildChannel)
  isEii: true
  parent: Discord.Rest.RestWebhookUser
  langs:
  - csharp
  - vb
  name: IGuildUser.GetPermissions(IGuildChannel)
  nameWithType: RestWebhookUser.IGuildUser.GetPermissions(IGuildChannel)
  fullName: Discord.Rest.RestWebhookUser.Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IGuildUser.GetPermissions
    path: ../src/Discord.Net.Rest/Entities/Users/RestWebhookUser.cs
    startLine: 57
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the level permissions granted to this user to a given channel.\n"
  example: []
  syntax:
    content: ChannelPermissions IGuildUser.GetPermissions(IGuildChannel channel)
    parameters:
    - id: channel
      type: Discord.IGuildChannel
      description: The channel to get the permission from.
    return:
      type: Discord.ChannelPermissions
      description: "\nA <xref href=\"Discord.ChannelPermissions\" data-throw-if-not-resolved=\"false\"></xref> structure representing the permissions that a user has in the\nspecified channel.\n"
    content.vb: Function Discord.IGuildUser.GetPermissions(channel As IGuildChannel) As ChannelPermissions Implements IGuildUser.GetPermissions
  overload: Discord.Rest.RestWebhookUser.Discord#IGuildUser#GetPermissions*
  implements:
  - Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
  nameWithType.vb: RestWebhookUser.Discord.IGuildUser.GetPermissions(IGuildChannel)
  name.vb: Discord.IGuildUser.GetPermissions(IGuildChannel)
- uid: Discord.Rest.RestWebhookUser.Discord#IVoiceState#VoiceChannel
  commentId: P:Discord.Rest.RestWebhookUser.Discord#IVoiceState#VoiceChannel
  id: Discord#IVoiceState#VoiceChannel
  isEii: true
  parent: Discord.Rest.RestWebhookUser
  langs:
  - csharp
  - vb
  name: IVoiceState.VoiceChannel
  nameWithType: RestWebhookUser.IVoiceState.VoiceChannel
  fullName: Discord.Rest.RestWebhookUser.Discord.IVoiceState.VoiceChannel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IVoiceState.VoiceChannel
    path: ../src/Discord.Net.Rest/Entities/Users/RestWebhookUser.cs
    startLine: 94
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the voice channel this user is currently in.\n"
  example: []
  syntax:
    content: IVoiceChannel IVoiceState.VoiceChannel { get; }
    parameters: []
    return:
      type: Discord.IVoiceChannel
      description: "\nA generic voice channel object representing the voice channel that the user is currently in; <code>null</code>\nif none.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IVoiceState.VoiceChannel As IVoiceChannel Implements IVoiceState.VoiceChannel
  overload: Discord.Rest.RestWebhookUser.Discord#IVoiceState#VoiceChannel*
  implements:
  - Discord.IVoiceState.VoiceChannel
  nameWithType.vb: RestWebhookUser.Discord.IVoiceState.VoiceChannel
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IVoiceState.VoiceChannel
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Rest.RestEntity{System.UInt64}
  commentId: T:Discord.Rest.RestEntity{System.UInt64}
  parent: Discord.Rest
  definition: Discord.Rest.RestEntity`1
  name: RestEntity<UInt64>
  nameWithType: RestEntity<UInt64>
  fullName: Discord.Rest.RestEntity<System.UInt64>
  nameWithType.vb: RestEntity(Of UInt64)
  fullName.vb: Discord.Rest.RestEntity(Of System.UInt64)
  name.vb: RestEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestUser
  commentId: T:Discord.Rest.RestUser
  parent: Discord.Rest
  name: RestUser
  nameWithType: RestUser
  fullName: Discord.Rest.RestUser
- uid: Discord.IEntity{System.UInt64}
  commentId: T:Discord.IEntity{System.UInt64}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<UInt64>
  nameWithType: IEntity<UInt64>
  fullName: Discord.IEntity<System.UInt64>
  nameWithType.vb: IEntity(Of UInt64)
  fullName.vb: Discord.IEntity(Of System.UInt64)
  name.vb: IEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IUpdateable
  commentId: T:Discord.IUpdateable
  parent: Discord
  name: IUpdateable
  nameWithType: IUpdateable
  fullName: Discord.IUpdateable
- uid: Discord.IWebhookUser
  commentId: T:Discord.IWebhookUser
  parent: Discord
  name: IWebhookUser
  nameWithType: IWebhookUser
  fullName: Discord.IWebhookUser
- uid: Discord.IGuildUser
  commentId: T:Discord.IGuildUser
  parent: Discord
  name: IGuildUser
  nameWithType: IGuildUser
  fullName: Discord.IGuildUser
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord.ISnowflakeEntity
  commentId: T:Discord.ISnowflakeEntity
  parent: Discord
  name: ISnowflakeEntity
  nameWithType: ISnowflakeEntity
  fullName: Discord.ISnowflakeEntity
- uid: Discord.IMentionable
  commentId: T:Discord.IMentionable
  parent: Discord
  name: IMentionable
  nameWithType: IMentionable
  fullName: Discord.IMentionable
- uid: Discord.IPresence
  commentId: T:Discord.IPresence
  parent: Discord
  name: IPresence
  nameWithType: IPresence
  fullName: Discord.IPresence
- uid: Discord.IVoiceState
  commentId: T:Discord.IVoiceState
  parent: Discord
  name: IVoiceState
  nameWithType: IVoiceState
  fullName: Discord.IVoiceState
- uid: Discord.Rest.RestUser.IsBot
  commentId: P:Discord.Rest.RestUser.IsBot
  parent: Discord.Rest.RestUser
  name: IsBot
  nameWithType: RestUser.IsBot
  fullName: Discord.Rest.RestUser.IsBot
- uid: Discord.Rest.RestUser.Username
  commentId: P:Discord.Rest.RestUser.Username
  parent: Discord.Rest.RestUser
  name: Username
  nameWithType: RestUser.Username
  fullName: Discord.Rest.RestUser.Username
- uid: Discord.Rest.RestUser.DiscriminatorValue
  commentId: P:Discord.Rest.RestUser.DiscriminatorValue
  parent: Discord.Rest.RestUser
  name: DiscriminatorValue
  nameWithType: RestUser.DiscriminatorValue
  fullName: Discord.Rest.RestUser.DiscriminatorValue
- uid: Discord.Rest.RestUser.AvatarId
  commentId: P:Discord.Rest.RestUser.AvatarId
  parent: Discord.Rest.RestUser
  name: AvatarId
  nameWithType: RestUser.AvatarId
  fullName: Discord.Rest.RestUser.AvatarId
- uid: Discord.Rest.RestUser.CreatedAt
  commentId: P:Discord.Rest.RestUser.CreatedAt
  parent: Discord.Rest.RestUser
  name: CreatedAt
  nameWithType: RestUser.CreatedAt
  fullName: Discord.Rest.RestUser.CreatedAt
- uid: Discord.Rest.RestUser.Discriminator
  commentId: P:Discord.Rest.RestUser.Discriminator
  parent: Discord.Rest.RestUser
  name: Discriminator
  nameWithType: RestUser.Discriminator
  fullName: Discord.Rest.RestUser.Discriminator
- uid: Discord.Rest.RestUser.Mention
  commentId: P:Discord.Rest.RestUser.Mention
  parent: Discord.Rest.RestUser
  name: Mention
  nameWithType: RestUser.Mention
  fullName: Discord.Rest.RestUser.Mention
- uid: Discord.Rest.RestUser.Activity
  commentId: P:Discord.Rest.RestUser.Activity
  parent: Discord.Rest.RestUser
  name: Activity
  nameWithType: RestUser.Activity
  fullName: Discord.Rest.RestUser.Activity
- uid: Discord.Rest.RestUser.Status
  commentId: P:Discord.Rest.RestUser.Status
  parent: Discord.Rest.RestUser
  name: Status
  nameWithType: RestUser.Status
  fullName: Discord.Rest.RestUser.Status
- uid: Discord.Rest.RestUser.ActiveClients
  commentId: P:Discord.Rest.RestUser.ActiveClients
  parent: Discord.Rest.RestUser
  name: ActiveClients
  nameWithType: RestUser.ActiveClients
  fullName: Discord.Rest.RestUser.ActiveClients
- uid: Discord.Rest.RestUser.UpdateAsync(Discord.RequestOptions)
  commentId: M:Discord.Rest.RestUser.UpdateAsync(Discord.RequestOptions)
  parent: Discord.Rest.RestUser
  name: UpdateAsync(RequestOptions)
  nameWithType: RestUser.UpdateAsync(RequestOptions)
  fullName: Discord.Rest.RestUser.UpdateAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Rest.RestUser.UpdateAsync(Discord.RequestOptions)
    name: UpdateAsync
    nameWithType: RestUser.UpdateAsync
    fullName: Discord.Rest.RestUser.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestUser.UpdateAsync(Discord.RequestOptions)
    name: UpdateAsync
    nameWithType: RestUser.UpdateAsync
    fullName: Discord.Rest.RestUser.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  commentId: M:Discord.Rest.RestUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  parent: Discord.Rest.RestUser
  name: GetOrCreateDMChannelAsync(RequestOptions)
  nameWithType: RestUser.GetOrCreateDMChannelAsync(RequestOptions)
  fullName: Discord.Rest.RestUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Rest.RestUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
    name: GetOrCreateDMChannelAsync
    nameWithType: RestUser.GetOrCreateDMChannelAsync
    fullName: Discord.Rest.RestUser.GetOrCreateDMChannelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
    name: GetOrCreateDMChannelAsync
    nameWithType: RestUser.GetOrCreateDMChannelAsync
    fullName: Discord.Rest.RestUser.GetOrCreateDMChannelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  commentId: M:Discord.Rest.RestUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  parent: Discord.Rest.RestUser
  isExternal: true
  name: GetAvatarUrl(ImageFormat, UInt16)
  nameWithType: RestUser.GetAvatarUrl(ImageFormat, UInt16)
  fullName: Discord.Rest.RestUser.GetAvatarUrl(Discord.ImageFormat, System.UInt16)
  spec.csharp:
  - uid: Discord.Rest.RestUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
    name: GetAvatarUrl
    nameWithType: RestUser.GetAvatarUrl
    fullName: Discord.Rest.RestUser.GetAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.ImageFormat
    name: ImageFormat
    nameWithType: ImageFormat
    fullName: Discord.ImageFormat
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
    name: GetAvatarUrl
    nameWithType: RestUser.GetAvatarUrl
    fullName: Discord.Rest.RestUser.GetAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.ImageFormat
    name: ImageFormat
    nameWithType: ImageFormat
    fullName: Discord.ImageFormat
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestUser.GetDefaultAvatarUrl
  commentId: M:Discord.Rest.RestUser.GetDefaultAvatarUrl
  parent: Discord.Rest.RestUser
  name: GetDefaultAvatarUrl()
  nameWithType: RestUser.GetDefaultAvatarUrl()
  fullName: Discord.Rest.RestUser.GetDefaultAvatarUrl()
  spec.csharp:
  - uid: Discord.Rest.RestUser.GetDefaultAvatarUrl
    name: GetDefaultAvatarUrl
    nameWithType: RestUser.GetDefaultAvatarUrl
    fullName: Discord.Rest.RestUser.GetDefaultAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestUser.GetDefaultAvatarUrl
    name: GetDefaultAvatarUrl
    nameWithType: RestUser.GetDefaultAvatarUrl
    fullName: Discord.Rest.RestUser.GetDefaultAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestUser.ToString
  commentId: M:Discord.Rest.RestUser.ToString
  parent: Discord.Rest.RestUser
  name: ToString()
  nameWithType: RestUser.ToString()
  fullName: Discord.Rest.RestUser.ToString()
  spec.csharp:
  - uid: Discord.Rest.RestUser.ToString
    name: ToString
    nameWithType: RestUser.ToString
    fullName: Discord.Rest.RestUser.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestUser.ToString
    name: ToString
    nameWithType: RestUser.ToString
    fullName: Discord.Rest.RestUser.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestEntity{System.UInt64}.Id
  commentId: P:Discord.Rest.RestEntity{System.UInt64}.Id
  parent: Discord.Rest.RestEntity{System.UInt64}
  definition: Discord.Rest.RestEntity`1.Id
  name: Id
  nameWithType: RestEntity<UInt64>.Id
  fullName: Discord.Rest.RestEntity<System.UInt64>.Id
  nameWithType.vb: RestEntity(Of UInt64).Id
  fullName.vb: Discord.Rest.RestEntity(Of System.UInt64).Id
- uid: Discord.Rest.RestEntity`1
  commentId: T:Discord.Rest.RestEntity`1
  name: RestEntity<T>
  nameWithType: RestEntity<T>
  fullName: Discord.Rest.RestEntity<T>
  nameWithType.vb: RestEntity(Of T)
  fullName.vb: Discord.Rest.RestEntity(Of T)
  name.vb: RestEntity(Of T)
  spec.csharp:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Rest.RestEntity`1.Id
  commentId: P:Discord.Rest.RestEntity`1.Id
  name: Id
  nameWithType: RestEntity<T>.Id
  fullName: Discord.Rest.RestEntity<T>.Id
  nameWithType.vb: RestEntity(Of T).Id
  fullName.vb: Discord.Rest.RestEntity(Of T).Id
- uid: Discord.Rest.RestWebhookUser.WebhookId*
  commentId: Overload:Discord.Rest.RestWebhookUser.WebhookId
  name: WebhookId
  nameWithType: RestWebhookUser.WebhookId
  fullName: Discord.Rest.RestWebhookUser.WebhookId
- uid: System.UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.Rest.RestWebhookUser.PremiumSince*
  commentId: Overload:Discord.Rest.RestWebhookUser.PremiumSince
  name: PremiumSince
  nameWithType: RestWebhookUser.PremiumSince
  fullName: Discord.Rest.RestWebhookUser.PremiumSince
- uid: System.Nullable{DateTimeOffset}
  commentId: '!:System.Nullable{DateTimeOffset}'
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestUser.IsWebhook
  commentId: P:Discord.Rest.RestUser.IsWebhook
  parent: Discord.Rest.RestUser
  name: IsWebhook
  nameWithType: RestUser.IsWebhook
  fullName: Discord.Rest.RestUser.IsWebhook
- uid: Discord.Rest.RestWebhookUser.IsWebhook*
  commentId: Overload:Discord.Rest.RestWebhookUser.IsWebhook
  name: IsWebhook
  nameWithType: RestWebhookUser.IsWebhook
  fullName: Discord.Rest.RestWebhookUser.IsWebhook
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.Rest.RestWebhookUser.GuildId*
  commentId: Overload:Discord.Rest.RestWebhookUser.GuildId
  name: GuildId
  nameWithType: RestWebhookUser.GuildId
  fullName: Discord.Rest.RestWebhookUser.GuildId
- uid: Discord.Rest.RestWebhookUser.Discord#IGuildUser#Guild*
  commentId: Overload:Discord.Rest.RestWebhookUser.Discord#IGuildUser#Guild
  name: IGuildUser.Guild
  nameWithType: RestWebhookUser.IGuildUser.Guild
  fullName: Discord.Rest.RestWebhookUser.Discord.IGuildUser.Guild
  nameWithType.vb: RestWebhookUser.Discord.IGuildUser.Guild
  name.vb: Discord.IGuildUser.Guild
- uid: Discord.IGuildUser.Guild
  commentId: P:Discord.IGuildUser.Guild
  parent: Discord.IGuildUser
  name: Guild
  nameWithType: IGuildUser.Guild
  fullName: Discord.IGuildUser.Guild
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: Discord.Rest.RestWebhookUser.Discord#IGuildUser#GuildPermissions*
  commentId: Overload:Discord.Rest.RestWebhookUser.Discord#IGuildUser#GuildPermissions
  name: IGuildUser.GuildPermissions
  nameWithType: RestWebhookUser.IGuildUser.GuildPermissions
  fullName: Discord.Rest.RestWebhookUser.Discord.IGuildUser.GuildPermissions
  nameWithType.vb: RestWebhookUser.Discord.IGuildUser.GuildPermissions
  name.vb: Discord.IGuildUser.GuildPermissions
- uid: Discord.IGuildUser.GuildPermissions
  commentId: P:Discord.IGuildUser.GuildPermissions
  parent: Discord.IGuildUser
  name: GuildPermissions
  nameWithType: IGuildUser.GuildPermissions
  fullName: Discord.IGuildUser.GuildPermissions
- uid: Discord.GuildPermissions
  commentId: T:Discord.GuildPermissions
  parent: Discord
  name: GuildPermissions
  nameWithType: GuildPermissions
  fullName: Discord.GuildPermissions
- uid: Discord.Rest.RestWebhookUser.Discord#IGuildUser#GetPermissions*
  commentId: Overload:Discord.Rest.RestWebhookUser.Discord#IGuildUser#GetPermissions
  name: IGuildUser.GetPermissions
  nameWithType: RestWebhookUser.IGuildUser.GetPermissions
  fullName: Discord.Rest.RestWebhookUser.Discord.IGuildUser.GetPermissions
  nameWithType.vb: RestWebhookUser.Discord.IGuildUser.GetPermissions
  name.vb: Discord.IGuildUser.GetPermissions
- uid: Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
  commentId: M:Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
  parent: Discord.IGuildUser
  name: GetPermissions(IGuildChannel)
  nameWithType: IGuildUser.GetPermissions(IGuildChannel)
  fullName: Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
  spec.csharp:
  - uid: Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
    name: GetPermissions
    nameWithType: IGuildUser.GetPermissions
    fullName: Discord.IGuildUser.GetPermissions
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IGuildChannel
    name: IGuildChannel
    nameWithType: IGuildChannel
    fullName: Discord.IGuildChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
    name: GetPermissions
    nameWithType: IGuildUser.GetPermissions
    fullName: Discord.IGuildUser.GetPermissions
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IGuildChannel
    name: IGuildChannel
    nameWithType: IGuildChannel
    fullName: Discord.IGuildChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IGuildChannel
  commentId: T:Discord.IGuildChannel
  parent: Discord
  name: IGuildChannel
  nameWithType: IGuildChannel
  fullName: Discord.IGuildChannel
- uid: Discord.ChannelPermissions
  commentId: T:Discord.ChannelPermissions
  parent: Discord
  name: ChannelPermissions
  nameWithType: ChannelPermissions
  fullName: Discord.ChannelPermissions
- uid: Discord.Rest.RestWebhookUser.Discord#IVoiceState#VoiceChannel*
  commentId: Overload:Discord.Rest.RestWebhookUser.Discord#IVoiceState#VoiceChannel
  name: IVoiceState.VoiceChannel
  nameWithType: RestWebhookUser.IVoiceState.VoiceChannel
  fullName: Discord.Rest.RestWebhookUser.Discord.IVoiceState.VoiceChannel
  nameWithType.vb: RestWebhookUser.Discord.IVoiceState.VoiceChannel
  name.vb: Discord.IVoiceState.VoiceChannel
- uid: Discord.IVoiceState.VoiceChannel
  commentId: P:Discord.IVoiceState.VoiceChannel
  parent: Discord.IVoiceState
  name: VoiceChannel
  nameWithType: IVoiceState.VoiceChannel
  fullName: Discord.IVoiceState.VoiceChannel
- uid: Discord.IVoiceChannel
  commentId: T:Discord.IVoiceChannel
  parent: Discord
  name: IVoiceChannel
  nameWithType: IVoiceChannel
  fullName: Discord.IVoiceChannel
