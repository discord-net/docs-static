### YamlMime:ManagedReference
items:
- uid: Discord.RequestOptions
  commentId: T:Discord.RequestOptions
  id: RequestOptions
  parent: Discord
  children:
  - Discord.RequestOptions.#ctor
  - Discord.RequestOptions.AuditLogReason
  - Discord.RequestOptions.CancelToken
  - Discord.RequestOptions.Clone
  - Discord.RequestOptions.Default
  - Discord.RequestOptions.HeaderOnly
  - Discord.RequestOptions.RetryMode
  - Discord.RequestOptions.Timeout
  langs:
  - csharp
  - vb
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: Discord.RequestOptions
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/RequestOptions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RequestOptions
    path: ../src/Discord.Net.Core/RequestOptions.cs
    startLine: 7
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nRepresents options that should be used when sending a request.\n"
  example: []
  syntax:
    content: public class RequestOptions
    content.vb: Public Class RequestOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.RequestOptions.Default
  commentId: P:Discord.RequestOptions.Default
  id: Default
  parent: Discord.RequestOptions
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: RequestOptions.Default
  fullName: Discord.RequestOptions.Default
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/RequestOptions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Default
    path: ../src/Discord.Net.Core/RequestOptions.cs
    startLine: 12
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nCreates a new <xref href=\"Discord.RequestOptions\" data-throw-if-not-resolved=\"false\"></xref> class with its default settings.\n"
  example: []
  syntax:
    content: public static RequestOptions Default { get; }
    parameters: []
    return:
      type: Discord.RequestOptions
    content.vb: Public Shared ReadOnly Property Default As RequestOptions
  overload: Discord.RequestOptions.Default*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Discord.RequestOptions.Timeout
  commentId: P:Discord.RequestOptions.Timeout
  id: Timeout
  parent: Discord.RequestOptions
  langs:
  - csharp
  - vb
  name: Timeout
  nameWithType: RequestOptions.Timeout
  fullName: Discord.RequestOptions.Timeout
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/RequestOptions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Timeout
    path: ../src/Discord.Net.Core/RequestOptions.cs
    startLine: 25
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the maximum time to wait for for this request to complete.\n"
  remarks: "\nGets or set the max time, in milliseconds, to wait for for this request to complete. If \n<code>null</code>, a request will not time out. If a rate limit has been triggered for this request&apos;s bucket\nand will not be unpaused in time, this request will fail immediately.\n"
  example: []
  syntax:
    content: public int? Timeout { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nA <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> in milliseconds for when the request times out.\n"
    content.vb: Public Property Timeout As Integer?
  overload: Discord.RequestOptions.Timeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.RequestOptions.CancelToken
  commentId: P:Discord.RequestOptions.CancelToken
  id: CancelToken
  parent: Discord.RequestOptions
  langs:
  - csharp
  - vb
  name: CancelToken
  nameWithType: RequestOptions.CancelToken
  fullName: Discord.RequestOptions.CancelToken
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/RequestOptions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: CancelToken
    path: ../src/Discord.Net.Core/RequestOptions.cs
    startLine: 32
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the cancellation token for this request.\n"
  example: []
  syntax:
    content: public CancellationToken CancelToken { get; set; }
    parameters: []
    return:
      type: System.Threading.CancellationToken
      description: "\nA <xref href=\"System.Threading.CancellationToken\" data-throw-if-not-resolved=\"false\"></xref> for this request.\n"
    content.vb: Public Property CancelToken As CancellationToken
  overload: Discord.RequestOptions.CancelToken*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.RequestOptions.RetryMode
  commentId: P:Discord.RequestOptions.RetryMode
  id: RetryMode
  parent: Discord.RequestOptions
  langs:
  - csharp
  - vb
  name: RetryMode
  nameWithType: RequestOptions.RetryMode
  fullName: Discord.RequestOptions.RetryMode
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/RequestOptions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RetryMode
    path: ../src/Discord.Net.Core/RequestOptions.cs
    startLine: 36
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the retry behavior when the request fails.\n"
  example: []
  syntax:
    content: public RetryMode? RetryMode { get; set; }
    parameters: []
    return:
      type: System.Nullable{Discord.RetryMode}
    content.vb: Public Property RetryMode As RetryMode?
  overload: Discord.RequestOptions.RetryMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.RequestOptions.HeaderOnly
  commentId: P:Discord.RequestOptions.HeaderOnly
  id: HeaderOnly
  parent: Discord.RequestOptions
  langs:
  - csharp
  - vb
  name: HeaderOnly
  nameWithType: RequestOptions.HeaderOnly
  fullName: Discord.RequestOptions.HeaderOnly
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/RequestOptions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: HeaderOnly
    path: ../src/Discord.Net.Core/RequestOptions.cs
    startLine: 37
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public bool HeaderOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HeaderOnly As Boolean
  overload: Discord.RequestOptions.HeaderOnly*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.RequestOptions.AuditLogReason
  commentId: P:Discord.RequestOptions.AuditLogReason
  id: AuditLogReason
  parent: Discord.RequestOptions
  langs:
  - csharp
  - vb
  name: AuditLogReason
  nameWithType: RequestOptions.AuditLogReason
  fullName: Discord.RequestOptions.AuditLogReason
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/RequestOptions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AuditLogReason
    path: ../src/Discord.Net.Core/RequestOptions.cs
    startLine: 45
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the reason for this action in the guild&apos;s audit log.\n"
  remarks: "\nGets or sets the reason that will be written to the guild&apos;s audit log if applicable. This may not apply\nto all actions.\n"
  example: []
  syntax:
    content: public string AuditLogReason { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AuditLogReason As String
  overload: Discord.RequestOptions.AuditLogReason*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.RequestOptions.#ctor
  commentId: M:Discord.RequestOptions.#ctor
  id: '#ctor'
  parent: Discord.RequestOptions
  langs:
  - csharp
  - vb
  name: RequestOptions()
  nameWithType: RequestOptions.RequestOptions()
  fullName: Discord.RequestOptions.RequestOptions()
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Core/RequestOptions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Core/RequestOptions.cs
    startLine: 64
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nInitializes a new <xref href=\"Discord.RequestOptions\" data-throw-if-not-resolved=\"false\"></xref> class with the default request timeout set in\n<xref href=\"Discord.DiscordConfig\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public RequestOptions()
    content.vb: Public Sub New
  overload: Discord.RequestOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.RequestOptions.Clone
  commentId: M:Discord.RequestOptions.Clone
  id: Clone
  parent: Discord.RequestOptions
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: RequestOptions.Clone()
  fullName: Discord.RequestOptions.Clone()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/RequestOptions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Clone
    path: ../src/Discord.Net.Core/RequestOptions.cs
    startLine: 69
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public RequestOptions Clone()
    return:
      type: Discord.RequestOptions
    content.vb: Public Function Clone As RequestOptions
  overload: Discord.RequestOptions.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.RequestOptions
  commentId: T:Discord.RequestOptions
  parent: Discord
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: Discord.RequestOptions
- uid: Discord.RequestOptions.Default*
  commentId: Overload:Discord.RequestOptions.Default
  name: Default
  nameWithType: RequestOptions.Default
  fullName: Discord.RequestOptions.Default
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Discord.RequestOptions.Timeout*
  commentId: Overload:Discord.RequestOptions.Timeout
  name: Timeout
  nameWithType: RequestOptions.Timeout
  fullName: Discord.RequestOptions.Timeout
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Discord.RequestOptions.CancelToken*
  commentId: Overload:Discord.RequestOptions.CancelToken
  name: CancelToken
  nameWithType: RequestOptions.CancelToken
  fullName: Discord.RequestOptions.CancelToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Discord.RequestOptions.RetryMode*
  commentId: Overload:Discord.RequestOptions.RetryMode
  name: RetryMode
  nameWithType: RequestOptions.RetryMode
  fullName: Discord.RequestOptions.RetryMode
- uid: System.Nullable{Discord.RetryMode}
  commentId: T:System.Nullable{Discord.RetryMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<RetryMode>
  nameWithType: Nullable<RetryMode>
  fullName: System.Nullable<Discord.RetryMode>
  nameWithType.vb: Nullable(Of RetryMode)
  fullName.vb: System.Nullable(Of Discord.RetryMode)
  name.vb: Nullable(Of RetryMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.RetryMode
    name: RetryMode
    nameWithType: RetryMode
    fullName: Discord.RetryMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.RetryMode
    name: RetryMode
    nameWithType: RetryMode
    fullName: Discord.RetryMode
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.RequestOptions.HeaderOnly*
  commentId: Overload:Discord.RequestOptions.HeaderOnly
  name: HeaderOnly
  nameWithType: RequestOptions.HeaderOnly
  fullName: Discord.RequestOptions.HeaderOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.RequestOptions.AuditLogReason*
  commentId: Overload:Discord.RequestOptions.AuditLogReason
  name: AuditLogReason
  nameWithType: RequestOptions.AuditLogReason
  fullName: Discord.RequestOptions.AuditLogReason
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.DiscordConfig
  commentId: T:Discord.DiscordConfig
  parent: Discord
  name: DiscordConfig
  nameWithType: DiscordConfig
  fullName: Discord.DiscordConfig
- uid: Discord.RequestOptions.#ctor*
  commentId: Overload:Discord.RequestOptions.#ctor
  name: RequestOptions
  nameWithType: RequestOptions.RequestOptions
  fullName: Discord.RequestOptions.RequestOptions
- uid: Discord.RequestOptions.Clone*
  commentId: Overload:Discord.RequestOptions.Clone
  name: Clone
  nameWithType: RequestOptions.Clone
  fullName: Discord.RequestOptions.Clone
