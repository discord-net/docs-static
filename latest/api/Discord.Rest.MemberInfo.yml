### YamlMime:ManagedReference
items:
- uid: Discord.Rest.MemberInfo
  commentId: T:Discord.Rest.MemberInfo
  id: MemberInfo
  parent: Discord.Rest
  children:
  - Discord.Rest.MemberInfo.AvatarHash
  - Discord.Rest.MemberInfo.Deaf
  - Discord.Rest.MemberInfo.Mute
  - Discord.Rest.MemberInfo.Nickname
  langs:
  - csharp
  - vb
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: Discord.Rest.MemberInfo
  type: Struct
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MemberInfo
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
    startLine: 2
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: public struct MemberInfo
    content.vb: Public Structure MemberInfo
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Discord.Rest.MemberInfo.Nickname
  commentId: P:Discord.Rest.MemberInfo.Nickname
  id: Nickname
  parent: Discord.Rest.MemberInfo
  langs:
  - csharp
  - vb
  name: Nickname
  nameWithType: MemberInfo.Nickname
  fullName: Discord.Rest.MemberInfo.Nickname
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Nickname
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
    startLine: 12
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: public string Nickname { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Nickname As String
  overload: Discord.Rest.MemberInfo.Nickname*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.MemberInfo.Deaf
  commentId: P:Discord.Rest.MemberInfo.Deaf
  id: Deaf
  parent: Discord.Rest.MemberInfo
  langs:
  - csharp
  - vb
  name: Deaf
  nameWithType: MemberInfo.Deaf
  fullName: Discord.Rest.MemberInfo.Deaf
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Deaf
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
    startLine: 13
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: public bool? Deaf { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public ReadOnly Property Deaf As Boolean?
  overload: Discord.Rest.MemberInfo.Deaf*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.MemberInfo.Mute
  commentId: P:Discord.Rest.MemberInfo.Mute
  id: Mute
  parent: Discord.Rest.MemberInfo
  langs:
  - csharp
  - vb
  name: Mute
  nameWithType: MemberInfo.Mute
  fullName: Discord.Rest.MemberInfo.Mute
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Mute
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
    startLine: 14
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: public bool? Mute { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public ReadOnly Property Mute As Boolean?
  overload: Discord.Rest.MemberInfo.Mute*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.MemberInfo.AvatarHash
  commentId: P:Discord.Rest.MemberInfo.AvatarHash
  id: AvatarHash
  parent: Discord.Rest.MemberInfo
  langs:
  - csharp
  - vb
  name: AvatarHash
  nameWithType: MemberInfo.AvatarHash
  fullName: Discord.Rest.MemberInfo.AvatarHash
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AvatarHash
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
    startLine: 15
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: public string AvatarHash { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property AvatarHash As String
  overload: Discord.Rest.MemberInfo.AvatarHash*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Rest.MemberInfo.Nickname*
  commentId: Overload:Discord.Rest.MemberInfo.Nickname
  name: Nickname
  nameWithType: MemberInfo.Nickname
  fullName: Discord.Rest.MemberInfo.Nickname
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Rest.MemberInfo.Deaf*
  commentId: Overload:Discord.Rest.MemberInfo.Deaf
  name: Deaf
  nameWithType: MemberInfo.Deaf
  fullName: Discord.Rest.MemberInfo.Deaf
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.MemberInfo.Mute*
  commentId: Overload:Discord.Rest.MemberInfo.Mute
  name: Mute
  nameWithType: MemberInfo.Mute
  fullName: Discord.Rest.MemberInfo.Mute
- uid: Discord.Rest.MemberInfo.AvatarHash*
  commentId: Overload:Discord.Rest.MemberInfo.AvatarHash
  name: AvatarHash
  nameWithType: MemberInfo.AvatarHash
  fullName: Discord.Rest.MemberInfo.AvatarHash
