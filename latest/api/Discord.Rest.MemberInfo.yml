### YamlMime:ManagedReference
items:
- uid: Discord.Rest.MemberInfo
  commentId: T:Discord.Rest.MemberInfo
  id: MemberInfo
  parent: Discord.Rest
  children:
  - Discord.Rest.MemberInfo.AvatarHash
  - Discord.Rest.MemberInfo.Deaf
  - Discord.Rest.MemberInfo.Mute
  - Discord.Rest.MemberInfo.Nickname
  langs:
  - csharp
  - vb
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: Discord.Rest.MemberInfo
  type: Struct
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: MemberInfo
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
    startLine: 2
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: public struct MemberInfo
    content.vb: Public Structure MemberInfo
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Discord.Rest.MemberInfo.Nickname
  commentId: P:Discord.Rest.MemberInfo.Nickname
  id: Nickname
  parent: Discord.Rest.MemberInfo
  langs:
  - csharp
  - vb
  name: Nickname
  nameWithType: MemberInfo.Nickname
  fullName: Discord.Rest.MemberInfo.Nickname
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Nickname
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
    startLine: 12
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: public string Nickname { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Nickname As String
  overload: Discord.Rest.MemberInfo.Nickname*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.MemberInfo.Deaf
  commentId: P:Discord.Rest.MemberInfo.Deaf
  id: Deaf
  parent: Discord.Rest.MemberInfo
  langs:
  - csharp
  - vb
  name: Deaf
  nameWithType: MemberInfo.Deaf
  fullName: Discord.Rest.MemberInfo.Deaf
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Deaf
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
    startLine: 13
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: public bool? Deaf { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public ReadOnly Property Deaf As Boolean?
  overload: Discord.Rest.MemberInfo.Deaf*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.MemberInfo.Mute
  commentId: P:Discord.Rest.MemberInfo.Mute
  id: Mute
  parent: Discord.Rest.MemberInfo
  langs:
  - csharp
  - vb
  name: Mute
  nameWithType: MemberInfo.Mute
  fullName: Discord.Rest.MemberInfo.Mute
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Mute
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
    startLine: 14
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: public bool? Mute { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public ReadOnly Property Mute As Boolean?
  overload: Discord.Rest.MemberInfo.Mute*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.MemberInfo.AvatarHash
  commentId: P:Discord.Rest.MemberInfo.AvatarHash
  id: AvatarHash
  parent: Discord.Rest.MemberInfo
  langs:
  - csharp
  - vb
  name: AvatarHash
  nameWithType: MemberInfo.AvatarHash
  fullName: Discord.Rest.MemberInfo.AvatarHash
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: AvatarHash
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/MemberInfo.cs
    startLine: 15
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: public string AvatarHash { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property AvatarHash As String
  overload: Discord.Rest.MemberInfo.AvatarHash*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: Discord.Rest.MemberInfo.Nickname*
  commentId: Overload:Discord.Rest.MemberInfo.Nickname
  name: Nickname
  nameWithType: MemberInfo.Nickname
  fullName: Discord.Rest.MemberInfo.Nickname
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Rest.MemberInfo.Deaf*
  commentId: Overload:Discord.Rest.MemberInfo.Deaf
  name: Deaf
  nameWithType: MemberInfo.Deaf
  fullName: Discord.Rest.MemberInfo.Deaf
- uid: System.Nullable{System.Boolean}
  commentId: '!:System.Nullable{System.Boolean}'
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.MemberInfo.Mute*
  commentId: Overload:Discord.Rest.MemberInfo.Mute
  name: Mute
  nameWithType: MemberInfo.Mute
  fullName: Discord.Rest.MemberInfo.Mute
- uid: Discord.Rest.MemberInfo.AvatarHash*
  commentId: Overload:Discord.Rest.MemberInfo.AvatarHash
  name: AvatarHash
  nameWithType: MemberInfo.AvatarHash
  fullName: Discord.Rest.MemberInfo.AvatarHash
