### YamlMime:ManagedReference
items:
- uid: Discord.Direction
  commentId: T:Discord.Direction
  id: Direction
  parent: Discord
  children:
  - Discord.Direction.After
  - Discord.Direction.Around
  - Discord.Direction.Before
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: Direction
  fullName: Discord.Direction
  type: Enum
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Channels/Direction.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Direction
    path: ../src/Discord.Net.Core/Entities/Channels/Direction.cs
    startLine: 14
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSpecifies the direction of where message(s) should be retrieved from.\n"
  remarks: "\nThis enum is used to specify the direction for retrieving messages.\n<div class=\"IMPORTANT\"><h5>important</h5><p>\n    At the time of writing, <xref href=\"Discord.Direction.Around\" data-throw-if-not-resolved=\"false\"></xref> is not yet implemented into \n<xref href=\"Discord.IMessageChannel.GetMessagesAsync(System.Int32%2cDiscord.CacheMode%2cDiscord.RequestOptions)\" data-throw-if-not-resolved=\"false\"></xref>.\nAttempting to use the method with <xref href=\"Discord.Direction.Around\" data-throw-if-not-resolved=\"false\"></xref> will throw\na <xref href=\"System.NotImplementedException\" data-throw-if-not-resolved=\"false\"></xref>.\n</p></div>\n"
  example: []
  syntax:
    content: public enum Direction
    content.vb: Public Enum Direction
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Discord.Direction.Before
  commentId: F:Discord.Direction.Before
  id: Before
  parent: Discord.Direction
  langs:
  - csharp
  - vb
  name: Before
  nameWithType: Direction.Before
  fullName: Discord.Direction.Before
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Channels/Direction.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Before
    path: ../src/Discord.Net.Core/Entities/Channels/Direction.cs
    startLine: 19
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nThe message(s) should be retrieved before a message.\n"
  example: []
  syntax:
    content: Before = 0
    return:
      type: Discord.Direction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.Direction.After
  commentId: F:Discord.Direction.After
  id: After
  parent: Discord.Direction
  langs:
  - csharp
  - vb
  name: After
  nameWithType: Direction.After
  fullName: Discord.Direction.After
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Channels/Direction.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: After
    path: ../src/Discord.Net.Core/Entities/Channels/Direction.cs
    startLine: 23
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nThe message(s) should be retrieved after a message.\n"
  example: []
  syntax:
    content: After = 1
    return:
      type: Discord.Direction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.Direction.Around
  commentId: F:Discord.Direction.Around
  id: Around
  parent: Discord.Direction
  langs:
  - csharp
  - vb
  name: Around
  nameWithType: Direction.Around
  fullName: Discord.Direction.Around
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Channels/Direction.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Around
    path: ../src/Discord.Net.Core/Entities/Channels/Direction.cs
    startLine: 27
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nThe message(s) should be retrieved around a message.\n"
  example: []
  syntax:
    content: Around = 2
    return:
      type: Discord.Direction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Discord.Direction.Around
  commentId: F:Discord.Direction.Around
  isExternal: true
- uid: Discord.IMessageChannel.GetMessagesAsync(System.Int32,Discord.CacheMode,Discord.RequestOptions)
  commentId: M:Discord.IMessageChannel.GetMessagesAsync(System.Int32,Discord.CacheMode,Discord.RequestOptions)
  parent: Discord.IMessageChannel
  isExternal: true
  name: GetMessagesAsync(Int32, CacheMode, RequestOptions)
  nameWithType: IMessageChannel.GetMessagesAsync(Int32, CacheMode, RequestOptions)
  fullName: Discord.IMessageChannel.GetMessagesAsync(System.Int32, Discord.CacheMode, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IMessageChannel.GetMessagesAsync(System.Int32,Discord.CacheMode,Discord.RequestOptions)
    name: GetMessagesAsync
    nameWithType: IMessageChannel.GetMessagesAsync
    fullName: Discord.IMessageChannel.GetMessagesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.CacheMode
    name: CacheMode
    nameWithType: CacheMode
    fullName: Discord.CacheMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IMessageChannel.GetMessagesAsync(System.Int32,Discord.CacheMode,Discord.RequestOptions)
    name: GetMessagesAsync
    nameWithType: IMessageChannel.GetMessagesAsync
    fullName: Discord.IMessageChannel.GetMessagesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.CacheMode
    name: CacheMode
    nameWithType: CacheMode
    fullName: Discord.CacheMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.NotImplementedException
  commentId: T:System.NotImplementedException
  isExternal: true
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.IMessageChannel
  commentId: T:Discord.IMessageChannel
  parent: Discord
  name: IMessageChannel
  nameWithType: IMessageChannel
  fullName: Discord.IMessageChannel
- uid: Discord.Direction
  commentId: T:Discord.Direction
  parent: Discord
  name: Direction
  nameWithType: Direction
  fullName: Discord.Direction
