### YamlMime:ManagedReference
items:
- uid: Discord.Rest.GuildInfo
  commentId: T:Discord.Rest.GuildInfo
  id: GuildInfo
  parent: Discord.Rest
  children:
  - Discord.Rest.GuildInfo.AfkChannelId
  - Discord.Rest.GuildInfo.AfkTimeout
  - Discord.Rest.GuildInfo.ContentFilterLevel
  - Discord.Rest.GuildInfo.DefaultMessageNotifications
  - Discord.Rest.GuildInfo.IconHash
  - Discord.Rest.GuildInfo.MfaLevel
  - Discord.Rest.GuildInfo.Name
  - Discord.Rest.GuildInfo.Owner
  - Discord.Rest.GuildInfo.RegionId
  - Discord.Rest.GuildInfo.VerificationLevel
  langs:
  - csharp
  - vb
  name: GuildInfo
  nameWithType: GuildInfo
  fullName: Discord.Rest.GuildInfo
  type: Struct
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GuildInfo
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
    startLine: 5
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nRepresents information for a guild.\n"
  example: []
  syntax:
    content: public struct GuildInfo
    content.vb: Public Structure GuildInfo
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Discord.Rest.GuildInfo.AfkTimeout
  commentId: P:Discord.Rest.GuildInfo.AfkTimeout
  id: AfkTimeout
  parent: Discord.Rest.GuildInfo
  langs:
  - csharp
  - vb
  name: AfkTimeout
  nameWithType: GuildInfo.AfkTimeout
  fullName: Discord.Rest.GuildInfo.AfkTimeout
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AfkTimeout
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
    startLine: 31
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the amount of time (in seconds) a user must be inactive in a voice channel for until they are\nautomatically moved to the AFK voice channel.\n"
  example: []
  syntax:
    content: public int? AfkTimeout { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> representing the amount of time in seconds for a user to be marked as inactive\nand moved into the AFK voice channel.\n"
    content.vb: Public ReadOnly Property AfkTimeout As Integer?
  overload: Discord.Rest.GuildInfo.AfkTimeout*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.GuildInfo.DefaultMessageNotifications
  commentId: P:Discord.Rest.GuildInfo.DefaultMessageNotifications
  id: DefaultMessageNotifications
  parent: Discord.Rest.GuildInfo
  langs:
  - csharp
  - vb
  name: DefaultMessageNotifications
  nameWithType: GuildInfo.DefaultMessageNotifications
  fullName: Discord.Rest.GuildInfo.DefaultMessageNotifications
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: DefaultMessageNotifications
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
    startLine: 35
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the default message notifications for users who haven&apos;t explicitly set their notification settings.\n"
  example: []
  syntax:
    content: public DefaultMessageNotifications? DefaultMessageNotifications { get; }
    parameters: []
    return:
      type: System.Nullable{Discord.DefaultMessageNotifications}
    content.vb: Public ReadOnly Property DefaultMessageNotifications As DefaultMessageNotifications?
  overload: Discord.Rest.GuildInfo.DefaultMessageNotifications*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.GuildInfo.AfkChannelId
  commentId: P:Discord.Rest.GuildInfo.AfkChannelId
  id: AfkChannelId
  parent: Discord.Rest.GuildInfo
  langs:
  - csharp
  - vb
  name: AfkChannelId
  nameWithType: GuildInfo.AfkChannelId
  fullName: Discord.Rest.GuildInfo.AfkChannelId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AfkChannelId
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
    startLine: 43
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the ID of the AFK voice channel for this guild.\n"
  example: []
  syntax:
    content: public ulong? AfkChannelId { get; }
    parameters: []
    return:
      type: System.Nullable{System.UInt64}
      description: "\nA <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> representing the snowflake identifier of the AFK voice channel; <code>null</code> if\nnone is set.\n"
    content.vb: Public ReadOnly Property AfkChannelId As ULong?
  overload: Discord.Rest.GuildInfo.AfkChannelId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.GuildInfo.Name
  commentId: P:Discord.Rest.GuildInfo.Name
  id: Name
  parent: Discord.Rest.GuildInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: GuildInfo.Name
  fullName: Discord.Rest.GuildInfo.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
    startLine: 50
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the name of this guild.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the name of this guild.\n"
    content.vb: Public ReadOnly Property Name As String
  overload: Discord.Rest.GuildInfo.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.GuildInfo.RegionId
  commentId: P:Discord.Rest.GuildInfo.RegionId
  id: RegionId
  parent: Discord.Rest.GuildInfo
  langs:
  - csharp
  - vb
  name: RegionId
  nameWithType: GuildInfo.RegionId
  fullName: Discord.Rest.GuildInfo.RegionId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RegionId
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
    startLine: 54
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the ID of the region hosting this guild&apos;s voice channels.\n"
  example: []
  syntax:
    content: public string RegionId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property RegionId As String
  overload: Discord.Rest.GuildInfo.RegionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.GuildInfo.IconHash
  commentId: P:Discord.Rest.GuildInfo.IconHash
  id: IconHash
  parent: Discord.Rest.GuildInfo
  langs:
  - csharp
  - vb
  name: IconHash
  nameWithType: GuildInfo.IconHash
  fullName: Discord.Rest.GuildInfo.IconHash
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IconHash
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
    startLine: 61
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the ID of this guild&apos;s icon.\n"
  example: []
  syntax:
    content: public string IconHash { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the identifier for the splash image; <code>null</code> if none is set.\n"
    content.vb: Public ReadOnly Property IconHash As String
  overload: Discord.Rest.GuildInfo.IconHash*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.GuildInfo.VerificationLevel
  commentId: P:Discord.Rest.GuildInfo.VerificationLevel
  id: VerificationLevel
  parent: Discord.Rest.GuildInfo
  langs:
  - csharp
  - vb
  name: VerificationLevel
  nameWithType: GuildInfo.VerificationLevel
  fullName: Discord.Rest.GuildInfo.VerificationLevel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: VerificationLevel
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
    startLine: 68
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the level of requirements a user must fulfill before being allowed to post messages in this guild.\n"
  example: []
  syntax:
    content: public VerificationLevel? VerificationLevel { get; }
    parameters: []
    return:
      type: System.Nullable{Discord.VerificationLevel}
      description: "\nThe level of requirements.\n"
    content.vb: Public ReadOnly Property VerificationLevel As VerificationLevel?
  overload: Discord.Rest.GuildInfo.VerificationLevel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.GuildInfo.Owner
  commentId: P:Discord.Rest.GuildInfo.Owner
  id: Owner
  parent: Discord.Rest.GuildInfo
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: GuildInfo.Owner
  fullName: Discord.Rest.GuildInfo.Owner
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Owner
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
    startLine: 75
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the owner of this guild.\n"
  example: []
  syntax:
    content: public IUser Owner { get; }
    parameters: []
    return:
      type: Discord.IUser
      description: "\nA user object representing the owner of this guild.\n"
    content.vb: Public ReadOnly Property Owner As IUser
  overload: Discord.Rest.GuildInfo.Owner*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.GuildInfo.MfaLevel
  commentId: P:Discord.Rest.GuildInfo.MfaLevel
  id: MfaLevel
  parent: Discord.Rest.GuildInfo
  langs:
  - csharp
  - vb
  name: MfaLevel
  nameWithType: GuildInfo.MfaLevel
  fullName: Discord.Rest.GuildInfo.MfaLevel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MfaLevel
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
    startLine: 83
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the level of Multi-Factor Authentication requirements a user must fulfill before being allowed to\nperform administrative actions in this guild.\n"
  example: []
  syntax:
    content: public MfaLevel? MfaLevel { get; }
    parameters: []
    return:
      type: System.Nullable{Discord.MfaLevel}
      description: "\nThe level of MFA requirement.\n"
    content.vb: Public ReadOnly Property MfaLevel As MfaLevel?
  overload: Discord.Rest.GuildInfo.MfaLevel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.GuildInfo.ContentFilterLevel
  commentId: P:Discord.Rest.GuildInfo.ContentFilterLevel
  id: ContentFilterLevel
  parent: Discord.Rest.GuildInfo
  langs:
  - csharp
  - vb
  name: ContentFilterLevel
  nameWithType: GuildInfo.ContentFilterLevel
  fullName: Discord.Rest.GuildInfo.ContentFilterLevel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ContentFilterLevel
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/GuildInfo.cs
    startLine: 84
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: public int? ContentFilterLevel { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public ReadOnly Property ContentFilterLevel As Integer?
  overload: Discord.Rest.GuildInfo.ContentFilterLevel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Discord.Rest.GuildInfo.AfkTimeout*
  commentId: Overload:Discord.Rest.GuildInfo.AfkTimeout
  name: AfkTimeout
  nameWithType: GuildInfo.AfkTimeout
  fullName: Discord.Rest.GuildInfo.AfkTimeout
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.GuildInfo.DefaultMessageNotifications*
  commentId: Overload:Discord.Rest.GuildInfo.DefaultMessageNotifications
  name: DefaultMessageNotifications
  nameWithType: GuildInfo.DefaultMessageNotifications
  fullName: Discord.Rest.GuildInfo.DefaultMessageNotifications
- uid: System.Nullable{Discord.DefaultMessageNotifications}
  commentId: T:System.Nullable{Discord.DefaultMessageNotifications}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DefaultMessageNotifications>
  nameWithType: Nullable<DefaultMessageNotifications>
  fullName: System.Nullable<Discord.DefaultMessageNotifications>
  nameWithType.vb: Nullable(Of DefaultMessageNotifications)
  fullName.vb: System.Nullable(Of Discord.DefaultMessageNotifications)
  name.vb: Nullable(Of DefaultMessageNotifications)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.DefaultMessageNotifications
    name: DefaultMessageNotifications
    nameWithType: DefaultMessageNotifications
    fullName: Discord.DefaultMessageNotifications
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.DefaultMessageNotifications
    name: DefaultMessageNotifications
    nameWithType: DefaultMessageNotifications
    fullName: Discord.DefaultMessageNotifications
  - name: )
    nameWithType: )
    fullName: )
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.Rest.GuildInfo.AfkChannelId*
  commentId: Overload:Discord.Rest.GuildInfo.AfkChannelId
  name: AfkChannelId
  nameWithType: GuildInfo.AfkChannelId
  fullName: Discord.Rest.GuildInfo.AfkChannelId
- uid: System.Nullable{System.UInt64}
  commentId: T:System.Nullable{System.UInt64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UInt64>
  nameWithType: Nullable<UInt64>
  fullName: System.Nullable<System.UInt64>
  nameWithType.vb: Nullable(Of UInt64)
  fullName.vb: System.Nullable(Of System.UInt64)
  name.vb: Nullable(Of UInt64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.GuildInfo.Name*
  commentId: Overload:Discord.Rest.GuildInfo.Name
  name: Name
  nameWithType: GuildInfo.Name
  fullName: Discord.Rest.GuildInfo.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Rest.GuildInfo.RegionId*
  commentId: Overload:Discord.Rest.GuildInfo.RegionId
  name: RegionId
  nameWithType: GuildInfo.RegionId
  fullName: Discord.Rest.GuildInfo.RegionId
- uid: Discord.Rest.GuildInfo.IconHash*
  commentId: Overload:Discord.Rest.GuildInfo.IconHash
  name: IconHash
  nameWithType: GuildInfo.IconHash
  fullName: Discord.Rest.GuildInfo.IconHash
- uid: Discord.Rest.GuildInfo.VerificationLevel*
  commentId: Overload:Discord.Rest.GuildInfo.VerificationLevel
  name: VerificationLevel
  nameWithType: GuildInfo.VerificationLevel
  fullName: Discord.Rest.GuildInfo.VerificationLevel
- uid: System.Nullable{Discord.VerificationLevel}
  commentId: T:System.Nullable{Discord.VerificationLevel}
  parent: System
  definition: System.Nullable`1
  name: Nullable<VerificationLevel>
  nameWithType: Nullable<VerificationLevel>
  fullName: System.Nullable<Discord.VerificationLevel>
  nameWithType.vb: Nullable(Of VerificationLevel)
  fullName.vb: System.Nullable(Of Discord.VerificationLevel)
  name.vb: Nullable(Of VerificationLevel)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.VerificationLevel
    name: VerificationLevel
    nameWithType: VerificationLevel
    fullName: Discord.VerificationLevel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.VerificationLevel
    name: VerificationLevel
    nameWithType: VerificationLevel
    fullName: Discord.VerificationLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.GuildInfo.Owner*
  commentId: Overload:Discord.Rest.GuildInfo.Owner
  name: Owner
  nameWithType: GuildInfo.Owner
  fullName: Discord.Rest.GuildInfo.Owner
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Rest.GuildInfo.MfaLevel*
  commentId: Overload:Discord.Rest.GuildInfo.MfaLevel
  name: MfaLevel
  nameWithType: GuildInfo.MfaLevel
  fullName: Discord.Rest.GuildInfo.MfaLevel
- uid: System.Nullable{Discord.MfaLevel}
  commentId: T:System.Nullable{Discord.MfaLevel}
  parent: System
  definition: System.Nullable`1
  name: Nullable<MfaLevel>
  nameWithType: Nullable<MfaLevel>
  fullName: System.Nullable<Discord.MfaLevel>
  nameWithType.vb: Nullable(Of MfaLevel)
  fullName.vb: System.Nullable(Of Discord.MfaLevel)
  name.vb: Nullable(Of MfaLevel)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.MfaLevel
    name: MfaLevel
    nameWithType: MfaLevel
    fullName: Discord.MfaLevel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.MfaLevel
    name: MfaLevel
    nameWithType: MfaLevel
    fullName: Discord.MfaLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.GuildInfo.ContentFilterLevel*
  commentId: Overload:Discord.Rest.GuildInfo.ContentFilterLevel
  name: ContentFilterLevel
  nameWithType: GuildInfo.ContentFilterLevel
  fullName: Discord.Rest.GuildInfo.ContentFilterLevel
