### YamlMime:ManagedReference
items:
- uid: Discord.AsyncEnumerableExtensions
  commentId: T:Discord.AsyncEnumerableExtensions
  id: AsyncEnumerableExtensions
  parent: Discord
  children:
  - Discord.AsyncEnumerableExtensions.Flatten``1(IAsyncEnumerable{IEnumerable{``0}})
  - Discord.AsyncEnumerableExtensions.FlattenAsync``1(IAsyncEnumerable{IEnumerable{``0}})
  langs:
  - csharp
  - vb
  name: AsyncEnumerableExtensions
  nameWithType: AsyncEnumerableExtensions
  fullName: Discord.AsyncEnumerableExtensions
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Extensions/AsyncEnumerableExtensions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AsyncEnumerableExtensions
    path: ../src/Discord.Net.Core/Extensions/AsyncEnumerableExtensions.cs
    startLine: 12
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'An extension class for squashing <see cref="!:IAsyncEnumerable&lt;T>"></see>. '
  remarks: "\nThis set of extension methods will squash an <see cref=\"!:IAsyncEnumerable&lt;T>\"></see> into a\nsingle <see cref=\"!:IEnumerable&lt;T>\"></see>. This is often associated with requests that has a\nset limit when requesting.\n"
  example: []
  syntax:
    content: 'public static class AsyncEnumerableExtensions : object'
    content.vb: >-
      Public Module AsyncEnumerableExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Discord.AsyncEnumerableExtensions.FlattenAsync``1(IAsyncEnumerable{IEnumerable{``0}})
  commentId: M:Discord.AsyncEnumerableExtensions.FlattenAsync``1(IAsyncEnumerable{IEnumerable{``0}})
  id: FlattenAsync``1(IAsyncEnumerable{IEnumerable{``0}})
  isExtensionMethod: true
  parent: Discord.AsyncEnumerableExtensions
  langs:
  - csharp
  - vb
  name: FlattenAsync<T>(IAsyncEnumerable<IEnumerable<T>>)
  nameWithType: AsyncEnumerableExtensions.FlattenAsync<T>(IAsyncEnumerable<IEnumerable<T>>)
  fullName: Discord.AsyncEnumerableExtensions.FlattenAsync<T>(IAsyncEnumerable<IEnumerable<T>>)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Extensions/AsyncEnumerableExtensions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: FlattenAsync
    path: ../src/Discord.Net.Core/Extensions/AsyncEnumerableExtensions.cs
    startLine: 15
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Flattens the specified pages into one <see cref="!:IEnumerable&lt;T>"></see> asynchronously. '
  example: []
  syntax:
    content: public static Task<IEnumerable<T>> FlattenAsync<T>(this IAsyncEnumerable<IEnumerable<T>> source)
    parameters:
    - id: source
      type: IAsyncEnumerable{IEnumerable{{T}}}
    typeParameters:
    - id: T
    return:
      type: Task{IEnumerable{{T}}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FlattenAsync(Of T)(source As IAsyncEnumerable(Of IEnumerable(Of T))) As Task(Of IEnumerable(Of T))
  overload: Discord.AsyncEnumerableExtensions.FlattenAsync*
  nameWithType.vb: AsyncEnumerableExtensions.FlattenAsync(Of T)(IAsyncEnumerable(Of IEnumerable(Of T)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.AsyncEnumerableExtensions.FlattenAsync(Of T)(IAsyncEnumerable(Of IEnumerable(Of T)))
  name.vb: FlattenAsync(Of T)(IAsyncEnumerable(Of IEnumerable(Of T)))
- uid: Discord.AsyncEnumerableExtensions.Flatten``1(IAsyncEnumerable{IEnumerable{``0}})
  commentId: M:Discord.AsyncEnumerableExtensions.Flatten``1(IAsyncEnumerable{IEnumerable{``0}})
  id: Flatten``1(IAsyncEnumerable{IEnumerable{``0}})
  isExtensionMethod: true
  parent: Discord.AsyncEnumerableExtensions
  langs:
  - csharp
  - vb
  name: Flatten<T>(IAsyncEnumerable<IEnumerable<T>>)
  nameWithType: AsyncEnumerableExtensions.Flatten<T>(IAsyncEnumerable<IEnumerable<T>>)
  fullName: Discord.AsyncEnumerableExtensions.Flatten<T>(IAsyncEnumerable<IEnumerable<T>>)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Extensions/AsyncEnumerableExtensions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Flatten
    path: ../src/Discord.Net.Core/Extensions/AsyncEnumerableExtensions.cs
    startLine: 20
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Flattens the specified pages into one <see cref="!:IAsyncEnumerable&lt;T>"></see>. '
  example: []
  syntax:
    content: public static IAsyncEnumerable<T> Flatten<T>(this IAsyncEnumerable<IEnumerable<T>> source)
    parameters:
    - id: source
      type: IAsyncEnumerable{IEnumerable{{T}}}
    typeParameters:
    - id: T
    return:
      type: IAsyncEnumerable{{T}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Flatten(Of T)(source As IAsyncEnumerable(Of IEnumerable(Of T))) As IAsyncEnumerable(Of T)
  overload: Discord.AsyncEnumerableExtensions.Flatten*
  nameWithType.vb: AsyncEnumerableExtensions.Flatten(Of T)(IAsyncEnumerable(Of IEnumerable(Of T)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.AsyncEnumerableExtensions.Flatten(Of T)(IAsyncEnumerable(Of IEnumerable(Of T)))
  name.vb: Flatten(Of T)(IAsyncEnumerable(Of IEnumerable(Of T)))
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.AsyncEnumerableExtensions.FlattenAsync*
  commentId: Overload:Discord.AsyncEnumerableExtensions.FlattenAsync
  name: FlattenAsync
  nameWithType: AsyncEnumerableExtensions.FlattenAsync
  fullName: Discord.AsyncEnumerableExtensions.FlattenAsync
- uid: IAsyncEnumerable{IEnumerable{{T}}}
  commentId: '!:IAsyncEnumerable{IEnumerable{``0}}'
  definition: IAsyncEnumerable`1
  name: IAsyncEnumerable<IEnumerable<T>>
  nameWithType: IAsyncEnumerable<IEnumerable<T>>
  fullName: IAsyncEnumerable<IEnumerable<T>>
  nameWithType.vb: IAsyncEnumerable(Of IEnumerable(Of T))
  fullName.vb: IAsyncEnumerable(Of IEnumerable(Of T))
  name.vb: IAsyncEnumerable(Of IEnumerable(Of T))
  spec.csharp:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Task{IEnumerable{{T}}}
  commentId: '!:Task{IEnumerable{``0}}'
  definition: Task`1
  name: Task<IEnumerable<T>>
  nameWithType: Task<IEnumerable<T>>
  fullName: Task<IEnumerable<T>>
  nameWithType.vb: Task(Of IEnumerable(Of T))
  fullName.vb: Task(Of IEnumerable(Of T))
  name.vb: Task(Of IEnumerable(Of T))
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<>
  nameWithType: IAsyncEnumerable<>
  fullName: IAsyncEnumerable<>
  nameWithType.vb: IAsyncEnumerable(Of )
  fullName.vb: IAsyncEnumerable(Of )
  name.vb: IAsyncEnumerable(Of )
  spec.csharp:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.AsyncEnumerableExtensions.Flatten*
  commentId: Overload:Discord.AsyncEnumerableExtensions.Flatten
  name: Flatten
  nameWithType: AsyncEnumerableExtensions.Flatten
  fullName: Discord.AsyncEnumerableExtensions.Flatten
- uid: IAsyncEnumerable{{T}}
  commentId: '!:IAsyncEnumerable{``0}'
  definition: IAsyncEnumerable`1
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
