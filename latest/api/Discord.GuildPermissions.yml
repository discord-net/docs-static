### YamlMime:ManagedReference
items:
- uid: Discord.GuildPermissions
  commentId: T:Discord.GuildPermissions
  id: GuildPermissions
  parent: Discord
  children:
  - Discord.GuildPermissions.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - Discord.GuildPermissions.#ctor(System.UInt64)
  - Discord.GuildPermissions.AddReactions
  - Discord.GuildPermissions.Administrator
  - Discord.GuildPermissions.All
  - Discord.GuildPermissions.AttachFiles
  - Discord.GuildPermissions.BanMembers
  - Discord.GuildPermissions.ChangeNickname
  - Discord.GuildPermissions.Connect
  - Discord.GuildPermissions.CreateInstantInvite
  - Discord.GuildPermissions.DeafenMembers
  - Discord.GuildPermissions.EmbedLinks
  - Discord.GuildPermissions.Has(Discord.GuildPermission)
  - Discord.GuildPermissions.KickMembers
  - Discord.GuildPermissions.ManageChannels
  - Discord.GuildPermissions.ManageEmojis
  - Discord.GuildPermissions.ManageGuild
  - Discord.GuildPermissions.ManageMessages
  - Discord.GuildPermissions.ManageNicknames
  - Discord.GuildPermissions.ManageRoles
  - Discord.GuildPermissions.ManageWebhooks
  - Discord.GuildPermissions.MentionEveryone
  - Discord.GuildPermissions.Modify(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  - Discord.GuildPermissions.MoveMembers
  - Discord.GuildPermissions.MuteMembers
  - Discord.GuildPermissions.None
  - Discord.GuildPermissions.PrioritySpeaker
  - Discord.GuildPermissions.RawValue
  - Discord.GuildPermissions.ReadMessageHistory
  - Discord.GuildPermissions.ReadMessages
  - Discord.GuildPermissions.SendMessages
  - Discord.GuildPermissions.SendTTSMessages
  - Discord.GuildPermissions.Speak
  - Discord.GuildPermissions.ToList
  - Discord.GuildPermissions.ToString
  - Discord.GuildPermissions.UseExternalEmojis
  - Discord.GuildPermissions.UseVAD
  - Discord.GuildPermissions.ViewAuditLog
  - Discord.GuildPermissions.ViewChannel
  - Discord.GuildPermissions.Webhook
  langs:
  - csharp
  - vb
  name: GuildPermissions
  nameWithType: GuildPermissions
  fullName: Discord.GuildPermissions
  type: Struct
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: GuildPermissions
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 6
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public struct GuildPermissions
    content.vb: Public Structure GuildPermissions
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Discord.GuildPermissions.None
  commentId: F:Discord.GuildPermissions.None
  id: None
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: None
  nameWithType: GuildPermissions.None
  fullName: Discord.GuildPermissions.None
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: None
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 10
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets a blank <xref href="Discord.GuildPermissions" data-throw-if-not-resolved="false"></xref> that grants no permissions. '
  example: []
  syntax:
    content: public static readonly GuildPermissions None
    return:
      type: Discord.GuildPermissions
    content.vb: Public Shared ReadOnly None As GuildPermissions
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Discord.GuildPermissions.Webhook
  commentId: F:Discord.GuildPermissions.Webhook
  id: Webhook
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: Webhook
  nameWithType: GuildPermissions.Webhook
  fullName: Discord.GuildPermissions.Webhook
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Webhook
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 12
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets a <xref href="Discord.GuildPermissions" data-throw-if-not-resolved="false"></xref> that grants all guild permissions for webhook users. '
  example: []
  syntax:
    content: public static readonly GuildPermissions Webhook
    return:
      type: Discord.GuildPermissions
    content.vb: Public Shared ReadOnly Webhook As GuildPermissions
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Discord.GuildPermissions.All
  commentId: F:Discord.GuildPermissions.All
  id: All
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: All
  nameWithType: GuildPermissions.All
  fullName: Discord.GuildPermissions.All
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: All
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 14
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets a <xref href="Discord.GuildPermissions" data-throw-if-not-resolved="false"></xref> that grants all guild permissions. '
  example: []
  syntax:
    content: public static readonly GuildPermissions All
    return:
      type: Discord.GuildPermissions
    content.vb: Public Shared ReadOnly All As GuildPermissions
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Discord.GuildPermissions.RawValue
  commentId: P:Discord.GuildPermissions.RawValue
  id: RawValue
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: RawValue
  nameWithType: GuildPermissions.RawValue
  fullName: Discord.GuildPermissions.RawValue
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: RawValue
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 17
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets a packed value representing all the permissions in this <xref href="Discord.GuildPermissions" data-throw-if-not-resolved="false"></xref>. '
  example: []
  syntax:
    content: public ulong RawValue { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property RawValue As ULong
  overload: Discord.GuildPermissions.RawValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.CreateInstantInvite
  commentId: P:Discord.GuildPermissions.CreateInstantInvite
  id: CreateInstantInvite
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: CreateInstantInvite
  nameWithType: GuildPermissions.CreateInstantInvite
  fullName: Discord.GuildPermissions.CreateInstantInvite
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: CreateInstantInvite
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 20
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may create invites. '
  example: []
  syntax:
    content: public bool CreateInstantInvite { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CreateInstantInvite As Boolean
  overload: Discord.GuildPermissions.CreateInstantInvite*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.BanMembers
  commentId: P:Discord.GuildPermissions.BanMembers
  id: BanMembers
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: BanMembers
  nameWithType: GuildPermissions.BanMembers
  fullName: Discord.GuildPermissions.BanMembers
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: BanMembers
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 22
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may ban users from the guild. '
  example: []
  syntax:
    content: public bool BanMembers { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property BanMembers As Boolean
  overload: Discord.GuildPermissions.BanMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.KickMembers
  commentId: P:Discord.GuildPermissions.KickMembers
  id: KickMembers
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: KickMembers
  nameWithType: GuildPermissions.KickMembers
  fullName: Discord.GuildPermissions.KickMembers
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: KickMembers
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 24
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may kick users from the guild. '
  example: []
  syntax:
    content: public bool KickMembers { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property KickMembers As Boolean
  overload: Discord.GuildPermissions.KickMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.Administrator
  commentId: P:Discord.GuildPermissions.Administrator
  id: Administrator
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: Administrator
  nameWithType: GuildPermissions.Administrator
  fullName: Discord.GuildPermissions.Administrator
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Administrator
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 26
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user is granted all permissions, and cannot have them revoked via channel permissions. '
  example: []
  syntax:
    content: public bool Administrator { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Administrator As Boolean
  overload: Discord.GuildPermissions.Administrator*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.ManageChannels
  commentId: P:Discord.GuildPermissions.ManageChannels
  id: ManageChannels
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: ManageChannels
  nameWithType: GuildPermissions.ManageChannels
  fullName: Discord.GuildPermissions.ManageChannels
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ManageChannels
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 28
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may create, delete and modify channels. '
  example: []
  syntax:
    content: public bool ManageChannels { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ManageChannels As Boolean
  overload: Discord.GuildPermissions.ManageChannels*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.ManageGuild
  commentId: P:Discord.GuildPermissions.ManageGuild
  id: ManageGuild
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: ManageGuild
  nameWithType: GuildPermissions.ManageGuild
  fullName: Discord.GuildPermissions.ManageGuild
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ManageGuild
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 30
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may adjust guild properties. '
  example: []
  syntax:
    content: public bool ManageGuild { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ManageGuild As Boolean
  overload: Discord.GuildPermissions.ManageGuild*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.AddReactions
  commentId: P:Discord.GuildPermissions.AddReactions
  id: AddReactions
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: AddReactions
  nameWithType: GuildPermissions.AddReactions
  fullName: Discord.GuildPermissions.AddReactions
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: AddReactions
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 33
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may add reactions. '
  example: []
  syntax:
    content: public bool AddReactions { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AddReactions As Boolean
  overload: Discord.GuildPermissions.AddReactions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.ViewAuditLog
  commentId: P:Discord.GuildPermissions.ViewAuditLog
  id: ViewAuditLog
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: ViewAuditLog
  nameWithType: GuildPermissions.ViewAuditLog
  fullName: Discord.GuildPermissions.ViewAuditLog
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ViewAuditLog
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 35
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may view the audit log. '
  example: []
  syntax:
    content: public bool ViewAuditLog { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ViewAuditLog As Boolean
  overload: Discord.GuildPermissions.ViewAuditLog*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.ReadMessages
  commentId: P:Discord.GuildPermissions.ReadMessages
  id: ReadMessages
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: ReadMessages
  nameWithType: GuildPermissions.ReadMessages
  fullName: Discord.GuildPermissions.ReadMessages
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ReadMessages
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 38
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If True, a user may join channels. '
  example: []
  syntax:
    content: public bool ReadMessages { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ReadMessages As Boolean
  overload: Discord.GuildPermissions.ReadMessages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.ViewChannel
  commentId: P:Discord.GuildPermissions.ViewChannel
  id: ViewChannel
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: ViewChannel
  nameWithType: GuildPermissions.ViewChannel
  fullName: Discord.GuildPermissions.ViewChannel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ViewChannel
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 41
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If True, a user may view channels. '
  example: []
  syntax:
    content: public bool ViewChannel { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ViewChannel As Boolean
  overload: Discord.GuildPermissions.ViewChannel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.SendMessages
  commentId: P:Discord.GuildPermissions.SendMessages
  id: SendMessages
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: SendMessages
  nameWithType: GuildPermissions.SendMessages
  fullName: Discord.GuildPermissions.SendMessages
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: SendMessages
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 43
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If True, a user may send messages. '
  example: []
  syntax:
    content: public bool SendMessages { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property SendMessages As Boolean
  overload: Discord.GuildPermissions.SendMessages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.SendTTSMessages
  commentId: P:Discord.GuildPermissions.SendTTSMessages
  id: SendTTSMessages
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: SendTTSMessages
  nameWithType: GuildPermissions.SendTTSMessages
  fullName: Discord.GuildPermissions.SendTTSMessages
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: SendTTSMessages
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 45
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may send text-to-speech messages. '
  example: []
  syntax:
    content: public bool SendTTSMessages { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property SendTTSMessages As Boolean
  overload: Discord.GuildPermissions.SendTTSMessages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.ManageMessages
  commentId: P:Discord.GuildPermissions.ManageMessages
  id: ManageMessages
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: ManageMessages
  nameWithType: GuildPermissions.ManageMessages
  fullName: Discord.GuildPermissions.ManageMessages
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ManageMessages
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 47
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may delete messages. '
  example: []
  syntax:
    content: public bool ManageMessages { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ManageMessages As Boolean
  overload: Discord.GuildPermissions.ManageMessages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.EmbedLinks
  commentId: P:Discord.GuildPermissions.EmbedLinks
  id: EmbedLinks
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: EmbedLinks
  nameWithType: GuildPermissions.EmbedLinks
  fullName: Discord.GuildPermissions.EmbedLinks
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: EmbedLinks
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 49
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, Discord will auto-embed links sent by this user. '
  example: []
  syntax:
    content: public bool EmbedLinks { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property EmbedLinks As Boolean
  overload: Discord.GuildPermissions.EmbedLinks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.AttachFiles
  commentId: P:Discord.GuildPermissions.AttachFiles
  id: AttachFiles
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: AttachFiles
  nameWithType: GuildPermissions.AttachFiles
  fullName: Discord.GuildPermissions.AttachFiles
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: AttachFiles
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 51
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may send files. '
  example: []
  syntax:
    content: public bool AttachFiles { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AttachFiles As Boolean
  overload: Discord.GuildPermissions.AttachFiles*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.ReadMessageHistory
  commentId: P:Discord.GuildPermissions.ReadMessageHistory
  id: ReadMessageHistory
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: ReadMessageHistory
  nameWithType: GuildPermissions.ReadMessageHistory
  fullName: Discord.GuildPermissions.ReadMessageHistory
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ReadMessageHistory
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 53
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may read previous messages. '
  example: []
  syntax:
    content: public bool ReadMessageHistory { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ReadMessageHistory As Boolean
  overload: Discord.GuildPermissions.ReadMessageHistory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.MentionEveryone
  commentId: P:Discord.GuildPermissions.MentionEveryone
  id: MentionEveryone
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: MentionEveryone
  nameWithType: GuildPermissions.MentionEveryone
  fullName: Discord.GuildPermissions.MentionEveryone
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: MentionEveryone
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 55
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may mention @everyone. '
  example: []
  syntax:
    content: public bool MentionEveryone { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property MentionEveryone As Boolean
  overload: Discord.GuildPermissions.MentionEveryone*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.UseExternalEmojis
  commentId: P:Discord.GuildPermissions.UseExternalEmojis
  id: UseExternalEmojis
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: UseExternalEmojis
  nameWithType: GuildPermissions.UseExternalEmojis
  fullName: Discord.GuildPermissions.UseExternalEmojis
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: UseExternalEmojis
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 57
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may use custom emoji from other guilds. '
  example: []
  syntax:
    content: public bool UseExternalEmojis { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property UseExternalEmojis As Boolean
  overload: Discord.GuildPermissions.UseExternalEmojis*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.Connect
  commentId: P:Discord.GuildPermissions.Connect
  id: Connect
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: Connect
  nameWithType: GuildPermissions.Connect
  fullName: Discord.GuildPermissions.Connect
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Connect
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 60
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may connect to a voice channel. '
  example: []
  syntax:
    content: public bool Connect { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Connect As Boolean
  overload: Discord.GuildPermissions.Connect*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.Speak
  commentId: P:Discord.GuildPermissions.Speak
  id: Speak
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: Speak
  nameWithType: GuildPermissions.Speak
  fullName: Discord.GuildPermissions.Speak
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Speak
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 62
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may speak in a voice channel. '
  example: []
  syntax:
    content: public bool Speak { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Speak As Boolean
  overload: Discord.GuildPermissions.Speak*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.MuteMembers
  commentId: P:Discord.GuildPermissions.MuteMembers
  id: MuteMembers
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: MuteMembers
  nameWithType: GuildPermissions.MuteMembers
  fullName: Discord.GuildPermissions.MuteMembers
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: MuteMembers
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 64
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may mute users. '
  example: []
  syntax:
    content: public bool MuteMembers { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property MuteMembers As Boolean
  overload: Discord.GuildPermissions.MuteMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.DeafenMembers
  commentId: P:Discord.GuildPermissions.DeafenMembers
  id: DeafenMembers
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: DeafenMembers
  nameWithType: GuildPermissions.DeafenMembers
  fullName: Discord.GuildPermissions.DeafenMembers
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: DeafenMembers
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 66
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may deafen users. '
  example: []
  syntax:
    content: public bool DeafenMembers { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property DeafenMembers As Boolean
  overload: Discord.GuildPermissions.DeafenMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.MoveMembers
  commentId: P:Discord.GuildPermissions.MoveMembers
  id: MoveMembers
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: MoveMembers
  nameWithType: GuildPermissions.MoveMembers
  fullName: Discord.GuildPermissions.MoveMembers
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: MoveMembers
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 68
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may move other users between voice channels. '
  example: []
  syntax:
    content: public bool MoveMembers { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property MoveMembers As Boolean
  overload: Discord.GuildPermissions.MoveMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.UseVAD
  commentId: P:Discord.GuildPermissions.UseVAD
  id: UseVAD
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: UseVAD
  nameWithType: GuildPermissions.UseVAD
  fullName: Discord.GuildPermissions.UseVAD
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: UseVAD
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 70
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may use voice-activity-detection rather than push-to-talk. '
  example: []
  syntax:
    content: public bool UseVAD { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property UseVAD As Boolean
  overload: Discord.GuildPermissions.UseVAD*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.PrioritySpeaker
  commentId: P:Discord.GuildPermissions.PrioritySpeaker
  id: PrioritySpeaker
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: PrioritySpeaker
  nameWithType: GuildPermissions.PrioritySpeaker
  fullName: Discord.GuildPermissions.PrioritySpeaker
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: PrioritySpeaker
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 72
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If True, a user may use priority speaker in a voice channel. '
  example: []
  syntax:
    content: public bool PrioritySpeaker { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property PrioritySpeaker As Boolean
  overload: Discord.GuildPermissions.PrioritySpeaker*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.ChangeNickname
  commentId: P:Discord.GuildPermissions.ChangeNickname
  id: ChangeNickname
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: ChangeNickname
  nameWithType: GuildPermissions.ChangeNickname
  fullName: Discord.GuildPermissions.ChangeNickname
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ChangeNickname
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 75
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may change their own nickname. '
  example: []
  syntax:
    content: public bool ChangeNickname { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ChangeNickname As Boolean
  overload: Discord.GuildPermissions.ChangeNickname*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.ManageNicknames
  commentId: P:Discord.GuildPermissions.ManageNicknames
  id: ManageNicknames
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: ManageNicknames
  nameWithType: GuildPermissions.ManageNicknames
  fullName: Discord.GuildPermissions.ManageNicknames
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ManageNicknames
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 77
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may change the nickname of other users. '
  example: []
  syntax:
    content: public bool ManageNicknames { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ManageNicknames As Boolean
  overload: Discord.GuildPermissions.ManageNicknames*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.ManageRoles
  commentId: P:Discord.GuildPermissions.ManageRoles
  id: ManageRoles
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: ManageRoles
  nameWithType: GuildPermissions.ManageRoles
  fullName: Discord.GuildPermissions.ManageRoles
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ManageRoles
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 79
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may adjust roles. '
  example: []
  syntax:
    content: public bool ManageRoles { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ManageRoles As Boolean
  overload: Discord.GuildPermissions.ManageRoles*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.ManageWebhooks
  commentId: P:Discord.GuildPermissions.ManageWebhooks
  id: ManageWebhooks
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: ManageWebhooks
  nameWithType: GuildPermissions.ManageWebhooks
  fullName: Discord.GuildPermissions.ManageWebhooks
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ManageWebhooks
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 81
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may edit the webhooks for this guild. '
  example: []
  syntax:
    content: public bool ManageWebhooks { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ManageWebhooks As Boolean
  overload: Discord.GuildPermissions.ManageWebhooks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.ManageEmojis
  commentId: P:Discord.GuildPermissions.ManageEmojis
  id: ManageEmojis
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: ManageEmojis
  nameWithType: GuildPermissions.ManageEmojis
  fullName: Discord.GuildPermissions.ManageEmojis
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ManageEmojis
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 83
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may edit the emojis for this guild. '
  example: []
  syntax:
    content: public bool ManageEmojis { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ManageEmojis As Boolean
  overload: Discord.GuildPermissions.ManageEmojis*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GuildPermissions.#ctor(System.UInt64)
  commentId: M:Discord.GuildPermissions.#ctor(System.UInt64)
  id: '#ctor(System.UInt64)'
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: GuildPermissions(UInt64)
  nameWithType: GuildPermissions.GuildPermissions(UInt64)
  fullName: Discord.GuildPermissions.GuildPermissions(System.UInt64)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 86
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Creates a new <xref href="Discord.GuildPermissions" data-throw-if-not-resolved="false"></xref> with the provided packed value. '
  example: []
  syntax:
    content: public GuildPermissions(ulong rawValue)
    parameters:
    - id: rawValue
      type: System.UInt64
    content.vb: Public Sub New(rawValue As ULong)
  overload: Discord.GuildPermissions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.GuildPermissions.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Discord.GuildPermissions.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)'
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: GuildPermissions(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean)
  nameWithType: GuildPermissions.GuildPermissions(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean)
  fullName: Discord.GuildPermissions.GuildPermissions(System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 155
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Creates a new <xref href="Discord.GuildPermissions" data-throw-if-not-resolved="false"></xref> structure with the provided permissions. '
  example: []
  syntax:
    content: public GuildPermissions(bool createInstantInvite = false, bool kickMembers = false, bool banMembers = false, bool administrator = false, bool manageChannels = false, bool manageGuild = false, bool addReactions = false, bool viewAuditLog = false, bool viewChannel = false, bool sendMessages = false, bool sendTTSMessages = false, bool manageMessages = false, bool embedLinks = false, bool attachFiles = false, bool readMessageHistory = false, bool mentionEveryone = false, bool useExternalEmojis = false, bool connect = false, bool speak = false, bool muteMembers = false, bool deafenMembers = false, bool moveMembers = false, bool useVoiceActivation = false, bool prioritySpeaker = false, bool changeNickname = false, bool manageNicknames = false, bool manageRoles = false, bool manageWebhooks = false, bool manageEmojis = false)
    parameters:
    - id: createInstantInvite
      type: System.Boolean
    - id: kickMembers
      type: System.Boolean
    - id: banMembers
      type: System.Boolean
    - id: administrator
      type: System.Boolean
    - id: manageChannels
      type: System.Boolean
    - id: manageGuild
      type: System.Boolean
    - id: addReactions
      type: System.Boolean
    - id: viewAuditLog
      type: System.Boolean
    - id: viewChannel
      type: System.Boolean
    - id: sendMessages
      type: System.Boolean
    - id: sendTTSMessages
      type: System.Boolean
    - id: manageMessages
      type: System.Boolean
    - id: embedLinks
      type: System.Boolean
    - id: attachFiles
      type: System.Boolean
    - id: readMessageHistory
      type: System.Boolean
    - id: mentionEveryone
      type: System.Boolean
    - id: useExternalEmojis
      type: System.Boolean
    - id: connect
      type: System.Boolean
    - id: speak
      type: System.Boolean
    - id: muteMembers
      type: System.Boolean
    - id: deafenMembers
      type: System.Boolean
    - id: moveMembers
      type: System.Boolean
    - id: useVoiceActivation
      type: System.Boolean
    - id: prioritySpeaker
      type: System.Boolean
    - id: changeNickname
      type: System.Boolean
    - id: manageNicknames
      type: System.Boolean
    - id: manageRoles
      type: System.Boolean
    - id: manageWebhooks
      type: System.Boolean
    - id: manageEmojis
      type: System.Boolean
    content.vb: Public Sub New(createInstantInvite As Boolean = False, kickMembers As Boolean = False, banMembers As Boolean = False, administrator As Boolean = False, manageChannels As Boolean = False, manageGuild As Boolean = False, addReactions As Boolean = False, viewAuditLog As Boolean = False, viewChannel As Boolean = False, sendMessages As Boolean = False, sendTTSMessages As Boolean = False, manageMessages As Boolean = False, embedLinks As Boolean = False, attachFiles As Boolean = False, readMessageHistory As Boolean = False, mentionEveryone As Boolean = False, useExternalEmojis As Boolean = False, connect As Boolean = False, speak As Boolean = False, muteMembers As Boolean = False, deafenMembers As Boolean = False, moveMembers As Boolean = False, useVoiceActivation As Boolean = False, prioritySpeaker As Boolean = False, changeNickname As Boolean = False, manageNicknames As Boolean = False, manageRoles As Boolean = False, manageWebhooks As Boolean = False, manageEmojis As Boolean = False)
  overload: Discord.GuildPermissions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.GuildPermissions.Modify(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  commentId: M:Discord.GuildPermissions.Modify(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  id: Modify(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: Modify(Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>)
  nameWithType: GuildPermissions.Modify(Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>)
  fullName: Discord.GuildPermissions.Modify(System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Modify
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 218
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Creates a new <xref href="Discord.GuildPermissions" data-throw-if-not-resolved="false"></xref> from this one, changing the provided non-null permissions. '
  example: []
  syntax:
    content: public GuildPermissions Modify(bool? createInstantInvite = null, bool? kickMembers = null, bool? banMembers = null, bool? administrator = null, bool? manageChannels = null, bool? manageGuild = null, bool? addReactions = null, bool? viewAuditLog = null, bool? viewChannel = null, bool? sendMessages = null, bool? sendTTSMessages = null, bool? manageMessages = null, bool? embedLinks = null, bool? attachFiles = null, bool? readMessageHistory = null, bool? mentionEveryone = null, bool? useExternalEmojis = null, bool? connect = null, bool? speak = null, bool? muteMembers = null, bool? deafenMembers = null, bool? moveMembers = null, bool? useVoiceActivation = null, bool? prioritySpeaker = null, bool? changeNickname = null, bool? manageNicknames = null, bool? manageRoles = null, bool? manageWebhooks = null, bool? manageEmojis = null)
    parameters:
    - id: createInstantInvite
      type: System.Nullable{System.Boolean}
    - id: kickMembers
      type: System.Nullable{System.Boolean}
    - id: banMembers
      type: System.Nullable{System.Boolean}
    - id: administrator
      type: System.Nullable{System.Boolean}
    - id: manageChannels
      type: System.Nullable{System.Boolean}
    - id: manageGuild
      type: System.Nullable{System.Boolean}
    - id: addReactions
      type: System.Nullable{System.Boolean}
    - id: viewAuditLog
      type: System.Nullable{System.Boolean}
    - id: viewChannel
      type: System.Nullable{System.Boolean}
    - id: sendMessages
      type: System.Nullable{System.Boolean}
    - id: sendTTSMessages
      type: System.Nullable{System.Boolean}
    - id: manageMessages
      type: System.Nullable{System.Boolean}
    - id: embedLinks
      type: System.Nullable{System.Boolean}
    - id: attachFiles
      type: System.Nullable{System.Boolean}
    - id: readMessageHistory
      type: System.Nullable{System.Boolean}
    - id: mentionEveryone
      type: System.Nullable{System.Boolean}
    - id: useExternalEmojis
      type: System.Nullable{System.Boolean}
    - id: connect
      type: System.Nullable{System.Boolean}
    - id: speak
      type: System.Nullable{System.Boolean}
    - id: muteMembers
      type: System.Nullable{System.Boolean}
    - id: deafenMembers
      type: System.Nullable{System.Boolean}
    - id: moveMembers
      type: System.Nullable{System.Boolean}
    - id: useVoiceActivation
      type: System.Nullable{System.Boolean}
    - id: prioritySpeaker
      type: System.Nullable{System.Boolean}
    - id: changeNickname
      type: System.Nullable{System.Boolean}
    - id: manageNicknames
      type: System.Nullable{System.Boolean}
    - id: manageRoles
      type: System.Nullable{System.Boolean}
    - id: manageWebhooks
      type: System.Nullable{System.Boolean}
    - id: manageEmojis
      type: System.Nullable{System.Boolean}
    return:
      type: Discord.GuildPermissions
    content.vb: Public Function Modify(createInstantInvite As Boolean? = Nothing, kickMembers As Boolean? = Nothing, banMembers As Boolean? = Nothing, administrator As Boolean? = Nothing, manageChannels As Boolean? = Nothing, manageGuild As Boolean? = Nothing, addReactions As Boolean? = Nothing, viewAuditLog As Boolean? = Nothing, viewChannel As Boolean? = Nothing, sendMessages As Boolean? = Nothing, sendTTSMessages As Boolean? = Nothing, manageMessages As Boolean? = Nothing, embedLinks As Boolean? = Nothing, attachFiles As Boolean? = Nothing, readMessageHistory As Boolean? = Nothing, mentionEveryone As Boolean? = Nothing, useExternalEmojis As Boolean? = Nothing, connect As Boolean? = Nothing, speak As Boolean? = Nothing, muteMembers As Boolean? = Nothing, deafenMembers As Boolean? = Nothing, moveMembers As Boolean? = Nothing, useVoiceActivation As Boolean? = Nothing, prioritySpeaker As Boolean? = Nothing, changeNickname As Boolean? = Nothing, manageNicknames As Boolean? = Nothing, manageRoles As Boolean? = Nothing, manageWebhooks As Boolean? = Nothing, manageEmojis As Boolean? = Nothing) As GuildPermissions
  overload: Discord.GuildPermissions.Modify*
  nameWithType.vb: GuildPermissions.Modify(Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.GuildPermissions.Modify(System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean))
  name.vb: Modify(Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean))
- uid: Discord.GuildPermissions.Has(Discord.GuildPermission)
  commentId: M:Discord.GuildPermissions.Has(Discord.GuildPermission)
  id: Has(Discord.GuildPermission)
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: Has(GuildPermission)
  nameWithType: GuildPermissions.Has(GuildPermission)
  fullName: Discord.GuildPermissions.Has(Discord.GuildPermission)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Has
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 259
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns a value that indicates if a specific <xref href=\"Discord.GuildPermission\" data-throw-if-not-resolved=\"false\"></xref> is enabled\nin these permissions.\n"
  example: []
  syntax:
    content: public bool Has(GuildPermission permission)
    parameters:
    - id: permission
      type: Discord.GuildPermission
      description: The permission value to check for.
    return:
      type: System.Boolean
      description: <code>true</code> if the permission is enabled, <code>false</code> otherwise.
    content.vb: Public Function Has(permission As GuildPermission) As Boolean
  overload: Discord.GuildPermissions.Has*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.GuildPermissions.ToList
  commentId: M:Discord.GuildPermissions.ToList
  id: ToList
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: ToList()
  nameWithType: GuildPermissions.ToList()
  fullName: Discord.GuildPermissions.ToList()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ToList
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 266
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns a <see cref=\"!:List&lt;T>\"></see> containing all of the <xref href=\"Discord.GuildPermission\" data-throw-if-not-resolved=\"false\"></xref>\nflags that are enabled.\n"
  example: []
  syntax:
    content: public List<GuildPermission> ToList()
    return:
      type: List{Discord.GuildPermission}
      description: A <see cref="!:List&lt;T>"></see> containing <xref href="Discord.GuildPermission" data-throw-if-not-resolved="false"></xref> flags. Empty if none are enabled.
    content.vb: Public Function ToList As List(Of GuildPermission)
  overload: Discord.GuildPermissions.ToList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.GuildPermissions.ToString
  commentId: M:Discord.GuildPermissions.ToString
  id: ToString
  parent: Discord.GuildPermissions
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: GuildPermissions.ToString()
  fullName: Discord.GuildPermissions.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.Core/Entities/Permissions/GuildPermissions.cs
    startLine: 281
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Discord.GuildPermissions.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.GuildPermissions
  commentId: T:Discord.GuildPermissions
  parent: Discord
  name: GuildPermissions
  nameWithType: GuildPermissions
  fullName: Discord.GuildPermissions
- uid: Discord.GuildPermissions.RawValue*
  commentId: Overload:Discord.GuildPermissions.RawValue
  name: RawValue
  nameWithType: GuildPermissions.RawValue
  fullName: Discord.GuildPermissions.RawValue
- uid: System.UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.GuildPermissions.CreateInstantInvite*
  commentId: Overload:Discord.GuildPermissions.CreateInstantInvite
  name: CreateInstantInvite
  nameWithType: GuildPermissions.CreateInstantInvite
  fullName: Discord.GuildPermissions.CreateInstantInvite
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.GuildPermissions.BanMembers*
  commentId: Overload:Discord.GuildPermissions.BanMembers
  name: BanMembers
  nameWithType: GuildPermissions.BanMembers
  fullName: Discord.GuildPermissions.BanMembers
- uid: Discord.GuildPermissions.KickMembers*
  commentId: Overload:Discord.GuildPermissions.KickMembers
  name: KickMembers
  nameWithType: GuildPermissions.KickMembers
  fullName: Discord.GuildPermissions.KickMembers
- uid: Discord.GuildPermissions.Administrator*
  commentId: Overload:Discord.GuildPermissions.Administrator
  name: Administrator
  nameWithType: GuildPermissions.Administrator
  fullName: Discord.GuildPermissions.Administrator
- uid: Discord.GuildPermissions.ManageChannels*
  commentId: Overload:Discord.GuildPermissions.ManageChannels
  name: ManageChannels
  nameWithType: GuildPermissions.ManageChannels
  fullName: Discord.GuildPermissions.ManageChannels
- uid: Discord.GuildPermissions.ManageGuild*
  commentId: Overload:Discord.GuildPermissions.ManageGuild
  name: ManageGuild
  nameWithType: GuildPermissions.ManageGuild
  fullName: Discord.GuildPermissions.ManageGuild
- uid: Discord.GuildPermissions.AddReactions*
  commentId: Overload:Discord.GuildPermissions.AddReactions
  name: AddReactions
  nameWithType: GuildPermissions.AddReactions
  fullName: Discord.GuildPermissions.AddReactions
- uid: Discord.GuildPermissions.ViewAuditLog*
  commentId: Overload:Discord.GuildPermissions.ViewAuditLog
  name: ViewAuditLog
  nameWithType: GuildPermissions.ViewAuditLog
  fullName: Discord.GuildPermissions.ViewAuditLog
- uid: Discord.GuildPermissions.ReadMessages*
  commentId: Overload:Discord.GuildPermissions.ReadMessages
  name: ReadMessages
  nameWithType: GuildPermissions.ReadMessages
  fullName: Discord.GuildPermissions.ReadMessages
- uid: Discord.GuildPermissions.ViewChannel*
  commentId: Overload:Discord.GuildPermissions.ViewChannel
  name: ViewChannel
  nameWithType: GuildPermissions.ViewChannel
  fullName: Discord.GuildPermissions.ViewChannel
- uid: Discord.GuildPermissions.SendMessages*
  commentId: Overload:Discord.GuildPermissions.SendMessages
  name: SendMessages
  nameWithType: GuildPermissions.SendMessages
  fullName: Discord.GuildPermissions.SendMessages
- uid: Discord.GuildPermissions.SendTTSMessages*
  commentId: Overload:Discord.GuildPermissions.SendTTSMessages
  name: SendTTSMessages
  nameWithType: GuildPermissions.SendTTSMessages
  fullName: Discord.GuildPermissions.SendTTSMessages
- uid: Discord.GuildPermissions.ManageMessages*
  commentId: Overload:Discord.GuildPermissions.ManageMessages
  name: ManageMessages
  nameWithType: GuildPermissions.ManageMessages
  fullName: Discord.GuildPermissions.ManageMessages
- uid: Discord.GuildPermissions.EmbedLinks*
  commentId: Overload:Discord.GuildPermissions.EmbedLinks
  name: EmbedLinks
  nameWithType: GuildPermissions.EmbedLinks
  fullName: Discord.GuildPermissions.EmbedLinks
- uid: Discord.GuildPermissions.AttachFiles*
  commentId: Overload:Discord.GuildPermissions.AttachFiles
  name: AttachFiles
  nameWithType: GuildPermissions.AttachFiles
  fullName: Discord.GuildPermissions.AttachFiles
- uid: Discord.GuildPermissions.ReadMessageHistory*
  commentId: Overload:Discord.GuildPermissions.ReadMessageHistory
  name: ReadMessageHistory
  nameWithType: GuildPermissions.ReadMessageHistory
  fullName: Discord.GuildPermissions.ReadMessageHistory
- uid: Discord.GuildPermissions.MentionEveryone*
  commentId: Overload:Discord.GuildPermissions.MentionEveryone
  name: MentionEveryone
  nameWithType: GuildPermissions.MentionEveryone
  fullName: Discord.GuildPermissions.MentionEveryone
- uid: Discord.GuildPermissions.UseExternalEmojis*
  commentId: Overload:Discord.GuildPermissions.UseExternalEmojis
  name: UseExternalEmojis
  nameWithType: GuildPermissions.UseExternalEmojis
  fullName: Discord.GuildPermissions.UseExternalEmojis
- uid: Discord.GuildPermissions.Connect*
  commentId: Overload:Discord.GuildPermissions.Connect
  name: Connect
  nameWithType: GuildPermissions.Connect
  fullName: Discord.GuildPermissions.Connect
- uid: Discord.GuildPermissions.Speak*
  commentId: Overload:Discord.GuildPermissions.Speak
  name: Speak
  nameWithType: GuildPermissions.Speak
  fullName: Discord.GuildPermissions.Speak
- uid: Discord.GuildPermissions.MuteMembers*
  commentId: Overload:Discord.GuildPermissions.MuteMembers
  name: MuteMembers
  nameWithType: GuildPermissions.MuteMembers
  fullName: Discord.GuildPermissions.MuteMembers
- uid: Discord.GuildPermissions.DeafenMembers*
  commentId: Overload:Discord.GuildPermissions.DeafenMembers
  name: DeafenMembers
  nameWithType: GuildPermissions.DeafenMembers
  fullName: Discord.GuildPermissions.DeafenMembers
- uid: Discord.GuildPermissions.MoveMembers*
  commentId: Overload:Discord.GuildPermissions.MoveMembers
  name: MoveMembers
  nameWithType: GuildPermissions.MoveMembers
  fullName: Discord.GuildPermissions.MoveMembers
- uid: Discord.GuildPermissions.UseVAD*
  commentId: Overload:Discord.GuildPermissions.UseVAD
  name: UseVAD
  nameWithType: GuildPermissions.UseVAD
  fullName: Discord.GuildPermissions.UseVAD
- uid: Discord.GuildPermissions.PrioritySpeaker*
  commentId: Overload:Discord.GuildPermissions.PrioritySpeaker
  name: PrioritySpeaker
  nameWithType: GuildPermissions.PrioritySpeaker
  fullName: Discord.GuildPermissions.PrioritySpeaker
- uid: Discord.GuildPermissions.ChangeNickname*
  commentId: Overload:Discord.GuildPermissions.ChangeNickname
  name: ChangeNickname
  nameWithType: GuildPermissions.ChangeNickname
  fullName: Discord.GuildPermissions.ChangeNickname
- uid: Discord.GuildPermissions.ManageNicknames*
  commentId: Overload:Discord.GuildPermissions.ManageNicknames
  name: ManageNicknames
  nameWithType: GuildPermissions.ManageNicknames
  fullName: Discord.GuildPermissions.ManageNicknames
- uid: Discord.GuildPermissions.ManageRoles*
  commentId: Overload:Discord.GuildPermissions.ManageRoles
  name: ManageRoles
  nameWithType: GuildPermissions.ManageRoles
  fullName: Discord.GuildPermissions.ManageRoles
- uid: Discord.GuildPermissions.ManageWebhooks*
  commentId: Overload:Discord.GuildPermissions.ManageWebhooks
  name: ManageWebhooks
  nameWithType: GuildPermissions.ManageWebhooks
  fullName: Discord.GuildPermissions.ManageWebhooks
- uid: Discord.GuildPermissions.ManageEmojis*
  commentId: Overload:Discord.GuildPermissions.ManageEmojis
  name: ManageEmojis
  nameWithType: GuildPermissions.ManageEmojis
  fullName: Discord.GuildPermissions.ManageEmojis
- uid: Discord.GuildPermissions.#ctor*
  commentId: Overload:Discord.GuildPermissions.#ctor
  name: GuildPermissions
  nameWithType: GuildPermissions.GuildPermissions
  fullName: Discord.GuildPermissions.GuildPermissions
- uid: Discord.GuildPermissions.Modify*
  commentId: Overload:Discord.GuildPermissions.Modify
  name: Modify
  nameWithType: GuildPermissions.Modify
  fullName: Discord.GuildPermissions.Modify
- uid: System.Nullable{System.Boolean}
  commentId: '!:System.Nullable{System.Boolean}'
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildPermission
  commentId: T:Discord.GuildPermission
  parent: Discord
  name: GuildPermission
  nameWithType: GuildPermission
  fullName: Discord.GuildPermission
- uid: Discord.GuildPermissions.Has*
  commentId: Overload:Discord.GuildPermissions.Has
  name: Has
  nameWithType: GuildPermissions.Has
  fullName: Discord.GuildPermissions.Has
- uid: Discord.GuildPermissions.ToList*
  commentId: Overload:Discord.GuildPermissions.ToList
  name: ToList
  nameWithType: GuildPermissions.ToList
  fullName: Discord.GuildPermissions.ToList
- uid: List{Discord.GuildPermission}
  commentId: '!:List{Discord.GuildPermission}'
  definition: List`1
  name: List<GuildPermission>
  nameWithType: List<GuildPermission>
  fullName: List<Discord.GuildPermission>
  nameWithType.vb: List(Of GuildPermission)
  fullName.vb: List(Of Discord.GuildPermission)
  name.vb: List(Of GuildPermission)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.GuildPermission
    name: GuildPermission
    nameWithType: GuildPermission
    fullName: Discord.GuildPermission
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.GuildPermission
    name: GuildPermission
    nameWithType: GuildPermission
    fullName: Discord.GuildPermission
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildPermissions.ToString*
  commentId: Overload:Discord.GuildPermissions.ToString
  name: ToString
  nameWithType: GuildPermissions.ToString
  fullName: Discord.GuildPermissions.ToString
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
