### YamlMime:ManagedReference
items:
- uid: Discord.ChannelPermissions
  commentId: T:Discord.ChannelPermissions
  id: ChannelPermissions
  parent: Discord
  children:
  - Discord.ChannelPermissions.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - Discord.ChannelPermissions.#ctor(System.UInt64)
  - Discord.ChannelPermissions.AddReactions
  - Discord.ChannelPermissions.All(Discord.IChannel)
  - Discord.ChannelPermissions.AttachFiles
  - Discord.ChannelPermissions.Category
  - Discord.ChannelPermissions.Connect
  - Discord.ChannelPermissions.CreateInstantInvite
  - Discord.ChannelPermissions.DeafenMembers
  - Discord.ChannelPermissions.DM
  - Discord.ChannelPermissions.EmbedLinks
  - Discord.ChannelPermissions.Group
  - Discord.ChannelPermissions.Has(Discord.ChannelPermission)
  - Discord.ChannelPermissions.ManageChannel
  - Discord.ChannelPermissions.ManageMessages
  - Discord.ChannelPermissions.ManageRoles
  - Discord.ChannelPermissions.ManageWebhooks
  - Discord.ChannelPermissions.MentionEveryone
  - Discord.ChannelPermissions.Modify(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  - Discord.ChannelPermissions.MoveMembers
  - Discord.ChannelPermissions.MuteMembers
  - Discord.ChannelPermissions.None
  - Discord.ChannelPermissions.PrioritySpeaker
  - Discord.ChannelPermissions.RawValue
  - Discord.ChannelPermissions.ReadMessageHistory
  - Discord.ChannelPermissions.ReadMessages
  - Discord.ChannelPermissions.SendMessages
  - Discord.ChannelPermissions.SendTTSMessages
  - Discord.ChannelPermissions.Speak
  - Discord.ChannelPermissions.Text
  - Discord.ChannelPermissions.ToList
  - Discord.ChannelPermissions.ToString
  - Discord.ChannelPermissions.UseExternalEmojis
  - Discord.ChannelPermissions.UseVAD
  - Discord.ChannelPermissions.ViewChannel
  - Discord.ChannelPermissions.Voice
  langs:
  - csharp
  - vb
  name: ChannelPermissions
  nameWithType: ChannelPermissions
  fullName: Discord.ChannelPermissions
  type: Struct
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelPermissions
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 6
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public struct ChannelPermissions
    content.vb: Public Structure ChannelPermissions
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Discord.ChannelPermissions.None
  commentId: F:Discord.ChannelPermissions.None
  id: None
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: None
  nameWithType: ChannelPermissions.None
  fullName: Discord.ChannelPermissions.None
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: None
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 11
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets a blank <xref href="Discord.ChannelPermissions" data-throw-if-not-resolved="false"></xref> that grants no permissions. '
  example: []
  syntax:
    content: public static readonly ChannelPermissions None
    return:
      type: Discord.ChannelPermissions
      description: 'A <xref href="Discord.ChannelPermissions" data-throw-if-not-resolved="false"></xref> structure that does not contain any set permissions. '
    content.vb: Public Shared ReadOnly None As ChannelPermissions
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Discord.ChannelPermissions.Text
  commentId: F:Discord.ChannelPermissions.Text
  id: Text
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: ChannelPermissions.Text
  fullName: Discord.ChannelPermissions.Text
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Text
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 13
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets a <xref href="Discord.ChannelPermissions" data-throw-if-not-resolved="false"></xref> that grants all permissions for text channels. '
  example: []
  syntax:
    content: public static readonly ChannelPermissions Text
    return:
      type: Discord.ChannelPermissions
    content.vb: Public Shared ReadOnly Text As ChannelPermissions
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Discord.ChannelPermissions.Voice
  commentId: F:Discord.ChannelPermissions.Voice
  id: Voice
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: Voice
  nameWithType: ChannelPermissions.Voice
  fullName: Discord.ChannelPermissions.Voice
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Voice
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 15
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets a <xref href="Discord.ChannelPermissions" data-throw-if-not-resolved="false"></xref> that grants all permissions for voice channels. '
  example: []
  syntax:
    content: public static readonly ChannelPermissions Voice
    return:
      type: Discord.ChannelPermissions
    content.vb: Public Shared ReadOnly Voice As ChannelPermissions
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Discord.ChannelPermissions.Category
  commentId: F:Discord.ChannelPermissions.Category
  id: Category
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: ChannelPermissions.Category
  fullName: Discord.ChannelPermissions.Category
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Category
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 17
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets a <xref href="Discord.ChannelPermissions" data-throw-if-not-resolved="false"></xref> that grants all permissions for category channels. '
  example: []
  syntax:
    content: public static readonly ChannelPermissions Category
    return:
      type: Discord.ChannelPermissions
    content.vb: Public Shared ReadOnly Category As ChannelPermissions
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Discord.ChannelPermissions.DM
  commentId: F:Discord.ChannelPermissions.DM
  id: DM
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: DM
  nameWithType: ChannelPermissions.DM
  fullName: Discord.ChannelPermissions.DM
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: DM
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 19
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets a <xref href="Discord.ChannelPermissions" data-throw-if-not-resolved="false"></xref> that grants all permissions for direct message channels. '
  example: []
  syntax:
    content: public static readonly ChannelPermissions DM
    return:
      type: Discord.ChannelPermissions
    content.vb: Public Shared ReadOnly DM As ChannelPermissions
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Discord.ChannelPermissions.Group
  commentId: F:Discord.ChannelPermissions.Group
  id: Group
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: Group
  nameWithType: ChannelPermissions.Group
  fullName: Discord.ChannelPermissions.Group
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Group
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 21
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets a <xref href="Discord.ChannelPermissions" data-throw-if-not-resolved="false"></xref> that grants all permissions for group channels. '
  example: []
  syntax:
    content: public static readonly ChannelPermissions Group
    return:
      type: Discord.ChannelPermissions
    content.vb: Public Shared ReadOnly Group As ChannelPermissions
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Discord.ChannelPermissions.All(Discord.IChannel)
  commentId: M:Discord.ChannelPermissions.All(Discord.IChannel)
  id: All(Discord.IChannel)
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: All(IChannel)
  nameWithType: ChannelPermissions.All(IChannel)
  fullName: Discord.ChannelPermissions.All(Discord.IChannel)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: All
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 24
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets a <xref href="Discord.ChannelPermissions" data-throw-if-not-resolved="false"></xref> that grants all permissions for a given channel type. '
  example: []
  syntax:
    content: public static ChannelPermissions All(IChannel channel)
    parameters:
    - id: channel
      type: Discord.IChannel
    return:
      type: Discord.ChannelPermissions
    content.vb: Public Shared Function All(channel As IChannel) As ChannelPermissions
  overload: Discord.ChannelPermissions.All*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Unknown channel type.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.ChannelPermissions.RawValue
  commentId: P:Discord.ChannelPermissions.RawValue
  id: RawValue
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: RawValue
  nameWithType: ChannelPermissions.RawValue
  fullName: Discord.ChannelPermissions.RawValue
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RawValue
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 38
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets a packed value representing all the permissions in this <xref href="Discord.ChannelPermissions" data-throw-if-not-resolved="false"></xref>. '
  example: []
  syntax:
    content: public ulong RawValue { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property RawValue As ULong
  overload: Discord.ChannelPermissions.RawValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.CreateInstantInvite
  commentId: P:Discord.ChannelPermissions.CreateInstantInvite
  id: CreateInstantInvite
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: CreateInstantInvite
  nameWithType: ChannelPermissions.CreateInstantInvite
  fullName: Discord.ChannelPermissions.CreateInstantInvite
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: CreateInstantInvite
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 41
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may create invites. '
  example: []
  syntax:
    content: public bool CreateInstantInvite { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CreateInstantInvite As Boolean
  overload: Discord.ChannelPermissions.CreateInstantInvite*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.ManageChannel
  commentId: P:Discord.ChannelPermissions.ManageChannel
  id: ManageChannel
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: ManageChannel
  nameWithType: ChannelPermissions.ManageChannel
  fullName: Discord.ChannelPermissions.ManageChannel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ManageChannel
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 43
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may create, delete and modify this channel. '
  example: []
  syntax:
    content: public bool ManageChannel { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ManageChannel As Boolean
  overload: Discord.ChannelPermissions.ManageChannel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.AddReactions
  commentId: P:Discord.ChannelPermissions.AddReactions
  id: AddReactions
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: AddReactions
  nameWithType: ChannelPermissions.AddReactions
  fullName: Discord.ChannelPermissions.AddReactions
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AddReactions
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 46
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may add reactions. '
  example: []
  syntax:
    content: public bool AddReactions { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AddReactions As Boolean
  overload: Discord.ChannelPermissions.AddReactions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.ReadMessages
  commentId: P:Discord.ChannelPermissions.ReadMessages
  id: ReadMessages
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: ReadMessages
  nameWithType: ChannelPermissions.ReadMessages
  fullName: Discord.ChannelPermissions.ReadMessages
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ReadMessages
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 48
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may join channels. '
  example: []
  syntax:
    content: >-
      [Obsolete("Use ViewChannel instead.")]

      public bool ReadMessages { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("Use ViewChannel instead.")>

      Public ReadOnly Property ReadMessages As Boolean
  overload: Discord.ChannelPermissions.ReadMessages*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use ViewChannel instead.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.ViewChannel
  commentId: P:Discord.ChannelPermissions.ViewChannel
  id: ViewChannel
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: ViewChannel
  nameWithType: ChannelPermissions.ViewChannel
  fullName: Discord.ChannelPermissions.ViewChannel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ViewChannel
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 51
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may view channels. '
  example: []
  syntax:
    content: public bool ViewChannel { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ViewChannel As Boolean
  overload: Discord.ChannelPermissions.ViewChannel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.SendMessages
  commentId: P:Discord.ChannelPermissions.SendMessages
  id: SendMessages
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: SendMessages
  nameWithType: ChannelPermissions.SendMessages
  fullName: Discord.ChannelPermissions.SendMessages
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SendMessages
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 54
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may send messages. '
  example: []
  syntax:
    content: public bool SendMessages { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property SendMessages As Boolean
  overload: Discord.ChannelPermissions.SendMessages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.SendTTSMessages
  commentId: P:Discord.ChannelPermissions.SendTTSMessages
  id: SendTTSMessages
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: SendTTSMessages
  nameWithType: ChannelPermissions.SendTTSMessages
  fullName: Discord.ChannelPermissions.SendTTSMessages
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SendTTSMessages
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 56
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may send text-to-speech messages. '
  example: []
  syntax:
    content: public bool SendTTSMessages { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property SendTTSMessages As Boolean
  overload: Discord.ChannelPermissions.SendTTSMessages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.ManageMessages
  commentId: P:Discord.ChannelPermissions.ManageMessages
  id: ManageMessages
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: ManageMessages
  nameWithType: ChannelPermissions.ManageMessages
  fullName: Discord.ChannelPermissions.ManageMessages
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ManageMessages
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 58
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may delete messages. '
  example: []
  syntax:
    content: public bool ManageMessages { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ManageMessages As Boolean
  overload: Discord.ChannelPermissions.ManageMessages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.EmbedLinks
  commentId: P:Discord.ChannelPermissions.EmbedLinks
  id: EmbedLinks
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: EmbedLinks
  nameWithType: ChannelPermissions.EmbedLinks
  fullName: Discord.ChannelPermissions.EmbedLinks
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: EmbedLinks
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 60
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, Discord will auto-embed links sent by this user. '
  example: []
  syntax:
    content: public bool EmbedLinks { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property EmbedLinks As Boolean
  overload: Discord.ChannelPermissions.EmbedLinks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.AttachFiles
  commentId: P:Discord.ChannelPermissions.AttachFiles
  id: AttachFiles
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: AttachFiles
  nameWithType: ChannelPermissions.AttachFiles
  fullName: Discord.ChannelPermissions.AttachFiles
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AttachFiles
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 62
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may send files. '
  example: []
  syntax:
    content: public bool AttachFiles { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AttachFiles As Boolean
  overload: Discord.ChannelPermissions.AttachFiles*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.ReadMessageHistory
  commentId: P:Discord.ChannelPermissions.ReadMessageHistory
  id: ReadMessageHistory
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: ReadMessageHistory
  nameWithType: ChannelPermissions.ReadMessageHistory
  fullName: Discord.ChannelPermissions.ReadMessageHistory
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ReadMessageHistory
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 64
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may read previous messages. '
  example: []
  syntax:
    content: public bool ReadMessageHistory { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ReadMessageHistory As Boolean
  overload: Discord.ChannelPermissions.ReadMessageHistory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.MentionEveryone
  commentId: P:Discord.ChannelPermissions.MentionEveryone
  id: MentionEveryone
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: MentionEveryone
  nameWithType: ChannelPermissions.MentionEveryone
  fullName: Discord.ChannelPermissions.MentionEveryone
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MentionEveryone
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 66
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may mention @everyone. '
  example: []
  syntax:
    content: public bool MentionEveryone { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property MentionEveryone As Boolean
  overload: Discord.ChannelPermissions.MentionEveryone*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.UseExternalEmojis
  commentId: P:Discord.ChannelPermissions.UseExternalEmojis
  id: UseExternalEmojis
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: UseExternalEmojis
  nameWithType: ChannelPermissions.UseExternalEmojis
  fullName: Discord.ChannelPermissions.UseExternalEmojis
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: UseExternalEmojis
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 68
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may use custom emoji from other guilds. '
  example: []
  syntax:
    content: public bool UseExternalEmojis { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property UseExternalEmojis As Boolean
  overload: Discord.ChannelPermissions.UseExternalEmojis*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.Connect
  commentId: P:Discord.ChannelPermissions.Connect
  id: Connect
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: Connect
  nameWithType: ChannelPermissions.Connect
  fullName: Discord.ChannelPermissions.Connect
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Connect
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 71
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may connect to a voice channel. '
  example: []
  syntax:
    content: public bool Connect { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Connect As Boolean
  overload: Discord.ChannelPermissions.Connect*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.Speak
  commentId: P:Discord.ChannelPermissions.Speak
  id: Speak
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: Speak
  nameWithType: ChannelPermissions.Speak
  fullName: Discord.ChannelPermissions.Speak
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Speak
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 73
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may speak in a voice channel. '
  example: []
  syntax:
    content: public bool Speak { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Speak As Boolean
  overload: Discord.ChannelPermissions.Speak*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.MuteMembers
  commentId: P:Discord.ChannelPermissions.MuteMembers
  id: MuteMembers
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: MuteMembers
  nameWithType: ChannelPermissions.MuteMembers
  fullName: Discord.ChannelPermissions.MuteMembers
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MuteMembers
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 75
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may mute users. '
  example: []
  syntax:
    content: public bool MuteMembers { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property MuteMembers As Boolean
  overload: Discord.ChannelPermissions.MuteMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.DeafenMembers
  commentId: P:Discord.ChannelPermissions.DeafenMembers
  id: DeafenMembers
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: DeafenMembers
  nameWithType: ChannelPermissions.DeafenMembers
  fullName: Discord.ChannelPermissions.DeafenMembers
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: DeafenMembers
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 77
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may deafen users. '
  example: []
  syntax:
    content: public bool DeafenMembers { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property DeafenMembers As Boolean
  overload: Discord.ChannelPermissions.DeafenMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.MoveMembers
  commentId: P:Discord.ChannelPermissions.MoveMembers
  id: MoveMembers
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: MoveMembers
  nameWithType: ChannelPermissions.MoveMembers
  fullName: Discord.ChannelPermissions.MoveMembers
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MoveMembers
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 79
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may move other users between voice channels. '
  example: []
  syntax:
    content: public bool MoveMembers { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property MoveMembers As Boolean
  overload: Discord.ChannelPermissions.MoveMembers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.UseVAD
  commentId: P:Discord.ChannelPermissions.UseVAD
  id: UseVAD
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: UseVAD
  nameWithType: ChannelPermissions.UseVAD
  fullName: Discord.ChannelPermissions.UseVAD
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: UseVAD
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 81
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may use voice-activity-detection rather than push-to-talk. '
  example: []
  syntax:
    content: public bool UseVAD { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property UseVAD As Boolean
  overload: Discord.ChannelPermissions.UseVAD*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.PrioritySpeaker
  commentId: P:Discord.ChannelPermissions.PrioritySpeaker
  id: PrioritySpeaker
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: PrioritySpeaker
  nameWithType: ChannelPermissions.PrioritySpeaker
  fullName: Discord.ChannelPermissions.PrioritySpeaker
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: PrioritySpeaker
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 83
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may use priority speaker in a voice channel. '
  example: []
  syntax:
    content: public bool PrioritySpeaker { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property PrioritySpeaker As Boolean
  overload: Discord.ChannelPermissions.PrioritySpeaker*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.ManageRoles
  commentId: P:Discord.ChannelPermissions.ManageRoles
  id: ManageRoles
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: ManageRoles
  nameWithType: ChannelPermissions.ManageRoles
  fullName: Discord.ChannelPermissions.ManageRoles
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ManageRoles
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 86
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may adjust role permissions. This also implictly grants all other permissions. '
  example: []
  syntax:
    content: public bool ManageRoles { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ManageRoles As Boolean
  overload: Discord.ChannelPermissions.ManageRoles*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.ManageWebhooks
  commentId: P:Discord.ChannelPermissions.ManageWebhooks
  id: ManageWebhooks
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: ManageWebhooks
  nameWithType: ChannelPermissions.ManageWebhooks
  fullName: Discord.ChannelPermissions.ManageWebhooks
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ManageWebhooks
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 88
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'If <code>true</code>, a user may edit the webhooks for this channel. '
  example: []
  syntax:
    content: public bool ManageWebhooks { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ManageWebhooks As Boolean
  overload: Discord.ChannelPermissions.ManageWebhooks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.ChannelPermissions.#ctor(System.UInt64)
  commentId: M:Discord.ChannelPermissions.#ctor(System.UInt64)
  id: '#ctor(System.UInt64)'
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: ChannelPermissions(UInt64)
  nameWithType: ChannelPermissions.ChannelPermissions(UInt64)
  fullName: Discord.ChannelPermissions.ChannelPermissions(System.UInt64)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 91
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Creates a new <xref href="Discord.ChannelPermissions" data-throw-if-not-resolved="false"></xref> with the provided packed value. '
  example: []
  syntax:
    content: public ChannelPermissions(ulong rawValue)
    parameters:
    - id: rawValue
      type: System.UInt64
    content.vb: Public Sub New(rawValue As ULong)
  overload: Discord.ChannelPermissions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.ChannelPermissions.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Discord.ChannelPermissions.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)'
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: ChannelPermissions(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean)
  nameWithType: ChannelPermissions.ChannelPermissions(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean)
  fullName: Discord.ChannelPermissions.ChannelPermissions(System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 144
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Creates a new <xref href="Discord.ChannelPermissions" data-throw-if-not-resolved="false"></xref> with the provided permissions. '
  example: []
  syntax:
    content: public ChannelPermissions(bool createInstantInvite = false, bool manageChannel = false, bool addReactions = false, bool viewChannel = false, bool sendMessages = false, bool sendTTSMessages = false, bool manageMessages = false, bool embedLinks = false, bool attachFiles = false, bool readMessageHistory = false, bool mentionEveryone = false, bool useExternalEmojis = false, bool connect = false, bool speak = false, bool muteMembers = false, bool deafenMembers = false, bool moveMembers = false, bool useVoiceActivation = false, bool prioritySpeaker = false, bool manageRoles = false, bool manageWebhooks = false)
    parameters:
    - id: createInstantInvite
      type: System.Boolean
    - id: manageChannel
      type: System.Boolean
    - id: addReactions
      type: System.Boolean
    - id: viewChannel
      type: System.Boolean
    - id: sendMessages
      type: System.Boolean
    - id: sendTTSMessages
      type: System.Boolean
    - id: manageMessages
      type: System.Boolean
    - id: embedLinks
      type: System.Boolean
    - id: attachFiles
      type: System.Boolean
    - id: readMessageHistory
      type: System.Boolean
    - id: mentionEveryone
      type: System.Boolean
    - id: useExternalEmojis
      type: System.Boolean
    - id: connect
      type: System.Boolean
    - id: speak
      type: System.Boolean
    - id: muteMembers
      type: System.Boolean
    - id: deafenMembers
      type: System.Boolean
    - id: moveMembers
      type: System.Boolean
    - id: useVoiceActivation
      type: System.Boolean
    - id: prioritySpeaker
      type: System.Boolean
    - id: manageRoles
      type: System.Boolean
    - id: manageWebhooks
      type: System.Boolean
    content.vb: Public Sub New(createInstantInvite As Boolean = False, manageChannel As Boolean = False, addReactions As Boolean = False, viewChannel As Boolean = False, sendMessages As Boolean = False, sendTTSMessages As Boolean = False, manageMessages As Boolean = False, embedLinks As Boolean = False, attachFiles As Boolean = False, readMessageHistory As Boolean = False, mentionEveryone As Boolean = False, useExternalEmojis As Boolean = False, connect As Boolean = False, speak As Boolean = False, muteMembers As Boolean = False, deafenMembers As Boolean = False, moveMembers As Boolean = False, useVoiceActivation As Boolean = False, prioritySpeaker As Boolean = False, manageRoles As Boolean = False, manageWebhooks As Boolean = False)
  overload: Discord.ChannelPermissions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.ChannelPermissions.Modify(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  commentId: M:Discord.ChannelPermissions.Modify(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  id: Modify(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: Modify(Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>)
  nameWithType: ChannelPermissions.Modify(Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Boolean>)
  fullName: Discord.ChannelPermissions.Modify(System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Modify
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 172
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Creates a new <xref href="Discord.ChannelPermissions" data-throw-if-not-resolved="false"></xref> from this one, changing the provided non-null permissions. '
  example: []
  syntax:
    content: public ChannelPermissions Modify(bool? createInstantInvite = default(bool? ), bool? manageChannel = default(bool? ), bool? addReactions = default(bool? ), bool? viewChannel = default(bool? ), bool? sendMessages = default(bool? ), bool? sendTTSMessages = default(bool? ), bool? manageMessages = default(bool? ), bool? embedLinks = default(bool? ), bool? attachFiles = default(bool? ), bool? readMessageHistory = default(bool? ), bool? mentionEveryone = default(bool? ), bool? useExternalEmojis = default(bool? ), bool? connect = default(bool? ), bool? speak = default(bool? ), bool? muteMembers = default(bool? ), bool? deafenMembers = default(bool? ), bool? moveMembers = default(bool? ), bool? useVoiceActivation = default(bool? ), bool? prioritySpeaker = default(bool? ), bool? manageRoles = default(bool? ), bool? manageWebhooks = default(bool? ))
    parameters:
    - id: createInstantInvite
      type: System.Nullable{System.Boolean}
    - id: manageChannel
      type: System.Nullable{System.Boolean}
    - id: addReactions
      type: System.Nullable{System.Boolean}
    - id: viewChannel
      type: System.Nullable{System.Boolean}
    - id: sendMessages
      type: System.Nullable{System.Boolean}
    - id: sendTTSMessages
      type: System.Nullable{System.Boolean}
    - id: manageMessages
      type: System.Nullable{System.Boolean}
    - id: embedLinks
      type: System.Nullable{System.Boolean}
    - id: attachFiles
      type: System.Nullable{System.Boolean}
    - id: readMessageHistory
      type: System.Nullable{System.Boolean}
    - id: mentionEveryone
      type: System.Nullable{System.Boolean}
    - id: useExternalEmojis
      type: System.Nullable{System.Boolean}
    - id: connect
      type: System.Nullable{System.Boolean}
    - id: speak
      type: System.Nullable{System.Boolean}
    - id: muteMembers
      type: System.Nullable{System.Boolean}
    - id: deafenMembers
      type: System.Nullable{System.Boolean}
    - id: moveMembers
      type: System.Nullable{System.Boolean}
    - id: useVoiceActivation
      type: System.Nullable{System.Boolean}
    - id: prioritySpeaker
      type: System.Nullable{System.Boolean}
    - id: manageRoles
      type: System.Nullable{System.Boolean}
    - id: manageWebhooks
      type: System.Nullable{System.Boolean}
    return:
      type: Discord.ChannelPermissions
    content.vb: Public Function Modify(createInstantInvite As Boolean? = Nothing, manageChannel As Boolean? = Nothing, addReactions As Boolean? = Nothing, viewChannel As Boolean? = Nothing, sendMessages As Boolean? = Nothing, sendTTSMessages As Boolean? = Nothing, manageMessages As Boolean? = Nothing, embedLinks As Boolean? = Nothing, attachFiles As Boolean? = Nothing, readMessageHistory As Boolean? = Nothing, mentionEveryone As Boolean? = Nothing, useExternalEmojis As Boolean? = Nothing, connect As Boolean? = Nothing, speak As Boolean? = Nothing, muteMembers As Boolean? = Nothing, deafenMembers As Boolean? = Nothing, moveMembers As Boolean? = Nothing, useVoiceActivation As Boolean? = Nothing, prioritySpeaker As Boolean? = Nothing, manageRoles As Boolean? = Nothing, manageWebhooks As Boolean? = Nothing) As ChannelPermissions
  overload: Discord.ChannelPermissions.Modify*
  nameWithType.vb: ChannelPermissions.Modify(Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.ChannelPermissions.Modify(System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean))
  name.vb: Modify(Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean), Nullable(Of Boolean))
- uid: Discord.ChannelPermissions.Has(Discord.ChannelPermission)
  commentId: M:Discord.ChannelPermissions.Has(Discord.ChannelPermission)
  id: Has(Discord.ChannelPermission)
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: Has(ChannelPermission)
  nameWithType: ChannelPermissions.Has(ChannelPermission)
  fullName: Discord.ChannelPermissions.Has(Discord.ChannelPermission)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Has
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 217
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public bool Has(ChannelPermission permission)
    parameters:
    - id: permission
      type: Discord.ChannelPermission
    return:
      type: System.Boolean
    content.vb: Public Function Has(permission As ChannelPermission) As Boolean
  overload: Discord.ChannelPermissions.Has*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.ChannelPermissions.ToList
  commentId: M:Discord.ChannelPermissions.ToList
  id: ToList
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: ToList()
  nameWithType: ChannelPermissions.ToList()
  fullName: Discord.ChannelPermissions.ToList()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ToList
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 219
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public List<ChannelPermission> ToList()
    return:
      type: System.Collections.Generic.List{Discord.ChannelPermission}
    content.vb: Public Function ToList As List(Of ChannelPermission)
  overload: Discord.ChannelPermissions.ToList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.ChannelPermissions.ToString
  commentId: M:Discord.ChannelPermissions.ToString
  id: ToString
  parent: Discord.ChannelPermissions
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ChannelPermissions.ToString()
  fullName: Discord.ChannelPermissions.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.Core/Entities/Permissions/ChannelPermissions.cs
    startLine: 231
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Discord.ChannelPermissions.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.ChannelPermissions
  commentId: T:Discord.ChannelPermissions
  parent: Discord
  name: ChannelPermissions
  nameWithType: ChannelPermissions
  fullName: Discord.ChannelPermissions
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Discord.ChannelPermissions.All*
  commentId: Overload:Discord.ChannelPermissions.All
  name: All
  nameWithType: ChannelPermissions.All
  fullName: Discord.ChannelPermissions.All
- uid: Discord.IChannel
  commentId: T:Discord.IChannel
  parent: Discord
  name: IChannel
  nameWithType: IChannel
  fullName: Discord.IChannel
- uid: Discord.ChannelPermissions.RawValue*
  commentId: Overload:Discord.ChannelPermissions.RawValue
  name: RawValue
  nameWithType: ChannelPermissions.RawValue
  fullName: Discord.ChannelPermissions.RawValue
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.ChannelPermissions.CreateInstantInvite*
  commentId: Overload:Discord.ChannelPermissions.CreateInstantInvite
  name: CreateInstantInvite
  nameWithType: ChannelPermissions.CreateInstantInvite
  fullName: Discord.ChannelPermissions.CreateInstantInvite
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.ChannelPermissions.ManageChannel*
  commentId: Overload:Discord.ChannelPermissions.ManageChannel
  name: ManageChannel
  nameWithType: ChannelPermissions.ManageChannel
  fullName: Discord.ChannelPermissions.ManageChannel
- uid: Discord.ChannelPermissions.AddReactions*
  commentId: Overload:Discord.ChannelPermissions.AddReactions
  name: AddReactions
  nameWithType: ChannelPermissions.AddReactions
  fullName: Discord.ChannelPermissions.AddReactions
- uid: Discord.ChannelPermissions.ReadMessages*
  commentId: Overload:Discord.ChannelPermissions.ReadMessages
  name: ReadMessages
  nameWithType: ChannelPermissions.ReadMessages
  fullName: Discord.ChannelPermissions.ReadMessages
- uid: Discord.ChannelPermissions.ViewChannel*
  commentId: Overload:Discord.ChannelPermissions.ViewChannel
  name: ViewChannel
  nameWithType: ChannelPermissions.ViewChannel
  fullName: Discord.ChannelPermissions.ViewChannel
- uid: Discord.ChannelPermissions.SendMessages*
  commentId: Overload:Discord.ChannelPermissions.SendMessages
  name: SendMessages
  nameWithType: ChannelPermissions.SendMessages
  fullName: Discord.ChannelPermissions.SendMessages
- uid: Discord.ChannelPermissions.SendTTSMessages*
  commentId: Overload:Discord.ChannelPermissions.SendTTSMessages
  name: SendTTSMessages
  nameWithType: ChannelPermissions.SendTTSMessages
  fullName: Discord.ChannelPermissions.SendTTSMessages
- uid: Discord.ChannelPermissions.ManageMessages*
  commentId: Overload:Discord.ChannelPermissions.ManageMessages
  name: ManageMessages
  nameWithType: ChannelPermissions.ManageMessages
  fullName: Discord.ChannelPermissions.ManageMessages
- uid: Discord.ChannelPermissions.EmbedLinks*
  commentId: Overload:Discord.ChannelPermissions.EmbedLinks
  name: EmbedLinks
  nameWithType: ChannelPermissions.EmbedLinks
  fullName: Discord.ChannelPermissions.EmbedLinks
- uid: Discord.ChannelPermissions.AttachFiles*
  commentId: Overload:Discord.ChannelPermissions.AttachFiles
  name: AttachFiles
  nameWithType: ChannelPermissions.AttachFiles
  fullName: Discord.ChannelPermissions.AttachFiles
- uid: Discord.ChannelPermissions.ReadMessageHistory*
  commentId: Overload:Discord.ChannelPermissions.ReadMessageHistory
  name: ReadMessageHistory
  nameWithType: ChannelPermissions.ReadMessageHistory
  fullName: Discord.ChannelPermissions.ReadMessageHistory
- uid: Discord.ChannelPermissions.MentionEveryone*
  commentId: Overload:Discord.ChannelPermissions.MentionEveryone
  name: MentionEveryone
  nameWithType: ChannelPermissions.MentionEveryone
  fullName: Discord.ChannelPermissions.MentionEveryone
- uid: Discord.ChannelPermissions.UseExternalEmojis*
  commentId: Overload:Discord.ChannelPermissions.UseExternalEmojis
  name: UseExternalEmojis
  nameWithType: ChannelPermissions.UseExternalEmojis
  fullName: Discord.ChannelPermissions.UseExternalEmojis
- uid: Discord.ChannelPermissions.Connect*
  commentId: Overload:Discord.ChannelPermissions.Connect
  name: Connect
  nameWithType: ChannelPermissions.Connect
  fullName: Discord.ChannelPermissions.Connect
- uid: Discord.ChannelPermissions.Speak*
  commentId: Overload:Discord.ChannelPermissions.Speak
  name: Speak
  nameWithType: ChannelPermissions.Speak
  fullName: Discord.ChannelPermissions.Speak
- uid: Discord.ChannelPermissions.MuteMembers*
  commentId: Overload:Discord.ChannelPermissions.MuteMembers
  name: MuteMembers
  nameWithType: ChannelPermissions.MuteMembers
  fullName: Discord.ChannelPermissions.MuteMembers
- uid: Discord.ChannelPermissions.DeafenMembers*
  commentId: Overload:Discord.ChannelPermissions.DeafenMembers
  name: DeafenMembers
  nameWithType: ChannelPermissions.DeafenMembers
  fullName: Discord.ChannelPermissions.DeafenMembers
- uid: Discord.ChannelPermissions.MoveMembers*
  commentId: Overload:Discord.ChannelPermissions.MoveMembers
  name: MoveMembers
  nameWithType: ChannelPermissions.MoveMembers
  fullName: Discord.ChannelPermissions.MoveMembers
- uid: Discord.ChannelPermissions.UseVAD*
  commentId: Overload:Discord.ChannelPermissions.UseVAD
  name: UseVAD
  nameWithType: ChannelPermissions.UseVAD
  fullName: Discord.ChannelPermissions.UseVAD
- uid: Discord.ChannelPermissions.PrioritySpeaker*
  commentId: Overload:Discord.ChannelPermissions.PrioritySpeaker
  name: PrioritySpeaker
  nameWithType: ChannelPermissions.PrioritySpeaker
  fullName: Discord.ChannelPermissions.PrioritySpeaker
- uid: Discord.ChannelPermissions.ManageRoles*
  commentId: Overload:Discord.ChannelPermissions.ManageRoles
  name: ManageRoles
  nameWithType: ChannelPermissions.ManageRoles
  fullName: Discord.ChannelPermissions.ManageRoles
- uid: Discord.ChannelPermissions.ManageWebhooks*
  commentId: Overload:Discord.ChannelPermissions.ManageWebhooks
  name: ManageWebhooks
  nameWithType: ChannelPermissions.ManageWebhooks
  fullName: Discord.ChannelPermissions.ManageWebhooks
- uid: Discord.ChannelPermissions.#ctor*
  commentId: Overload:Discord.ChannelPermissions.#ctor
  name: ChannelPermissions
  nameWithType: ChannelPermissions.ChannelPermissions
  fullName: Discord.ChannelPermissions.ChannelPermissions
- uid: Discord.ChannelPermissions.Modify*
  commentId: Overload:Discord.ChannelPermissions.Modify
  name: Modify
  nameWithType: ChannelPermissions.Modify
  fullName: Discord.ChannelPermissions.Modify
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.ChannelPermissions.Has*
  commentId: Overload:Discord.ChannelPermissions.Has
  name: Has
  nameWithType: ChannelPermissions.Has
  fullName: Discord.ChannelPermissions.Has
- uid: Discord.ChannelPermission
  commentId: T:Discord.ChannelPermission
  parent: Discord
  name: ChannelPermission
  nameWithType: ChannelPermission
  fullName: Discord.ChannelPermission
- uid: Discord.ChannelPermissions.ToList*
  commentId: Overload:Discord.ChannelPermissions.ToList
  name: ToList
  nameWithType: ChannelPermissions.ToList
  fullName: Discord.ChannelPermissions.ToList
- uid: System.Collections.Generic.List{Discord.ChannelPermission}
  commentId: T:System.Collections.Generic.List{Discord.ChannelPermission}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ChannelPermission>
  nameWithType: List<ChannelPermission>
  fullName: System.Collections.Generic.List<Discord.ChannelPermission>
  nameWithType.vb: List(Of ChannelPermission)
  fullName.vb: System.Collections.Generic.List(Of Discord.ChannelPermission)
  name.vb: List(Of ChannelPermission)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.ChannelPermission
    name: ChannelPermission
    nameWithType: ChannelPermission
    fullName: Discord.ChannelPermission
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.ChannelPermission
    name: ChannelPermission
    nameWithType: ChannelPermission
    fullName: Discord.ChannelPermission
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.ChannelPermissions.ToString*
  commentId: Overload:Discord.ChannelPermissions.ToString
  name: ToString
  nameWithType: ChannelPermissions.ToString
  fullName: Discord.ChannelPermissions.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
