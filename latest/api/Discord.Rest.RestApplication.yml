### YamlMime:ManagedReference
items:
- uid: Discord.Rest.RestApplication
  commentId: T:Discord.Rest.RestApplication
  id: RestApplication
  parent: Discord.Rest
  children:
  - Discord.Rest.RestApplication._iconId
  - Discord.Rest.RestApplication.CreatedAt
  - Discord.Rest.RestApplication.Description
  - Discord.Rest.RestApplication.Flags
  - Discord.Rest.RestApplication.IconUrl
  - Discord.Rest.RestApplication.Name
  - Discord.Rest.RestApplication.Owner
  - Discord.Rest.RestApplication.RPCOrigins
  - Discord.Rest.RestApplication.ToString
  - Discord.Rest.RestApplication.UpdateAsync
  langs:
  - csharp
  - vb
  name: RestApplication
  nameWithType: RestApplication
  fullName: Discord.Rest.RestApplication
  type: Class
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/RestApplication.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RestApplication
    path: ../src/Discord.Net.Rest/Entities/RestApplication.cs
    startLine: 10
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nRepresents a REST-based entity that contains information about a Discord application created via the developer portal.\n"
  example: []
  syntax:
    content: 'public class RestApplication : RestEntity<ulong>, IEntity<ulong>, IApplication, ISnowflakeEntity, IEntity<ulong>'
    content.vb: >-
      Public Class RestApplication
          Inherits RestEntity(Of ULong)
          Implements IEntity(Of ULong), IApplication, ISnowflakeEntity, IEntity(Of ULong)
  inheritance:
  - System.Object
  - Discord.Rest.RestEntity{System.UInt64}
  implements:
  - Discord.IEntity{System.UInt64}
  - Discord.IApplication
  - Discord.ISnowflakeEntity
  - Discord.IEntity{System.UInt64}
  inheritedMembers:
  - Discord.Rest.RestEntity{System.UInt64}.Id
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Rest.RestApplication._iconId
  commentId: F:Discord.Rest.RestApplication._iconId
  id: _iconId
  parent: Discord.Rest.RestApplication
  langs:
  - csharp
  - vb
  name: _iconId
  nameWithType: RestApplication._iconId
  fullName: Discord.Rest.RestApplication._iconId
  type: Field
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/RestApplication.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: _iconId
    path: ../src/Discord.Net.Rest/Entities/RestApplication.cs
    startLine: 13
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: protected string _iconId
    return:
      type: System.String
    content.vb: Protected _iconId As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Discord.Rest.RestApplication.Name
  commentId: P:Discord.Rest.RestApplication.Name
  id: Name
  parent: Discord.Rest.RestApplication
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RestApplication.Name
  fullName: Discord.Rest.RestApplication.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/RestApplication.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Rest/Entities/RestApplication.cs
    startLine: 16
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Discord.Rest.RestApplication.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestApplication.Description
  commentId: P:Discord.Rest.RestApplication.Description
  id: Description
  parent: Discord.Rest.RestApplication
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: RestApplication.Description
  fullName: Discord.Rest.RestApplication.Description
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/RestApplication.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Description
    path: ../src/Discord.Net.Rest/Entities/RestApplication.cs
    startLine: 18
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Description As String
  overload: Discord.Rest.RestApplication.Description*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestApplication.RPCOrigins
  commentId: P:Discord.Rest.RestApplication.RPCOrigins
  id: RPCOrigins
  parent: Discord.Rest.RestApplication
  langs:
  - csharp
  - vb
  name: RPCOrigins
  nameWithType: RestApplication.RPCOrigins
  fullName: Discord.Rest.RestApplication.RPCOrigins
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/RestApplication.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RPCOrigins
    path: ../src/Discord.Net.Rest/Entities/RestApplication.cs
    startLine: 20
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public string[] RPCOrigins { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property RPCOrigins As String()
  overload: Discord.Rest.RestApplication.RPCOrigins*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestApplication.Flags
  commentId: P:Discord.Rest.RestApplication.Flags
  id: Flags
  parent: Discord.Rest.RestApplication
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: RestApplication.Flags
  fullName: Discord.Rest.RestApplication.Flags
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/RestApplication.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Flags
    path: ../src/Discord.Net.Rest/Entities/RestApplication.cs
    startLine: 22
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public ulong Flags { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property Flags As ULong
  overload: Discord.Rest.RestApplication.Flags*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestApplication.Owner
  commentId: P:Discord.Rest.RestApplication.Owner
  id: Owner
  parent: Discord.Rest.RestApplication
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: RestApplication.Owner
  fullName: Discord.Rest.RestApplication.Owner
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/RestApplication.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Owner
    path: ../src/Discord.Net.Rest/Entities/RestApplication.cs
    startLine: 25
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the partial user object containing info on the owner of the application.\n"
  example: []
  syntax:
    content: public IUser Owner { get; }
    parameters: []
    return:
      type: Discord.IUser
    content.vb: Public ReadOnly Property Owner As IUser
  overload: Discord.Rest.RestApplication.Owner*
  implements:
  - Discord.IApplication.Owner
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestApplication.CreatedAt
  commentId: P:Discord.Rest.RestApplication.CreatedAt
  id: CreatedAt
  parent: Discord.Rest.RestApplication
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: RestApplication.CreatedAt
  fullName: Discord.Rest.RestApplication.CreatedAt
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/RestApplication.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: CreatedAt
    path: ../src/Discord.Net.Rest/Entities/RestApplication.cs
    startLine: 28
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public DateTimeOffset CreatedAt { get; }
    parameters: []
    return:
      type: DateTimeOffset
    content.vb: Public ReadOnly Property CreatedAt As DateTimeOffset
  overload: Discord.Rest.RestApplication.CreatedAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestApplication.IconUrl
  commentId: P:Discord.Rest.RestApplication.IconUrl
  id: IconUrl
  parent: Discord.Rest.RestApplication
  langs:
  - csharp
  - vb
  name: IconUrl
  nameWithType: RestApplication.IconUrl
  fullName: Discord.Rest.RestApplication.IconUrl
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/RestApplication.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IconUrl
    path: ../src/Discord.Net.Rest/Entities/RestApplication.cs
    startLine: 30
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public string IconUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property IconUrl As String
  overload: Discord.Rest.RestApplication.IconUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestApplication.UpdateAsync
  commentId: M:Discord.Rest.RestApplication.UpdateAsync
  id: UpdateAsync
  parent: Discord.Rest.RestApplication
  langs:
  - csharp
  - vb
  name: UpdateAsync()
  nameWithType: RestApplication.UpdateAsync()
  fullName: Discord.Rest.RestApplication.UpdateAsync()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/RestApplication.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: UpdateAsync
    path: ../src/Discord.Net.Rest/Entities/RestApplication.cs
    startLine: 56
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public Task UpdateAsync()
    return:
      type: Task
    content.vb: Public Function UpdateAsync As Task
  overload: Discord.Rest.RestApplication.UpdateAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Rest.RestApplication.ToString
  commentId: M:Discord.Rest.RestApplication.ToString
  id: ToString
  parent: Discord.Rest.RestApplication
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RestApplication.ToString()
  fullName: Discord.Rest.RestApplication.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/RestApplication.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.Rest/Entities/RestApplication.cs
    startLine: 70
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the name of the application.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nName of the application.\n"
    content.vb: Public Overrides Function ToString As String
  overload: Discord.Rest.RestApplication.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Rest.RestEntity{System.UInt64}
  commentId: T:Discord.Rest.RestEntity{System.UInt64}
  parent: Discord.Rest
  definition: Discord.Rest.RestEntity`1
  name: RestEntity<UInt64>
  nameWithType: RestEntity<UInt64>
  fullName: Discord.Rest.RestEntity<System.UInt64>
  nameWithType.vb: RestEntity(Of UInt64)
  fullName.vb: Discord.Rest.RestEntity(Of System.UInt64)
  name.vb: RestEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEntity{System.UInt64}
  commentId: T:Discord.IEntity{System.UInt64}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<UInt64>
  nameWithType: IEntity<UInt64>
  fullName: Discord.IEntity<System.UInt64>
  nameWithType.vb: IEntity(Of UInt64)
  fullName.vb: Discord.IEntity(Of System.UInt64)
  name.vb: IEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IApplication
  commentId: T:Discord.IApplication
  parent: Discord
  name: IApplication
  nameWithType: IApplication
  fullName: Discord.IApplication
- uid: Discord.ISnowflakeEntity
  commentId: T:Discord.ISnowflakeEntity
  parent: Discord
  name: ISnowflakeEntity
  nameWithType: ISnowflakeEntity
  fullName: Discord.ISnowflakeEntity
- uid: Discord.Rest.RestEntity{System.UInt64}.Id
  commentId: P:Discord.Rest.RestEntity{System.UInt64}.Id
  parent: Discord.Rest.RestEntity{System.UInt64}
  definition: Discord.Rest.RestEntity`1.Id
  name: Id
  nameWithType: RestEntity<UInt64>.Id
  fullName: Discord.Rest.RestEntity<System.UInt64>.Id
  nameWithType.vb: RestEntity(Of UInt64).Id
  fullName.vb: Discord.Rest.RestEntity(Of System.UInt64).Id
- uid: Discord.Rest.RestEntity`1
  commentId: T:Discord.Rest.RestEntity`1
  name: RestEntity<T>
  nameWithType: RestEntity<T>
  fullName: Discord.Rest.RestEntity<T>
  nameWithType.vb: RestEntity(Of T)
  fullName.vb: Discord.Rest.RestEntity(Of T)
  name.vb: RestEntity(Of T)
  spec.csharp:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Rest.RestEntity`1.Id
  commentId: P:Discord.Rest.RestEntity`1.Id
  name: Id
  nameWithType: RestEntity<T>.Id
  fullName: Discord.Rest.RestEntity<T>.Id
  nameWithType.vb: RestEntity(Of T).Id
  fullName.vb: Discord.Rest.RestEntity(Of T).Id
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Rest.RestApplication.Name*
  commentId: Overload:Discord.Rest.RestApplication.Name
  name: Name
  nameWithType: RestApplication.Name
  fullName: Discord.Rest.RestApplication.Name
- uid: Discord.Rest.RestApplication.Description*
  commentId: Overload:Discord.Rest.RestApplication.Description
  name: Description
  nameWithType: RestApplication.Description
  fullName: Discord.Rest.RestApplication.Description
- uid: Discord.Rest.RestApplication.RPCOrigins*
  commentId: Overload:Discord.Rest.RestApplication.RPCOrigins
  name: RPCOrigins
  nameWithType: RestApplication.RPCOrigins
  fullName: Discord.Rest.RestApplication.RPCOrigins
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Discord.Rest.RestApplication.Flags*
  commentId: Overload:Discord.Rest.RestApplication.Flags
  name: Flags
  nameWithType: RestApplication.Flags
  fullName: Discord.Rest.RestApplication.Flags
- uid: System.UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.Rest.RestApplication.Owner*
  commentId: Overload:Discord.Rest.RestApplication.Owner
  name: Owner
  nameWithType: RestApplication.Owner
  fullName: Discord.Rest.RestApplication.Owner
- uid: Discord.IApplication.Owner
  commentId: P:Discord.IApplication.Owner
  parent: Discord.IApplication
  name: Owner
  nameWithType: IApplication.Owner
  fullName: Discord.IApplication.Owner
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord.Rest.RestApplication.CreatedAt*
  commentId: Overload:Discord.Rest.RestApplication.CreatedAt
  name: CreatedAt
  nameWithType: RestApplication.CreatedAt
  fullName: Discord.Rest.RestApplication.CreatedAt
- uid: DateTimeOffset
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: DateTimeOffset
- uid: Discord.Rest.RestApplication.IconUrl*
  commentId: Overload:Discord.Rest.RestApplication.IconUrl
  name: IconUrl
  nameWithType: RestApplication.IconUrl
  fullName: Discord.Rest.RestApplication.IconUrl
- uid: Discord.Rest.RestApplication.UpdateAsync*
  commentId: Overload:Discord.Rest.RestApplication.UpdateAsync
  name: UpdateAsync
  nameWithType: RestApplication.UpdateAsync
  fullName: Discord.Rest.RestApplication.UpdateAsync
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Discord.Rest.RestApplication.ToString*
  commentId: Overload:Discord.Rest.RestApplication.ToString
  name: ToString
  nameWithType: RestApplication.ToString
  fullName: Discord.Rest.RestApplication.ToString
