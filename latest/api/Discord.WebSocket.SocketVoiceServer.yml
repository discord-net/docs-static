### YamlMime:ManagedReference
items:
- uid: Discord.WebSocket.SocketVoiceServer
  commentId: T:Discord.WebSocket.SocketVoiceServer
  id: SocketVoiceServer
  parent: Discord.WebSocket
  children:
  - Discord.WebSocket.SocketVoiceServer.Endpoint
  - Discord.WebSocket.SocketVoiceServer.Guild
  - Discord.WebSocket.SocketVoiceServer.Token
  langs:
  - csharp
  - vb
  name: SocketVoiceServer
  nameWithType: SocketVoiceServer
  fullName: Discord.WebSocket.SocketVoiceServer
  type: Class
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Voice/SocketVoiceServer.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SocketVoiceServer
    path: ../src/Discord.Net.WebSocket/Entities/Voice/SocketVoiceServer.cs
    startLine: 7
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nRepresents a WebSocket-based voice server.\n"
  example: []
  syntax:
    content: public class SocketVoiceServer
    content.vb: Public Class SocketVoiceServer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.WebSocket.SocketVoiceServer.Guild
  commentId: P:Discord.WebSocket.SocketVoiceServer.Guild
  id: Guild
  parent: Discord.WebSocket.SocketVoiceServer
  langs:
  - csharp
  - vb
  name: Guild
  nameWithType: SocketVoiceServer.Guild
  fullName: Discord.WebSocket.SocketVoiceServer.Guild
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Voice/SocketVoiceServer.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Guild
    path: ../src/Discord.Net.WebSocket/Entities/Voice/SocketVoiceServer.cs
    startLine: 16
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the guild associated with the voice server.\n"
  example: []
  syntax:
    content: public Cacheable<IGuild, ulong> Guild { get; }
    parameters: []
    return:
      type: Discord.Cacheable{Discord.IGuild,System.UInt64}
      description: "\nA cached entity of the guild.\n"
    content.vb: Public ReadOnly Property Guild As Cacheable(Of IGuild, ULong)
  overload: Discord.WebSocket.SocketVoiceServer.Guild*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketVoiceServer.Endpoint
  commentId: P:Discord.WebSocket.SocketVoiceServer.Endpoint
  id: Endpoint
  parent: Discord.WebSocket.SocketVoiceServer
  langs:
  - csharp
  - vb
  name: Endpoint
  nameWithType: SocketVoiceServer.Endpoint
  fullName: Discord.WebSocket.SocketVoiceServer.Endpoint
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Voice/SocketVoiceServer.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Endpoint
    path: ../src/Discord.Net.WebSocket/Entities/Voice/SocketVoiceServer.cs
    startLine: 23
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the endpoint URL of the voice server host.\n"
  example: []
  syntax:
    content: public string Endpoint { get; }
    parameters: []
    return:
      type: System.String
      description: "\nAn URL representing the voice server host.\n"
    content.vb: Public ReadOnly Property Endpoint As String
  overload: Discord.WebSocket.SocketVoiceServer.Endpoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketVoiceServer.Token
  commentId: P:Discord.WebSocket.SocketVoiceServer.Token
  id: Token
  parent: Discord.WebSocket.SocketVoiceServer
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: SocketVoiceServer.Token
  fullName: Discord.WebSocket.SocketVoiceServer.Token
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Voice/SocketVoiceServer.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Token
    path: ../src/Discord.Net.WebSocket/Entities/Voice/SocketVoiceServer.cs
    startLine: 30
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the voice connection token.\n"
  example: []
  syntax:
    content: public string Token { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA voice connection token.\n"
    content.vb: Public ReadOnly Property Token As String
  overload: Discord.WebSocket.SocketVoiceServer.Token*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.WebSocket.SocketVoiceServer.Guild*
  commentId: Overload:Discord.WebSocket.SocketVoiceServer.Guild
  name: Guild
  nameWithType: SocketVoiceServer.Guild
  fullName: Discord.WebSocket.SocketVoiceServer.Guild
- uid: Discord.Cacheable{Discord.IGuild,System.UInt64}
  commentId: T:Discord.Cacheable{Discord.IGuild,System.UInt64}
  parent: Discord
  definition: Discord.Cacheable`2
  name: Cacheable<IGuild, UInt64>
  nameWithType: Cacheable<IGuild, UInt64>
  fullName: Discord.Cacheable<Discord.IGuild, System.UInt64>
  nameWithType.vb: Cacheable(Of IGuild, UInt64)
  fullName.vb: Discord.Cacheable(Of Discord.IGuild, System.UInt64)
  name.vb: Cacheable(Of IGuild, UInt64)
  spec.csharp:
  - uid: Discord.Cacheable`2
    name: Cacheable
    nameWithType: Cacheable
    fullName: Discord.Cacheable
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.IGuild
    name: IGuild
    nameWithType: IGuild
    fullName: Discord.IGuild
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Cacheable`2
    name: Cacheable
    nameWithType: Cacheable
    fullName: Discord.Cacheable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.IGuild
    name: IGuild
    nameWithType: IGuild
    fullName: Discord.IGuild
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Cacheable`2
  commentId: T:Discord.Cacheable`2
  name: Cacheable<TEntity, TId>
  nameWithType: Cacheable<TEntity, TId>
  fullName: Discord.Cacheable<TEntity, TId>
  nameWithType.vb: Cacheable(Of TEntity, TId)
  fullName.vb: Discord.Cacheable(Of TEntity, TId)
  name.vb: Cacheable(Of TEntity, TId)
  spec.csharp:
  - uid: Discord.Cacheable`2
    name: Cacheable
    nameWithType: Cacheable
    fullName: Discord.Cacheable
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Cacheable`2
    name: Cacheable
    nameWithType: Cacheable
    fullName: Discord.Cacheable
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.WebSocket.SocketVoiceServer.Endpoint*
  commentId: Overload:Discord.WebSocket.SocketVoiceServer.Endpoint
  name: Endpoint
  nameWithType: SocketVoiceServer.Endpoint
  fullName: Discord.WebSocket.SocketVoiceServer.Endpoint
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.WebSocket.SocketVoiceServer.Token*
  commentId: Overload:Discord.WebSocket.SocketVoiceServer.Token
  name: Token
  nameWithType: SocketVoiceServer.Token
  fullName: Discord.WebSocket.SocketVoiceServer.Token
