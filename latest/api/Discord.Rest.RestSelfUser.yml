### YamlMime:ManagedReference
items:
- uid: Discord.Rest.RestSelfUser
  commentId: T:Discord.Rest.RestSelfUser
  id: RestSelfUser
  parent: Discord.Rest
  children:
  - Discord.Rest.RestSelfUser.Email
  - Discord.Rest.RestSelfUser.Flags
  - Discord.Rest.RestSelfUser.IsMfaEnabled
  - Discord.Rest.RestSelfUser.IsVerified
  - Discord.Rest.RestSelfUser.Locale
  - Discord.Rest.RestSelfUser.ModifyAsync(System.Action{Discord.SelfUserProperties},Discord.RequestOptions)
  - Discord.Rest.RestSelfUser.PremiumType
  - Discord.Rest.RestSelfUser.UpdateAsync(Discord.RequestOptions)
  langs:
  - csharp
  - vb
  name: RestSelfUser
  nameWithType: RestSelfUser
  fullName: Discord.Rest.RestSelfUser
  type: Class
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestSelfUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RestSelfUser
    path: ../src/Discord.Net.Rest/Entities/Users/RestSelfUser.cs
    startLine: 10
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nRepresents the logged-in REST-based user.\n"
  example: []
  syntax:
    content: 'public class RestSelfUser : RestUser, IUpdateable, ISelfUser, IUser, ISnowflakeEntity, IEntity<ulong>, IMentionable, IPresence'
    content.vb: >-
      Public Class RestSelfUser
          Inherits RestUser
          Implements IUpdateable, ISelfUser, IUser, ISnowflakeEntity, IEntity(Of ULong), IMentionable, IPresence
  inheritance:
  - System.Object
  - Discord.Rest.RestEntity{System.UInt64}
  - Discord.Rest.RestUser
  implements:
  - Discord.IUpdateable
  - Discord.ISelfUser
  - Discord.IUser
  - Discord.ISnowflakeEntity
  - Discord.IEntity{System.UInt64}
  - Discord.IMentionable
  - Discord.IPresence
  inheritedMembers:
  - Discord.Rest.RestUser.IsBot
  - Discord.Rest.RestUser.Username
  - Discord.Rest.RestUser.DiscriminatorValue
  - Discord.Rest.RestUser.AvatarId
  - Discord.Rest.RestUser.CreatedAt
  - Discord.Rest.RestUser.Discriminator
  - Discord.Rest.RestUser.Mention
  - Discord.Rest.RestUser.Activity
  - Discord.Rest.RestUser.Status
  - Discord.Rest.RestUser.ActiveClients
  - Discord.Rest.RestUser.IsWebhook
  - Discord.Rest.RestUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  - Discord.Rest.RestUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  - Discord.Rest.RestUser.GetDefaultAvatarUrl
  - Discord.Rest.RestUser.ToString
  - Discord.Rest.RestUser.Discord#IUser#GetOrCreateDMChannelAsync(Discord.RequestOptions)
  - Discord.Rest.RestEntity{System.UInt64}.Id
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Rest.RestSelfUser.Email
  commentId: P:Discord.Rest.RestSelfUser.Email
  id: Email
  parent: Discord.Rest.RestSelfUser
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: RestSelfUser.Email
  fullName: Discord.Rest.RestSelfUser.Email
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestSelfUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Email
    path: ../src/Discord.Net.Rest/Entities/Users/RestSelfUser.cs
    startLine: 14
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the email associated with this user.\n"
  example: []
  syntax:
    content: public string Email { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Email As String
  overload: Discord.Rest.RestSelfUser.Email*
  implements:
  - Discord.ISelfUser.Email
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestSelfUser.IsVerified
  commentId: P:Discord.Rest.RestSelfUser.IsVerified
  id: IsVerified
  parent: Discord.Rest.RestSelfUser
  langs:
  - csharp
  - vb
  name: IsVerified
  nameWithType: RestSelfUser.IsVerified
  fullName: Discord.Rest.RestSelfUser.IsVerified
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestSelfUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsVerified
    path: ../src/Discord.Net.Rest/Entities/Users/RestSelfUser.cs
    startLine: 16
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nIndicates whether or not this user has their email verified.\n"
  example: []
  syntax:
    content: public bool IsVerified { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this user&apos;s email has been verified; <code>false</code> if not.\n"
    content.vb: Public ReadOnly Property IsVerified As Boolean
  overload: Discord.Rest.RestSelfUser.IsVerified*
  implements:
  - Discord.ISelfUser.IsVerified
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestSelfUser.IsMfaEnabled
  commentId: P:Discord.Rest.RestSelfUser.IsMfaEnabled
  id: IsMfaEnabled
  parent: Discord.Rest.RestSelfUser
  langs:
  - csharp
  - vb
  name: IsMfaEnabled
  nameWithType: RestSelfUser.IsMfaEnabled
  fullName: Discord.Rest.RestSelfUser.IsMfaEnabled
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestSelfUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsMfaEnabled
    path: ../src/Discord.Net.Rest/Entities/Users/RestSelfUser.cs
    startLine: 18
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nIndicates whether or not this user has MFA enabled on their account.\n"
  example: []
  syntax:
    content: public bool IsMfaEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this user has enabled multi-factor authentication on their account; <code>false</code> if not.\n"
    content.vb: Public ReadOnly Property IsMfaEnabled As Boolean
  overload: Discord.Rest.RestSelfUser.IsMfaEnabled*
  implements:
  - Discord.ISelfUser.IsMfaEnabled
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestSelfUser.Flags
  commentId: P:Discord.Rest.RestSelfUser.Flags
  id: Flags
  parent: Discord.Rest.RestSelfUser
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: RestSelfUser.Flags
  fullName: Discord.Rest.RestSelfUser.Flags
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestSelfUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Flags
    path: ../src/Discord.Net.Rest/Entities/Users/RestSelfUser.cs
    startLine: 20
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the flags that are applied to a user&apos;s account.\n"
  remarks: "\nThis value is determined by bitwise OR-ing <xref href=\"Discord.UserProperties\" data-throw-if-not-resolved=\"false\"></xref> values together.\n"
  example: []
  syntax:
    content: public UserProperties Flags { get; }
    parameters: []
    return:
      type: Discord.UserProperties
      description: "\nThe value of flags for this user.\n"
    content.vb: Public ReadOnly Property Flags As UserProperties
  overload: Discord.Rest.RestSelfUser.Flags*
  implements:
  - Discord.ISelfUser.Flags
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestSelfUser.PremiumType
  commentId: P:Discord.Rest.RestSelfUser.PremiumType
  id: PremiumType
  parent: Discord.Rest.RestSelfUser
  langs:
  - csharp
  - vb
  name: PremiumType
  nameWithType: RestSelfUser.PremiumType
  fullName: Discord.Rest.RestSelfUser.PremiumType
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestSelfUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: PremiumType
    path: ../src/Discord.Net.Rest/Entities/Users/RestSelfUser.cs
    startLine: 22
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the type of Nitro subscription that is active on this user&apos;s account.\n"
  remarks: "\nThis information may only be available with the identify OAuth scope.\n"
  example: []
  syntax:
    content: public PremiumType PremiumType { get; }
    parameters: []
    return:
      type: Discord.PremiumType
      description: "\nThe type of Nitro subscription the user subscribes to, if any.\n"
    content.vb: Public ReadOnly Property PremiumType As PremiumType
  overload: Discord.Rest.RestSelfUser.PremiumType*
  implements:
  - Discord.ISelfUser.PremiumType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestSelfUser.Locale
  commentId: P:Discord.Rest.RestSelfUser.Locale
  id: Locale
  parent: Discord.Rest.RestSelfUser
  langs:
  - csharp
  - vb
  name: Locale
  nameWithType: RestSelfUser.Locale
  fullName: Discord.Rest.RestSelfUser.Locale
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestSelfUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Locale
    path: ../src/Discord.Net.Rest/Entities/Users/RestSelfUser.cs
    startLine: 24
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the user&apos;s chosen language option.\n"
  example: []
  syntax:
    content: public string Locale { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe IETF language tag of the user&apos;s chosen region, if provided.\nFor example, a locale of &quot;English, US&quot; is &quot;en-US&quot;, &quot;Chinese (Taiwan)&quot; is &quot;zh-TW&quot;, etc.\n"
    content.vb: Public ReadOnly Property Locale As String
  overload: Discord.Rest.RestSelfUser.Locale*
  implements:
  - Discord.ISelfUser.Locale
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestSelfUser.UpdateAsync(Discord.RequestOptions)
  commentId: M:Discord.Rest.RestSelfUser.UpdateAsync(Discord.RequestOptions)
  id: UpdateAsync(Discord.RequestOptions)
  parent: Discord.Rest.RestSelfUser
  langs:
  - csharp
  - vb
  name: UpdateAsync(RequestOptions)
  nameWithType: RestSelfUser.UpdateAsync(RequestOptions)
  fullName: Discord.Rest.RestSelfUser.UpdateAsync(Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestSelfUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: UpdateAsync
    path: ../src/Discord.Net.Rest/Entities/Users/RestSelfUser.cs
    startLine: 57
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nUpdates this object&apos;s properties with its current state.\n"
  example: []
  syntax:
    content: public override Task UpdateAsync(RequestOptions options = null)
    parameters:
    - id: options
      type: Discord.RequestOptions
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overrides Function UpdateAsync(options As RequestOptions = Nothing) As Task
  overridden: Discord.Rest.RestUser.UpdateAsync(Discord.RequestOptions)
  overload: Discord.Rest.RestSelfUser.UpdateAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Unable to update this object using a different token.
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Discord.Rest.RestSelfUser.ModifyAsync(System.Action{Discord.SelfUserProperties},Discord.RequestOptions)
  commentId: M:Discord.Rest.RestSelfUser.ModifyAsync(System.Action{Discord.SelfUserProperties},Discord.RequestOptions)
  id: ModifyAsync(System.Action{Discord.SelfUserProperties},Discord.RequestOptions)
  parent: Discord.Rest.RestSelfUser
  langs:
  - csharp
  - vb
  name: ModifyAsync(Action<SelfUserProperties>, RequestOptions)
  nameWithType: RestSelfUser.ModifyAsync(Action<SelfUserProperties>, RequestOptions)
  fullName: Discord.Rest.RestSelfUser.ModifyAsync(System.Action<Discord.SelfUserProperties>, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestSelfUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ModifyAsync
    path: ../src/Discord.Net.Rest/Entities/Users/RestSelfUser.cs
    startLine: 67
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nModifies the user&apos;s properties.\n"
  example: []
  syntax:
    content: public Task ModifyAsync(Action<SelfUserProperties> func, RequestOptions options = null)
    parameters:
    - id: func
      type: System.Action{Discord.SelfUserProperties}
    - id: options
      type: Discord.RequestOptions
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ModifyAsync(func As Action(Of SelfUserProperties), options As RequestOptions = Nothing) As Task
  overload: Discord.Rest.RestSelfUser.ModifyAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Unable to modify this object using a different token.
  implements:
  - Discord.ISelfUser.ModifyAsync(System.Action{Discord.SelfUserProperties},Discord.RequestOptions)
  nameWithType.vb: RestSelfUser.ModifyAsync(Action(Of SelfUserProperties), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Rest.RestSelfUser.ModifyAsync(System.Action(Of Discord.SelfUserProperties), Discord.RequestOptions)
  name.vb: ModifyAsync(Action(Of SelfUserProperties), RequestOptions)
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Rest.RestEntity{System.UInt64}
  commentId: T:Discord.Rest.RestEntity{System.UInt64}
  parent: Discord.Rest
  definition: Discord.Rest.RestEntity`1
  name: RestEntity<UInt64>
  nameWithType: RestEntity<UInt64>
  fullName: Discord.Rest.RestEntity<System.UInt64>
  nameWithType.vb: RestEntity(Of UInt64)
  fullName.vb: Discord.Rest.RestEntity(Of System.UInt64)
  name.vb: RestEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestUser
  commentId: T:Discord.Rest.RestUser
  parent: Discord.Rest
  name: RestUser
  nameWithType: RestUser
  fullName: Discord.Rest.RestUser
- uid: Discord.IUpdateable
  commentId: T:Discord.IUpdateable
  parent: Discord
  name: IUpdateable
  nameWithType: IUpdateable
  fullName: Discord.IUpdateable
- uid: Discord.ISelfUser
  commentId: T:Discord.ISelfUser
  parent: Discord
  name: ISelfUser
  nameWithType: ISelfUser
  fullName: Discord.ISelfUser
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord.ISnowflakeEntity
  commentId: T:Discord.ISnowflakeEntity
  parent: Discord
  name: ISnowflakeEntity
  nameWithType: ISnowflakeEntity
  fullName: Discord.ISnowflakeEntity
- uid: Discord.IEntity{System.UInt64}
  commentId: T:Discord.IEntity{System.UInt64}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<UInt64>
  nameWithType: IEntity<UInt64>
  fullName: Discord.IEntity<System.UInt64>
  nameWithType.vb: IEntity(Of UInt64)
  fullName.vb: Discord.IEntity(Of System.UInt64)
  name.vb: IEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IMentionable
  commentId: T:Discord.IMentionable
  parent: Discord
  name: IMentionable
  nameWithType: IMentionable
  fullName: Discord.IMentionable
- uid: Discord.IPresence
  commentId: T:Discord.IPresence
  parent: Discord
  name: IPresence
  nameWithType: IPresence
  fullName: Discord.IPresence
- uid: Discord.Rest.RestUser.IsBot
  commentId: P:Discord.Rest.RestUser.IsBot
  parent: Discord.Rest.RestUser
  name: IsBot
  nameWithType: RestUser.IsBot
  fullName: Discord.Rest.RestUser.IsBot
- uid: Discord.Rest.RestUser.Username
  commentId: P:Discord.Rest.RestUser.Username
  parent: Discord.Rest.RestUser
  name: Username
  nameWithType: RestUser.Username
  fullName: Discord.Rest.RestUser.Username
- uid: Discord.Rest.RestUser.DiscriminatorValue
  commentId: P:Discord.Rest.RestUser.DiscriminatorValue
  parent: Discord.Rest.RestUser
  name: DiscriminatorValue
  nameWithType: RestUser.DiscriminatorValue
  fullName: Discord.Rest.RestUser.DiscriminatorValue
- uid: Discord.Rest.RestUser.AvatarId
  commentId: P:Discord.Rest.RestUser.AvatarId
  parent: Discord.Rest.RestUser
  name: AvatarId
  nameWithType: RestUser.AvatarId
  fullName: Discord.Rest.RestUser.AvatarId
- uid: Discord.Rest.RestUser.CreatedAt
  commentId: P:Discord.Rest.RestUser.CreatedAt
  parent: Discord.Rest.RestUser
  name: CreatedAt
  nameWithType: RestUser.CreatedAt
  fullName: Discord.Rest.RestUser.CreatedAt
- uid: Discord.Rest.RestUser.Discriminator
  commentId: P:Discord.Rest.RestUser.Discriminator
  parent: Discord.Rest.RestUser
  name: Discriminator
  nameWithType: RestUser.Discriminator
  fullName: Discord.Rest.RestUser.Discriminator
- uid: Discord.Rest.RestUser.Mention
  commentId: P:Discord.Rest.RestUser.Mention
  parent: Discord.Rest.RestUser
  name: Mention
  nameWithType: RestUser.Mention
  fullName: Discord.Rest.RestUser.Mention
- uid: Discord.Rest.RestUser.Activity
  commentId: P:Discord.Rest.RestUser.Activity
  parent: Discord.Rest.RestUser
  name: Activity
  nameWithType: RestUser.Activity
  fullName: Discord.Rest.RestUser.Activity
- uid: Discord.Rest.RestUser.Status
  commentId: P:Discord.Rest.RestUser.Status
  parent: Discord.Rest.RestUser
  name: Status
  nameWithType: RestUser.Status
  fullName: Discord.Rest.RestUser.Status
- uid: Discord.Rest.RestUser.ActiveClients
  commentId: P:Discord.Rest.RestUser.ActiveClients
  parent: Discord.Rest.RestUser
  name: ActiveClients
  nameWithType: RestUser.ActiveClients
  fullName: Discord.Rest.RestUser.ActiveClients
- uid: Discord.Rest.RestUser.IsWebhook
  commentId: P:Discord.Rest.RestUser.IsWebhook
  parent: Discord.Rest.RestUser
  name: IsWebhook
  nameWithType: RestUser.IsWebhook
  fullName: Discord.Rest.RestUser.IsWebhook
- uid: Discord.Rest.RestUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  commentId: M:Discord.Rest.RestUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  parent: Discord.Rest.RestUser
  name: GetOrCreateDMChannelAsync(RequestOptions)
  nameWithType: RestUser.GetOrCreateDMChannelAsync(RequestOptions)
  fullName: Discord.Rest.RestUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Rest.RestUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
    name: GetOrCreateDMChannelAsync
    nameWithType: RestUser.GetOrCreateDMChannelAsync
    fullName: Discord.Rest.RestUser.GetOrCreateDMChannelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
    name: GetOrCreateDMChannelAsync
    nameWithType: RestUser.GetOrCreateDMChannelAsync
    fullName: Discord.Rest.RestUser.GetOrCreateDMChannelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  commentId: M:Discord.Rest.RestUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  parent: Discord.Rest.RestUser
  isExternal: true
  name: GetAvatarUrl(ImageFormat, UInt16)
  nameWithType: RestUser.GetAvatarUrl(ImageFormat, UInt16)
  fullName: Discord.Rest.RestUser.GetAvatarUrl(Discord.ImageFormat, System.UInt16)
  spec.csharp:
  - uid: Discord.Rest.RestUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
    name: GetAvatarUrl
    nameWithType: RestUser.GetAvatarUrl
    fullName: Discord.Rest.RestUser.GetAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.ImageFormat
    name: ImageFormat
    nameWithType: ImageFormat
    fullName: Discord.ImageFormat
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
    name: GetAvatarUrl
    nameWithType: RestUser.GetAvatarUrl
    fullName: Discord.Rest.RestUser.GetAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.ImageFormat
    name: ImageFormat
    nameWithType: ImageFormat
    fullName: Discord.ImageFormat
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestUser.GetDefaultAvatarUrl
  commentId: M:Discord.Rest.RestUser.GetDefaultAvatarUrl
  parent: Discord.Rest.RestUser
  name: GetDefaultAvatarUrl()
  nameWithType: RestUser.GetDefaultAvatarUrl()
  fullName: Discord.Rest.RestUser.GetDefaultAvatarUrl()
  spec.csharp:
  - uid: Discord.Rest.RestUser.GetDefaultAvatarUrl
    name: GetDefaultAvatarUrl
    nameWithType: RestUser.GetDefaultAvatarUrl
    fullName: Discord.Rest.RestUser.GetDefaultAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestUser.GetDefaultAvatarUrl
    name: GetDefaultAvatarUrl
    nameWithType: RestUser.GetDefaultAvatarUrl
    fullName: Discord.Rest.RestUser.GetDefaultAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestUser.ToString
  commentId: M:Discord.Rest.RestUser.ToString
  parent: Discord.Rest.RestUser
  name: ToString()
  nameWithType: RestUser.ToString()
  fullName: Discord.Rest.RestUser.ToString()
  spec.csharp:
  - uid: Discord.Rest.RestUser.ToString
    name: ToString
    nameWithType: RestUser.ToString
    fullName: Discord.Rest.RestUser.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestUser.ToString
    name: ToString
    nameWithType: RestUser.ToString
    fullName: Discord.Rest.RestUser.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestUser.Discord#IUser#GetOrCreateDMChannelAsync(Discord.RequestOptions)
  commentId: M:Discord.Rest.RestUser.Discord#IUser#GetOrCreateDMChannelAsync(Discord.RequestOptions)
  parent: Discord.Rest.RestUser
  name: IUser.GetOrCreateDMChannelAsync(RequestOptions)
  nameWithType: RestUser.IUser.GetOrCreateDMChannelAsync(RequestOptions)
  fullName: Discord.Rest.RestUser.Discord.IUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  nameWithType.vb: RestUser.Discord.IUser.GetOrCreateDMChannelAsync(RequestOptions)
  name.vb: Discord.IUser.GetOrCreateDMChannelAsync(RequestOptions)
  spec.csharp:
  - uid: Discord.Rest.RestUser.Discord#IUser#GetOrCreateDMChannelAsync(Discord.RequestOptions)
    name: IUser.GetOrCreateDMChannelAsync
    nameWithType: RestUser.IUser.GetOrCreateDMChannelAsync
    fullName: Discord.Rest.RestUser.Discord.IUser.GetOrCreateDMChannelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestUser.Discord#IUser#GetOrCreateDMChannelAsync(Discord.RequestOptions)
    name: Discord.IUser.GetOrCreateDMChannelAsync
    nameWithType: RestUser.Discord.IUser.GetOrCreateDMChannelAsync
    fullName: Discord.Rest.RestUser.Discord.IUser.GetOrCreateDMChannelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestEntity{System.UInt64}.Id
  commentId: P:Discord.Rest.RestEntity{System.UInt64}.Id
  parent: Discord.Rest.RestEntity{System.UInt64}
  definition: Discord.Rest.RestEntity`1.Id
  name: Id
  nameWithType: RestEntity<UInt64>.Id
  fullName: Discord.Rest.RestEntity<System.UInt64>.Id
  nameWithType.vb: RestEntity(Of UInt64).Id
  fullName.vb: Discord.Rest.RestEntity(Of System.UInt64).Id
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Rest.RestEntity`1
  commentId: T:Discord.Rest.RestEntity`1
  name: RestEntity<T>
  nameWithType: RestEntity<T>
  fullName: Discord.Rest.RestEntity<T>
  nameWithType.vb: RestEntity(Of T)
  fullName.vb: Discord.Rest.RestEntity(Of T)
  name.vb: RestEntity(Of T)
  spec.csharp:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestEntity`1.Id
  commentId: P:Discord.Rest.RestEntity`1.Id
  name: Id
  nameWithType: RestEntity<T>.Id
  fullName: Discord.Rest.RestEntity<T>.Id
  nameWithType.vb: RestEntity(Of T).Id
  fullName.vb: Discord.Rest.RestEntity(Of T).Id
- uid: Discord.Rest.RestSelfUser.Email*
  commentId: Overload:Discord.Rest.RestSelfUser.Email
  name: Email
  nameWithType: RestSelfUser.Email
  fullName: Discord.Rest.RestSelfUser.Email
- uid: Discord.ISelfUser.Email
  commentId: P:Discord.ISelfUser.Email
  parent: Discord.ISelfUser
  name: Email
  nameWithType: ISelfUser.Email
  fullName: Discord.ISelfUser.Email
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Rest.RestSelfUser.IsVerified*
  commentId: Overload:Discord.Rest.RestSelfUser.IsVerified
  name: IsVerified
  nameWithType: RestSelfUser.IsVerified
  fullName: Discord.Rest.RestSelfUser.IsVerified
- uid: Discord.ISelfUser.IsVerified
  commentId: P:Discord.ISelfUser.IsVerified
  parent: Discord.ISelfUser
  name: IsVerified
  nameWithType: ISelfUser.IsVerified
  fullName: Discord.ISelfUser.IsVerified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.Rest.RestSelfUser.IsMfaEnabled*
  commentId: Overload:Discord.Rest.RestSelfUser.IsMfaEnabled
  name: IsMfaEnabled
  nameWithType: RestSelfUser.IsMfaEnabled
  fullName: Discord.Rest.RestSelfUser.IsMfaEnabled
- uid: Discord.ISelfUser.IsMfaEnabled
  commentId: P:Discord.ISelfUser.IsMfaEnabled
  parent: Discord.ISelfUser
  name: IsMfaEnabled
  nameWithType: ISelfUser.IsMfaEnabled
  fullName: Discord.ISelfUser.IsMfaEnabled
- uid: Discord.Rest.RestSelfUser.Flags*
  commentId: Overload:Discord.Rest.RestSelfUser.Flags
  name: Flags
  nameWithType: RestSelfUser.Flags
  fullName: Discord.Rest.RestSelfUser.Flags
- uid: Discord.ISelfUser.Flags
  commentId: P:Discord.ISelfUser.Flags
  parent: Discord.ISelfUser
  name: Flags
  nameWithType: ISelfUser.Flags
  fullName: Discord.ISelfUser.Flags
- uid: Discord.UserProperties
  commentId: T:Discord.UserProperties
  parent: Discord
  name: UserProperties
  nameWithType: UserProperties
  fullName: Discord.UserProperties
- uid: Discord.Rest.RestSelfUser.PremiumType*
  commentId: Overload:Discord.Rest.RestSelfUser.PremiumType
  name: PremiumType
  nameWithType: RestSelfUser.PremiumType
  fullName: Discord.Rest.RestSelfUser.PremiumType
- uid: Discord.ISelfUser.PremiumType
  commentId: P:Discord.ISelfUser.PremiumType
  parent: Discord.ISelfUser
  name: PremiumType
  nameWithType: ISelfUser.PremiumType
  fullName: Discord.ISelfUser.PremiumType
- uid: Discord.PremiumType
  commentId: T:Discord.PremiumType
  parent: Discord
  name: PremiumType
  nameWithType: PremiumType
  fullName: Discord.PremiumType
- uid: Discord.Rest.RestSelfUser.Locale*
  commentId: Overload:Discord.Rest.RestSelfUser.Locale
  name: Locale
  nameWithType: RestSelfUser.Locale
  fullName: Discord.Rest.RestSelfUser.Locale
- uid: Discord.ISelfUser.Locale
  commentId: P:Discord.ISelfUser.Locale
  parent: Discord.ISelfUser
  name: Locale
  nameWithType: ISelfUser.Locale
  fullName: Discord.ISelfUser.Locale
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: Discord.Rest.RestUser.UpdateAsync(Discord.RequestOptions)
  commentId: M:Discord.Rest.RestUser.UpdateAsync(Discord.RequestOptions)
  parent: Discord.Rest.RestUser
  name: UpdateAsync(RequestOptions)
  nameWithType: RestUser.UpdateAsync(RequestOptions)
  fullName: Discord.Rest.RestUser.UpdateAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Rest.RestUser.UpdateAsync(Discord.RequestOptions)
    name: UpdateAsync
    nameWithType: RestUser.UpdateAsync
    fullName: Discord.Rest.RestUser.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestUser.UpdateAsync(Discord.RequestOptions)
    name: UpdateAsync
    nameWithType: RestUser.UpdateAsync
    fullName: Discord.Rest.RestUser.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestSelfUser.UpdateAsync*
  commentId: Overload:Discord.Rest.RestSelfUser.UpdateAsync
  name: UpdateAsync
  nameWithType: RestSelfUser.UpdateAsync
  fullName: Discord.Rest.RestSelfUser.UpdateAsync
- uid: Discord.RequestOptions
  commentId: T:Discord.RequestOptions
  parent: Discord
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: Discord.RequestOptions
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Discord.Rest.RestSelfUser.ModifyAsync*
  commentId: Overload:Discord.Rest.RestSelfUser.ModifyAsync
  name: ModifyAsync
  nameWithType: RestSelfUser.ModifyAsync
  fullName: Discord.Rest.RestSelfUser.ModifyAsync
- uid: Discord.ISelfUser.ModifyAsync(System.Action{Discord.SelfUserProperties},Discord.RequestOptions)
  commentId: M:Discord.ISelfUser.ModifyAsync(System.Action{Discord.SelfUserProperties},Discord.RequestOptions)
  parent: Discord.ISelfUser
  isExternal: true
  name: ModifyAsync(Action<SelfUserProperties>, RequestOptions)
  nameWithType: ISelfUser.ModifyAsync(Action<SelfUserProperties>, RequestOptions)
  fullName: Discord.ISelfUser.ModifyAsync(System.Action<Discord.SelfUserProperties>, Discord.RequestOptions)
  nameWithType.vb: ISelfUser.ModifyAsync(Action(Of SelfUserProperties), RequestOptions)
  fullName.vb: Discord.ISelfUser.ModifyAsync(System.Action(Of Discord.SelfUserProperties), Discord.RequestOptions)
  name.vb: ModifyAsync(Action(Of SelfUserProperties), RequestOptions)
  spec.csharp:
  - uid: Discord.ISelfUser.ModifyAsync(System.Action{Discord.SelfUserProperties},Discord.RequestOptions)
    name: ModifyAsync
    nameWithType: ISelfUser.ModifyAsync
    fullName: Discord.ISelfUser.ModifyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.SelfUserProperties
    name: SelfUserProperties
    nameWithType: SelfUserProperties
    fullName: Discord.SelfUserProperties
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.ISelfUser.ModifyAsync(System.Action{Discord.SelfUserProperties},Discord.RequestOptions)
    name: ModifyAsync
    nameWithType: ISelfUser.ModifyAsync
    fullName: Discord.ISelfUser.ModifyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.SelfUserProperties
    name: SelfUserProperties
    nameWithType: SelfUserProperties
    fullName: Discord.SelfUserProperties
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Discord.SelfUserProperties}
  commentId: T:System.Action{Discord.SelfUserProperties}
  parent: System
  definition: System.Action`1
  name: Action<SelfUserProperties>
  nameWithType: Action<SelfUserProperties>
  fullName: System.Action<Discord.SelfUserProperties>
  nameWithType.vb: Action(Of SelfUserProperties)
  fullName.vb: System.Action(Of Discord.SelfUserProperties)
  name.vb: Action(Of SelfUserProperties)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.SelfUserProperties
    name: SelfUserProperties
    nameWithType: SelfUserProperties
    fullName: Discord.SelfUserProperties
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.SelfUserProperties
    name: SelfUserProperties
    nameWithType: SelfUserProperties
    fullName: Discord.SelfUserProperties
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
