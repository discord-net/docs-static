### YamlMime:ManagedReference
items:
- uid: Discord.EmbedBuilder
  commentId: T:Discord.EmbedBuilder
  id: EmbedBuilder
  parent: Discord
  children:
  - Discord.EmbedBuilder.#ctor
  - Discord.EmbedBuilder.AddField(Action{Discord.EmbedFieldBuilder})
  - Discord.EmbedBuilder.AddField(Discord.EmbedFieldBuilder)
  - Discord.EmbedBuilder.AddField(System.String,System.Object,System.Boolean)
  - Discord.EmbedBuilder.Author
  - Discord.EmbedBuilder.Build
  - Discord.EmbedBuilder.Color
  - Discord.EmbedBuilder.Description
  - Discord.EmbedBuilder.Fields
  - Discord.EmbedBuilder.Footer
  - Discord.EmbedBuilder.ImageUrl
  - Discord.EmbedBuilder.Length
  - Discord.EmbedBuilder.MaxDescriptionLength
  - Discord.EmbedBuilder.MaxEmbedLength
  - Discord.EmbedBuilder.MaxFieldCount
  - Discord.EmbedBuilder.MaxTitleLength
  - Discord.EmbedBuilder.ThumbnailUrl
  - Discord.EmbedBuilder.Timestamp
  - Discord.EmbedBuilder.Title
  - Discord.EmbedBuilder.Url
  - Discord.EmbedBuilder.WithAuthor(Action{Discord.EmbedAuthorBuilder})
  - Discord.EmbedBuilder.WithAuthor(Discord.EmbedAuthorBuilder)
  - Discord.EmbedBuilder.WithAuthor(System.String,System.String,System.String)
  - Discord.EmbedBuilder.WithColor(Discord.Color)
  - Discord.EmbedBuilder.WithCurrentTimestamp
  - Discord.EmbedBuilder.WithDescription(System.String)
  - Discord.EmbedBuilder.WithFooter(Action{Discord.EmbedFooterBuilder})
  - Discord.EmbedBuilder.WithFooter(Discord.EmbedFooterBuilder)
  - Discord.EmbedBuilder.WithFooter(System.String,System.String)
  - Discord.EmbedBuilder.WithImageUrl(System.String)
  - Discord.EmbedBuilder.WithThumbnailUrl(System.String)
  - Discord.EmbedBuilder.WithTimestamp(DateTimeOffset)
  - Discord.EmbedBuilder.WithTitle(System.String)
  - Discord.EmbedBuilder.WithUrl(System.String)
  langs:
  - csharp
  - vb
  name: EmbedBuilder
  nameWithType: EmbedBuilder
  fullName: Discord.EmbedBuilder
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: EmbedBuilder
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 10
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nRepresents a builder class for creating a <xref href=\"Discord.EmbedType.Rich\" data-throw-if-not-resolved=\"false\"></xref> <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class EmbedBuilder : object'
    content.vb: >-
      Public Class EmbedBuilder
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - Discord.EmbedBuilder.Discord.EmbedBuilderExtensions.WithColor(System.UInt32)
  - Discord.EmbedBuilder.Discord.EmbedBuilderExtensions.WithColor(System.Byte,System.Byte,System.Byte)
  - Discord.EmbedBuilder.Discord.EmbedBuilderExtensions.WithColor(System.Int32,System.Int32,System.Int32)
  - Discord.EmbedBuilder.Discord.EmbedBuilderExtensions.WithColor(System.Single,System.Single,System.Single)
  - Discord.EmbedBuilder.Discord.EmbedBuilderExtensions.WithAuthor(Discord.IUser)
  - Discord.EmbedBuilder.Discord.EmbedBuilderExtensions.WithFields(IEnumerable{Discord.EmbedFieldBuilder})
  - Discord.EmbedBuilder.Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedFieldBuilder[])
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.EmbedBuilder.MaxFieldCount
  commentId: F:Discord.EmbedBuilder.MaxFieldCount
  id: MaxFieldCount
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: MaxFieldCount
  nameWithType: EmbedBuilder.MaxFieldCount
  fullName: Discord.EmbedBuilder.MaxFieldCount
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MaxFieldCount
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 22
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the maximum number of fields allowed by Discord. \n"
  example: []
  syntax:
    content: public const int MaxFieldCount = null
    return:
      type: System.Int32
    content.vb: Public Const MaxFieldCount As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.EmbedBuilder.MaxTitleLength
  commentId: F:Discord.EmbedBuilder.MaxTitleLength
  id: MaxTitleLength
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: MaxTitleLength
  nameWithType: EmbedBuilder.MaxTitleLength
  fullName: Discord.EmbedBuilder.MaxTitleLength
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MaxTitleLength
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 26
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the maximum length of title allowed by Discord. \n"
  example: []
  syntax:
    content: public const int MaxTitleLength = null
    return:
      type: System.Int32
    content.vb: Public Const MaxTitleLength As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.EmbedBuilder.MaxDescriptionLength
  commentId: F:Discord.EmbedBuilder.MaxDescriptionLength
  id: MaxDescriptionLength
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: MaxDescriptionLength
  nameWithType: EmbedBuilder.MaxDescriptionLength
  fullName: Discord.EmbedBuilder.MaxDescriptionLength
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MaxDescriptionLength
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 30
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the maximum length of description allowed by Discord. \n"
  example: []
  syntax:
    content: public const int MaxDescriptionLength = null
    return:
      type: System.Int32
    content.vb: Public Const MaxDescriptionLength As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.EmbedBuilder.MaxEmbedLength
  commentId: F:Discord.EmbedBuilder.MaxEmbedLength
  id: MaxEmbedLength
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: MaxEmbedLength
  nameWithType: EmbedBuilder.MaxEmbedLength
  fullName: Discord.EmbedBuilder.MaxEmbedLength
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MaxEmbedLength
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 34
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the maximum length of total characters allowed by Discord. \n"
  example: []
  syntax:
    content: public const int MaxEmbedLength = null
    return:
      type: System.Int32
    content.vb: Public Const MaxEmbedLength As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.EmbedBuilder.#ctor
  commentId: M:Discord.EmbedBuilder.#ctor
  id: '#ctor'
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: EmbedBuilder()
  nameWithType: EmbedBuilder.EmbedBuilder()
  fullName: Discord.EmbedBuilder.EmbedBuilder()
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 37
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Initializes a new <xref href="Discord.EmbedBuilder" data-throw-if-not-resolved="false"></xref> class. '
  example: []
  syntax:
    content: public EmbedBuilder()
    content.vb: Public Sub New
  overload: Discord.EmbedBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.Title
  commentId: P:Discord.EmbedBuilder.Title
  id: Title
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: EmbedBuilder.Title
  fullName: Discord.EmbedBuilder.Title
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Title
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 46
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets or sets the title of an <xref href="Discord.Embed" data-throw-if-not-resolved="false"></xref>. '
  example: []
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
      description: The title of the embed.
    content.vb: Public Property Title As String
  overload: Discord.EmbedBuilder.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.Description
  commentId: P:Discord.EmbedBuilder.Description
  id: Description
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: EmbedBuilder.Description
  fullName: Discord.EmbedBuilder.Description
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Description
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 59
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets or sets the description of an <xref href="Discord.Embed" data-throw-if-not-resolved="false"></xref>. '
  example: []
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
      description: The description of the embed.
    content.vb: Public Property Description As String
  overload: Discord.EmbedBuilder.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.Url
  commentId: P:Discord.EmbedBuilder.Url
  id: Url
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: EmbedBuilder.Url
  fullName: Discord.EmbedBuilder.Url
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Url
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 72
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets or sets the URL of an <xref href="Discord.Embed" data-throw-if-not-resolved="false"></xref>. '
  example: []
  syntax:
    content: public string Url { get; set; }
    parameters: []
    return:
      type: System.String
      description: The URL of the embed.
    content.vb: Public Property Url As String
  overload: Discord.EmbedBuilder.Url*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.ThumbnailUrl
  commentId: P:Discord.EmbedBuilder.ThumbnailUrl
  id: ThumbnailUrl
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: ThumbnailUrl
  nameWithType: EmbedBuilder.ThumbnailUrl
  fullName: Discord.EmbedBuilder.ThumbnailUrl
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ThumbnailUrl
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 84
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets or sets the thumbnail URL of an <xref href="Discord.Embed" data-throw-if-not-resolved="false"></xref>. '
  example: []
  syntax:
    content: public string ThumbnailUrl { get; set; }
    parameters: []
    return:
      type: System.String
      description: The thumbnail URL of the embed.
    content.vb: Public Property ThumbnailUrl As String
  overload: Discord.EmbedBuilder.ThumbnailUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.ImageUrl
  commentId: P:Discord.EmbedBuilder.ImageUrl
  id: ImageUrl
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: ImageUrl
  nameWithType: EmbedBuilder.ImageUrl
  fullName: Discord.EmbedBuilder.ImageUrl
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ImageUrl
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 96
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets or sets the image URL of an <xref href="Discord.Embed" data-throw-if-not-resolved="false"></xref>. '
  example: []
  syntax:
    content: public string ImageUrl { get; set; }
    parameters: []
    return:
      type: System.String
      description: The image URL of the embed.
    content.vb: Public Property ImageUrl As String
  overload: Discord.EmbedBuilder.ImageUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.Fields
  commentId: P:Discord.EmbedBuilder.Fields
  id: Fields
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: Fields
  nameWithType: EmbedBuilder.Fields
  fullName: Discord.EmbedBuilder.Fields
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Fields
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 112
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets or sets the list of <xref href="Discord.EmbedFieldBuilder" data-throw-if-not-resolved="false"></xref> of an <xref href="Discord.Embed" data-throw-if-not-resolved="false"></xref>. '
  example: []
  syntax:
    content: public List<EmbedFieldBuilder> Fields { get; set; }
    parameters: []
    return:
      type: List{Discord.EmbedFieldBuilder}
      description: The list of existing <xref href="Discord.EmbedFieldBuilder" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Property Fields As List(Of EmbedFieldBuilder)
  overload: Discord.EmbedBuilder.Fields*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.Timestamp
  commentId: P:Discord.EmbedBuilder.Timestamp
  id: Timestamp
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: EmbedBuilder.Timestamp
  fullName: Discord.EmbedBuilder.Timestamp
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Timestamp
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 129
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the timestamp of an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public DateTimeOffset? Timestamp { get; set; }
    parameters: []
    return:
      type: System.Nullable{DateTimeOffset}
      description: "\nThe timestamp of the embed, or <code>null</code> if none is set.\n"
    content.vb: Public Property Timestamp As DateTimeOffset?
  overload: Discord.EmbedBuilder.Timestamp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.Color
  commentId: P:Discord.EmbedBuilder.Color
  id: Color
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: EmbedBuilder.Color
  fullName: Discord.EmbedBuilder.Color
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Color
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 136
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the sidebar color of an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Color? Color { get; set; }
    parameters: []
    return:
      type: System.Nullable{Discord.Color}
      description: "\nThe color of the embed, or <code>null</code> if none is set.\n"
    content.vb: Public Property Color As Color?
  overload: Discord.EmbedBuilder.Color*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.Author
  commentId: P:Discord.EmbedBuilder.Author
  id: Author
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: Author
  nameWithType: EmbedBuilder.Author
  fullName: Discord.EmbedBuilder.Author
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Author
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 143
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the <xref href=\"Discord.EmbedAuthorBuilder\" data-throw-if-not-resolved=\"false\"></xref> of an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EmbedAuthorBuilder Author { get; set; }
    parameters: []
    return:
      type: Discord.EmbedAuthorBuilder
      description: "\nThe author field builder of the embed, or <code>null</code> if none is set.\n"
    content.vb: Public Property Author As EmbedAuthorBuilder
  overload: Discord.EmbedBuilder.Author*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.Footer
  commentId: P:Discord.EmbedBuilder.Footer
  id: Footer
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: Footer
  nameWithType: EmbedBuilder.Footer
  fullName: Discord.EmbedBuilder.Footer
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Footer
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 150
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the <xref href=\"Discord.EmbedFooterBuilder\" data-throw-if-not-resolved=\"false\"></xref> of an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EmbedFooterBuilder Footer { get; set; }
    parameters: []
    return:
      type: Discord.EmbedFooterBuilder
      description: "\nThe footer field builder of the embed, or <code>null</code> if none is set.\n"
    content.vb: Public Property Footer As EmbedFooterBuilder
  overload: Discord.EmbedBuilder.Footer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.Length
  commentId: P:Discord.EmbedBuilder.Length
  id: Length
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: EmbedBuilder.Length
  fullName: Discord.EmbedBuilder.Length
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Length
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 159
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the total length of all embed properties.\n"
  example: []
  syntax:
    content: public int Length { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe combined length of <xref href=\"Discord.EmbedBuilder.Title\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Discord.EmbedAuthor.Name\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Discord.EmbedBuilder.Description\" data-throw-if-not-resolved=\"false\"></xref>, \n<xref href=\"Discord.EmbedFooter.Text\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Discord.EmbedField.Name\" data-throw-if-not-resolved=\"false\"></xref>, and <xref href=\"Discord.EmbedField.Value\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public ReadOnly Property Length As Integer
  overload: Discord.EmbedBuilder.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.EmbedBuilder.WithTitle(System.String)
  commentId: M:Discord.EmbedBuilder.WithTitle(System.String)
  id: WithTitle(System.String)
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: WithTitle(String)
  nameWithType: EmbedBuilder.WithTitle(String)
  fullName: Discord.EmbedBuilder.WithTitle(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithTitle
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 180
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the title of an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EmbedBuilder WithTitle(string title)
    parameters:
    - id: title
      type: System.String
      description: The title to be set.
    return:
      type: Discord.EmbedBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithTitle(title As String) As EmbedBuilder
  overload: Discord.EmbedBuilder.WithTitle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.WithDescription(System.String)
  commentId: M:Discord.EmbedBuilder.WithDescription(System.String)
  id: WithDescription(System.String)
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: WithDescription(String)
  nameWithType: EmbedBuilder.WithDescription(String)
  fullName: Discord.EmbedBuilder.WithDescription(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithDescription
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 192
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the description of an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EmbedBuilder WithDescription(string description)
    parameters:
    - id: description
      type: System.String
      description: 'The description to be set. '
    return:
      type: Discord.EmbedBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithDescription(description As String) As EmbedBuilder
  overload: Discord.EmbedBuilder.WithDescription*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.WithUrl(System.String)
  commentId: M:Discord.EmbedBuilder.WithUrl(System.String)
  id: WithUrl(System.String)
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: WithUrl(String)
  nameWithType: EmbedBuilder.WithUrl(String)
  fullName: Discord.EmbedBuilder.WithUrl(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithUrl
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 204
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the URL of an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EmbedBuilder WithUrl(string url)
    parameters:
    - id: url
      type: System.String
      description: 'The URL to be set. '
    return:
      type: Discord.EmbedBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithUrl(url As String) As EmbedBuilder
  overload: Discord.EmbedBuilder.WithUrl*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.WithThumbnailUrl(System.String)
  commentId: M:Discord.EmbedBuilder.WithThumbnailUrl(System.String)
  id: WithThumbnailUrl(System.String)
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: WithThumbnailUrl(String)
  nameWithType: EmbedBuilder.WithThumbnailUrl(String)
  fullName: Discord.EmbedBuilder.WithThumbnailUrl(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithThumbnailUrl
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 216
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the thumbnail URL of an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EmbedBuilder WithThumbnailUrl(string thumbnailUrl)
    parameters:
    - id: thumbnailUrl
      type: System.String
      description: 'The thumbnail URL to be set. '
    return:
      type: Discord.EmbedBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithThumbnailUrl(thumbnailUrl As String) As EmbedBuilder
  overload: Discord.EmbedBuilder.WithThumbnailUrl*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.WithImageUrl(System.String)
  commentId: M:Discord.EmbedBuilder.WithImageUrl(System.String)
  id: WithImageUrl(System.String)
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: WithImageUrl(String)
  nameWithType: EmbedBuilder.WithImageUrl(String)
  fullName: Discord.EmbedBuilder.WithImageUrl(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithImageUrl
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 228
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the image URL of an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EmbedBuilder WithImageUrl(string imageUrl)
    parameters:
    - id: imageUrl
      type: System.String
      description: The image URL to be set.
    return:
      type: Discord.EmbedBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithImageUrl(imageUrl As String) As EmbedBuilder
  overload: Discord.EmbedBuilder.WithImageUrl*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.WithCurrentTimestamp
  commentId: M:Discord.EmbedBuilder.WithCurrentTimestamp
  id: WithCurrentTimestamp
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: WithCurrentTimestamp()
  nameWithType: EmbedBuilder.WithCurrentTimestamp()
  fullName: Discord.EmbedBuilder.WithCurrentTimestamp()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithCurrentTimestamp
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 239
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the timestamp of an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref> to the current time.\n"
  example: []
  syntax:
    content: public EmbedBuilder WithCurrentTimestamp()
    return:
      type: Discord.EmbedBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithCurrentTimestamp As EmbedBuilder
  overload: Discord.EmbedBuilder.WithCurrentTimestamp*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.WithTimestamp(DateTimeOffset)
  commentId: M:Discord.EmbedBuilder.WithTimestamp(DateTimeOffset)
  id: WithTimestamp(DateTimeOffset)
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: WithTimestamp(DateTimeOffset)
  nameWithType: EmbedBuilder.WithTimestamp(DateTimeOffset)
  fullName: Discord.EmbedBuilder.WithTimestamp(DateTimeOffset)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithTimestamp
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 251
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the timestamp of an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EmbedBuilder WithTimestamp(DateTimeOffset dateTimeOffset)
    parameters:
    - id: dateTimeOffset
      type: DateTimeOffset
      description: The timestamp to be set.
    return:
      type: Discord.EmbedBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithTimestamp(dateTimeOffset As DateTimeOffset) As EmbedBuilder
  overload: Discord.EmbedBuilder.WithTimestamp*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.WithColor(Discord.Color)
  commentId: M:Discord.EmbedBuilder.WithColor(Discord.Color)
  id: WithColor(Discord.Color)
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: WithColor(Color)
  nameWithType: EmbedBuilder.WithColor(Color)
  fullName: Discord.EmbedBuilder.WithColor(Discord.Color)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithColor
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 263
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the sidebar color of an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EmbedBuilder WithColor(Color color)
    parameters:
    - id: color
      type: Discord.Color
      description: The color to be set.
    return:
      type: Discord.EmbedBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithColor(color As Color) As EmbedBuilder
  overload: Discord.EmbedBuilder.WithColor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.WithAuthor(Discord.EmbedAuthorBuilder)
  commentId: M:Discord.EmbedBuilder.WithAuthor(Discord.EmbedAuthorBuilder)
  id: WithAuthor(Discord.EmbedAuthorBuilder)
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: WithAuthor(EmbedAuthorBuilder)
  nameWithType: EmbedBuilder.WithAuthor(EmbedAuthorBuilder)
  fullName: Discord.EmbedBuilder.WithAuthor(Discord.EmbedAuthorBuilder)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithAuthor
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 276
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the <xref href=\"Discord.EmbedAuthorBuilder\" data-throw-if-not-resolved=\"false\"></xref> of an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EmbedBuilder WithAuthor(EmbedAuthorBuilder author)
    parameters:
    - id: author
      type: Discord.EmbedAuthorBuilder
      description: The author builder class containing the author field properties.
    return:
      type: Discord.EmbedBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithAuthor(author As EmbedAuthorBuilder) As EmbedBuilder
  overload: Discord.EmbedBuilder.WithAuthor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.WithAuthor(Action{Discord.EmbedAuthorBuilder})
  commentId: M:Discord.EmbedBuilder.WithAuthor(Action{Discord.EmbedAuthorBuilder})
  id: WithAuthor(Action{Discord.EmbedAuthorBuilder})
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: WithAuthor(Action<EmbedAuthorBuilder>)
  nameWithType: EmbedBuilder.WithAuthor(Action<EmbedAuthorBuilder>)
  fullName: Discord.EmbedBuilder.WithAuthor(Action<Discord.EmbedAuthorBuilder>)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithAuthor
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 288
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the author field of an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref> with the provided properties.\n"
  example: []
  syntax:
    content: public EmbedBuilder WithAuthor(Action<EmbedAuthorBuilder> action)
    parameters:
    - id: action
      type: Action{Discord.EmbedAuthorBuilder}
      description: The delegate containing the author field properties.
    return:
      type: Discord.EmbedBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithAuthor(action As Action(Of EmbedAuthorBuilder)) As EmbedBuilder
  overload: Discord.EmbedBuilder.WithAuthor*
  nameWithType.vb: EmbedBuilder.WithAuthor(Action(Of EmbedAuthorBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.EmbedBuilder.WithAuthor(Action(Of Discord.EmbedAuthorBuilder))
  name.vb: WithAuthor(Action(Of EmbedAuthorBuilder))
- uid: Discord.EmbedBuilder.WithAuthor(System.String,System.String,System.String)
  commentId: M:Discord.EmbedBuilder.WithAuthor(System.String,System.String,System.String)
  id: WithAuthor(System.String,System.String,System.String)
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: WithAuthor(String, String, String)
  nameWithType: EmbedBuilder.WithAuthor(String, String, String)
  fullName: Discord.EmbedBuilder.WithAuthor(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithAuthor
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 304
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the author field of an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref> with the provided name, icon URL, and URL.\n"
  example: []
  syntax:
    content: public EmbedBuilder WithAuthor(string name, string iconUrl = null, string url = null)
    parameters:
    - id: name
      type: System.String
      description: The title of the author field.
    - id: iconUrl
      type: System.String
      description: The icon URL of the author field.
    - id: url
      type: System.String
      description: The URL of the author field.
    return:
      type: Discord.EmbedBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithAuthor(name As String, iconUrl As String = Nothing, url As String = Nothing) As EmbedBuilder
  overload: Discord.EmbedBuilder.WithAuthor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.WithFooter(Discord.EmbedFooterBuilder)
  commentId: M:Discord.EmbedBuilder.WithFooter(Discord.EmbedFooterBuilder)
  id: WithFooter(Discord.EmbedFooterBuilder)
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: WithFooter(EmbedFooterBuilder)
  nameWithType: EmbedBuilder.WithFooter(EmbedFooterBuilder)
  fullName: Discord.EmbedBuilder.WithFooter(Discord.EmbedFooterBuilder)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithFooter
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 322
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the <xref href=\"Discord.EmbedFooterBuilder\" data-throw-if-not-resolved=\"false\"></xref> of an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EmbedBuilder WithFooter(EmbedFooterBuilder footer)
    parameters:
    - id: footer
      type: Discord.EmbedFooterBuilder
      description: The footer builder class containing the footer field properties.
    return:
      type: Discord.EmbedBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithFooter(footer As EmbedFooterBuilder) As EmbedBuilder
  overload: Discord.EmbedBuilder.WithFooter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.WithFooter(Action{Discord.EmbedFooterBuilder})
  commentId: M:Discord.EmbedBuilder.WithFooter(Action{Discord.EmbedFooterBuilder})
  id: WithFooter(Action{Discord.EmbedFooterBuilder})
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: WithFooter(Action<EmbedFooterBuilder>)
  nameWithType: EmbedBuilder.WithFooter(Action<EmbedFooterBuilder>)
  fullName: Discord.EmbedBuilder.WithFooter(Action<Discord.EmbedFooterBuilder>)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithFooter
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 334
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the footer field of an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref> with the provided properties.\n"
  example: []
  syntax:
    content: public EmbedBuilder WithFooter(Action<EmbedFooterBuilder> action)
    parameters:
    - id: action
      type: Action{Discord.EmbedFooterBuilder}
      description: The delegate containing the footer field properties.
    return:
      type: Discord.EmbedBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithFooter(action As Action(Of EmbedFooterBuilder)) As EmbedBuilder
  overload: Discord.EmbedBuilder.WithFooter*
  nameWithType.vb: EmbedBuilder.WithFooter(Action(Of EmbedFooterBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.EmbedBuilder.WithFooter(Action(Of Discord.EmbedFooterBuilder))
  name.vb: WithFooter(Action(Of EmbedFooterBuilder))
- uid: Discord.EmbedBuilder.WithFooter(System.String,System.String)
  commentId: M:Discord.EmbedBuilder.WithFooter(System.String,System.String)
  id: WithFooter(System.String,System.String)
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: WithFooter(String, String)
  nameWithType: EmbedBuilder.WithFooter(String, String)
  fullName: Discord.EmbedBuilder.WithFooter(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithFooter
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 349
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the footer field of an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref> with the provided name, icon URL.\n"
  example: []
  syntax:
    content: public EmbedBuilder WithFooter(string text, string iconUrl = null)
    parameters:
    - id: text
      type: System.String
      description: The title of the footer field.
    - id: iconUrl
      type: System.String
      description: The icon URL of the footer field.
    return:
      type: Discord.EmbedBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithFooter(text As String, iconUrl As String = Nothing) As EmbedBuilder
  overload: Discord.EmbedBuilder.WithFooter*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.AddField(System.String,System.Object,System.Boolean)
  commentId: M:Discord.EmbedBuilder.AddField(System.String,System.Object,System.Boolean)
  id: AddField(System.String,System.Object,System.Boolean)
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: AddField(String, Object, Boolean)
  nameWithType: EmbedBuilder.AddField(String, Object, Boolean)
  fullName: Discord.EmbedBuilder.AddField(System.String, System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AddField
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 369
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nAdds an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref> field with the provided name and value.\n"
  example: []
  syntax:
    content: public EmbedBuilder AddField(string name, object value, bool inline = false)
    parameters:
    - id: name
      type: System.String
      description: The title of the field.
    - id: value
      type: System.Object
      description: The value of the field.
    - id: inline
      type: System.Boolean
      description: Indicates whether the field is in-line or not.
    return:
      type: Discord.EmbedBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function AddField(name As String, value As Object, inline As Boolean = False) As EmbedBuilder
  overload: Discord.EmbedBuilder.AddField*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.AddField(Discord.EmbedFieldBuilder)
  commentId: M:Discord.EmbedBuilder.AddField(Discord.EmbedFieldBuilder)
  id: AddField(Discord.EmbedFieldBuilder)
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: AddField(EmbedFieldBuilder)
  nameWithType: EmbedBuilder.AddField(EmbedFieldBuilder)
  fullName: Discord.EmbedBuilder.AddField(Discord.EmbedFieldBuilder)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AddField
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 388
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nAdds a field with the provided <xref href=\"Discord.EmbedFieldBuilder\" data-throw-if-not-resolved=\"false\"></xref> to an\n<xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public EmbedBuilder AddField(EmbedFieldBuilder field)
    parameters:
    - id: field
      type: Discord.EmbedFieldBuilder
      description: The field builder class containing the field properties.
    return:
      type: Discord.EmbedBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function AddField(field As EmbedFieldBuilder) As EmbedBuilder
  overload: Discord.EmbedBuilder.AddField*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedBuilder.AddField(Action{Discord.EmbedFieldBuilder})
  commentId: M:Discord.EmbedBuilder.AddField(Action{Discord.EmbedFieldBuilder})
  id: AddField(Action{Discord.EmbedFieldBuilder})
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: AddField(Action<EmbedFieldBuilder>)
  nameWithType: EmbedBuilder.AddField(Action<EmbedFieldBuilder>)
  fullName: Discord.EmbedBuilder.AddField(Action<Discord.EmbedFieldBuilder>)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AddField
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 405
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nAdds an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref> field with the provided properties.\n"
  example: []
  syntax:
    content: public EmbedBuilder AddField(Action<EmbedFieldBuilder> action)
    parameters:
    - id: action
      type: Action{Discord.EmbedFieldBuilder}
      description: The delegate containing the field properties.
    return:
      type: Discord.EmbedBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function AddField(action As Action(Of EmbedFieldBuilder)) As EmbedBuilder
  overload: Discord.EmbedBuilder.AddField*
  nameWithType.vb: EmbedBuilder.AddField(Action(Of EmbedFieldBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.EmbedBuilder.AddField(Action(Of Discord.EmbedFieldBuilder))
  name.vb: AddField(Action(Of EmbedFieldBuilder))
- uid: Discord.EmbedBuilder.Build
  commentId: M:Discord.EmbedBuilder.Build
  id: Build
  parent: Discord.EmbedBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: EmbedBuilder.Build()
  fullName: Discord.EmbedBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Build
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 420
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nBuilds the <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref> into a Rich Embed ready to be sent.\n"
  example: []
  syntax:
    content: public Embed Build()
    return:
      type: Discord.Embed
      description: "\nThe built embed object.\n"
    content.vb: Public Function Build As Embed
  overload: Discord.EmbedBuilder.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Discord.EmbedType.Rich
  commentId: F:Discord.EmbedType.Rich
  isExternal: true
- uid: Discord.Embed
  commentId: T:Discord.Embed
  parent: Discord
  name: Embed
  nameWithType: Embed
  fullName: Discord.Embed
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.EmbedBuilder.Discord.EmbedBuilderExtensions.WithColor(System.UInt32)
  commentId: M:Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.UInt32)
  parent: Discord.EmbedBuilderExtensions
  definition: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.UInt32)
  name: WithColor(UInt32)
  nameWithType: EmbedBuilderExtensions.WithColor(UInt32)
  fullName: Discord.EmbedBuilderExtensions.WithColor(System.UInt32)
  spec.csharp:
  - uid: Discord.EmbedBuilderExtensions.WithColor(System.UInt32)
    name: WithColor
    nameWithType: EmbedBuilderExtensions.WithColor
    fullName: Discord.EmbedBuilderExtensions.WithColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.EmbedBuilderExtensions.WithColor(System.UInt32)
    name: WithColor
    nameWithType: EmbedBuilderExtensions.WithColor
    fullName: Discord.EmbedBuilderExtensions.WithColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilder.Discord.EmbedBuilderExtensions.WithColor(System.Byte,System.Byte,System.Byte)
  commentId: M:Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Byte,System.Byte,System.Byte)
  parent: Discord.EmbedBuilderExtensions
  definition: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Byte,System.Byte,System.Byte)
  name: WithColor(Byte, Byte, Byte)
  nameWithType: EmbedBuilderExtensions.WithColor(Byte, Byte, Byte)
  fullName: Discord.EmbedBuilderExtensions.WithColor(System.Byte, System.Byte, System.Byte)
  spec.csharp:
  - uid: Discord.EmbedBuilderExtensions.WithColor(System.Byte,System.Byte,System.Byte)
    name: WithColor
    nameWithType: EmbedBuilderExtensions.WithColor
    fullName: Discord.EmbedBuilderExtensions.WithColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.EmbedBuilderExtensions.WithColor(System.Byte,System.Byte,System.Byte)
    name: WithColor
    nameWithType: EmbedBuilderExtensions.WithColor
    fullName: Discord.EmbedBuilderExtensions.WithColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilder.Discord.EmbedBuilderExtensions.WithColor(System.Int32,System.Int32,System.Int32)
  commentId: M:Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Int32,System.Int32,System.Int32)
  parent: Discord.EmbedBuilderExtensions
  definition: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Int32,System.Int32,System.Int32)
  name: WithColor(Int32, Int32, Int32)
  nameWithType: EmbedBuilderExtensions.WithColor(Int32, Int32, Int32)
  fullName: Discord.EmbedBuilderExtensions.WithColor(System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: Discord.EmbedBuilderExtensions.WithColor(System.Int32,System.Int32,System.Int32)
    name: WithColor
    nameWithType: EmbedBuilderExtensions.WithColor
    fullName: Discord.EmbedBuilderExtensions.WithColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.EmbedBuilderExtensions.WithColor(System.Int32,System.Int32,System.Int32)
    name: WithColor
    nameWithType: EmbedBuilderExtensions.WithColor
    fullName: Discord.EmbedBuilderExtensions.WithColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilder.Discord.EmbedBuilderExtensions.WithColor(System.Single,System.Single,System.Single)
  commentId: M:Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Single,System.Single,System.Single)
  parent: Discord.EmbedBuilderExtensions
  definition: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Single,System.Single,System.Single)
  name: WithColor(Single, Single, Single)
  nameWithType: EmbedBuilderExtensions.WithColor(Single, Single, Single)
  fullName: Discord.EmbedBuilderExtensions.WithColor(System.Single, System.Single, System.Single)
  spec.csharp:
  - uid: Discord.EmbedBuilderExtensions.WithColor(System.Single,System.Single,System.Single)
    name: WithColor
    nameWithType: EmbedBuilderExtensions.WithColor
    fullName: Discord.EmbedBuilderExtensions.WithColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.EmbedBuilderExtensions.WithColor(System.Single,System.Single,System.Single)
    name: WithColor
    nameWithType: EmbedBuilderExtensions.WithColor
    fullName: Discord.EmbedBuilderExtensions.WithColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilder.Discord.EmbedBuilderExtensions.WithAuthor(Discord.IUser)
  commentId: M:Discord.EmbedBuilderExtensions.WithAuthor(Discord.EmbedBuilder,Discord.IUser)
  parent: Discord.EmbedBuilderExtensions
  definition: Discord.EmbedBuilderExtensions.WithAuthor(Discord.EmbedBuilder,Discord.IUser)
  name: WithAuthor(IUser)
  nameWithType: EmbedBuilderExtensions.WithAuthor(IUser)
  fullName: Discord.EmbedBuilderExtensions.WithAuthor(Discord.IUser)
  spec.csharp:
  - uid: Discord.EmbedBuilderExtensions.WithAuthor(Discord.IUser)
    name: WithAuthor
    nameWithType: EmbedBuilderExtensions.WithAuthor
    fullName: Discord.EmbedBuilderExtensions.WithAuthor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IUser
    name: IUser
    nameWithType: IUser
    fullName: Discord.IUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.EmbedBuilderExtensions.WithAuthor(Discord.IUser)
    name: WithAuthor
    nameWithType: EmbedBuilderExtensions.WithAuthor
    fullName: Discord.EmbedBuilderExtensions.WithAuthor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IUser
    name: IUser
    nameWithType: IUser
    fullName: Discord.IUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilder.Discord.EmbedBuilderExtensions.WithFields(IEnumerable{Discord.EmbedFieldBuilder})
  commentId: M:Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder,IEnumerable{Discord.EmbedFieldBuilder})
  parent: Discord.EmbedBuilderExtensions
  definition: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder,IEnumerable{Discord.EmbedFieldBuilder})
  name: WithFields(IEnumerable<EmbedFieldBuilder>)
  nameWithType: EmbedBuilderExtensions.WithFields(IEnumerable<EmbedFieldBuilder>)
  fullName: Discord.EmbedBuilderExtensions.WithFields(IEnumerable<Discord.EmbedFieldBuilder>)
  nameWithType.vb: EmbedBuilderExtensions.WithFields(IEnumerable(Of EmbedFieldBuilder))
  fullName.vb: Discord.EmbedBuilderExtensions.WithFields(IEnumerable(Of Discord.EmbedFieldBuilder))
  name.vb: WithFields(IEnumerable(Of EmbedFieldBuilder))
  spec.csharp:
  - uid: Discord.EmbedBuilderExtensions.WithFields(IEnumerable{Discord.EmbedFieldBuilder})
    name: WithFields
    nameWithType: EmbedBuilderExtensions.WithFields
    fullName: Discord.EmbedBuilderExtensions.WithFields
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.EmbedFieldBuilder
    name: EmbedFieldBuilder
    nameWithType: EmbedFieldBuilder
    fullName: Discord.EmbedFieldBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.EmbedBuilderExtensions.WithFields(IEnumerable{Discord.EmbedFieldBuilder})
    name: WithFields
    nameWithType: EmbedBuilderExtensions.WithFields
    fullName: Discord.EmbedBuilderExtensions.WithFields
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.EmbedFieldBuilder
    name: EmbedFieldBuilder
    nameWithType: EmbedFieldBuilder
    fullName: Discord.EmbedFieldBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilder.Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedFieldBuilder[])
  commentId: M:Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder,Discord.EmbedFieldBuilder[])
  parent: Discord.EmbedBuilderExtensions
  definition: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder,Discord.EmbedFieldBuilder[])
  name: WithFields(EmbedFieldBuilder[])
  nameWithType: EmbedBuilderExtensions.WithFields(EmbedFieldBuilder[])
  fullName: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedFieldBuilder[])
  nameWithType.vb: EmbedBuilderExtensions.WithFields(EmbedFieldBuilder())
  fullName.vb: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedFieldBuilder())
  name.vb: WithFields(EmbedFieldBuilder())
  spec.csharp:
  - uid: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedFieldBuilder[])
    name: WithFields
    nameWithType: EmbedBuilderExtensions.WithFields
    fullName: Discord.EmbedBuilderExtensions.WithFields
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.EmbedFieldBuilder
    name: EmbedFieldBuilder
    nameWithType: EmbedFieldBuilder
    fullName: Discord.EmbedFieldBuilder
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedFieldBuilder[])
    name: WithFields
    nameWithType: EmbedBuilderExtensions.WithFields
    fullName: Discord.EmbedBuilderExtensions.WithFields
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.EmbedFieldBuilder
    name: EmbedFieldBuilder
    nameWithType: EmbedFieldBuilder
    fullName: Discord.EmbedFieldBuilder
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.UInt32)
  commentId: M:Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.UInt32)
  isExternal: true
  name: WithColor(EmbedBuilder, UInt32)
  nameWithType: EmbedBuilderExtensions.WithColor(EmbedBuilder, UInt32)
  fullName: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder, System.UInt32)
  spec.csharp:
  - uid: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.UInt32)
    name: WithColor
    nameWithType: EmbedBuilderExtensions.WithColor
    fullName: Discord.EmbedBuilderExtensions.WithColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    nameWithType: EmbedBuilder
    fullName: Discord.EmbedBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.UInt32)
    name: WithColor
    nameWithType: EmbedBuilderExtensions.WithColor
    fullName: Discord.EmbedBuilderExtensions.WithColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    nameWithType: EmbedBuilder
    fullName: Discord.EmbedBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilderExtensions
  commentId: T:Discord.EmbedBuilderExtensions
  parent: Discord
  name: EmbedBuilderExtensions
  nameWithType: EmbedBuilderExtensions
  fullName: Discord.EmbedBuilderExtensions
- uid: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Byte,System.Byte,System.Byte)
  commentId: M:Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Byte,System.Byte,System.Byte)
  isExternal: true
  name: WithColor(EmbedBuilder, Byte, Byte, Byte)
  nameWithType: EmbedBuilderExtensions.WithColor(EmbedBuilder, Byte, Byte, Byte)
  fullName: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder, System.Byte, System.Byte, System.Byte)
  spec.csharp:
  - uid: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Byte,System.Byte,System.Byte)
    name: WithColor
    nameWithType: EmbedBuilderExtensions.WithColor
    fullName: Discord.EmbedBuilderExtensions.WithColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    nameWithType: EmbedBuilder
    fullName: Discord.EmbedBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Byte,System.Byte,System.Byte)
    name: WithColor
    nameWithType: EmbedBuilderExtensions.WithColor
    fullName: Discord.EmbedBuilderExtensions.WithColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    nameWithType: EmbedBuilder
    fullName: Discord.EmbedBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Int32,System.Int32,System.Int32)
  commentId: M:Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Int32,System.Int32,System.Int32)
  isExternal: true
  name: WithColor(EmbedBuilder, Int32, Int32, Int32)
  nameWithType: EmbedBuilderExtensions.WithColor(EmbedBuilder, Int32, Int32, Int32)
  fullName: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder, System.Int32, System.Int32, System.Int32)
  spec.csharp:
  - uid: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Int32,System.Int32,System.Int32)
    name: WithColor
    nameWithType: EmbedBuilderExtensions.WithColor
    fullName: Discord.EmbedBuilderExtensions.WithColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    nameWithType: EmbedBuilder
    fullName: Discord.EmbedBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Int32,System.Int32,System.Int32)
    name: WithColor
    nameWithType: EmbedBuilderExtensions.WithColor
    fullName: Discord.EmbedBuilderExtensions.WithColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    nameWithType: EmbedBuilder
    fullName: Discord.EmbedBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Single,System.Single,System.Single)
  commentId: M:Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Single,System.Single,System.Single)
  isExternal: true
  name: WithColor(EmbedBuilder, Single, Single, Single)
  nameWithType: EmbedBuilderExtensions.WithColor(EmbedBuilder, Single, Single, Single)
  fullName: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder, System.Single, System.Single, System.Single)
  spec.csharp:
  - uid: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Single,System.Single,System.Single)
    name: WithColor
    nameWithType: EmbedBuilderExtensions.WithColor
    fullName: Discord.EmbedBuilderExtensions.WithColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    nameWithType: EmbedBuilder
    fullName: Discord.EmbedBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Single,System.Single,System.Single)
    name: WithColor
    nameWithType: EmbedBuilderExtensions.WithColor
    fullName: Discord.EmbedBuilderExtensions.WithColor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    nameWithType: EmbedBuilder
    fullName: Discord.EmbedBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilderExtensions.WithAuthor(Discord.EmbedBuilder,Discord.IUser)
  commentId: M:Discord.EmbedBuilderExtensions.WithAuthor(Discord.EmbedBuilder,Discord.IUser)
  name: WithAuthor(EmbedBuilder, IUser)
  nameWithType: EmbedBuilderExtensions.WithAuthor(EmbedBuilder, IUser)
  fullName: Discord.EmbedBuilderExtensions.WithAuthor(Discord.EmbedBuilder, Discord.IUser)
  spec.csharp:
  - uid: Discord.EmbedBuilderExtensions.WithAuthor(Discord.EmbedBuilder,Discord.IUser)
    name: WithAuthor
    nameWithType: EmbedBuilderExtensions.WithAuthor
    fullName: Discord.EmbedBuilderExtensions.WithAuthor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    nameWithType: EmbedBuilder
    fullName: Discord.EmbedBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.IUser
    name: IUser
    nameWithType: IUser
    fullName: Discord.IUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.EmbedBuilderExtensions.WithAuthor(Discord.EmbedBuilder,Discord.IUser)
    name: WithAuthor
    nameWithType: EmbedBuilderExtensions.WithAuthor
    fullName: Discord.EmbedBuilderExtensions.WithAuthor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    nameWithType: EmbedBuilder
    fullName: Discord.EmbedBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.IUser
    name: IUser
    nameWithType: IUser
    fullName: Discord.IUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder,IEnumerable{Discord.EmbedFieldBuilder})
  commentId: M:Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder,IEnumerable{Discord.EmbedFieldBuilder})
  isExternal: true
  name: WithFields(EmbedBuilder, IEnumerable<EmbedFieldBuilder>)
  nameWithType: EmbedBuilderExtensions.WithFields(EmbedBuilder, IEnumerable<EmbedFieldBuilder>)
  fullName: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder, IEnumerable<Discord.EmbedFieldBuilder>)
  nameWithType.vb: EmbedBuilderExtensions.WithFields(EmbedBuilder, IEnumerable(Of EmbedFieldBuilder))
  fullName.vb: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder, IEnumerable(Of Discord.EmbedFieldBuilder))
  name.vb: WithFields(EmbedBuilder, IEnumerable(Of EmbedFieldBuilder))
  spec.csharp:
  - uid: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder,IEnumerable{Discord.EmbedFieldBuilder})
    name: WithFields
    nameWithType: EmbedBuilderExtensions.WithFields
    fullName: Discord.EmbedBuilderExtensions.WithFields
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    nameWithType: EmbedBuilder
    fullName: Discord.EmbedBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.EmbedFieldBuilder
    name: EmbedFieldBuilder
    nameWithType: EmbedFieldBuilder
    fullName: Discord.EmbedFieldBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder,IEnumerable{Discord.EmbedFieldBuilder})
    name: WithFields
    nameWithType: EmbedBuilderExtensions.WithFields
    fullName: Discord.EmbedBuilderExtensions.WithFields
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    nameWithType: EmbedBuilder
    fullName: Discord.EmbedBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.EmbedFieldBuilder
    name: EmbedFieldBuilder
    nameWithType: EmbedFieldBuilder
    fullName: Discord.EmbedFieldBuilder
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder,Discord.EmbedFieldBuilder[])
  commentId: M:Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder,Discord.EmbedFieldBuilder[])
  name: WithFields(EmbedBuilder, EmbedFieldBuilder[])
  nameWithType: EmbedBuilderExtensions.WithFields(EmbedBuilder, EmbedFieldBuilder[])
  fullName: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder, Discord.EmbedFieldBuilder[])
  nameWithType.vb: EmbedBuilderExtensions.WithFields(EmbedBuilder, EmbedFieldBuilder())
  fullName.vb: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder, Discord.EmbedFieldBuilder())
  name.vb: WithFields(EmbedBuilder, EmbedFieldBuilder())
  spec.csharp:
  - uid: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder,Discord.EmbedFieldBuilder[])
    name: WithFields
    nameWithType: EmbedBuilderExtensions.WithFields
    fullName: Discord.EmbedBuilderExtensions.WithFields
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    nameWithType: EmbedBuilder
    fullName: Discord.EmbedBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.EmbedFieldBuilder
    name: EmbedFieldBuilder
    nameWithType: EmbedFieldBuilder
    fullName: Discord.EmbedFieldBuilder
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder,Discord.EmbedFieldBuilder[])
    name: WithFields
    nameWithType: EmbedBuilderExtensions.WithFields
    fullName: Discord.EmbedBuilderExtensions.WithFields
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.EmbedBuilder
    name: EmbedBuilder
    nameWithType: EmbedBuilder
    fullName: Discord.EmbedBuilder
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.EmbedFieldBuilder
    name: EmbedFieldBuilder
    nameWithType: EmbedFieldBuilder
    fullName: Discord.EmbedFieldBuilder
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Discord.EmbedBuilder
  commentId: T:Discord.EmbedBuilder
  parent: Discord
  name: EmbedBuilder
  nameWithType: EmbedBuilder
  fullName: Discord.EmbedBuilder
- uid: Discord.EmbedBuilder.#ctor*
  commentId: Overload:Discord.EmbedBuilder.#ctor
  name: EmbedBuilder
  nameWithType: EmbedBuilder.EmbedBuilder
  fullName: Discord.EmbedBuilder.EmbedBuilder
- uid: Discord.EmbedBuilder.MaxTitleLength
  commentId: F:Discord.EmbedBuilder.MaxTitleLength
  isExternal: true
- uid: Discord.EmbedBuilder.Title*
  commentId: Overload:Discord.EmbedBuilder.Title
  name: Title
  nameWithType: EmbedBuilder.Title
  fullName: Discord.EmbedBuilder.Title
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.EmbedBuilder.MaxDescriptionLength
  commentId: F:Discord.EmbedBuilder.MaxDescriptionLength
  isExternal: true
- uid: Discord.EmbedBuilder.Description*
  commentId: Overload:Discord.EmbedBuilder.Description
  name: Description
  nameWithType: EmbedBuilder.Description
  fullName: Discord.EmbedBuilder.Description
- uid: Discord.EmbedBuilder.Url*
  commentId: Overload:Discord.EmbedBuilder.Url
  name: Url
  nameWithType: EmbedBuilder.Url
  fullName: Discord.EmbedBuilder.Url
- uid: Discord.EmbedBuilder.ThumbnailUrl*
  commentId: Overload:Discord.EmbedBuilder.ThumbnailUrl
  name: ThumbnailUrl
  nameWithType: EmbedBuilder.ThumbnailUrl
  fullName: Discord.EmbedBuilder.ThumbnailUrl
- uid: Discord.EmbedBuilder.ImageUrl*
  commentId: Overload:Discord.EmbedBuilder.ImageUrl
  name: ImageUrl
  nameWithType: EmbedBuilder.ImageUrl
  fullName: Discord.EmbedBuilder.ImageUrl
- uid: Discord.EmbedFieldBuilder
  commentId: T:Discord.EmbedFieldBuilder
  parent: Discord
  name: EmbedFieldBuilder
  nameWithType: EmbedFieldBuilder
  fullName: Discord.EmbedFieldBuilder
- uid: Discord.EmbedBuilder.MaxFieldCount
  commentId: F:Discord.EmbedBuilder.MaxFieldCount
  isExternal: true
- uid: Discord.EmbedBuilder.Fields*
  commentId: Overload:Discord.EmbedBuilder.Fields
  name: Fields
  nameWithType: EmbedBuilder.Fields
  fullName: Discord.EmbedBuilder.Fields
- uid: List{Discord.EmbedFieldBuilder}
  commentId: '!:List{Discord.EmbedFieldBuilder}'
  definition: List`1
  name: List<EmbedFieldBuilder>
  nameWithType: List<EmbedFieldBuilder>
  fullName: List<Discord.EmbedFieldBuilder>
  nameWithType.vb: List(Of EmbedFieldBuilder)
  fullName.vb: List(Of Discord.EmbedFieldBuilder)
  name.vb: List(Of EmbedFieldBuilder)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.EmbedFieldBuilder
    name: EmbedFieldBuilder
    nameWithType: EmbedFieldBuilder
    fullName: Discord.EmbedFieldBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.EmbedFieldBuilder
    name: EmbedFieldBuilder
    nameWithType: EmbedFieldBuilder
    fullName: Discord.EmbedFieldBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilder.Timestamp*
  commentId: Overload:Discord.EmbedBuilder.Timestamp
  name: Timestamp
  nameWithType: EmbedBuilder.Timestamp
  fullName: Discord.EmbedBuilder.Timestamp
- uid: System.Nullable{DateTimeOffset}
  commentId: '!:System.Nullable{DateTimeOffset}'
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilder.Color*
  commentId: Overload:Discord.EmbedBuilder.Color
  name: Color
  nameWithType: EmbedBuilder.Color
  fullName: Discord.EmbedBuilder.Color
- uid: System.Nullable{Discord.Color}
  commentId: '!:System.Nullable{Discord.Color}'
  definition: System.Nullable`1
  name: Nullable<Color>
  nameWithType: Nullable<Color>
  fullName: System.Nullable<Discord.Color>
  nameWithType.vb: Nullable(Of Color)
  fullName.vb: System.Nullable(Of Discord.Color)
  name.vb: Nullable(Of Color)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Color
    name: Color
    nameWithType: Color
    fullName: Discord.Color
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Color
    name: Color
    nameWithType: Color
    fullName: Discord.Color
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedAuthorBuilder
  commentId: T:Discord.EmbedAuthorBuilder
  parent: Discord
  name: EmbedAuthorBuilder
  nameWithType: EmbedAuthorBuilder
  fullName: Discord.EmbedAuthorBuilder
- uid: Discord.EmbedBuilder.Author*
  commentId: Overload:Discord.EmbedBuilder.Author
  name: Author
  nameWithType: EmbedBuilder.Author
  fullName: Discord.EmbedBuilder.Author
- uid: Discord.EmbedFooterBuilder
  commentId: T:Discord.EmbedFooterBuilder
  parent: Discord
  name: EmbedFooterBuilder
  nameWithType: EmbedFooterBuilder
  fullName: Discord.EmbedFooterBuilder
- uid: Discord.EmbedBuilder.Footer*
  commentId: Overload:Discord.EmbedBuilder.Footer
  name: Footer
  nameWithType: EmbedBuilder.Footer
  fullName: Discord.EmbedBuilder.Footer
- uid: Discord.EmbedBuilder.Title
  commentId: P:Discord.EmbedBuilder.Title
  isExternal: true
- uid: Discord.EmbedAuthor.Name
  commentId: P:Discord.EmbedAuthor.Name
  isExternal: true
- uid: Discord.EmbedBuilder.Description
  commentId: P:Discord.EmbedBuilder.Description
  isExternal: true
- uid: Discord.EmbedFooter.Text
  commentId: P:Discord.EmbedFooter.Text
  isExternal: true
- uid: Discord.EmbedField.Name
  commentId: P:Discord.EmbedField.Name
  isExternal: true
- uid: Discord.EmbedField.Value
  commentId: P:Discord.EmbedField.Value
  isExternal: true
- uid: Discord.EmbedBuilder.Length*
  commentId: Overload:Discord.EmbedBuilder.Length
  name: Length
  nameWithType: EmbedBuilder.Length
  fullName: Discord.EmbedBuilder.Length
- uid: Discord.EmbedBuilder.WithTitle*
  commentId: Overload:Discord.EmbedBuilder.WithTitle
  name: WithTitle
  nameWithType: EmbedBuilder.WithTitle
  fullName: Discord.EmbedBuilder.WithTitle
- uid: Discord.EmbedBuilder.WithDescription*
  commentId: Overload:Discord.EmbedBuilder.WithDescription
  name: WithDescription
  nameWithType: EmbedBuilder.WithDescription
  fullName: Discord.EmbedBuilder.WithDescription
- uid: Discord.EmbedBuilder.WithUrl*
  commentId: Overload:Discord.EmbedBuilder.WithUrl
  name: WithUrl
  nameWithType: EmbedBuilder.WithUrl
  fullName: Discord.EmbedBuilder.WithUrl
- uid: Discord.EmbedBuilder.WithThumbnailUrl*
  commentId: Overload:Discord.EmbedBuilder.WithThumbnailUrl
  name: WithThumbnailUrl
  nameWithType: EmbedBuilder.WithThumbnailUrl
  fullName: Discord.EmbedBuilder.WithThumbnailUrl
- uid: Discord.EmbedBuilder.WithImageUrl*
  commentId: Overload:Discord.EmbedBuilder.WithImageUrl
  name: WithImageUrl
  nameWithType: EmbedBuilder.WithImageUrl
  fullName: Discord.EmbedBuilder.WithImageUrl
- uid: Discord.EmbedBuilder.WithCurrentTimestamp*
  commentId: Overload:Discord.EmbedBuilder.WithCurrentTimestamp
  name: WithCurrentTimestamp
  nameWithType: EmbedBuilder.WithCurrentTimestamp
  fullName: Discord.EmbedBuilder.WithCurrentTimestamp
- uid: Discord.EmbedBuilder.WithTimestamp*
  commentId: Overload:Discord.EmbedBuilder.WithTimestamp
  name: WithTimestamp
  nameWithType: EmbedBuilder.WithTimestamp
  fullName: Discord.EmbedBuilder.WithTimestamp
- uid: DateTimeOffset
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: DateTimeOffset
- uid: Discord.EmbedBuilder.WithColor*
  commentId: Overload:Discord.EmbedBuilder.WithColor
  name: WithColor
  nameWithType: EmbedBuilder.WithColor
  fullName: Discord.EmbedBuilder.WithColor
- uid: Discord.Color
  commentId: T:Discord.Color
  parent: Discord
  name: Color
  nameWithType: Color
  fullName: Discord.Color
- uid: Discord.EmbedBuilder.WithAuthor*
  commentId: Overload:Discord.EmbedBuilder.WithAuthor
  name: WithAuthor
  nameWithType: EmbedBuilder.WithAuthor
  fullName: Discord.EmbedBuilder.WithAuthor
- uid: Action{Discord.EmbedAuthorBuilder}
  commentId: '!:Action{Discord.EmbedAuthorBuilder}'
  definition: Action`1
  name: Action<EmbedAuthorBuilder>
  nameWithType: Action<EmbedAuthorBuilder>
  fullName: Action<Discord.EmbedAuthorBuilder>
  nameWithType.vb: Action(Of EmbedAuthorBuilder)
  fullName.vb: Action(Of Discord.EmbedAuthorBuilder)
  name.vb: Action(Of EmbedAuthorBuilder)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.EmbedAuthorBuilder
    name: EmbedAuthorBuilder
    nameWithType: EmbedAuthorBuilder
    fullName: Discord.EmbedAuthorBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.EmbedAuthorBuilder
    name: EmbedAuthorBuilder
    nameWithType: EmbedAuthorBuilder
    fullName: Discord.EmbedAuthorBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilder.WithFooter*
  commentId: Overload:Discord.EmbedBuilder.WithFooter
  name: WithFooter
  nameWithType: EmbedBuilder.WithFooter
  fullName: Discord.EmbedBuilder.WithFooter
- uid: Action{Discord.EmbedFooterBuilder}
  commentId: '!:Action{Discord.EmbedFooterBuilder}'
  definition: Action`1
  name: Action<EmbedFooterBuilder>
  nameWithType: Action<EmbedFooterBuilder>
  fullName: Action<Discord.EmbedFooterBuilder>
  nameWithType.vb: Action(Of EmbedFooterBuilder)
  fullName.vb: Action(Of Discord.EmbedFooterBuilder)
  name.vb: Action(Of EmbedFooterBuilder)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.EmbedFooterBuilder
    name: EmbedFooterBuilder
    nameWithType: EmbedFooterBuilder
    fullName: Discord.EmbedFooterBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.EmbedFooterBuilder
    name: EmbedFooterBuilder
    nameWithType: EmbedFooterBuilder
    fullName: Discord.EmbedFooterBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilder.AddField*
  commentId: Overload:Discord.EmbedBuilder.AddField
  name: AddField
  nameWithType: EmbedBuilder.AddField
  fullName: Discord.EmbedBuilder.AddField
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Action{Discord.EmbedFieldBuilder}
  commentId: '!:Action{Discord.EmbedFieldBuilder}'
  definition: Action`1
  name: Action<EmbedFieldBuilder>
  nameWithType: Action<EmbedFieldBuilder>
  fullName: Action<Discord.EmbedFieldBuilder>
  nameWithType.vb: Action(Of EmbedFieldBuilder)
  fullName.vb: Action(Of Discord.EmbedFieldBuilder)
  name.vb: Action(Of EmbedFieldBuilder)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.EmbedFieldBuilder
    name: EmbedFieldBuilder
    nameWithType: EmbedFieldBuilder
    fullName: Discord.EmbedFieldBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.EmbedFieldBuilder
    name: EmbedFieldBuilder
    nameWithType: EmbedFieldBuilder
    fullName: Discord.EmbedFieldBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilder.MaxEmbedLength
  commentId: F:Discord.EmbedBuilder.MaxEmbedLength
  isExternal: true
- uid: Discord.EmbedBuilder.Build*
  commentId: Overload:Discord.EmbedBuilder.Build
  name: Build
  nameWithType: EmbedBuilder.Build
  fullName: Discord.EmbedBuilder.Build
