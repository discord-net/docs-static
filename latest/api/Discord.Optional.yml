### YamlMime:ManagedReference
items:
- uid: Discord.Optional
  commentId: T:Discord.Optional
  id: Optional
  parent: Discord
  children:
  - Discord.Optional.Create``1
  - Discord.Optional.Create``1(``0)
  - Discord.Optional.ToNullable``1(Discord.Optional{``0})
  langs:
  - csharp
  - vb
  name: Optional
  nameWithType: Optional
  fullName: Discord.Optional
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Optional.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Optional
    path: ../src/Discord.Net.Core/Utils/Optional.cs
    startLine: 50
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: 'public static class Optional : object'
    content.vb: >-
      Public Module Optional
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Discord.Optional.Create``1
  commentId: M:Discord.Optional.Create``1
  id: Create``1
  parent: Discord.Optional
  langs:
  - csharp
  - vb
  name: Create<T>()
  nameWithType: Optional.Create<T>()
  fullName: Discord.Optional.Create<T>()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Optional.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Create
    path: ../src/Discord.Net.Core/Utils/Optional.cs
    startLine: 52
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public static Optional<T> Create<T>()
    typeParameters:
    - id: T
    return:
      type: Discord.Optional{{T}}
    content.vb: 'Public Shared Function Create(Of T) As '
  overload: Discord.Optional.Create*
  nameWithType.vb: Optional.Create(Of T)()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.Optional.Create(Of T)()
  name.vb: Create(Of T)()
- uid: Discord.Optional.Create``1(``0)
  commentId: M:Discord.Optional.Create``1(``0)
  id: Create``1(``0)
  parent: Discord.Optional
  langs:
  - csharp
  - vb
  name: Create<T>(T)
  nameWithType: Optional.Create<T>(T)
  fullName: Discord.Optional.Create<T>(T)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Optional.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Create
    path: ../src/Discord.Net.Core/Utils/Optional.cs
    startLine: 53
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public static Optional<T> Create<T>(T value)
    parameters:
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: Discord.Optional{{T}}
    content.vb: 'Public Shared Function Create(Of T)(value As T) As '
  overload: Discord.Optional.Create*
  nameWithType.vb: Optional.Create(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.Optional.Create(Of T)(T)
  name.vb: Create(Of T)(T)
- uid: Discord.Optional.ToNullable``1(Discord.Optional{``0})
  commentId: M:Discord.Optional.ToNullable``1(Discord.Optional{``0})
  id: ToNullable``1(Discord.Optional{``0})
  isExtensionMethod: true
  parent: Discord.Optional
  langs:
  - csharp
  - vb
  name: ToNullable<T>(Optional<T>)
  nameWithType: Optional.ToNullable<T>(Optional<T>)
  fullName: Discord.Optional.ToNullable<T>(Discord.Optional<T>)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Optional.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ToNullable
    path: ../src/Discord.Net.Core/Utils/Optional.cs
    startLine: 55
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: >-
      public static T? ToNullable<T>(this Optional<T> val)
          where T : struct
    parameters:
    - id: val
      type: Discord.Optional{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Nullable{{T}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToNullable(Of T As Structure)(val As  Optional (Of T)) As T?
  overload: Discord.Optional.ToNullable*
  nameWithType.vb: Optional.ToNullable(Of T)(Optional(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.Optional.ToNullable(Of T)(Discord.Optional(Of T))
  name.vb: ToNullable(Of T)(Optional(Of T))
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Optional.Create*
  commentId: Overload:Discord.Optional.Create
  name: Create
  nameWithType: Optional.Create
  fullName: Discord.Optional.Create
- uid: Discord.Optional{{T}}
  commentId: T:Discord.Optional{``0}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: Discord.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: Discord.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Optional`1
  commentId: T:Discord.Optional`1
  parent: Discord
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: Discord.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: Discord.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Discord.Optional.ToNullable*
  commentId: Overload:Discord.Optional.ToNullable
  name: ToNullable
  nameWithType: Optional.ToNullable
  fullName: Discord.Optional.ToNullable
- uid: System.Nullable{{T}}
  commentId: '!:System.Nullable{``0}'
  definition: System.Nullable`1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
