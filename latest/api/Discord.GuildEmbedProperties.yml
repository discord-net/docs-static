### YamlMime:ManagedReference
items:
- uid: Discord.GuildEmbedProperties
  commentId: T:Discord.GuildEmbedProperties
  id: GuildEmbedProperties
  parent: Discord
  children:
  - Discord.GuildEmbedProperties.Channel
  - Discord.GuildEmbedProperties.ChannelId
  - Discord.GuildEmbedProperties.Enabled
  langs:
  - csharp
  - vb
  name: GuildEmbedProperties
  nameWithType: GuildEmbedProperties
  fullName: Discord.GuildEmbedProperties
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildEmbedProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GuildEmbedProperties
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildEmbedProperties.cs
    startLine: 5
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nProvides properties that are used to modify the widget of an <xref href=\"Discord.IGuild\" data-throw-if-not-resolved=\"false\"></xref> with the specified changes.\n"
  example: []
  syntax:
    content: 'public class GuildEmbedProperties : object'
    content.vb: >-
      Public Class GuildEmbedProperties
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.GuildEmbedProperties.Enabled
  commentId: P:Discord.GuildEmbedProperties.Enabled
  id: Enabled
  parent: Discord.GuildEmbedProperties
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: GuildEmbedProperties.Enabled
  fullName: Discord.GuildEmbedProperties.Enabled
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildEmbedProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Enabled
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildEmbedProperties.cs
    startLine: 10
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets whether the widget should be enabled.\n"
  example: []
  syntax:
    content: public Optional<bool> Enabled { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Boolean}
    content.vb: 'Public Property Enabled As '
  overload: Discord.GuildEmbedProperties.Enabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildEmbedProperties.Channel
  commentId: P:Discord.GuildEmbedProperties.Channel
  id: Channel
  parent: Discord.GuildEmbedProperties
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: GuildEmbedProperties.Channel
  fullName: Discord.GuildEmbedProperties.Channel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildEmbedProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Channel
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildEmbedProperties.cs
    startLine: 14
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the channel that the invite should place its users in, if not <code>null</code>.\n"
  example: []
  syntax:
    content: public Optional<IChannel> Channel { get; set; }
    parameters: []
    return:
      type: Discord.Optional{Discord.IChannel}
    content.vb: 'Public Property Channel As '
  overload: Discord.GuildEmbedProperties.Channel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildEmbedProperties.ChannelId
  commentId: P:Discord.GuildEmbedProperties.ChannelId
  id: ChannelId
  parent: Discord.GuildEmbedProperties
  langs:
  - csharp
  - vb
  name: ChannelId
  nameWithType: GuildEmbedProperties.ChannelId
  fullName: Discord.GuildEmbedProperties.ChannelId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildEmbedProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelId
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildEmbedProperties.cs
    startLine: 18
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the channel the invite should place its users in, if not <code>null</code>.\n"
  example: []
  syntax:
    content: public Optional<ulong?> ChannelId { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Nullable{System.UInt64}}
    content.vb: 'Public Property ChannelId As '
  overload: Discord.GuildEmbedProperties.ChannelId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.GuildEmbedProperties.Enabled*
  commentId: Overload:Discord.GuildEmbedProperties.Enabled
  name: Enabled
  nameWithType: GuildEmbedProperties.Enabled
  fullName: Discord.GuildEmbedProperties.Enabled
- uid: Discord.Optional{System.Boolean}
  commentId: T:Discord.Optional{System.Boolean}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<Boolean>
  nameWithType: Optional<Boolean>
  fullName: Discord.Optional<System.Boolean>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: Discord.Optional(Of System.Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Optional`1
  commentId: T:Discord.Optional`1
  parent: Discord
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: Discord.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: Discord.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildEmbedProperties.Channel*
  commentId: Overload:Discord.GuildEmbedProperties.Channel
  name: Channel
  nameWithType: GuildEmbedProperties.Channel
  fullName: Discord.GuildEmbedProperties.Channel
- uid: Discord.Optional{Discord.IChannel}
  commentId: T:Discord.Optional{Discord.IChannel}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<IChannel>
  nameWithType: Optional<IChannel>
  fullName: Discord.Optional<Discord.IChannel>
  nameWithType.vb: Optional(Of IChannel)
  fullName.vb: Discord.Optional(Of Discord.IChannel)
  name.vb: Optional(Of IChannel)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.IChannel
    name: IChannel
    nameWithType: IChannel
    fullName: Discord.IChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.IChannel
    name: IChannel
    nameWithType: IChannel
    fullName: Discord.IChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildEmbedProperties.ChannelId*
  commentId: Overload:Discord.GuildEmbedProperties.ChannelId
  name: ChannelId
  nameWithType: GuildEmbedProperties.ChannelId
  fullName: Discord.GuildEmbedProperties.ChannelId
- uid: Discord.Optional{System.Nullable{System.UInt64}}
  commentId: T:Discord.Optional{System.Nullable{System.UInt64}}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<Nullable<UInt64>>
  nameWithType: Optional<Nullable<UInt64>>
  fullName: Discord.Optional<System.Nullable<System.UInt64>>
  nameWithType.vb: Optional(Of Nullable(Of UInt64))
  fullName.vb: Discord.Optional(Of System.Nullable(Of System.UInt64))
  name.vb: Optional(Of Nullable(Of UInt64))
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
