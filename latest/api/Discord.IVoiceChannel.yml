### YamlMime:ManagedReference
items:
- uid: Discord.IVoiceChannel
  commentId: T:Discord.IVoiceChannel
  id: IVoiceChannel
  parent: Discord
  children:
  - Discord.IVoiceChannel.Bitrate
  - Discord.IVoiceChannel.ModifyAsync(System.Action{Discord.VoiceChannelProperties},Discord.RequestOptions)
  - Discord.IVoiceChannel.UserLimit
  langs:
  - csharp
  - vb
  name: IVoiceChannel
  nameWithType: IVoiceChannel
  fullName: Discord.IVoiceChannel
  type: Interface
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Channels/IVoiceChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IVoiceChannel
    path: ../src/Discord.Net.Core/Entities/Channels/IVoiceChannel.cs
    startLine: 8
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nRepresents a generic voice channel in a guild.\n"
  example: []
  syntax:
    content: 'public interface IVoiceChannel : INestedChannel, IGuildChannel, IDeletable, IAudioChannel, IChannel, ISnowflakeEntity, IEntity<ulong>'
    content.vb: >-
      Public Interface IVoiceChannel
          Inherits INestedChannel, IAudioChannel
  inheritedMembers:
  - Discord.INestedChannel.CategoryId
  - Discord.INestedChannel.GetCategoryAsync(Discord.CacheMode,Discord.RequestOptions)
  - Discord.INestedChannel.SyncPermissionsAsync(Discord.RequestOptions)
  - Discord.INestedChannel.CreateInviteAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,Discord.RequestOptions)
  - Discord.INestedChannel.GetInvitesAsync(Discord.RequestOptions)
  - Discord.IGuildChannel.Position
  - Discord.IGuildChannel.Guild
  - Discord.IGuildChannel.GuildId
  - Discord.IGuildChannel.PermissionOverwrites
  - Discord.IGuildChannel.ModifyAsync(System.Action{Discord.GuildChannelProperties},Discord.RequestOptions)
  - Discord.IGuildChannel.GetPermissionOverwrite(Discord.IRole)
  - Discord.IGuildChannel.GetPermissionOverwrite(Discord.IUser)
  - Discord.IGuildChannel.RemovePermissionOverwriteAsync(Discord.IRole,Discord.RequestOptions)
  - Discord.IGuildChannel.RemovePermissionOverwriteAsync(Discord.IUser,Discord.RequestOptions)
  - Discord.IGuildChannel.AddPermissionOverwriteAsync(Discord.IRole,Discord.OverwritePermissions,Discord.RequestOptions)
  - Discord.IGuildChannel.AddPermissionOverwriteAsync(Discord.IUser,Discord.OverwritePermissions,Discord.RequestOptions)
  - Discord.IGuildChannel.GetUsersAsync(Discord.CacheMode,Discord.RequestOptions)
  - Discord.IGuildChannel.GetUserAsync(System.UInt64,Discord.CacheMode,Discord.RequestOptions)
  - Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  - Discord.IAudioChannel.ConnectAsync(System.Boolean,System.Boolean,System.Boolean)
  - Discord.IAudioChannel.DisconnectAsync
  - Discord.IChannel.Name
  - Discord.ISnowflakeEntity.CreatedAt
  - Discord.IEntity{System.UInt64}.Id
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Discord.IVoiceChannel.Bitrate
  commentId: P:Discord.IVoiceChannel.Bitrate
  id: Bitrate
  parent: Discord.IVoiceChannel
  langs:
  - csharp
  - vb
  name: Bitrate
  nameWithType: IVoiceChannel.Bitrate
  fullName: Discord.IVoiceChannel.Bitrate
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Channels/IVoiceChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Bitrate
    path: ../src/Discord.Net.Core/Entities/Channels/IVoiceChannel.cs
    startLine: 17
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the bit-rate that the clients in this voice channel are requested to use.\n"
  example: []
  syntax:
    content: int Bitrate { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nAn <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> representing the bit-rate (bps) that this voice channel defines and requests the\nclient(s) to use.\n"
    content.vb: ReadOnly Property Bitrate As Integer
  overload: Discord.IVoiceChannel.Bitrate*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IVoiceChannel.UserLimit
  commentId: P:Discord.IVoiceChannel.UserLimit
  id: UserLimit
  parent: Discord.IVoiceChannel
  langs:
  - csharp
  - vb
  name: UserLimit
  nameWithType: IVoiceChannel.UserLimit
  fullName: Discord.IVoiceChannel.UserLimit
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Channels/IVoiceChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: UserLimit
    path: ../src/Discord.Net.Core/Entities/Channels/IVoiceChannel.cs
    startLine: 25
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the max number of users allowed to be connected to this channel at once.\n"
  example: []
  syntax:
    content: int? UserLimit { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> representing the maximum number of users that are allowed to be connected to this\nchannel at once; <code>null</code> if a limit is not set.\n"
    content.vb: ReadOnly Property UserLimit As Integer?
  overload: Discord.IVoiceChannel.UserLimit*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IVoiceChannel.ModifyAsync(System.Action{Discord.VoiceChannelProperties},Discord.RequestOptions)
  commentId: M:Discord.IVoiceChannel.ModifyAsync(System.Action{Discord.VoiceChannelProperties},Discord.RequestOptions)
  id: ModifyAsync(System.Action{Discord.VoiceChannelProperties},Discord.RequestOptions)
  parent: Discord.IVoiceChannel
  langs:
  - csharp
  - vb
  name: ModifyAsync(Action<VoiceChannelProperties>, RequestOptions)
  nameWithType: IVoiceChannel.ModifyAsync(Action<VoiceChannelProperties>, RequestOptions)
  fullName: Discord.IVoiceChannel.ModifyAsync(System.Action<Discord.VoiceChannelProperties>, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Channels/IVoiceChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ModifyAsync
    path: ../src/Discord.Net.Core/Entities/Channels/IVoiceChannel.cs
    startLine: 36
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nModifies this voice channel.\n"
  example: []
  syntax:
    content: Task ModifyAsync(Action<VoiceChannelProperties> func, RequestOptions options = null)
    parameters:
    - id: func
      type: System.Action{Discord.VoiceChannelProperties}
      description: The properties to modify the channel with.
    - id: options
      type: Discord.RequestOptions
      description: The options to be used when sending the request.
    return:
      type: System.Threading.Tasks.Task
      description: "\nA task that represents the asynchronous modification operation.\n"
    content.vb: Function ModifyAsync(func As Action(Of VoiceChannelProperties), options As RequestOptions = Nothing) As Task
  overload: Discord.IVoiceChannel.ModifyAsync*
  seealso:
  - linkId: Discord.VoiceChannelProperties
    commentId: T:Discord.VoiceChannelProperties
  nameWithType.vb: IVoiceChannel.ModifyAsync(Action(Of VoiceChannelProperties), RequestOptions)
  fullName.vb: Discord.IVoiceChannel.ModifyAsync(System.Action(Of Discord.VoiceChannelProperties), Discord.RequestOptions)
  name.vb: ModifyAsync(Action(Of VoiceChannelProperties), RequestOptions)
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.INestedChannel.CategoryId
  commentId: P:Discord.INestedChannel.CategoryId
  parent: Discord.INestedChannel
  name: CategoryId
  nameWithType: INestedChannel.CategoryId
  fullName: Discord.INestedChannel.CategoryId
- uid: Discord.INestedChannel.GetCategoryAsync(Discord.CacheMode,Discord.RequestOptions)
  commentId: M:Discord.INestedChannel.GetCategoryAsync(Discord.CacheMode,Discord.RequestOptions)
  parent: Discord.INestedChannel
  name: GetCategoryAsync(CacheMode, RequestOptions)
  nameWithType: INestedChannel.GetCategoryAsync(CacheMode, RequestOptions)
  fullName: Discord.INestedChannel.GetCategoryAsync(Discord.CacheMode, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.INestedChannel.GetCategoryAsync(Discord.CacheMode,Discord.RequestOptions)
    name: GetCategoryAsync
    nameWithType: INestedChannel.GetCategoryAsync
    fullName: Discord.INestedChannel.GetCategoryAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.CacheMode
    name: CacheMode
    nameWithType: CacheMode
    fullName: Discord.CacheMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.INestedChannel.GetCategoryAsync(Discord.CacheMode,Discord.RequestOptions)
    name: GetCategoryAsync
    nameWithType: INestedChannel.GetCategoryAsync
    fullName: Discord.INestedChannel.GetCategoryAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.CacheMode
    name: CacheMode
    nameWithType: CacheMode
    fullName: Discord.CacheMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.INestedChannel.SyncPermissionsAsync(Discord.RequestOptions)
  commentId: M:Discord.INestedChannel.SyncPermissionsAsync(Discord.RequestOptions)
  parent: Discord.INestedChannel
  name: SyncPermissionsAsync(RequestOptions)
  nameWithType: INestedChannel.SyncPermissionsAsync(RequestOptions)
  fullName: Discord.INestedChannel.SyncPermissionsAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.INestedChannel.SyncPermissionsAsync(Discord.RequestOptions)
    name: SyncPermissionsAsync
    nameWithType: INestedChannel.SyncPermissionsAsync
    fullName: Discord.INestedChannel.SyncPermissionsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.INestedChannel.SyncPermissionsAsync(Discord.RequestOptions)
    name: SyncPermissionsAsync
    nameWithType: INestedChannel.SyncPermissionsAsync
    fullName: Discord.INestedChannel.SyncPermissionsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.INestedChannel.CreateInviteAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,Discord.RequestOptions)
  commentId: M:Discord.INestedChannel.CreateInviteAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,Discord.RequestOptions)
  parent: Discord.INestedChannel
  isExternal: true
  name: CreateInviteAsync(Nullable<Int32>, Nullable<Int32>, Boolean, Boolean, RequestOptions)
  nameWithType: INestedChannel.CreateInviteAsync(Nullable<Int32>, Nullable<Int32>, Boolean, Boolean, RequestOptions)
  fullName: Discord.INestedChannel.CreateInviteAsync(System.Nullable<System.Int32>, System.Nullable<System.Int32>, System.Boolean, System.Boolean, Discord.RequestOptions)
  nameWithType.vb: INestedChannel.CreateInviteAsync(Nullable(Of Int32), Nullable(Of Int32), Boolean, Boolean, RequestOptions)
  fullName.vb: Discord.INestedChannel.CreateInviteAsync(System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), System.Boolean, System.Boolean, Discord.RequestOptions)
  name.vb: CreateInviteAsync(Nullable(Of Int32), Nullable(Of Int32), Boolean, Boolean, RequestOptions)
  spec.csharp:
  - uid: Discord.INestedChannel.CreateInviteAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,Discord.RequestOptions)
    name: CreateInviteAsync
    nameWithType: INestedChannel.CreateInviteAsync
    fullName: Discord.INestedChannel.CreateInviteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.INestedChannel.CreateInviteAsync(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,Discord.RequestOptions)
    name: CreateInviteAsync
    nameWithType: INestedChannel.CreateInviteAsync
    fullName: Discord.INestedChannel.CreateInviteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.INestedChannel.GetInvitesAsync(Discord.RequestOptions)
  commentId: M:Discord.INestedChannel.GetInvitesAsync(Discord.RequestOptions)
  parent: Discord.INestedChannel
  name: GetInvitesAsync(RequestOptions)
  nameWithType: INestedChannel.GetInvitesAsync(RequestOptions)
  fullName: Discord.INestedChannel.GetInvitesAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.INestedChannel.GetInvitesAsync(Discord.RequestOptions)
    name: GetInvitesAsync
    nameWithType: INestedChannel.GetInvitesAsync
    fullName: Discord.INestedChannel.GetInvitesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.INestedChannel.GetInvitesAsync(Discord.RequestOptions)
    name: GetInvitesAsync
    nameWithType: INestedChannel.GetInvitesAsync
    fullName: Discord.INestedChannel.GetInvitesAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IGuildChannel.Position
  commentId: P:Discord.IGuildChannel.Position
  parent: Discord.IGuildChannel
  name: Position
  nameWithType: IGuildChannel.Position
  fullName: Discord.IGuildChannel.Position
- uid: Discord.IGuildChannel.Guild
  commentId: P:Discord.IGuildChannel.Guild
  parent: Discord.IGuildChannel
  name: Guild
  nameWithType: IGuildChannel.Guild
  fullName: Discord.IGuildChannel.Guild
- uid: Discord.IGuildChannel.GuildId
  commentId: P:Discord.IGuildChannel.GuildId
  parent: Discord.IGuildChannel
  name: GuildId
  nameWithType: IGuildChannel.GuildId
  fullName: Discord.IGuildChannel.GuildId
- uid: Discord.IGuildChannel.PermissionOverwrites
  commentId: P:Discord.IGuildChannel.PermissionOverwrites
  parent: Discord.IGuildChannel
  name: PermissionOverwrites
  nameWithType: IGuildChannel.PermissionOverwrites
  fullName: Discord.IGuildChannel.PermissionOverwrites
- uid: Discord.IGuildChannel.ModifyAsync(System.Action{Discord.GuildChannelProperties},Discord.RequestOptions)
  commentId: M:Discord.IGuildChannel.ModifyAsync(System.Action{Discord.GuildChannelProperties},Discord.RequestOptions)
  parent: Discord.IGuildChannel
  isExternal: true
  name: ModifyAsync(Action<GuildChannelProperties>, RequestOptions)
  nameWithType: IGuildChannel.ModifyAsync(Action<GuildChannelProperties>, RequestOptions)
  fullName: Discord.IGuildChannel.ModifyAsync(System.Action<Discord.GuildChannelProperties>, Discord.RequestOptions)
  nameWithType.vb: IGuildChannel.ModifyAsync(Action(Of GuildChannelProperties), RequestOptions)
  fullName.vb: Discord.IGuildChannel.ModifyAsync(System.Action(Of Discord.GuildChannelProperties), Discord.RequestOptions)
  name.vb: ModifyAsync(Action(Of GuildChannelProperties), RequestOptions)
  spec.csharp:
  - uid: Discord.IGuildChannel.ModifyAsync(System.Action{Discord.GuildChannelProperties},Discord.RequestOptions)
    name: ModifyAsync
    nameWithType: IGuildChannel.ModifyAsync
    fullName: Discord.IGuildChannel.ModifyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.GuildChannelProperties
    name: GuildChannelProperties
    nameWithType: GuildChannelProperties
    fullName: Discord.GuildChannelProperties
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IGuildChannel.ModifyAsync(System.Action{Discord.GuildChannelProperties},Discord.RequestOptions)
    name: ModifyAsync
    nameWithType: IGuildChannel.ModifyAsync
    fullName: Discord.IGuildChannel.ModifyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.GuildChannelProperties
    name: GuildChannelProperties
    nameWithType: GuildChannelProperties
    fullName: Discord.GuildChannelProperties
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IGuildChannel.GetPermissionOverwrite(Discord.IRole)
  commentId: M:Discord.IGuildChannel.GetPermissionOverwrite(Discord.IRole)
  parent: Discord.IGuildChannel
  name: GetPermissionOverwrite(IRole)
  nameWithType: IGuildChannel.GetPermissionOverwrite(IRole)
  fullName: Discord.IGuildChannel.GetPermissionOverwrite(Discord.IRole)
  spec.csharp:
  - uid: Discord.IGuildChannel.GetPermissionOverwrite(Discord.IRole)
    name: GetPermissionOverwrite
    nameWithType: IGuildChannel.GetPermissionOverwrite
    fullName: Discord.IGuildChannel.GetPermissionOverwrite
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IRole
    name: IRole
    nameWithType: IRole
    fullName: Discord.IRole
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IGuildChannel.GetPermissionOverwrite(Discord.IRole)
    name: GetPermissionOverwrite
    nameWithType: IGuildChannel.GetPermissionOverwrite
    fullName: Discord.IGuildChannel.GetPermissionOverwrite
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IRole
    name: IRole
    nameWithType: IRole
    fullName: Discord.IRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IGuildChannel.GetPermissionOverwrite(Discord.IUser)
  commentId: M:Discord.IGuildChannel.GetPermissionOverwrite(Discord.IUser)
  parent: Discord.IGuildChannel
  name: GetPermissionOverwrite(IUser)
  nameWithType: IGuildChannel.GetPermissionOverwrite(IUser)
  fullName: Discord.IGuildChannel.GetPermissionOverwrite(Discord.IUser)
  spec.csharp:
  - uid: Discord.IGuildChannel.GetPermissionOverwrite(Discord.IUser)
    name: GetPermissionOverwrite
    nameWithType: IGuildChannel.GetPermissionOverwrite
    fullName: Discord.IGuildChannel.GetPermissionOverwrite
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IUser
    name: IUser
    nameWithType: IUser
    fullName: Discord.IUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IGuildChannel.GetPermissionOverwrite(Discord.IUser)
    name: GetPermissionOverwrite
    nameWithType: IGuildChannel.GetPermissionOverwrite
    fullName: Discord.IGuildChannel.GetPermissionOverwrite
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IUser
    name: IUser
    nameWithType: IUser
    fullName: Discord.IUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IGuildChannel.RemovePermissionOverwriteAsync(Discord.IRole,Discord.RequestOptions)
  commentId: M:Discord.IGuildChannel.RemovePermissionOverwriteAsync(Discord.IRole,Discord.RequestOptions)
  parent: Discord.IGuildChannel
  name: RemovePermissionOverwriteAsync(IRole, RequestOptions)
  nameWithType: IGuildChannel.RemovePermissionOverwriteAsync(IRole, RequestOptions)
  fullName: Discord.IGuildChannel.RemovePermissionOverwriteAsync(Discord.IRole, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IGuildChannel.RemovePermissionOverwriteAsync(Discord.IRole,Discord.RequestOptions)
    name: RemovePermissionOverwriteAsync
    nameWithType: IGuildChannel.RemovePermissionOverwriteAsync
    fullName: Discord.IGuildChannel.RemovePermissionOverwriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IRole
    name: IRole
    nameWithType: IRole
    fullName: Discord.IRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IGuildChannel.RemovePermissionOverwriteAsync(Discord.IRole,Discord.RequestOptions)
    name: RemovePermissionOverwriteAsync
    nameWithType: IGuildChannel.RemovePermissionOverwriteAsync
    fullName: Discord.IGuildChannel.RemovePermissionOverwriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IRole
    name: IRole
    nameWithType: IRole
    fullName: Discord.IRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IGuildChannel.RemovePermissionOverwriteAsync(Discord.IUser,Discord.RequestOptions)
  commentId: M:Discord.IGuildChannel.RemovePermissionOverwriteAsync(Discord.IUser,Discord.RequestOptions)
  parent: Discord.IGuildChannel
  name: RemovePermissionOverwriteAsync(IUser, RequestOptions)
  nameWithType: IGuildChannel.RemovePermissionOverwriteAsync(IUser, RequestOptions)
  fullName: Discord.IGuildChannel.RemovePermissionOverwriteAsync(Discord.IUser, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IGuildChannel.RemovePermissionOverwriteAsync(Discord.IUser,Discord.RequestOptions)
    name: RemovePermissionOverwriteAsync
    nameWithType: IGuildChannel.RemovePermissionOverwriteAsync
    fullName: Discord.IGuildChannel.RemovePermissionOverwriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IUser
    name: IUser
    nameWithType: IUser
    fullName: Discord.IUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IGuildChannel.RemovePermissionOverwriteAsync(Discord.IUser,Discord.RequestOptions)
    name: RemovePermissionOverwriteAsync
    nameWithType: IGuildChannel.RemovePermissionOverwriteAsync
    fullName: Discord.IGuildChannel.RemovePermissionOverwriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IUser
    name: IUser
    nameWithType: IUser
    fullName: Discord.IUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IGuildChannel.AddPermissionOverwriteAsync(Discord.IRole,Discord.OverwritePermissions,Discord.RequestOptions)
  commentId: M:Discord.IGuildChannel.AddPermissionOverwriteAsync(Discord.IRole,Discord.OverwritePermissions,Discord.RequestOptions)
  parent: Discord.IGuildChannel
  name: AddPermissionOverwriteAsync(IRole, OverwritePermissions, RequestOptions)
  nameWithType: IGuildChannel.AddPermissionOverwriteAsync(IRole, OverwritePermissions, RequestOptions)
  fullName: Discord.IGuildChannel.AddPermissionOverwriteAsync(Discord.IRole, Discord.OverwritePermissions, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IGuildChannel.AddPermissionOverwriteAsync(Discord.IRole,Discord.OverwritePermissions,Discord.RequestOptions)
    name: AddPermissionOverwriteAsync
    nameWithType: IGuildChannel.AddPermissionOverwriteAsync
    fullName: Discord.IGuildChannel.AddPermissionOverwriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IRole
    name: IRole
    nameWithType: IRole
    fullName: Discord.IRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.OverwritePermissions
    name: OverwritePermissions
    nameWithType: OverwritePermissions
    fullName: Discord.OverwritePermissions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IGuildChannel.AddPermissionOverwriteAsync(Discord.IRole,Discord.OverwritePermissions,Discord.RequestOptions)
    name: AddPermissionOverwriteAsync
    nameWithType: IGuildChannel.AddPermissionOverwriteAsync
    fullName: Discord.IGuildChannel.AddPermissionOverwriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IRole
    name: IRole
    nameWithType: IRole
    fullName: Discord.IRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.OverwritePermissions
    name: OverwritePermissions
    nameWithType: OverwritePermissions
    fullName: Discord.OverwritePermissions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IGuildChannel.AddPermissionOverwriteAsync(Discord.IUser,Discord.OverwritePermissions,Discord.RequestOptions)
  commentId: M:Discord.IGuildChannel.AddPermissionOverwriteAsync(Discord.IUser,Discord.OverwritePermissions,Discord.RequestOptions)
  parent: Discord.IGuildChannel
  name: AddPermissionOverwriteAsync(IUser, OverwritePermissions, RequestOptions)
  nameWithType: IGuildChannel.AddPermissionOverwriteAsync(IUser, OverwritePermissions, RequestOptions)
  fullName: Discord.IGuildChannel.AddPermissionOverwriteAsync(Discord.IUser, Discord.OverwritePermissions, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IGuildChannel.AddPermissionOverwriteAsync(Discord.IUser,Discord.OverwritePermissions,Discord.RequestOptions)
    name: AddPermissionOverwriteAsync
    nameWithType: IGuildChannel.AddPermissionOverwriteAsync
    fullName: Discord.IGuildChannel.AddPermissionOverwriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IUser
    name: IUser
    nameWithType: IUser
    fullName: Discord.IUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.OverwritePermissions
    name: OverwritePermissions
    nameWithType: OverwritePermissions
    fullName: Discord.OverwritePermissions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IGuildChannel.AddPermissionOverwriteAsync(Discord.IUser,Discord.OverwritePermissions,Discord.RequestOptions)
    name: AddPermissionOverwriteAsync
    nameWithType: IGuildChannel.AddPermissionOverwriteAsync
    fullName: Discord.IGuildChannel.AddPermissionOverwriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IUser
    name: IUser
    nameWithType: IUser
    fullName: Discord.IUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.OverwritePermissions
    name: OverwritePermissions
    nameWithType: OverwritePermissions
    fullName: Discord.OverwritePermissions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IGuildChannel.GetUsersAsync(Discord.CacheMode,Discord.RequestOptions)
  commentId: M:Discord.IGuildChannel.GetUsersAsync(Discord.CacheMode,Discord.RequestOptions)
  parent: Discord.IGuildChannel
  name: GetUsersAsync(CacheMode, RequestOptions)
  nameWithType: IGuildChannel.GetUsersAsync(CacheMode, RequestOptions)
  fullName: Discord.IGuildChannel.GetUsersAsync(Discord.CacheMode, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IGuildChannel.GetUsersAsync(Discord.CacheMode,Discord.RequestOptions)
    name: GetUsersAsync
    nameWithType: IGuildChannel.GetUsersAsync
    fullName: Discord.IGuildChannel.GetUsersAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.CacheMode
    name: CacheMode
    nameWithType: CacheMode
    fullName: Discord.CacheMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IGuildChannel.GetUsersAsync(Discord.CacheMode,Discord.RequestOptions)
    name: GetUsersAsync
    nameWithType: IGuildChannel.GetUsersAsync
    fullName: Discord.IGuildChannel.GetUsersAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.CacheMode
    name: CacheMode
    nameWithType: CacheMode
    fullName: Discord.CacheMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IGuildChannel.GetUserAsync(System.UInt64,Discord.CacheMode,Discord.RequestOptions)
  commentId: M:Discord.IGuildChannel.GetUserAsync(System.UInt64,Discord.CacheMode,Discord.RequestOptions)
  parent: Discord.IGuildChannel
  isExternal: true
  name: GetUserAsync(UInt64, CacheMode, RequestOptions)
  nameWithType: IGuildChannel.GetUserAsync(UInt64, CacheMode, RequestOptions)
  fullName: Discord.IGuildChannel.GetUserAsync(System.UInt64, Discord.CacheMode, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IGuildChannel.GetUserAsync(System.UInt64,Discord.CacheMode,Discord.RequestOptions)
    name: GetUserAsync
    nameWithType: IGuildChannel.GetUserAsync
    fullName: Discord.IGuildChannel.GetUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.CacheMode
    name: CacheMode
    nameWithType: CacheMode
    fullName: Discord.CacheMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IGuildChannel.GetUserAsync(System.UInt64,Discord.CacheMode,Discord.RequestOptions)
    name: GetUserAsync
    nameWithType: IGuildChannel.GetUserAsync
    fullName: Discord.IGuildChannel.GetUserAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.CacheMode
    name: CacheMode
    nameWithType: CacheMode
    fullName: Discord.CacheMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  commentId: M:Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  parent: Discord.IDeletable
  name: DeleteAsync(RequestOptions)
  nameWithType: IDeletable.DeleteAsync(RequestOptions)
  fullName: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
    name: DeleteAsync
    nameWithType: IDeletable.DeleteAsync
    fullName: Discord.IDeletable.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
    name: DeleteAsync
    nameWithType: IDeletable.DeleteAsync
    fullName: Discord.IDeletable.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IAudioChannel.ConnectAsync(System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Discord.IAudioChannel.ConnectAsync(System.Boolean,System.Boolean,System.Boolean)
  parent: Discord.IAudioChannel
  isExternal: true
  name: ConnectAsync(Boolean, Boolean, Boolean)
  nameWithType: IAudioChannel.ConnectAsync(Boolean, Boolean, Boolean)
  fullName: Discord.IAudioChannel.ConnectAsync(System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: Discord.IAudioChannel.ConnectAsync(System.Boolean,System.Boolean,System.Boolean)
    name: ConnectAsync
    nameWithType: IAudioChannel.ConnectAsync
    fullName: Discord.IAudioChannel.ConnectAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IAudioChannel.ConnectAsync(System.Boolean,System.Boolean,System.Boolean)
    name: ConnectAsync
    nameWithType: IAudioChannel.ConnectAsync
    fullName: Discord.IAudioChannel.ConnectAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IAudioChannel.DisconnectAsync
  commentId: M:Discord.IAudioChannel.DisconnectAsync
  parent: Discord.IAudioChannel
  name: DisconnectAsync()
  nameWithType: IAudioChannel.DisconnectAsync()
  fullName: Discord.IAudioChannel.DisconnectAsync()
  spec.csharp:
  - uid: Discord.IAudioChannel.DisconnectAsync
    name: DisconnectAsync
    nameWithType: IAudioChannel.DisconnectAsync
    fullName: Discord.IAudioChannel.DisconnectAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IAudioChannel.DisconnectAsync
    name: DisconnectAsync
    nameWithType: IAudioChannel.DisconnectAsync
    fullName: Discord.IAudioChannel.DisconnectAsync
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IChannel.Name
  commentId: P:Discord.IChannel.Name
  parent: Discord.IChannel
  name: Name
  nameWithType: IChannel.Name
  fullName: Discord.IChannel.Name
- uid: Discord.ISnowflakeEntity.CreatedAt
  commentId: P:Discord.ISnowflakeEntity.CreatedAt
  parent: Discord.ISnowflakeEntity
  name: CreatedAt
  nameWithType: ISnowflakeEntity.CreatedAt
  fullName: Discord.ISnowflakeEntity.CreatedAt
- uid: Discord.IEntity{System.UInt64}.Id
  commentId: P:Discord.IEntity{System.UInt64}.Id
  parent: Discord.IEntity{System.UInt64}
  definition: Discord.IEntity`1.Id
  name: Id
  nameWithType: IEntity<UInt64>.Id
  fullName: Discord.IEntity<System.UInt64>.Id
  nameWithType.vb: IEntity(Of UInt64).Id
  fullName.vb: Discord.IEntity(Of System.UInt64).Id
- uid: Discord.INestedChannel
  commentId: T:Discord.INestedChannel
  parent: Discord
  name: INestedChannel
  nameWithType: INestedChannel
  fullName: Discord.INestedChannel
- uid: Discord.IGuildChannel
  commentId: T:Discord.IGuildChannel
  parent: Discord
  name: IGuildChannel
  nameWithType: IGuildChannel
  fullName: Discord.IGuildChannel
- uid: Discord.IDeletable
  commentId: T:Discord.IDeletable
  parent: Discord
  name: IDeletable
  nameWithType: IDeletable
  fullName: Discord.IDeletable
- uid: Discord.IAudioChannel
  commentId: T:Discord.IAudioChannel
  parent: Discord
  name: IAudioChannel
  nameWithType: IAudioChannel
  fullName: Discord.IAudioChannel
- uid: Discord.IChannel
  commentId: T:Discord.IChannel
  parent: Discord
  name: IChannel
  nameWithType: IChannel
  fullName: Discord.IChannel
- uid: Discord.ISnowflakeEntity
  commentId: T:Discord.ISnowflakeEntity
  parent: Discord
  name: ISnowflakeEntity
  nameWithType: ISnowflakeEntity
  fullName: Discord.ISnowflakeEntity
- uid: Discord.IEntity`1.Id
  commentId: P:Discord.IEntity`1.Id
  name: Id
  nameWithType: IEntity<TId>.Id
  fullName: Discord.IEntity<TId>.Id
  nameWithType.vb: IEntity(Of TId).Id
  fullName.vb: Discord.IEntity(Of TId).Id
- uid: Discord.IEntity{System.UInt64}
  commentId: T:Discord.IEntity{System.UInt64}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<UInt64>
  nameWithType: IEntity<UInt64>
  fullName: Discord.IEntity<System.UInt64>
  nameWithType.vb: IEntity(Of UInt64)
  fullName.vb: Discord.IEntity(Of System.UInt64)
  name.vb: IEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Discord.IVoiceChannel.Bitrate*
  commentId: Overload:Discord.IVoiceChannel.Bitrate
  name: Bitrate
  nameWithType: IVoiceChannel.Bitrate
  fullName: Discord.IVoiceChannel.Bitrate
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.IVoiceChannel.UserLimit*
  commentId: Overload:Discord.IVoiceChannel.UserLimit
  name: UserLimit
  nameWithType: IVoiceChannel.UserLimit
  fullName: Discord.IVoiceChannel.UserLimit
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.VoiceChannelProperties
  commentId: T:Discord.VoiceChannelProperties
  name: VoiceChannelProperties
  nameWithType: VoiceChannelProperties
  fullName: Discord.VoiceChannelProperties
- uid: Discord.IVoiceChannel.ModifyAsync*
  commentId: Overload:Discord.IVoiceChannel.ModifyAsync
  name: ModifyAsync
  nameWithType: IVoiceChannel.ModifyAsync
  fullName: Discord.IVoiceChannel.ModifyAsync
- uid: System.Action{Discord.VoiceChannelProperties}
  commentId: T:System.Action{Discord.VoiceChannelProperties}
  parent: System
  definition: System.Action`1
  name: Action<VoiceChannelProperties>
  nameWithType: Action<VoiceChannelProperties>
  fullName: System.Action<Discord.VoiceChannelProperties>
  nameWithType.vb: Action(Of VoiceChannelProperties)
  fullName.vb: System.Action(Of Discord.VoiceChannelProperties)
  name.vb: Action(Of VoiceChannelProperties)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.VoiceChannelProperties
    name: VoiceChannelProperties
    nameWithType: VoiceChannelProperties
    fullName: Discord.VoiceChannelProperties
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.VoiceChannelProperties
    name: VoiceChannelProperties
    nameWithType: VoiceChannelProperties
    fullName: Discord.VoiceChannelProperties
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.RequestOptions
  commentId: T:Discord.RequestOptions
  parent: Discord
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: Discord.RequestOptions
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
