### YamlMime:ManagedReference
items:
- uid: Discord.Webhook.DiscordWebhookClient
  commentId: T:Discord.Webhook.DiscordWebhookClient
  id: DiscordWebhookClient
  parent: Discord.Webhook
  children:
  - Discord.Webhook.DiscordWebhookClient.#ctor(Discord.IWebhook)
  - Discord.Webhook.DiscordWebhookClient.#ctor(Discord.IWebhook,Discord.Rest.DiscordRestConfig)
  - Discord.Webhook.DiscordWebhookClient.#ctor(System.String)
  - Discord.Webhook.DiscordWebhookClient.#ctor(System.String,Discord.Rest.DiscordRestConfig)
  - Discord.Webhook.DiscordWebhookClient.#ctor(System.UInt64,System.String)
  - Discord.Webhook.DiscordWebhookClient.#ctor(System.UInt64,System.String,Discord.Rest.DiscordRestConfig)
  - Discord.Webhook.DiscordWebhookClient.DeleteWebhookAsync(Discord.RequestOptions)
  - Discord.Webhook.DiscordWebhookClient.Dispose
  - Discord.Webhook.DiscordWebhookClient.Log
  - Discord.Webhook.DiscordWebhookClient.ModifyWebhookAsync(Action{Discord.WebhookProperties},Discord.RequestOptions)
  - Discord.Webhook.DiscordWebhookClient.SendFileAsync(Stream,System.String,System.String,System.Boolean,IEnumerable{Discord.Embed},System.String,System.String,Discord.RequestOptions,System.Boolean)
  - Discord.Webhook.DiscordWebhookClient.SendFileAsync(System.String,System.String,System.Boolean,IEnumerable{Discord.Embed},System.String,System.String,Discord.RequestOptions,System.Boolean)
  - Discord.Webhook.DiscordWebhookClient.SendMessageAsync(System.String,System.Boolean,IEnumerable{Discord.Embed},System.String,System.String,Discord.RequestOptions)
  langs:
  - csharp
  - vb
  name: DiscordWebhookClient
  nameWithType: DiscordWebhookClient
  fullName: Discord.Webhook.DiscordWebhookClient
  type: Class
  source:
    remote:
      path: src/Discord.Net.Webhook/DiscordWebhookClient.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: DiscordWebhookClient
    path: ../src/Discord.Net.Webhook/DiscordWebhookClient.cs
    startLine: 11
  assemblies:
  - Discord.Net.Webhook
  namespace: Discord.Webhook
  summary: 'A client responsible for connecting as a Webhook. '
  example: []
  syntax:
    content: 'public class DiscordWebhookClient : IDisposable'
    content.vb: >-
      Public Class DiscordWebhookClient
          Inherits IDisposable
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Webhook.DiscordWebhookClient.Log
  commentId: E:Discord.Webhook.DiscordWebhookClient.Log
  id: Log
  parent: Discord.Webhook.DiscordWebhookClient
  langs:
  - csharp
  - vb
  name: Log
  nameWithType: DiscordWebhookClient.Log
  fullName: Discord.Webhook.DiscordWebhookClient.Log
  type: Event
  source:
    remote:
      path: src/Discord.Net.Webhook/DiscordWebhookClient.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Log
    path: ../src/Discord.Net.Webhook/DiscordWebhookClient.cs
    startLine: 13
  assemblies:
  - Discord.Net.Webhook
  namespace: Discord.Webhook
  syntax:
    content: public event Func<LogMessage, Task> Log
    return:
      type: Func{Discord.LogMessage,Task}
    content.vb: Public Event Log As Func(Of LogMessage, Task)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Webhook.DiscordWebhookClient.#ctor(Discord.IWebhook)
  commentId: M:Discord.Webhook.DiscordWebhookClient.#ctor(Discord.IWebhook)
  id: '#ctor(Discord.IWebhook)'
  parent: Discord.Webhook.DiscordWebhookClient
  langs:
  - csharp
  - vb
  name: DiscordWebhookClient(IWebhook)
  nameWithType: DiscordWebhookClient.DiscordWebhookClient(IWebhook)
  fullName: Discord.Webhook.DiscordWebhookClient.DiscordWebhookClient(Discord.IWebhook)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Webhook/DiscordWebhookClient.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Webhook/DiscordWebhookClient.cs
    startLine: 24
  assemblies:
  - Discord.Net.Webhook
  namespace: Discord.Webhook
  summary: 'Creates a new Webhook Discord client. '
  example: []
  syntax:
    content: public DiscordWebhookClient(IWebhook webhook)
    parameters:
    - id: webhook
      type: Discord.IWebhook
    content.vb: Public Sub New(webhook As IWebhook)
  overload: Discord.Webhook.DiscordWebhookClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Webhook.DiscordWebhookClient.#ctor(System.UInt64,System.String)
  commentId: M:Discord.Webhook.DiscordWebhookClient.#ctor(System.UInt64,System.String)
  id: '#ctor(System.UInt64,System.String)'
  parent: Discord.Webhook.DiscordWebhookClient
  langs:
  - csharp
  - vb
  name: DiscordWebhookClient(UInt64, String)
  nameWithType: DiscordWebhookClient.DiscordWebhookClient(UInt64, String)
  fullName: Discord.Webhook.DiscordWebhookClient.DiscordWebhookClient(System.UInt64, System.String)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Webhook/DiscordWebhookClient.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Webhook/DiscordWebhookClient.cs
    startLine: 27
  assemblies:
  - Discord.Net.Webhook
  namespace: Discord.Webhook
  summary: 'Creates a new Webhook Discord client. '
  example: []
  syntax:
    content: public DiscordWebhookClient(ulong webhookId, string webhookToken)
    parameters:
    - id: webhookId
      type: System.UInt64
    - id: webhookToken
      type: System.String
    content.vb: Public Sub New(webhookId As ULong, webhookToken As String)
  overload: Discord.Webhook.DiscordWebhookClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Webhook.DiscordWebhookClient.#ctor(System.String)
  commentId: M:Discord.Webhook.DiscordWebhookClient.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Discord.Webhook.DiscordWebhookClient
  langs:
  - csharp
  - vb
  name: DiscordWebhookClient(String)
  nameWithType: DiscordWebhookClient.DiscordWebhookClient(String)
  fullName: Discord.Webhook.DiscordWebhookClient.DiscordWebhookClient(System.String)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Webhook/DiscordWebhookClient.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Webhook/DiscordWebhookClient.cs
    startLine: 30
  assemblies:
  - Discord.Net.Webhook
  namespace: Discord.Webhook
  summary: 'Creates a new Webhook Discord client. '
  example: []
  syntax:
    content: public DiscordWebhookClient(string webhookUrl)
    parameters:
    - id: webhookUrl
      type: System.String
    content.vb: Public Sub New(webhookUrl As String)
  overload: Discord.Webhook.DiscordWebhookClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Webhook.DiscordWebhookClient.#ctor(System.UInt64,System.String,Discord.Rest.DiscordRestConfig)
  commentId: M:Discord.Webhook.DiscordWebhookClient.#ctor(System.UInt64,System.String,Discord.Rest.DiscordRestConfig)
  id: '#ctor(System.UInt64,System.String,Discord.Rest.DiscordRestConfig)'
  parent: Discord.Webhook.DiscordWebhookClient
  langs:
  - csharp
  - vb
  name: DiscordWebhookClient(UInt64, String, DiscordRestConfig)
  nameWithType: DiscordWebhookClient.DiscordWebhookClient(UInt64, String, DiscordRestConfig)
  fullName: Discord.Webhook.DiscordWebhookClient.DiscordWebhookClient(System.UInt64, System.String, Discord.Rest.DiscordRestConfig)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Webhook/DiscordWebhookClient.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Webhook/DiscordWebhookClient.cs
    startLine: 37
  assemblies:
  - Discord.Net.Webhook
  namespace: Discord.Webhook
  summary: 'Creates a new Webhook Discord client. '
  example: []
  syntax:
    content: public DiscordWebhookClient(ulong webhookId, string webhookToken, DiscordRestConfig config)
    parameters:
    - id: webhookId
      type: System.UInt64
    - id: webhookToken
      type: System.String
    - id: config
      type: Discord.Rest.DiscordRestConfig
    content.vb: Public Sub New(webhookId As ULong, webhookToken As String, config As DiscordRestConfig)
  overload: Discord.Webhook.DiscordWebhookClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Webhook.DiscordWebhookClient.#ctor(Discord.IWebhook,Discord.Rest.DiscordRestConfig)
  commentId: M:Discord.Webhook.DiscordWebhookClient.#ctor(Discord.IWebhook,Discord.Rest.DiscordRestConfig)
  id: '#ctor(Discord.IWebhook,Discord.Rest.DiscordRestConfig)'
  parent: Discord.Webhook.DiscordWebhookClient
  langs:
  - csharp
  - vb
  name: DiscordWebhookClient(IWebhook, DiscordRestConfig)
  nameWithType: DiscordWebhookClient.DiscordWebhookClient(IWebhook, DiscordRestConfig)
  fullName: Discord.Webhook.DiscordWebhookClient.DiscordWebhookClient(Discord.IWebhook, Discord.Rest.DiscordRestConfig)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Webhook/DiscordWebhookClient.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Webhook/DiscordWebhookClient.cs
    startLine: 45
  assemblies:
  - Discord.Net.Webhook
  namespace: Discord.Webhook
  summary: 'Creates a new Webhook Discord client. '
  example: []
  syntax:
    content: public DiscordWebhookClient(IWebhook webhook, DiscordRestConfig config)
    parameters:
    - id: webhook
      type: Discord.IWebhook
    - id: config
      type: Discord.Rest.DiscordRestConfig
    content.vb: Public Sub New(webhook As IWebhook, config As DiscordRestConfig)
  overload: Discord.Webhook.DiscordWebhookClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Webhook.DiscordWebhookClient.#ctor(System.String,Discord.Rest.DiscordRestConfig)
  commentId: M:Discord.Webhook.DiscordWebhookClient.#ctor(System.String,Discord.Rest.DiscordRestConfig)
  id: '#ctor(System.String,Discord.Rest.DiscordRestConfig)'
  parent: Discord.Webhook.DiscordWebhookClient
  langs:
  - csharp
  - vb
  name: DiscordWebhookClient(String, DiscordRestConfig)
  nameWithType: DiscordWebhookClient.DiscordWebhookClient(String, DiscordRestConfig)
  fullName: Discord.Webhook.DiscordWebhookClient.DiscordWebhookClient(System.String, Discord.Rest.DiscordRestConfig)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Webhook/DiscordWebhookClient.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Webhook/DiscordWebhookClient.cs
    startLine: 59
  assemblies:
  - Discord.Net.Webhook
  namespace: Discord.Webhook
  summary: "\nCreates a new Webhook Discord client.\n"
  example: []
  syntax:
    content: public DiscordWebhookClient(string webhookUrl, DiscordRestConfig config)
    parameters:
    - id: webhookUrl
      type: System.String
      description: The url of the webhook.
    - id: config
      type: Discord.Rest.DiscordRestConfig
      description: The configuration options to use for this client.
    content.vb: Public Sub New(webhookUrl As String, config As DiscordRestConfig)
  overload: Discord.Webhook.DiscordWebhookClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Webhook.DiscordWebhookClient.SendMessageAsync(System.String,System.Boolean,IEnumerable{Discord.Embed},System.String,System.String,Discord.RequestOptions)
  commentId: M:Discord.Webhook.DiscordWebhookClient.SendMessageAsync(System.String,System.Boolean,IEnumerable{Discord.Embed},System.String,System.String,Discord.RequestOptions)
  id: SendMessageAsync(System.String,System.Boolean,IEnumerable{Discord.Embed},System.String,System.String,Discord.RequestOptions)
  parent: Discord.Webhook.DiscordWebhookClient
  langs:
  - csharp
  - vb
  name: SendMessageAsync(String, Boolean, IEnumerable<Embed>, String, String, RequestOptions)
  nameWithType: DiscordWebhookClient.SendMessageAsync(String, Boolean, IEnumerable<Embed>, String, String, RequestOptions)
  fullName: Discord.Webhook.DiscordWebhookClient.SendMessageAsync(System.String, System.Boolean, IEnumerable<Discord.Embed>, System.String, System.String, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Webhook/DiscordWebhookClient.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: SendMessageAsync
    path: ../src/Discord.Net.Webhook/DiscordWebhookClient.cs
    startLine: 88
  assemblies:
  - Discord.Net.Webhook
  namespace: Discord.Webhook
  summary: 'Sends a message using to the channel for this webhook. '
  example: []
  syntax:
    content: public Task<ulong> SendMessageAsync(string text = null, bool isTTS = false, IEnumerable<Embed> embeds = null, string username = null, string avatarUrl = null, RequestOptions options = null)
    parameters:
    - id: text
      type: System.String
    - id: isTTS
      type: System.Boolean
    - id: embeds
      type: IEnumerable{Discord.Embed}
    - id: username
      type: System.String
    - id: avatarUrl
      type: System.String
    - id: options
      type: Discord.RequestOptions
    return:
      type: Task{System.UInt64}
      description: 'Returns the ID of the created message. '
    content.vb: Public Function SendMessageAsync(text As String = Nothing, isTTS As Boolean = False, embeds As IEnumerable(Of Embed) = Nothing, username As String = Nothing, avatarUrl As String = Nothing, options As RequestOptions = Nothing) As Task(Of ULong)
  overload: Discord.Webhook.DiscordWebhookClient.SendMessageAsync*
  nameWithType.vb: DiscordWebhookClient.SendMessageAsync(String, Boolean, IEnumerable(Of Embed), String, String, RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Webhook.DiscordWebhookClient.SendMessageAsync(System.String, System.Boolean, IEnumerable(Of Discord.Embed), System.String, System.String, Discord.RequestOptions)
  name.vb: SendMessageAsync(String, Boolean, IEnumerable(Of Embed), String, String, RequestOptions)
- uid: Discord.Webhook.DiscordWebhookClient.SendFileAsync(System.String,System.String,System.Boolean,IEnumerable{Discord.Embed},System.String,System.String,Discord.RequestOptions,System.Boolean)
  commentId: M:Discord.Webhook.DiscordWebhookClient.SendFileAsync(System.String,System.String,System.Boolean,IEnumerable{Discord.Embed},System.String,System.String,Discord.RequestOptions,System.Boolean)
  id: SendFileAsync(System.String,System.String,System.Boolean,IEnumerable{Discord.Embed},System.String,System.String,Discord.RequestOptions,System.Boolean)
  parent: Discord.Webhook.DiscordWebhookClient
  langs:
  - csharp
  - vb
  name: SendFileAsync(String, String, Boolean, IEnumerable<Embed>, String, String, RequestOptions, Boolean)
  nameWithType: DiscordWebhookClient.SendFileAsync(String, String, Boolean, IEnumerable<Embed>, String, String, RequestOptions, Boolean)
  fullName: Discord.Webhook.DiscordWebhookClient.SendFileAsync(System.String, System.String, System.Boolean, IEnumerable<Discord.Embed>, System.String, System.String, Discord.RequestOptions, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Webhook/DiscordWebhookClient.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: SendFileAsync
    path: ../src/Discord.Net.Webhook/DiscordWebhookClient.cs
    startLine: 94
  assemblies:
  - Discord.Net.Webhook
  namespace: Discord.Webhook
  summary: 'Sends a message to the channel for this webhook with an attachment. '
  example: []
  syntax:
    content: public Task<ulong> SendFileAsync(string filePath, string text, bool isTTS = false, IEnumerable<Embed> embeds = null, string username = null, string avatarUrl = null, RequestOptions options = null, bool isSpoiler = false)
    parameters:
    - id: filePath
      type: System.String
    - id: text
      type: System.String
    - id: isTTS
      type: System.Boolean
    - id: embeds
      type: IEnumerable{Discord.Embed}
    - id: username
      type: System.String
    - id: avatarUrl
      type: System.String
    - id: options
      type: Discord.RequestOptions
    - id: isSpoiler
      type: System.Boolean
    return:
      type: Task{System.UInt64}
      description: 'Returns the ID of the created message. '
    content.vb: Public Function SendFileAsync(filePath As String, text As String, isTTS As Boolean = False, embeds As IEnumerable(Of Embed) = Nothing, username As String = Nothing, avatarUrl As String = Nothing, options As RequestOptions = Nothing, isSpoiler As Boolean = False) As Task(Of ULong)
  overload: Discord.Webhook.DiscordWebhookClient.SendFileAsync*
  nameWithType.vb: DiscordWebhookClient.SendFileAsync(String, String, Boolean, IEnumerable(Of Embed), String, String, RequestOptions, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Webhook.DiscordWebhookClient.SendFileAsync(System.String, System.String, System.Boolean, IEnumerable(Of Discord.Embed), System.String, System.String, Discord.RequestOptions, System.Boolean)
  name.vb: SendFileAsync(String, String, Boolean, IEnumerable(Of Embed), String, String, RequestOptions, Boolean)
- uid: Discord.Webhook.DiscordWebhookClient.SendFileAsync(Stream,System.String,System.String,System.Boolean,IEnumerable{Discord.Embed},System.String,System.String,Discord.RequestOptions,System.Boolean)
  commentId: M:Discord.Webhook.DiscordWebhookClient.SendFileAsync(Stream,System.String,System.String,System.Boolean,IEnumerable{Discord.Embed},System.String,System.String,Discord.RequestOptions,System.Boolean)
  id: SendFileAsync(Stream,System.String,System.String,System.Boolean,IEnumerable{Discord.Embed},System.String,System.String,Discord.RequestOptions,System.Boolean)
  parent: Discord.Webhook.DiscordWebhookClient
  langs:
  - csharp
  - vb
  name: SendFileAsync(Stream, String, String, Boolean, IEnumerable<Embed>, String, String, RequestOptions, Boolean)
  nameWithType: DiscordWebhookClient.SendFileAsync(Stream, String, String, Boolean, IEnumerable<Embed>, String, String, RequestOptions, Boolean)
  fullName: Discord.Webhook.DiscordWebhookClient.SendFileAsync(Stream, System.String, System.String, System.Boolean, IEnumerable<Discord.Embed>, System.String, System.String, Discord.RequestOptions, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Webhook/DiscordWebhookClient.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: SendFileAsync
    path: ../src/Discord.Net.Webhook/DiscordWebhookClient.cs
    startLine: 99
  assemblies:
  - Discord.Net.Webhook
  namespace: Discord.Webhook
  summary: 'Sends a message to the channel for this webhook with an attachment. '
  example: []
  syntax:
    content: public Task<ulong> SendFileAsync(Stream stream, string filename, string text, bool isTTS = false, IEnumerable<Embed> embeds = null, string username = null, string avatarUrl = null, RequestOptions options = null, bool isSpoiler = false)
    parameters:
    - id: stream
      type: Stream
    - id: filename
      type: System.String
    - id: text
      type: System.String
    - id: isTTS
      type: System.Boolean
    - id: embeds
      type: IEnumerable{Discord.Embed}
    - id: username
      type: System.String
    - id: avatarUrl
      type: System.String
    - id: options
      type: Discord.RequestOptions
    - id: isSpoiler
      type: System.Boolean
    return:
      type: Task{System.UInt64}
      description: 'Returns the ID of the created message. '
    content.vb: Public Function SendFileAsync(stream As Stream, filename As String, text As String, isTTS As Boolean = False, embeds As IEnumerable(Of Embed) = Nothing, username As String = Nothing, avatarUrl As String = Nothing, options As RequestOptions = Nothing, isSpoiler As Boolean = False) As Task(Of ULong)
  overload: Discord.Webhook.DiscordWebhookClient.SendFileAsync*
  nameWithType.vb: DiscordWebhookClient.SendFileAsync(Stream, String, String, Boolean, IEnumerable(Of Embed), String, String, RequestOptions, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Webhook.DiscordWebhookClient.SendFileAsync(Stream, System.String, System.String, System.Boolean, IEnumerable(Of Discord.Embed), System.String, System.String, Discord.RequestOptions, System.Boolean)
  name.vb: SendFileAsync(Stream, String, String, Boolean, IEnumerable(Of Embed), String, String, RequestOptions, Boolean)
- uid: Discord.Webhook.DiscordWebhookClient.ModifyWebhookAsync(Action{Discord.WebhookProperties},Discord.RequestOptions)
  commentId: M:Discord.Webhook.DiscordWebhookClient.ModifyWebhookAsync(Action{Discord.WebhookProperties},Discord.RequestOptions)
  id: ModifyWebhookAsync(Action{Discord.WebhookProperties},Discord.RequestOptions)
  parent: Discord.Webhook.DiscordWebhookClient
  langs:
  - csharp
  - vb
  name: ModifyWebhookAsync(Action<WebhookProperties>, RequestOptions)
  nameWithType: DiscordWebhookClient.ModifyWebhookAsync(Action<WebhookProperties>, RequestOptions)
  fullName: Discord.Webhook.DiscordWebhookClient.ModifyWebhookAsync(Action<Discord.WebhookProperties>, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Webhook/DiscordWebhookClient.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ModifyWebhookAsync
    path: ../src/Discord.Net.Webhook/DiscordWebhookClient.cs
    startLine: 104
  assemblies:
  - Discord.Net.Webhook
  namespace: Discord.Webhook
  summary: 'Modifies the properties of this webhook. '
  example: []
  syntax:
    content: public Task ModifyWebhookAsync(Action<WebhookProperties> func, RequestOptions options = null)
    parameters:
    - id: func
      type: Action{Discord.WebhookProperties}
    - id: options
      type: Discord.RequestOptions
    return:
      type: Task
    content.vb: Public Function ModifyWebhookAsync(func As Action(Of WebhookProperties), options As RequestOptions = Nothing) As Task
  overload: Discord.Webhook.DiscordWebhookClient.ModifyWebhookAsync*
  nameWithType.vb: DiscordWebhookClient.ModifyWebhookAsync(Action(Of WebhookProperties), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Webhook.DiscordWebhookClient.ModifyWebhookAsync(Action(Of Discord.WebhookProperties), Discord.RequestOptions)
  name.vb: ModifyWebhookAsync(Action(Of WebhookProperties), RequestOptions)
- uid: Discord.Webhook.DiscordWebhookClient.DeleteWebhookAsync(Discord.RequestOptions)
  commentId: M:Discord.Webhook.DiscordWebhookClient.DeleteWebhookAsync(Discord.RequestOptions)
  id: DeleteWebhookAsync(Discord.RequestOptions)
  parent: Discord.Webhook.DiscordWebhookClient
  langs:
  - csharp
  - vb
  name: DeleteWebhookAsync(RequestOptions)
  nameWithType: DiscordWebhookClient.DeleteWebhookAsync(RequestOptions)
  fullName: Discord.Webhook.DiscordWebhookClient.DeleteWebhookAsync(Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Webhook/DiscordWebhookClient.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: DeleteWebhookAsync
    path: ../src/Discord.Net.Webhook/DiscordWebhookClient.cs
    startLine: 108
  assemblies:
  - Discord.Net.Webhook
  namespace: Discord.Webhook
  summary: 'Deletes this webhook from Discord and disposes the client. '
  example: []
  syntax:
    content: public Task DeleteWebhookAsync(RequestOptions options = null)
    parameters:
    - id: options
      type: Discord.RequestOptions
    return:
      type: Task
    content.vb: Public Function DeleteWebhookAsync(options As RequestOptions = Nothing) As Task
  overload: Discord.Webhook.DiscordWebhookClient.DeleteWebhookAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Webhook.DiscordWebhookClient.Dispose
  commentId: M:Discord.Webhook.DiscordWebhookClient.Dispose
  id: Dispose
  parent: Discord.Webhook.DiscordWebhookClient
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: DiscordWebhookClient.Dispose()
  fullName: Discord.Webhook.DiscordWebhookClient.Dispose()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Webhook/DiscordWebhookClient.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Dispose
    path: ../src/Discord.Net.Webhook/DiscordWebhookClient.cs
    startLine: 114
  assemblies:
  - Discord.Net.Webhook
  namespace: Discord.Webhook
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Discord.Webhook.DiscordWebhookClient.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Discord.Webhook
  commentId: N:Discord.Webhook
  name: Discord.Webhook
  nameWithType: Discord.Webhook
  fullName: Discord.Webhook
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Func{Discord.LogMessage,Task}
  commentId: '!:Func{Discord.LogMessage,Task}'
  definition: Func`2
  name: Func<LogMessage, Task>
  nameWithType: Func<LogMessage, Task>
  fullName: Func<Discord.LogMessage, Task>
  nameWithType.vb: Func(Of LogMessage, Task)
  fullName.vb: Func(Of Discord.LogMessage, Task)
  name.vb: Func(Of LogMessage, Task)
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.LogMessage
    name: LogMessage
    nameWithType: LogMessage
    fullName: Discord.LogMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Task
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.LogMessage
    name: LogMessage
    nameWithType: LogMessage
    fullName: Discord.LogMessage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Task
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Func`2
  isExternal: true
  name: Func<, >
  nameWithType: Func<, >
  fullName: Func<, >
  nameWithType.vb: Func(Of , )
  fullName.vb: Func(Of , )
  name.vb: Func(Of , )
  spec.csharp:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Webhook.DiscordWebhookClient.#ctor*
  commentId: Overload:Discord.Webhook.DiscordWebhookClient.#ctor
  name: DiscordWebhookClient
  nameWithType: DiscordWebhookClient.DiscordWebhookClient
  fullName: Discord.Webhook.DiscordWebhookClient.DiscordWebhookClient
- uid: Discord.IWebhook
  commentId: T:Discord.IWebhook
  parent: Discord
  name: IWebhook
  nameWithType: IWebhook
  fullName: Discord.IWebhook
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Rest.DiscordRestConfig
  commentId: T:Discord.Rest.DiscordRestConfig
  parent: Discord.Rest
  name: DiscordRestConfig
  nameWithType: DiscordRestConfig
  fullName: Discord.Rest.DiscordRestConfig
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: Discord.Webhook.DiscordWebhookClient.SendMessageAsync*
  commentId: Overload:Discord.Webhook.DiscordWebhookClient.SendMessageAsync
  name: SendMessageAsync
  nameWithType: DiscordWebhookClient.SendMessageAsync
  fullName: Discord.Webhook.DiscordWebhookClient.SendMessageAsync
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: IEnumerable{Discord.Embed}
  commentId: '!:IEnumerable{Discord.Embed}'
  definition: IEnumerable`1
  name: IEnumerable<Embed>
  nameWithType: IEnumerable<Embed>
  fullName: IEnumerable<Discord.Embed>
  nameWithType.vb: IEnumerable(Of Embed)
  fullName.vb: IEnumerable(Of Discord.Embed)
  name.vb: IEnumerable(Of Embed)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.RequestOptions
  commentId: T:Discord.RequestOptions
  parent: Discord
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: Discord.RequestOptions
- uid: Task{System.UInt64}
  commentId: '!:Task{System.UInt64}'
  definition: Task`1
  name: Task<UInt64>
  nameWithType: Task<UInt64>
  fullName: Task<System.UInt64>
  nameWithType.vb: Task(Of UInt64)
  fullName.vb: Task(Of System.UInt64)
  name.vb: Task(Of UInt64)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Webhook.DiscordWebhookClient.SendFileAsync*
  commentId: Overload:Discord.Webhook.DiscordWebhookClient.SendFileAsync
  name: SendFileAsync
  nameWithType: DiscordWebhookClient.SendFileAsync
  fullName: Discord.Webhook.DiscordWebhookClient.SendFileAsync
- uid: Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: Stream
- uid: Discord.Webhook.DiscordWebhookClient.ModifyWebhookAsync*
  commentId: Overload:Discord.Webhook.DiscordWebhookClient.ModifyWebhookAsync
  name: ModifyWebhookAsync
  nameWithType: DiscordWebhookClient.ModifyWebhookAsync
  fullName: Discord.Webhook.DiscordWebhookClient.ModifyWebhookAsync
- uid: Action{Discord.WebhookProperties}
  commentId: '!:Action{Discord.WebhookProperties}'
  definition: Action`1
  name: Action<WebhookProperties>
  nameWithType: Action<WebhookProperties>
  fullName: Action<Discord.WebhookProperties>
  nameWithType.vb: Action(Of WebhookProperties)
  fullName.vb: Action(Of Discord.WebhookProperties)
  name.vb: Action(Of WebhookProperties)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.WebhookProperties
    name: WebhookProperties
    nameWithType: WebhookProperties
    fullName: Discord.WebhookProperties
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.WebhookProperties
    name: WebhookProperties
    nameWithType: WebhookProperties
    fullName: Discord.WebhookProperties
  - name: )
    nameWithType: )
    fullName: )
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Webhook.DiscordWebhookClient.DeleteWebhookAsync*
  commentId: Overload:Discord.Webhook.DiscordWebhookClient.DeleteWebhookAsync
  name: DeleteWebhookAsync
  nameWithType: DiscordWebhookClient.DeleteWebhookAsync
  fullName: Discord.Webhook.DiscordWebhookClient.DeleteWebhookAsync
- uid: Discord.Webhook.DiscordWebhookClient.Dispose*
  commentId: Overload:Discord.Webhook.DiscordWebhookClient.Dispose
  name: Dispose
  nameWithType: DiscordWebhookClient.Dispose
  fullName: Discord.Webhook.DiscordWebhookClient.Dispose
