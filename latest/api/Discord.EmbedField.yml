### YamlMime:ManagedReference
items:
- uid: Discord.EmbedField
  commentId: T:Discord.EmbedField
  id: EmbedField
  parent: Discord
  children:
  - Discord.EmbedField.Inline
  - Discord.EmbedField.Name
  - Discord.EmbedField.ToString
  - Discord.EmbedField.Value
  langs:
  - csharp
  - vb
  name: EmbedField
  nameWithType: EmbedField
  fullName: Discord.EmbedField
  type: Struct
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedField.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: EmbedField
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedField.cs
    startLine: 7
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nA field for an <xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public struct EmbedField
    content.vb: Public Structure EmbedField
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Discord.EmbedField.Name
  commentId: P:Discord.EmbedField.Name
  id: Name
  parent: Discord.EmbedField
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: EmbedField.Name
  fullName: Discord.EmbedField.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedField.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedField.cs
    startLine: 13
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the name of the field.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Discord.EmbedField.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.EmbedField.Value
  commentId: P:Discord.EmbedField.Value
  id: Value
  parent: Discord.EmbedField
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: EmbedField.Value
  fullName: Discord.EmbedField.Value
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedField.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Value
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedField.cs
    startLine: 17
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the value of the field.\n"
  example: []
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: Discord.EmbedField.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.EmbedField.Inline
  commentId: P:Discord.EmbedField.Inline
  id: Inline
  parent: Discord.EmbedField
  langs:
  - csharp
  - vb
  name: Inline
  nameWithType: EmbedField.Inline
  fullName: Discord.EmbedField.Inline
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedField.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Inline
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedField.cs
    startLine: 21
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets a value that indicates whether the field should be in-line with each other.\n"
  example: []
  syntax:
    content: public bool Inline { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Inline As Boolean
  overload: Discord.EmbedField.Inline*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.EmbedField.ToString
  commentId: M:Discord.EmbedField.ToString
  id: ToString
  parent: Discord.EmbedField
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: EmbedField.ToString()
  fullName: Discord.EmbedField.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedField.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedField.cs
    startLine: 37
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the name of the field.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA string that resolves to <xref href=\"Discord.EmbedField.Name\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Overrides Function ToString As String
  overload: Discord.EmbedField.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Discord.Embed
  commentId: T:Discord.Embed
  parent: Discord
  name: Embed
  nameWithType: Embed
  fullName: Discord.Embed
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.EmbedField.Name*
  commentId: Overload:Discord.EmbedField.Name
  name: Name
  nameWithType: EmbedField.Name
  fullName: Discord.EmbedField.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.EmbedField.Value*
  commentId: Overload:Discord.EmbedField.Value
  name: Value
  nameWithType: EmbedField.Value
  fullName: Discord.EmbedField.Value
- uid: Discord.EmbedField.Inline*
  commentId: Overload:Discord.EmbedField.Inline
  name: Inline
  nameWithType: EmbedField.Inline
  fullName: Discord.EmbedField.Inline
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.EmbedField.Name
  commentId: P:Discord.EmbedField.Name
  isExternal: true
- uid: Discord.EmbedField.ToString*
  commentId: Overload:Discord.EmbedField.ToString
  name: ToString
  nameWithType: EmbedField.ToString
  fullName: Discord.EmbedField.ToString
