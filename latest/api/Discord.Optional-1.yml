### YamlMime:ManagedReference
items:
- uid: Discord.Optional`1
  commentId: T:Discord.Optional`1
  id: Optional`1
  parent: Discord
  children:
  - Discord.Optional`1.#ctor(`0)
  - Discord.Optional`1.Equals(System.Object)
  - Discord.Optional`1.GetHashCode
  - Discord.Optional`1.GetValueOrDefault
  - Discord.Optional`1.GetValueOrDefault(`0)
  - Discord.Optional`1.IsSpecified
  - Discord.Optional`1.op_Explicit(Discord.Optional{`0})~`0
  - Discord.Optional`1.op_Implicit(`0)~Discord.Optional{`0}
  - Discord.Optional`1.ToString
  - Discord.Optional`1.Unspecified
  - Discord.Optional`1.Value
  langs:
  - csharp
  - vb
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: Discord.Optional<T>
  type: Struct
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Optional.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Optional
    path: ../src/Discord.Net.Core/Utils/Optional.cs
    startLine: 6
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public struct Optional<T>
    typeParameters:
    - id: T
    content.vb: Public Structure Optional(Of T)
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: Optional(Of T)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: Discord.Optional(Of T)
  name.vb: Optional(Of T)
- uid: Discord.Optional`1.Unspecified
  commentId: P:Discord.Optional`1.Unspecified
  id: Unspecified
  parent: Discord.Optional`1
  langs:
  - csharp
  - vb
  name: Unspecified
  nameWithType: Optional<T>.Unspecified
  fullName: Discord.Optional<T>.Unspecified
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Optional.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Unspecified
    path: ../src/Discord.Net.Core/Utils/Optional.cs
    startLine: 9
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public static Optional<T> Unspecified { get; }
    parameters: []
    return:
      type: Discord.Optional`1
    content.vb: 'Public Shared ReadOnly Property Unspecified As '
  overload: Discord.Optional`1.Unspecified*
  nameWithType.vb: Optional(Of T).Unspecified
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  fullName.vb: Discord.Optional(Of T).Unspecified
- uid: Discord.Optional`1.Value
  commentId: P:Discord.Optional`1.Value
  id: Value
  parent: Discord.Optional`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Optional<T>.Value
  fullName: Discord.Optional<T>.Value
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Optional.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Value
    path: ../src/Discord.Net.Core/Utils/Optional.cs
    startLine: 14
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets the value for this parameter. '
  example: []
  syntax:
    content: public T Value { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property Value As T
  overload: Discord.Optional`1.Value*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This property has no value set.
  nameWithType.vb: Optional(Of T).Value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Discord.Optional(Of T).Value
- uid: Discord.Optional`1.IsSpecified
  commentId: P:Discord.Optional`1.IsSpecified
  id: IsSpecified
  parent: Discord.Optional`1
  langs:
  - csharp
  - vb
  name: IsSpecified
  nameWithType: Optional<T>.IsSpecified
  fullName: Discord.Optional<T>.IsSpecified
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Optional.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsSpecified
    path: ../src/Discord.Net.Core/Utils/Optional.cs
    startLine: 24
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Returns true if this value has been specified. '
  example: []
  syntax:
    content: public bool IsSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSpecified As Boolean
  overload: Discord.Optional`1.IsSpecified*
  nameWithType.vb: Optional(Of T).IsSpecified
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Discord.Optional(Of T).IsSpecified
- uid: Discord.Optional`1.#ctor(`0)
  commentId: M:Discord.Optional`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Discord.Optional`1
  langs:
  - csharp
  - vb
  name: Optional(T)
  nameWithType: Optional<T>.Optional(T)
  fullName: Discord.Optional<T>.Optional(T)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Optional.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Core/Utils/Optional.cs
    startLine: 27
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Creates a new Parameter with the provided value. '
  example: []
  syntax:
    content: public Optional(T value)
    parameters:
    - id: value
      type: '{T}'
    content.vb: Public Sub New(value As T)
  overload: Discord.Optional`1.#ctor*
  nameWithType.vb: Optional(Of T).Optional(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Optional(Of T).Optional(T)
- uid: Discord.Optional`1.GetValueOrDefault
  commentId: M:Discord.Optional`1.GetValueOrDefault
  id: GetValueOrDefault
  parent: Discord.Optional`1
  langs:
  - csharp
  - vb
  name: GetValueOrDefault()
  nameWithType: Optional<T>.GetValueOrDefault()
  fullName: Discord.Optional<T>.GetValueOrDefault()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Optional.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetValueOrDefault
    path: ../src/Discord.Net.Core/Utils/Optional.cs
    startLine: 33
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public T GetValueOrDefault()
    return:
      type: '{T}'
    content.vb: Public Function GetValueOrDefault As T
  overload: Discord.Optional`1.GetValueOrDefault*
  nameWithType.vb: Optional(Of T).GetValueOrDefault()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Optional(Of T).GetValueOrDefault()
- uid: Discord.Optional`1.GetValueOrDefault(`0)
  commentId: M:Discord.Optional`1.GetValueOrDefault(`0)
  id: GetValueOrDefault(`0)
  parent: Discord.Optional`1
  langs:
  - csharp
  - vb
  name: GetValueOrDefault(T)
  nameWithType: Optional<T>.GetValueOrDefault(T)
  fullName: Discord.Optional<T>.GetValueOrDefault(T)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Optional.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetValueOrDefault
    path: ../src/Discord.Net.Core/Utils/Optional.cs
    startLine: 34
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public T GetValueOrDefault(T defaultValue)
    parameters:
    - id: defaultValue
      type: '{T}'
    return:
      type: '{T}'
    content.vb: Public Function GetValueOrDefault(defaultValue As T) As T
  overload: Discord.Optional`1.GetValueOrDefault*
  nameWithType.vb: Optional(Of T).GetValueOrDefault(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Optional(Of T).GetValueOrDefault(T)
- uid: Discord.Optional`1.Equals(System.Object)
  commentId: M:Discord.Optional`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: Discord.Optional`1
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Optional<T>.Equals(Object)
  fullName: Discord.Optional<T>.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Optional.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Equals
    path: ../src/Discord.Net.Core/Utils/Optional.cs
    startLine: 36
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Discord.Optional`1.Equals*
  nameWithType.vb: Optional(Of T).Equals(Object)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Discord.Optional(Of T).Equals(System.Object)
- uid: Discord.Optional`1.GetHashCode
  commentId: M:Discord.Optional`1.GetHashCode
  id: GetHashCode
  parent: Discord.Optional`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Optional<T>.GetHashCode()
  fullName: Discord.Optional<T>.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Optional.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetHashCode
    path: ../src/Discord.Net.Core/Utils/Optional.cs
    startLine: 42
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Discord.Optional`1.GetHashCode*
  nameWithType.vb: Optional(Of T).GetHashCode()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Discord.Optional(Of T).GetHashCode()
- uid: Discord.Optional`1.ToString
  commentId: M:Discord.Optional`1.ToString
  id: ToString
  parent: Discord.Optional`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Optional<T>.ToString()
  fullName: Discord.Optional<T>.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Optional.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.Core/Utils/Optional.cs
    startLine: 44
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Discord.Optional`1.ToString*
  nameWithType.vb: Optional(Of T).ToString()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Discord.Optional(Of T).ToString()
- uid: Discord.Optional`1.op_Implicit(`0)~Discord.Optional{`0}
  commentId: M:Discord.Optional`1.op_Implicit(`0)~Discord.Optional{`0}
  id: op_Implicit(`0)~Discord.Optional{`0}
  parent: Discord.Optional`1
  langs:
  - csharp
  - vb
  name: Implicit(T to Optional<T>)
  nameWithType: Optional<T>.Implicit(T to Optional<T>)
  fullName: Discord.Optional<T>.Implicit(T to Discord.Optional<T>)
  type: Operator
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Optional.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: op_Implicit
    path: ../src/Discord.Net.Core/Utils/Optional.cs
    startLine: 47
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public static implicit operator Optional<T>(T value)
    parameters:
    - id: value
      type: '{T}'
    return:
      type: Discord.Optional`1
    content.vb: 'Public Shared Widening Operator CType(value As T) As '
  overload: Discord.Optional`1.op_Implicit*
  nameWithType.vb: Optional(Of T).Widening(T to Optional(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.Optional(Of T).Widening(T to Discord.Optional(Of T))
  name.vb: Widening(T to Optional(Of T))
- uid: Discord.Optional`1.op_Explicit(Discord.Optional{`0})~`0
  commentId: M:Discord.Optional`1.op_Explicit(Discord.Optional{`0})~`0
  id: op_Explicit(Discord.Optional{`0})~`0
  parent: Discord.Optional`1
  langs:
  - csharp
  - vb
  name: Explicit(Optional<T> to T)
  nameWithType: Optional<T>.Explicit(Optional<T> to T)
  fullName: Discord.Optional<T>.Explicit(Discord.Optional<T> to T)
  type: Operator
  source:
    remote:
      path: src/Discord.Net.Core/Utils/Optional.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: op_Explicit
    path: ../src/Discord.Net.Core/Utils/Optional.cs
    startLine: 48
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public static explicit operator T(Optional<T> value)
    parameters:
    - id: value
      type: Discord.Optional`1
    return:
      type: '{T}'
    content.vb: Public Shared Narrowing Operator CType(value As  Optional (Of T)) As T
  overload: Discord.Optional`1.op_Explicit*
  nameWithType.vb: Optional(Of T).Narrowing(Optional(Of T) to T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.Optional(Of T).Narrowing(Discord.Optional(Of T) to T)
  name.vb: Narrowing(Optional(Of T) to T)
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Optional`1.Unspecified*
  commentId: Overload:Discord.Optional`1.Unspecified
  name: Unspecified
  nameWithType: Optional<T>.Unspecified
  fullName: Discord.Optional<T>.Unspecified
  nameWithType.vb: Optional(Of T).Unspecified
  fullName.vb: Discord.Optional(Of T).Unspecified
- uid: Discord.Optional`1
  commentId: T:Discord.Optional`1
  parent: Discord
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: Discord.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: Discord.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: Discord.Optional`1.Value*
  commentId: Overload:Discord.Optional`1.Value
  name: Value
  nameWithType: Optional<T>.Value
  fullName: Discord.Optional<T>.Value
  nameWithType.vb: Optional(Of T).Value
  fullName.vb: Discord.Optional(Of T).Value
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Discord.Optional`1.IsSpecified*
  commentId: Overload:Discord.Optional`1.IsSpecified
  name: IsSpecified
  nameWithType: Optional<T>.IsSpecified
  fullName: Discord.Optional<T>.IsSpecified
  nameWithType.vb: Optional(Of T).IsSpecified
  fullName.vb: Discord.Optional(Of T).IsSpecified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.Optional`1.#ctor*
  commentId: Overload:Discord.Optional`1.#ctor
  name: Optional
  nameWithType: Optional<T>.Optional
  fullName: Discord.Optional<T>.Optional
  nameWithType.vb: Optional(Of T).Optional
  fullName.vb: Discord.Optional(Of T).Optional
- uid: Discord.Optional`1.GetValueOrDefault*
  commentId: Overload:Discord.Optional`1.GetValueOrDefault
  name: GetValueOrDefault
  nameWithType: Optional<T>.GetValueOrDefault
  fullName: Discord.Optional<T>.GetValueOrDefault
  nameWithType.vb: Optional(Of T).GetValueOrDefault
  fullName.vb: Discord.Optional(Of T).GetValueOrDefault
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Optional`1.Equals*
  commentId: Overload:Discord.Optional`1.Equals
  name: Equals
  nameWithType: Optional<T>.Equals
  fullName: Discord.Optional<T>.Equals
  nameWithType.vb: Optional(Of T).Equals
  fullName.vb: Discord.Optional(Of T).Equals
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Optional`1.GetHashCode*
  commentId: Overload:Discord.Optional`1.GetHashCode
  name: GetHashCode
  nameWithType: Optional<T>.GetHashCode
  fullName: Discord.Optional<T>.GetHashCode
  nameWithType.vb: Optional(Of T).GetHashCode
  fullName.vb: Discord.Optional(Of T).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Optional`1.ToString*
  commentId: Overload:Discord.Optional`1.ToString
  name: ToString
  nameWithType: Optional<T>.ToString
  fullName: Discord.Optional<T>.ToString
  nameWithType.vb: Optional(Of T).ToString
  fullName.vb: Discord.Optional(Of T).ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Optional`1.op_Implicit*
  commentId: Overload:Discord.Optional`1.op_Implicit
  name: Implicit
  nameWithType: Optional<T>.Implicit
  fullName: Discord.Optional<T>.Implicit
  nameWithType.vb: Optional(Of T).Widening
  fullName.vb: Discord.Optional(Of T).Widening
  name.vb: Widening
- uid: Discord.Optional`1.op_Explicit*
  commentId: Overload:Discord.Optional`1.op_Explicit
  name: Explicit
  nameWithType: Optional<T>.Explicit
  fullName: Discord.Optional<T>.Explicit
  nameWithType.vb: Optional(Of T).Narrowing
  fullName.vb: Discord.Optional(Of T).Narrowing
  name.vb: Narrowing
