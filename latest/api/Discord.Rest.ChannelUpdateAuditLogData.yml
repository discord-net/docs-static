### YamlMime:ManagedReference
items:
- uid: Discord.Rest.ChannelUpdateAuditLogData
  commentId: T:Discord.Rest.ChannelUpdateAuditLogData
  id: ChannelUpdateAuditLogData
  parent: Discord.Rest
  children:
  - Discord.Rest.ChannelUpdateAuditLogData.After
  - Discord.Rest.ChannelUpdateAuditLogData.Before
  - Discord.Rest.ChannelUpdateAuditLogData.ChannelId
  langs:
  - csharp
  - vb
  name: ChannelUpdateAuditLogData
  nameWithType: ChannelUpdateAuditLogData
  fullName: Discord.Rest.ChannelUpdateAuditLogData
  type: Class
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelUpdateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelUpdateAuditLogData
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelUpdateAuditLogData.cs
    startLine: 10
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nContains a piece of audit log data related to a channel update.\n"
  example: []
  syntax:
    content: 'public class ChannelUpdateAuditLogData : IAuditLogData'
    content.vb: >-
      Public Class ChannelUpdateAuditLogData
          Implements IAuditLogData
  inheritance:
  - System.Object
  implements:
  - Discord.IAuditLogData
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Rest.ChannelUpdateAuditLogData.ChannelId
  commentId: P:Discord.Rest.ChannelUpdateAuditLogData.ChannelId
  id: ChannelId
  parent: Discord.Rest.ChannelUpdateAuditLogData
  langs:
  - csharp
  - vb
  name: ChannelId
  nameWithType: ChannelUpdateAuditLogData.ChannelId
  fullName: Discord.Rest.ChannelUpdateAuditLogData.ChannelId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelUpdateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelId
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelUpdateAuditLogData.cs
    startLine: 52
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the snowflake ID of the updated channel.\n"
  example: []
  syntax:
    content: public ulong ChannelId { get; }
    parameters: []
    return:
      type: System.UInt64
      description: "\nA <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> representing the snowflake identifier for the updated channel.\n"
    content.vb: Public ReadOnly Property ChannelId As ULong
  overload: Discord.Rest.ChannelUpdateAuditLogData.ChannelId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.ChannelUpdateAuditLogData.Before
  commentId: P:Discord.Rest.ChannelUpdateAuditLogData.Before
  id: Before
  parent: Discord.Rest.ChannelUpdateAuditLogData
  langs:
  - csharp
  - vb
  name: Before
  nameWithType: ChannelUpdateAuditLogData.Before
  fullName: Discord.Rest.ChannelUpdateAuditLogData.Before
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelUpdateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Before
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelUpdateAuditLogData.cs
    startLine: 59
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the channel information before the changes.\n"
  example: []
  syntax:
    content: public ChannelInfo Before { get; }
    parameters: []
    return:
      type: Discord.Rest.ChannelInfo
      description: "\nAn information object containing the original channel information before the changes were made.\n"
    content.vb: Public ReadOnly Property Before As ChannelInfo
  overload: Discord.Rest.ChannelUpdateAuditLogData.Before*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.ChannelUpdateAuditLogData.After
  commentId: P:Discord.Rest.ChannelUpdateAuditLogData.After
  id: After
  parent: Discord.Rest.ChannelUpdateAuditLogData
  langs:
  - csharp
  - vb
  name: After
  nameWithType: ChannelUpdateAuditLogData.After
  fullName: Discord.Rest.ChannelUpdateAuditLogData.After
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelUpdateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: After
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/ChannelUpdateAuditLogData.cs
    startLine: 66
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the channel information after the changes.\n"
  example: []
  syntax:
    content: public ChannelInfo After { get; }
    parameters: []
    return:
      type: Discord.Rest.ChannelInfo
      description: "\nAn information object containing the channel information after the changes were made.\n"
    content.vb: Public ReadOnly Property After As ChannelInfo
  overload: Discord.Rest.ChannelUpdateAuditLogData.After*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.IAuditLogData
  commentId: T:Discord.IAuditLogData
  parent: Discord
  name: IAuditLogData
  nameWithType: IAuditLogData
  fullName: Discord.IAuditLogData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.Rest.ChannelUpdateAuditLogData.ChannelId*
  commentId: Overload:Discord.Rest.ChannelUpdateAuditLogData.ChannelId
  name: ChannelId
  nameWithType: ChannelUpdateAuditLogData.ChannelId
  fullName: Discord.Rest.ChannelUpdateAuditLogData.ChannelId
- uid: Discord.Rest.ChannelUpdateAuditLogData.Before*
  commentId: Overload:Discord.Rest.ChannelUpdateAuditLogData.Before
  name: Before
  nameWithType: ChannelUpdateAuditLogData.Before
  fullName: Discord.Rest.ChannelUpdateAuditLogData.Before
- uid: Discord.Rest.ChannelInfo
  commentId: T:Discord.Rest.ChannelInfo
  parent: Discord.Rest
  name: ChannelInfo
  nameWithType: ChannelInfo
  fullName: Discord.Rest.ChannelInfo
- uid: Discord.Rest.ChannelUpdateAuditLogData.After*
  commentId: Overload:Discord.Rest.ChannelUpdateAuditLogData.After
  name: After
  nameWithType: ChannelUpdateAuditLogData.After
  fullName: Discord.Rest.ChannelUpdateAuditLogData.After
