### YamlMime:ManagedReference
items:
- uid: Discord.GameAsset
  commentId: T:Discord.GameAsset
  id: GameAsset
  parent: Discord
  children:
  - Discord.GameAsset.GetImageUrl(Discord.ImageFormat,System.UInt16)
  - Discord.GameAsset.ImageId
  - Discord.GameAsset.Text
  langs:
  - csharp
  - vb
  name: GameAsset
  nameWithType: GameAsset
  fullName: Discord.GameAsset
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Activities/GameAsset.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GameAsset
    path: ../src/Discord.Net.Core/Entities/Activities/GameAsset.cs
    startLine: 5
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nAn asset for a <xref href=\"Discord.RichGame\" data-throw-if-not-resolved=\"false\"></xref> object containing the text and image.\n"
  example: []
  syntax:
    content: public class GameAsset
    content.vb: Public Class GameAsset
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.GameAsset.Text
  commentId: P:Discord.GameAsset.Text
  id: Text
  parent: Discord.GameAsset
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: GameAsset.Text
  fullName: Discord.GameAsset.Text
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Activities/GameAsset.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Text
    path: ../src/Discord.Net.Core/Entities/Activities/GameAsset.cs
    startLine: 17
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the description of the asset.\n"
  example: []
  syntax:
    content: public string Text { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the description of the asset.\n"
    content.vb: Public ReadOnly Property Text As String
  overload: Discord.GameAsset.Text*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GameAsset.ImageId
  commentId: P:Discord.GameAsset.ImageId
  id: ImageId
  parent: Discord.GameAsset
  langs:
  - csharp
  - vb
  name: ImageId
  nameWithType: GameAsset.ImageId
  fullName: Discord.GameAsset.ImageId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Activities/GameAsset.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ImageId
    path: ../src/Discord.Net.Core/Entities/Activities/GameAsset.cs
    startLine: 24
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the image ID of the asset.\n"
  example: []
  syntax:
    content: public string ImageId { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the unique image identifier of the asset.\n"
    content.vb: Public ReadOnly Property ImageId As String
  overload: Discord.GameAsset.ImageId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.GameAsset.GetImageUrl(Discord.ImageFormat,System.UInt16)
  commentId: M:Discord.GameAsset.GetImageUrl(Discord.ImageFormat,System.UInt16)
  id: GetImageUrl(Discord.ImageFormat,System.UInt16)
  parent: Discord.GameAsset
  langs:
  - csharp
  - vb
  name: GetImageUrl(ImageFormat, UInt16)
  nameWithType: GameAsset.GetImageUrl(ImageFormat, UInt16)
  fullName: Discord.GameAsset.GetImageUrl(Discord.ImageFormat, System.UInt16)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Activities/GameAsset.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetImageUrl
    path: ../src/Discord.Net.Core/Entities/Activities/GameAsset.cs
    startLine: 34
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the image URL of the asset.\n"
  example: []
  syntax:
    content: public string GetImageUrl(ImageFormat format = ImageFormat.Auto, ushort size = 128)
    parameters:
    - id: format
      type: Discord.ImageFormat
      description: The format to return.
    - id: size
      type: System.UInt16
      description: The size of the image to return in. This can be any power of two between 16 and 2048.
    return:
      type: System.String
      description: "\nA string pointing to the image URL of the asset; <code>null</code> when the application ID does not exist.\n"
    content.vb: Public Function GetImageUrl(format As ImageFormat = ImageFormat.Auto, size As UShort = 128) As String
  overload: Discord.GameAsset.GetImageUrl*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Discord.RichGame
  commentId: T:Discord.RichGame
  name: RichGame
  nameWithType: RichGame
  fullName: Discord.RichGame
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.GameAsset.Text*
  commentId: Overload:Discord.GameAsset.Text
  name: Text
  nameWithType: GameAsset.Text
  fullName: Discord.GameAsset.Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.GameAsset.ImageId*
  commentId: Overload:Discord.GameAsset.ImageId
  name: ImageId
  nameWithType: GameAsset.ImageId
  fullName: Discord.GameAsset.ImageId
- uid: Discord.GameAsset.GetImageUrl*
  commentId: Overload:Discord.GameAsset.GetImageUrl
  name: GetImageUrl
  nameWithType: GameAsset.GetImageUrl
  fullName: Discord.GameAsset.GetImageUrl
- uid: Discord.ImageFormat
  commentId: T:Discord.ImageFormat
  parent: Discord
  name: ImageFormat
  nameWithType: ImageFormat
  fullName: Discord.ImageFormat
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
