### YamlMime:ManagedReference
items:
- uid: Discord.Rest.InviteInfo
  commentId: T:Discord.Rest.InviteInfo
  id: InviteInfo
  parent: Discord.Rest
  children:
  - Discord.Rest.InviteInfo.ChannelId
  - Discord.Rest.InviteInfo.Code
  - Discord.Rest.InviteInfo.MaxAge
  - Discord.Rest.InviteInfo.MaxUses
  - Discord.Rest.InviteInfo.Temporary
  langs:
  - csharp
  - vb
  name: InviteInfo
  nameWithType: InviteInfo
  fullName: Discord.Rest.InviteInfo
  type: Struct
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/InviteInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: InviteInfo
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/InviteInfo.cs
    startLine: 5
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nRepresents information for an invite.\n"
  example: []
  syntax:
    content: public struct InviteInfo
    content.vb: Public Structure InviteInfo
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Discord.Rest.InviteInfo.MaxAge
  commentId: P:Discord.Rest.InviteInfo.MaxAge
  id: MaxAge
  parent: Discord.Rest.InviteInfo
  langs:
  - csharp
  - vb
  name: MaxAge
  nameWithType: InviteInfo.MaxAge
  fullName: Discord.Rest.InviteInfo.MaxAge
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/InviteInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MaxAge
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/InviteInfo.cs
    startLine: 23
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the time (in seconds) until the invite expires.\n"
  example: []
  syntax:
    content: public int? MaxAge { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn <see cref=\"!:System.Int32\"></see> representing the time in seconds until this invite expires; <code>null</code> if this\ninvite never expires or not specified.\n"
    content.vb: Public ReadOnly Property MaxAge As Integer?
  overload: Discord.Rest.InviteInfo.MaxAge*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.InviteInfo.Code
  commentId: P:Discord.Rest.InviteInfo.Code
  id: Code
  parent: Discord.Rest.InviteInfo
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: InviteInfo.Code
  fullName: Discord.Rest.InviteInfo.Code
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/InviteInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Code
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/InviteInfo.cs
    startLine: 30
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the unique identifier for this invite.\n"
  example: []
  syntax:
    content: public string Code { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the invite code (e.g. <code>FTqNnyS</code>).\n"
    content.vb: Public ReadOnly Property Code As String
  overload: Discord.Rest.InviteInfo.Code*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.InviteInfo.Temporary
  commentId: P:Discord.Rest.InviteInfo.Temporary
  id: Temporary
  parent: Discord.Rest.InviteInfo
  langs:
  - csharp
  - vb
  name: Temporary
  nameWithType: InviteInfo.Temporary
  fullName: Discord.Rest.InviteInfo.Temporary
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/InviteInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Temporary
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/InviteInfo.cs
    startLine: 38
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets a value that indicates whether the invite is a temporary one.\n"
  example: []
  syntax:
    content: public bool? Temporary { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: "\n<code>true</code> if users accepting this invite will be removed from the guild when they log off, \n<code>false</code> if not; <code>null</code> if not specified.\n"
    content.vb: Public ReadOnly Property Temporary As Boolean?
  overload: Discord.Rest.InviteInfo.Temporary*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.InviteInfo.ChannelId
  commentId: P:Discord.Rest.InviteInfo.ChannelId
  id: ChannelId
  parent: Discord.Rest.InviteInfo
  langs:
  - csharp
  - vb
  name: ChannelId
  nameWithType: InviteInfo.ChannelId
  fullName: Discord.Rest.InviteInfo.ChannelId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/InviteInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelId
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/InviteInfo.cs
    startLine: 46
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the ID of the channel this invite is linked to.\n"
  example: []
  syntax:
    content: public ulong? ChannelId { get; }
    parameters: []
    return:
      type: System.Nullable{System.UInt64}
      description: "\nA <see cref=\"!:System.UInt64\"></see> representing the channel snowflake identifier that the invite points to; \n<code>null</code> if not specified.\n"
    content.vb: Public ReadOnly Property ChannelId As ULong?
  overload: Discord.Rest.InviteInfo.ChannelId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.InviteInfo.MaxUses
  commentId: P:Discord.Rest.InviteInfo.MaxUses
  id: MaxUses
  parent: Discord.Rest.InviteInfo
  langs:
  - csharp
  - vb
  name: MaxUses
  nameWithType: InviteInfo.MaxUses
  fullName: Discord.Rest.InviteInfo.MaxUses
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/InviteInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MaxUses
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/InviteInfo.cs
    startLine: 54
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the max number of uses this invite may have.\n"
  example: []
  syntax:
    content: public int? MaxUses { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn <see cref=\"!:System.Int32\"></see> representing the number of uses this invite may be accepted until it is removed\nfrom the guild; <code>null</code> if none is specified.\n"
    content.vb: Public ReadOnly Property MaxUses As Integer?
  overload: Discord.Rest.InviteInfo.MaxUses*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: Discord.Rest.InviteInfo.MaxAge*
  commentId: Overload:Discord.Rest.InviteInfo.MaxAge
  name: MaxAge
  nameWithType: InviteInfo.MaxAge
  fullName: Discord.Rest.InviteInfo.MaxAge
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.InviteInfo.Code*
  commentId: Overload:Discord.Rest.InviteInfo.Code
  name: Code
  nameWithType: InviteInfo.Code
  fullName: Discord.Rest.InviteInfo.Code
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Rest.InviteInfo.Temporary*
  commentId: Overload:Discord.Rest.InviteInfo.Temporary
  name: Temporary
  nameWithType: InviteInfo.Temporary
  fullName: Discord.Rest.InviteInfo.Temporary
- uid: System.Nullable{System.Boolean}
  commentId: '!:System.Nullable{System.Boolean}'
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.InviteInfo.ChannelId*
  commentId: Overload:Discord.Rest.InviteInfo.ChannelId
  name: ChannelId
  nameWithType: InviteInfo.ChannelId
  fullName: Discord.Rest.InviteInfo.ChannelId
- uid: System.Nullable{System.UInt64}
  commentId: '!:System.Nullable{System.UInt64}'
  definition: System.Nullable`1
  name: Nullable<UInt64>
  nameWithType: Nullable<UInt64>
  fullName: System.Nullable<System.UInt64>
  nameWithType.vb: Nullable(Of UInt64)
  fullName.vb: System.Nullable(Of System.UInt64)
  name.vb: Nullable(Of UInt64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.InviteInfo.MaxUses*
  commentId: Overload:Discord.Rest.InviteInfo.MaxUses
  name: MaxUses
  nameWithType: InviteInfo.MaxUses
  fullName: Discord.Rest.InviteInfo.MaxUses
