### YamlMime:ManagedReference
items:
- uid: Discord.WebSocket.SocketGroupUser
  commentId: T:Discord.WebSocket.SocketGroupUser
  id: SocketGroupUser
  parent: Discord.WebSocket
  children:
  - Discord.WebSocket.SocketGroupUser.AvatarId
  - Discord.WebSocket.SocketGroupUser.Channel
  - Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsDeafened
  - Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsMuted
  - Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsSelfDeafened
  - Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsSelfMuted
  - Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsStream
  - Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsSuppressed
  - Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#VoiceChannel
  - Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#VoiceSessionId
  - Discord.WebSocket.SocketGroupUser.DiscriminatorValue
  - Discord.WebSocket.SocketGroupUser.IsBot
  - Discord.WebSocket.SocketGroupUser.IsWebhook
  - Discord.WebSocket.SocketGroupUser.Username
  langs:
  - csharp
  - vb
  name: SocketGroupUser
  nameWithType: SocketGroupUser
  fullName: Discord.WebSocket.SocketGroupUser
  type: Class
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SocketGroupUser
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
    startLine: 5
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  syntax:
    content: 'public class SocketGroupUser : SocketUser, IGroupUser, IUser, ISnowflakeEntity, IEntity<ulong>, IMentionable, IPresence, IVoiceState'
    content.vb: >-
      Public Class SocketGroupUser
          Inherits SocketUser
          Implements IGroupUser, IUser, ISnowflakeEntity, IEntity(Of ULong), IMentionable, IPresence, IVoiceState
  inheritance:
  - System.Object
  - Discord.WebSocket.SocketEntity{System.UInt64}
  - Discord.WebSocket.SocketUser
  implements:
  - Discord.IGroupUser
  - Discord.IUser
  - Discord.ISnowflakeEntity
  - Discord.IEntity{System.UInt64}
  - Discord.IMentionable
  - Discord.IPresence
  - Discord.IVoiceState
  inheritedMembers:
  - Discord.WebSocket.SocketUser.CreatedAt
  - Discord.WebSocket.SocketUser.Discriminator
  - Discord.WebSocket.SocketUser.Mention
  - Discord.WebSocket.SocketUser.Activity
  - Discord.WebSocket.SocketUser.Status
  - Discord.WebSocket.SocketUser.ActiveClients
  - Discord.WebSocket.SocketUser.MutualGuilds
  - Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  - Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  - Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  - Discord.WebSocket.SocketUser.ToString
  - Discord.WebSocket.SocketEntity{System.UInt64}.Id
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.WebSocket.SocketGroupUser.Channel
  commentId: P:Discord.WebSocket.SocketGroupUser.Channel
  id: Channel
  parent: Discord.WebSocket.SocketGroupUser
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: SocketGroupUser.Channel
  fullName: Discord.WebSocket.SocketGroupUser.Channel
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Channel
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
    startLine: 14
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the group channel of the user.\n"
  example: []
  syntax:
    content: public SocketGroupChannel Channel { get; }
    parameters: []
    return:
      type: Discord.WebSocket.SocketGroupChannel
      description: "\nA <xref href=\"Discord.WebSocket.SocketGroupChannel\" data-throw-if-not-resolved=\"false\"></xref> representing the channel of which the user belongs to.\n"
    content.vb: Public ReadOnly Property Channel As SocketGroupChannel
  overload: Discord.WebSocket.SocketGroupUser.Channel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketGroupUser.IsBot
  commentId: P:Discord.WebSocket.SocketGroupUser.IsBot
  id: IsBot
  parent: Discord.WebSocket.SocketGroupUser
  langs:
  - csharp
  - vb
  name: IsBot
  nameWithType: SocketGroupUser.IsBot
  fullName: Discord.WebSocket.SocketGroupUser.IsBot
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsBot
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
    startLine: 19
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets a value that indicates whether this user is identified as a bot.\n"
  remarks: "\nThis property retrieves a value that indicates whether this user is a registered bot application\n(indicated by the blue BOT tag within the official chat client).\n"
  example: []
  syntax:
    content: public override bool IsBot { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the user is a bot application; otherwise <code>false</code>.\n"
    content.vb: Public Overrides ReadOnly Property IsBot As Boolean
  overridden: Discord.WebSocket.SocketUser.IsBot
  overload: Discord.WebSocket.SocketGroupUser.IsBot*
  implements:
  - Discord.IUser.IsBot
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketGroupUser.Username
  commentId: P:Discord.WebSocket.SocketGroupUser.Username
  id: Username
  parent: Discord.WebSocket.SocketGroupUser
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: SocketGroupUser.Username
  fullName: Discord.WebSocket.SocketGroupUser.Username
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Username
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
    startLine: 21
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the username for this user.\n"
  example: []
  syntax:
    content: public override string Username { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Username As String
  overridden: Discord.WebSocket.SocketUser.Username
  overload: Discord.WebSocket.SocketGroupUser.Username*
  implements:
  - Discord.IUser.Username
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketGroupUser.DiscriminatorValue
  commentId: P:Discord.WebSocket.SocketGroupUser.DiscriminatorValue
  id: DiscriminatorValue
  parent: Discord.WebSocket.SocketGroupUser
  langs:
  - csharp
  - vb
  name: DiscriminatorValue
  nameWithType: SocketGroupUser.DiscriminatorValue
  fullName: Discord.WebSocket.SocketGroupUser.DiscriminatorValue
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: DiscriminatorValue
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
    startLine: 23
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the per-username unique ID for this user.\n"
  example: []
  syntax:
    content: public override ushort DiscriminatorValue { get; }
    parameters: []
    return:
      type: System.UInt16
    content.vb: Public Overrides ReadOnly Property DiscriminatorValue As UShort
  overridden: Discord.WebSocket.SocketUser.DiscriminatorValue
  overload: Discord.WebSocket.SocketGroupUser.DiscriminatorValue*
  implements:
  - Discord.IUser.DiscriminatorValue
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketGroupUser.AvatarId
  commentId: P:Discord.WebSocket.SocketGroupUser.AvatarId
  id: AvatarId
  parent: Discord.WebSocket.SocketGroupUser
  langs:
  - csharp
  - vb
  name: AvatarId
  nameWithType: SocketGroupUser.AvatarId
  fullName: Discord.WebSocket.SocketGroupUser.AvatarId
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AvatarId
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
    startLine: 25
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the identifier of this user&apos;s avatar.\n"
  example: []
  syntax:
    content: public override string AvatarId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property AvatarId As String
  overridden: Discord.WebSocket.SocketUser.AvatarId
  overload: Discord.WebSocket.SocketGroupUser.AvatarId*
  implements:
  - Discord.IUser.AvatarId
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketGroupUser.IsWebhook
  commentId: P:Discord.WebSocket.SocketGroupUser.IsWebhook
  id: IsWebhook
  parent: Discord.WebSocket.SocketGroupUser
  langs:
  - csharp
  - vb
  name: IsWebhook
  nameWithType: SocketGroupUser.IsWebhook
  fullName: Discord.WebSocket.SocketGroupUser.IsWebhook
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsWebhook
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
    startLine: 30
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets a value that indicates whether this user is a webhook user.\n"
  example: []
  syntax:
    content: public override bool IsWebhook { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the user is a webhook; otherwise <code>false</code>.\n"
    content.vb: Public Overrides ReadOnly Property IsWebhook As Boolean
  overridden: Discord.WebSocket.SocketUser.IsWebhook
  overload: Discord.WebSocket.SocketGroupUser.IsWebhook*
  implements:
  - Discord.IUser.IsWebhook
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsDeafened
  commentId: P:Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsDeafened
  id: Discord#IVoiceState#IsDeafened
  isEii: true
  parent: Discord.WebSocket.SocketGroupUser
  langs:
  - csharp
  - vb
  name: IVoiceState.IsDeafened
  nameWithType: SocketGroupUser.IVoiceState.IsDeafened
  fullName: Discord.WebSocket.SocketGroupUser.Discord.IVoiceState.IsDeafened
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IVoiceState.IsDeafened
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
    startLine: 50
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets a value that indicates whether this user is deafened by the guild.\n"
  example: []
  syntax:
    content: bool IVoiceState.IsDeafened { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the user is deafened (i.e. not permitted to listen to or speak to others) by the guild;\notherwise <code>false</code>.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IVoiceState.IsDeafened As Boolean Implements IVoiceState.IsDeafened
  overload: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsDeafened*
  implements:
  - Discord.IVoiceState.IsDeafened
  nameWithType.vb: SocketGroupUser.Discord.IVoiceState.IsDeafened
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IVoiceState.IsDeafened
- uid: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsMuted
  commentId: P:Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsMuted
  id: Discord#IVoiceState#IsMuted
  isEii: true
  parent: Discord.WebSocket.SocketGroupUser
  langs:
  - csharp
  - vb
  name: IVoiceState.IsMuted
  nameWithType: SocketGroupUser.IVoiceState.IsMuted
  fullName: Discord.WebSocket.SocketGroupUser.Discord.IVoiceState.IsMuted
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IVoiceState.IsMuted
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
    startLine: 52
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets a value that indicates whether this user is muted (i.e. not permitted to speak via voice) by the\nguild.\n"
  example: []
  syntax:
    content: bool IVoiceState.IsMuted { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this user is muted by the guild; otherwise <code>false</code>.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IVoiceState.IsMuted As Boolean Implements IVoiceState.IsMuted
  overload: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsMuted*
  implements:
  - Discord.IVoiceState.IsMuted
  nameWithType.vb: SocketGroupUser.Discord.IVoiceState.IsMuted
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IVoiceState.IsMuted
- uid: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsSelfDeafened
  commentId: P:Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsSelfDeafened
  id: Discord#IVoiceState#IsSelfDeafened
  isEii: true
  parent: Discord.WebSocket.SocketGroupUser
  langs:
  - csharp
  - vb
  name: IVoiceState.IsSelfDeafened
  nameWithType: SocketGroupUser.IVoiceState.IsSelfDeafened
  fullName: Discord.WebSocket.SocketGroupUser.Discord.IVoiceState.IsSelfDeafened
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IVoiceState.IsSelfDeafened
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
    startLine: 54
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets a value that indicates whether this user has marked themselves as deafened.\n"
  example: []
  syntax:
    content: bool IVoiceState.IsSelfDeafened { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this user has deafened themselves (i.e. not permitted to listen to or speak to others); otherwise <code>false</code>.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IVoiceState.IsSelfDeafened As Boolean Implements IVoiceState.IsSelfDeafened
  overload: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsSelfDeafened*
  implements:
  - Discord.IVoiceState.IsSelfDeafened
  nameWithType.vb: SocketGroupUser.Discord.IVoiceState.IsSelfDeafened
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IVoiceState.IsSelfDeafened
- uid: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsSelfMuted
  commentId: P:Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsSelfMuted
  id: Discord#IVoiceState#IsSelfMuted
  isEii: true
  parent: Discord.WebSocket.SocketGroupUser
  langs:
  - csharp
  - vb
  name: IVoiceState.IsSelfMuted
  nameWithType: SocketGroupUser.IVoiceState.IsSelfMuted
  fullName: Discord.WebSocket.SocketGroupUser.Discord.IVoiceState.IsSelfMuted
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IVoiceState.IsSelfMuted
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
    startLine: 56
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets a value that indicates whether this user has marked themselves as muted (i.e. not permitted to\nspeak via voice).\n"
  example: []
  syntax:
    content: bool IVoiceState.IsSelfMuted { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this user has muted themselves; otherwise <code>false</code>.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IVoiceState.IsSelfMuted As Boolean Implements IVoiceState.IsSelfMuted
  overload: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsSelfMuted*
  implements:
  - Discord.IVoiceState.IsSelfMuted
  nameWithType.vb: SocketGroupUser.Discord.IVoiceState.IsSelfMuted
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IVoiceState.IsSelfMuted
- uid: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsSuppressed
  commentId: P:Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsSuppressed
  id: Discord#IVoiceState#IsSuppressed
  isEii: true
  parent: Discord.WebSocket.SocketGroupUser
  langs:
  - csharp
  - vb
  name: IVoiceState.IsSuppressed
  nameWithType: SocketGroupUser.IVoiceState.IsSuppressed
  fullName: Discord.WebSocket.SocketGroupUser.Discord.IVoiceState.IsSuppressed
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IVoiceState.IsSuppressed
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
    startLine: 58
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets a value that indicates whether the user is muted by the current user.\n"
  example: []
  syntax:
    content: bool IVoiceState.IsSuppressed { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the guild is temporarily blocking audio to/from this user; otherwise <code>false</code>.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IVoiceState.IsSuppressed As Boolean Implements IVoiceState.IsSuppressed
  overload: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsSuppressed*
  implements:
  - Discord.IVoiceState.IsSuppressed
  nameWithType.vb: SocketGroupUser.Discord.IVoiceState.IsSuppressed
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IVoiceState.IsSuppressed
- uid: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#VoiceChannel
  commentId: P:Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#VoiceChannel
  id: Discord#IVoiceState#VoiceChannel
  isEii: true
  parent: Discord.WebSocket.SocketGroupUser
  langs:
  - csharp
  - vb
  name: IVoiceState.VoiceChannel
  nameWithType: SocketGroupUser.IVoiceState.VoiceChannel
  fullName: Discord.WebSocket.SocketGroupUser.Discord.IVoiceState.VoiceChannel
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IVoiceState.VoiceChannel
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
    startLine: 60
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the voice channel this user is currently in.\n"
  example: []
  syntax:
    content: IVoiceChannel IVoiceState.VoiceChannel { get; }
    parameters: []
    return:
      type: Discord.IVoiceChannel
      description: "\nA generic voice channel object representing the voice channel that the user is currently in; <code>null</code>\nif none.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IVoiceState.VoiceChannel As IVoiceChannel Implements IVoiceState.VoiceChannel
  overload: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#VoiceChannel*
  implements:
  - Discord.IVoiceState.VoiceChannel
  nameWithType.vb: SocketGroupUser.Discord.IVoiceState.VoiceChannel
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IVoiceState.VoiceChannel
- uid: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#VoiceSessionId
  commentId: P:Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#VoiceSessionId
  id: Discord#IVoiceState#VoiceSessionId
  isEii: true
  parent: Discord.WebSocket.SocketGroupUser
  langs:
  - csharp
  - vb
  name: IVoiceState.VoiceSessionId
  nameWithType: SocketGroupUser.IVoiceState.VoiceSessionId
  fullName: Discord.WebSocket.SocketGroupUser.Discord.IVoiceState.VoiceSessionId
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IVoiceState.VoiceSessionId
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
    startLine: 62
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the unique identifier for this user&apos;s voice session.\n"
  example: []
  syntax:
    content: string IVoiceState.VoiceSessionId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly WriteOnly Property Discord.IVoiceState.VoiceSessionId As String Implements IVoiceState.VoiceSessionId
  overload: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#VoiceSessionId*
  implements:
  - Discord.IVoiceState.VoiceSessionId
  nameWithType.vb: SocketGroupUser.Discord.IVoiceState.VoiceSessionId
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IVoiceState.VoiceSessionId
- uid: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsStream
  commentId: P:Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsStream
  id: Discord#IVoiceState#IsStream
  isEii: true
  parent: Discord.WebSocket.SocketGroupUser
  langs:
  - csharp
  - vb
  name: IVoiceState.IsStream
  nameWithType: SocketGroupUser.IVoiceState.IsStream
  fullName: Discord.WebSocket.SocketGroupUser.Discord.IVoiceState.IsStream
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IVoiceState.IsStream
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketGroupUser.cs
    startLine: 64
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets a value that indicates if this user is streaming in a voice channel.\n"
  example: []
  syntax:
    content: bool IVoiceState.IsStream { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the user is streaming; otherwise <code>false</code>.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IVoiceState.IsStream As Boolean Implements IVoiceState.IsStream
  overload: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsStream*
  implements:
  - Discord.IVoiceState.IsStream
  nameWithType.vb: SocketGroupUser.Discord.IVoiceState.IsStream
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IVoiceState.IsStream
references:
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.WebSocket.SocketEntity{System.UInt64}
  commentId: T:Discord.WebSocket.SocketEntity{System.UInt64}
  parent: Discord.WebSocket
  definition: Discord.WebSocket.SocketEntity`1
  name: SocketEntity<UInt64>
  nameWithType: SocketEntity<UInt64>
  fullName: Discord.WebSocket.SocketEntity<System.UInt64>
  nameWithType.vb: SocketEntity(Of UInt64)
  fullName.vb: Discord.WebSocket.SocketEntity(Of System.UInt64)
  name.vb: SocketEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.WebSocket.SocketEntity`1
    name: SocketEntity
    nameWithType: SocketEntity
    fullName: Discord.WebSocket.SocketEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.WebSocket.SocketEntity`1
    name: SocketEntity
    nameWithType: SocketEntity
    fullName: Discord.WebSocket.SocketEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketUser
  commentId: T:Discord.WebSocket.SocketUser
  parent: Discord.WebSocket
  name: SocketUser
  nameWithType: SocketUser
  fullName: Discord.WebSocket.SocketUser
- uid: Discord.IGroupUser
  commentId: T:Discord.IGroupUser
  parent: Discord
  name: IGroupUser
  nameWithType: IGroupUser
  fullName: Discord.IGroupUser
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord.ISnowflakeEntity
  commentId: T:Discord.ISnowflakeEntity
  parent: Discord
  name: ISnowflakeEntity
  nameWithType: ISnowflakeEntity
  fullName: Discord.ISnowflakeEntity
- uid: Discord.IEntity{System.UInt64}
  commentId: T:Discord.IEntity{System.UInt64}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<UInt64>
  nameWithType: IEntity<UInt64>
  fullName: Discord.IEntity<System.UInt64>
  nameWithType.vb: IEntity(Of UInt64)
  fullName.vb: Discord.IEntity(Of System.UInt64)
  name.vb: IEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IMentionable
  commentId: T:Discord.IMentionable
  parent: Discord
  name: IMentionable
  nameWithType: IMentionable
  fullName: Discord.IMentionable
- uid: Discord.IPresence
  commentId: T:Discord.IPresence
  parent: Discord
  name: IPresence
  nameWithType: IPresence
  fullName: Discord.IPresence
- uid: Discord.IVoiceState
  commentId: T:Discord.IVoiceState
  parent: Discord
  name: IVoiceState
  nameWithType: IVoiceState
  fullName: Discord.IVoiceState
- uid: Discord.WebSocket.SocketUser.CreatedAt
  commentId: P:Discord.WebSocket.SocketUser.CreatedAt
  parent: Discord.WebSocket.SocketUser
  name: CreatedAt
  nameWithType: SocketUser.CreatedAt
  fullName: Discord.WebSocket.SocketUser.CreatedAt
- uid: Discord.WebSocket.SocketUser.Discriminator
  commentId: P:Discord.WebSocket.SocketUser.Discriminator
  parent: Discord.WebSocket.SocketUser
  name: Discriminator
  nameWithType: SocketUser.Discriminator
  fullName: Discord.WebSocket.SocketUser.Discriminator
- uid: Discord.WebSocket.SocketUser.Mention
  commentId: P:Discord.WebSocket.SocketUser.Mention
  parent: Discord.WebSocket.SocketUser
  name: Mention
  nameWithType: SocketUser.Mention
  fullName: Discord.WebSocket.SocketUser.Mention
- uid: Discord.WebSocket.SocketUser.Activity
  commentId: P:Discord.WebSocket.SocketUser.Activity
  parent: Discord.WebSocket.SocketUser
  name: Activity
  nameWithType: SocketUser.Activity
  fullName: Discord.WebSocket.SocketUser.Activity
- uid: Discord.WebSocket.SocketUser.Status
  commentId: P:Discord.WebSocket.SocketUser.Status
  parent: Discord.WebSocket.SocketUser
  name: Status
  nameWithType: SocketUser.Status
  fullName: Discord.WebSocket.SocketUser.Status
- uid: Discord.WebSocket.SocketUser.ActiveClients
  commentId: P:Discord.WebSocket.SocketUser.ActiveClients
  parent: Discord.WebSocket.SocketUser
  name: ActiveClients
  nameWithType: SocketUser.ActiveClients
  fullName: Discord.WebSocket.SocketUser.ActiveClients
- uid: Discord.WebSocket.SocketUser.MutualGuilds
  commentId: P:Discord.WebSocket.SocketUser.MutualGuilds
  parent: Discord.WebSocket.SocketUser
  name: MutualGuilds
  nameWithType: SocketUser.MutualGuilds
  fullName: Discord.WebSocket.SocketUser.MutualGuilds
- uid: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  commentId: M:Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  parent: Discord.WebSocket.SocketUser
  name: GetOrCreateDMChannelAsync(RequestOptions)
  nameWithType: SocketUser.GetOrCreateDMChannelAsync(RequestOptions)
  fullName: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
    name: GetOrCreateDMChannelAsync
    nameWithType: SocketUser.GetOrCreateDMChannelAsync
    fullName: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
    name: GetOrCreateDMChannelAsync
    nameWithType: SocketUser.GetOrCreateDMChannelAsync
    fullName: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  commentId: M:Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  parent: Discord.WebSocket.SocketUser
  isExternal: true
  name: GetAvatarUrl(ImageFormat, UInt16)
  nameWithType: SocketUser.GetAvatarUrl(ImageFormat, UInt16)
  fullName: Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat, System.UInt16)
  spec.csharp:
  - uid: Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
    name: GetAvatarUrl
    nameWithType: SocketUser.GetAvatarUrl
    fullName: Discord.WebSocket.SocketUser.GetAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.ImageFormat
    name: ImageFormat
    nameWithType: ImageFormat
    fullName: Discord.ImageFormat
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
    name: GetAvatarUrl
    nameWithType: SocketUser.GetAvatarUrl
    fullName: Discord.WebSocket.SocketUser.GetAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.ImageFormat
    name: ImageFormat
    nameWithType: ImageFormat
    fullName: Discord.ImageFormat
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  commentId: M:Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  parent: Discord.WebSocket.SocketUser
  name: GetDefaultAvatarUrl()
  nameWithType: SocketUser.GetDefaultAvatarUrl()
  fullName: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl()
  spec.csharp:
  - uid: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
    name: GetDefaultAvatarUrl
    nameWithType: SocketUser.GetDefaultAvatarUrl
    fullName: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
    name: GetDefaultAvatarUrl
    nameWithType: SocketUser.GetDefaultAvatarUrl
    fullName: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketUser.ToString
  commentId: M:Discord.WebSocket.SocketUser.ToString
  parent: Discord.WebSocket.SocketUser
  name: ToString()
  nameWithType: SocketUser.ToString()
  fullName: Discord.WebSocket.SocketUser.ToString()
  spec.csharp:
  - uid: Discord.WebSocket.SocketUser.ToString
    name: ToString
    nameWithType: SocketUser.ToString
    fullName: Discord.WebSocket.SocketUser.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.WebSocket.SocketUser.ToString
    name: ToString
    nameWithType: SocketUser.ToString
    fullName: Discord.WebSocket.SocketUser.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketEntity{System.UInt64}.Id
  commentId: P:Discord.WebSocket.SocketEntity{System.UInt64}.Id
  parent: Discord.WebSocket.SocketEntity{System.UInt64}
  definition: Discord.WebSocket.SocketEntity`1.Id
  name: Id
  nameWithType: SocketEntity<UInt64>.Id
  fullName: Discord.WebSocket.SocketEntity<System.UInt64>.Id
  nameWithType.vb: SocketEntity(Of UInt64).Id
  fullName.vb: Discord.WebSocket.SocketEntity(Of System.UInt64).Id
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.WebSocket.SocketEntity`1
  commentId: T:Discord.WebSocket.SocketEntity`1
  name: SocketEntity<T>
  nameWithType: SocketEntity<T>
  fullName: Discord.WebSocket.SocketEntity<T>
  nameWithType.vb: SocketEntity(Of T)
  fullName.vb: Discord.WebSocket.SocketEntity(Of T)
  name.vb: SocketEntity(Of T)
  spec.csharp:
  - uid: Discord.WebSocket.SocketEntity`1
    name: SocketEntity
    nameWithType: SocketEntity
    fullName: Discord.WebSocket.SocketEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.WebSocket.SocketEntity`1
    name: SocketEntity
    nameWithType: SocketEntity
    fullName: Discord.WebSocket.SocketEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketEntity`1.Id
  commentId: P:Discord.WebSocket.SocketEntity`1.Id
  name: Id
  nameWithType: SocketEntity<T>.Id
  fullName: Discord.WebSocket.SocketEntity<T>.Id
  nameWithType.vb: SocketEntity(Of T).Id
  fullName.vb: Discord.WebSocket.SocketEntity(Of T).Id
- uid: Discord.WebSocket.SocketGroupChannel
  commentId: T:Discord.WebSocket.SocketGroupChannel
  parent: Discord.WebSocket
  name: SocketGroupChannel
  nameWithType: SocketGroupChannel
  fullName: Discord.WebSocket.SocketGroupChannel
- uid: Discord.WebSocket.SocketGroupUser.Channel*
  commentId: Overload:Discord.WebSocket.SocketGroupUser.Channel
  name: Channel
  nameWithType: SocketGroupUser.Channel
  fullName: Discord.WebSocket.SocketGroupUser.Channel
- uid: Discord.WebSocket.SocketUser.IsBot
  commentId: P:Discord.WebSocket.SocketUser.IsBot
  parent: Discord.WebSocket.SocketUser
  name: IsBot
  nameWithType: SocketUser.IsBot
  fullName: Discord.WebSocket.SocketUser.IsBot
- uid: Discord.WebSocket.SocketGroupUser.IsBot*
  commentId: Overload:Discord.WebSocket.SocketGroupUser.IsBot
  name: IsBot
  nameWithType: SocketGroupUser.IsBot
  fullName: Discord.WebSocket.SocketGroupUser.IsBot
- uid: Discord.IUser.IsBot
  commentId: P:Discord.IUser.IsBot
  parent: Discord.IUser
  name: IsBot
  nameWithType: IUser.IsBot
  fullName: Discord.IUser.IsBot
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.WebSocket.SocketUser.Username
  commentId: P:Discord.WebSocket.SocketUser.Username
  parent: Discord.WebSocket.SocketUser
  name: Username
  nameWithType: SocketUser.Username
  fullName: Discord.WebSocket.SocketUser.Username
- uid: Discord.WebSocket.SocketGroupUser.Username*
  commentId: Overload:Discord.WebSocket.SocketGroupUser.Username
  name: Username
  nameWithType: SocketGroupUser.Username
  fullName: Discord.WebSocket.SocketGroupUser.Username
- uid: Discord.IUser.Username
  commentId: P:Discord.IUser.Username
  parent: Discord.IUser
  name: Username
  nameWithType: IUser.Username
  fullName: Discord.IUser.Username
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.WebSocket.SocketUser.DiscriminatorValue
  commentId: P:Discord.WebSocket.SocketUser.DiscriminatorValue
  parent: Discord.WebSocket.SocketUser
  name: DiscriminatorValue
  nameWithType: SocketUser.DiscriminatorValue
  fullName: Discord.WebSocket.SocketUser.DiscriminatorValue
- uid: Discord.WebSocket.SocketGroupUser.DiscriminatorValue*
  commentId: Overload:Discord.WebSocket.SocketGroupUser.DiscriminatorValue
  name: DiscriminatorValue
  nameWithType: SocketGroupUser.DiscriminatorValue
  fullName: Discord.WebSocket.SocketGroupUser.DiscriminatorValue
- uid: Discord.IUser.DiscriminatorValue
  commentId: P:Discord.IUser.DiscriminatorValue
  parent: Discord.IUser
  name: DiscriminatorValue
  nameWithType: IUser.DiscriminatorValue
  fullName: Discord.IUser.DiscriminatorValue
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Discord.WebSocket.SocketUser.AvatarId
  commentId: P:Discord.WebSocket.SocketUser.AvatarId
  parent: Discord.WebSocket.SocketUser
  name: AvatarId
  nameWithType: SocketUser.AvatarId
  fullName: Discord.WebSocket.SocketUser.AvatarId
- uid: Discord.WebSocket.SocketGroupUser.AvatarId*
  commentId: Overload:Discord.WebSocket.SocketGroupUser.AvatarId
  name: AvatarId
  nameWithType: SocketGroupUser.AvatarId
  fullName: Discord.WebSocket.SocketGroupUser.AvatarId
- uid: Discord.IUser.AvatarId
  commentId: P:Discord.IUser.AvatarId
  parent: Discord.IUser
  name: AvatarId
  nameWithType: IUser.AvatarId
  fullName: Discord.IUser.AvatarId
- uid: Discord.WebSocket.SocketUser.IsWebhook
  commentId: P:Discord.WebSocket.SocketUser.IsWebhook
  parent: Discord.WebSocket.SocketUser
  name: IsWebhook
  nameWithType: SocketUser.IsWebhook
  fullName: Discord.WebSocket.SocketUser.IsWebhook
- uid: Discord.WebSocket.SocketGroupUser.IsWebhook*
  commentId: Overload:Discord.WebSocket.SocketGroupUser.IsWebhook
  name: IsWebhook
  nameWithType: SocketGroupUser.IsWebhook
  fullName: Discord.WebSocket.SocketGroupUser.IsWebhook
- uid: Discord.IUser.IsWebhook
  commentId: P:Discord.IUser.IsWebhook
  parent: Discord.IUser
  name: IsWebhook
  nameWithType: IUser.IsWebhook
  fullName: Discord.IUser.IsWebhook
- uid: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsDeafened*
  commentId: Overload:Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsDeafened
  name: IVoiceState.IsDeafened
  nameWithType: SocketGroupUser.IVoiceState.IsDeafened
  fullName: Discord.WebSocket.SocketGroupUser.Discord.IVoiceState.IsDeafened
  nameWithType.vb: SocketGroupUser.Discord.IVoiceState.IsDeafened
  name.vb: Discord.IVoiceState.IsDeafened
- uid: Discord.IVoiceState.IsDeafened
  commentId: P:Discord.IVoiceState.IsDeafened
  parent: Discord.IVoiceState
  name: IsDeafened
  nameWithType: IVoiceState.IsDeafened
  fullName: Discord.IVoiceState.IsDeafened
- uid: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsMuted*
  commentId: Overload:Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsMuted
  name: IVoiceState.IsMuted
  nameWithType: SocketGroupUser.IVoiceState.IsMuted
  fullName: Discord.WebSocket.SocketGroupUser.Discord.IVoiceState.IsMuted
  nameWithType.vb: SocketGroupUser.Discord.IVoiceState.IsMuted
  name.vb: Discord.IVoiceState.IsMuted
- uid: Discord.IVoiceState.IsMuted
  commentId: P:Discord.IVoiceState.IsMuted
  parent: Discord.IVoiceState
  name: IsMuted
  nameWithType: IVoiceState.IsMuted
  fullName: Discord.IVoiceState.IsMuted
- uid: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsSelfDeafened*
  commentId: Overload:Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsSelfDeafened
  name: IVoiceState.IsSelfDeafened
  nameWithType: SocketGroupUser.IVoiceState.IsSelfDeafened
  fullName: Discord.WebSocket.SocketGroupUser.Discord.IVoiceState.IsSelfDeafened
  nameWithType.vb: SocketGroupUser.Discord.IVoiceState.IsSelfDeafened
  name.vb: Discord.IVoiceState.IsSelfDeafened
- uid: Discord.IVoiceState.IsSelfDeafened
  commentId: P:Discord.IVoiceState.IsSelfDeafened
  parent: Discord.IVoiceState
  name: IsSelfDeafened
  nameWithType: IVoiceState.IsSelfDeafened
  fullName: Discord.IVoiceState.IsSelfDeafened
- uid: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsSelfMuted*
  commentId: Overload:Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsSelfMuted
  name: IVoiceState.IsSelfMuted
  nameWithType: SocketGroupUser.IVoiceState.IsSelfMuted
  fullName: Discord.WebSocket.SocketGroupUser.Discord.IVoiceState.IsSelfMuted
  nameWithType.vb: SocketGroupUser.Discord.IVoiceState.IsSelfMuted
  name.vb: Discord.IVoiceState.IsSelfMuted
- uid: Discord.IVoiceState.IsSelfMuted
  commentId: P:Discord.IVoiceState.IsSelfMuted
  parent: Discord.IVoiceState
  name: IsSelfMuted
  nameWithType: IVoiceState.IsSelfMuted
  fullName: Discord.IVoiceState.IsSelfMuted
- uid: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsSuppressed*
  commentId: Overload:Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsSuppressed
  name: IVoiceState.IsSuppressed
  nameWithType: SocketGroupUser.IVoiceState.IsSuppressed
  fullName: Discord.WebSocket.SocketGroupUser.Discord.IVoiceState.IsSuppressed
  nameWithType.vb: SocketGroupUser.Discord.IVoiceState.IsSuppressed
  name.vb: Discord.IVoiceState.IsSuppressed
- uid: Discord.IVoiceState.IsSuppressed
  commentId: P:Discord.IVoiceState.IsSuppressed
  parent: Discord.IVoiceState
  name: IsSuppressed
  nameWithType: IVoiceState.IsSuppressed
  fullName: Discord.IVoiceState.IsSuppressed
- uid: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#VoiceChannel*
  commentId: Overload:Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#VoiceChannel
  name: IVoiceState.VoiceChannel
  nameWithType: SocketGroupUser.IVoiceState.VoiceChannel
  fullName: Discord.WebSocket.SocketGroupUser.Discord.IVoiceState.VoiceChannel
  nameWithType.vb: SocketGroupUser.Discord.IVoiceState.VoiceChannel
  name.vb: Discord.IVoiceState.VoiceChannel
- uid: Discord.IVoiceState.VoiceChannel
  commentId: P:Discord.IVoiceState.VoiceChannel
  parent: Discord.IVoiceState
  name: VoiceChannel
  nameWithType: IVoiceState.VoiceChannel
  fullName: Discord.IVoiceState.VoiceChannel
- uid: Discord.IVoiceChannel
  commentId: T:Discord.IVoiceChannel
  parent: Discord
  name: IVoiceChannel
  nameWithType: IVoiceChannel
  fullName: Discord.IVoiceChannel
- uid: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#VoiceSessionId*
  commentId: Overload:Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#VoiceSessionId
  name: IVoiceState.VoiceSessionId
  nameWithType: SocketGroupUser.IVoiceState.VoiceSessionId
  fullName: Discord.WebSocket.SocketGroupUser.Discord.IVoiceState.VoiceSessionId
  nameWithType.vb: SocketGroupUser.Discord.IVoiceState.VoiceSessionId
  name.vb: Discord.IVoiceState.VoiceSessionId
- uid: Discord.IVoiceState.VoiceSessionId
  commentId: P:Discord.IVoiceState.VoiceSessionId
  parent: Discord.IVoiceState
  name: VoiceSessionId
  nameWithType: IVoiceState.VoiceSessionId
  fullName: Discord.IVoiceState.VoiceSessionId
- uid: Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsStream*
  commentId: Overload:Discord.WebSocket.SocketGroupUser.Discord#IVoiceState#IsStream
  name: IVoiceState.IsStream
  nameWithType: SocketGroupUser.IVoiceState.IsStream
  fullName: Discord.WebSocket.SocketGroupUser.Discord.IVoiceState.IsStream
  nameWithType.vb: SocketGroupUser.Discord.IVoiceState.IsStream
  name.vb: Discord.IVoiceState.IsStream
- uid: Discord.IVoiceState.IsStream
  commentId: P:Discord.IVoiceState.IsStream
  parent: Discord.IVoiceState
  name: IsStream
  nameWithType: IVoiceState.IsStream
  fullName: Discord.IVoiceState.IsStream
