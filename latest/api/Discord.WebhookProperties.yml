### YamlMime:ManagedReference
items:
- uid: Discord.WebhookProperties
  commentId: T:Discord.WebhookProperties
  id: WebhookProperties
  parent: Discord
  children:
  - Discord.WebhookProperties.Channel
  - Discord.WebhookProperties.ChannelId
  - Discord.WebhookProperties.Image
  - Discord.WebhookProperties.Name
  langs:
  - csharp
  - vb
  name: WebhookProperties
  nameWithType: WebhookProperties
  fullName: Discord.WebhookProperties
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Webhooks/WebhookProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WebhookProperties
    path: ../src/Discord.Net.Core/Entities/Webhooks/WebhookProperties.cs
    startLine: 6
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nProperties used to modify an <xref href=\"Discord.IWebhook\" data-throw-if-not-resolved=\"false\"></xref> with the specified changes.\n"
  example: []
  syntax:
    content: public class WebhookProperties
    content.vb: Public Class WebhookProperties
  seealso:
  - linkId: Discord.IWebhook.ModifyAsync(System.Action{Discord.WebhookProperties},Discord.RequestOptions)
    commentId: M:Discord.IWebhook.ModifyAsync(System.Action{Discord.WebhookProperties},Discord.RequestOptions)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.WebhookProperties.Name
  commentId: P:Discord.WebhookProperties.Name
  id: Name
  parent: Discord.WebhookProperties
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: WebhookProperties.Name
  fullName: Discord.WebhookProperties.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Webhooks/WebhookProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Core/Entities/Webhooks/WebhookProperties.cs
    startLine: 11
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the default name of the webhook.\n"
  example: []
  syntax:
    content: public Optional<string> Name { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.String}
    content.vb: 'Public Property Name As '
  overload: Discord.WebhookProperties.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.WebhookProperties.Image
  commentId: P:Discord.WebhookProperties.Image
  id: Image
  parent: Discord.WebhookProperties
  langs:
  - csharp
  - vb
  name: Image
  nameWithType: WebhookProperties.Image
  fullName: Discord.WebhookProperties.Image
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Webhooks/WebhookProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Image
    path: ../src/Discord.Net.Core/Entities/Webhooks/WebhookProperties.cs
    startLine: 15
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the default avatar of the webhook.\n"
  example: []
  syntax:
    content: public Optional<Image?> Image { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Nullable{Discord.Image}}
    content.vb: 'Public Property Image As '
  overload: Discord.WebhookProperties.Image*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.WebhookProperties.Channel
  commentId: P:Discord.WebhookProperties.Channel
  id: Channel
  parent: Discord.WebhookProperties
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: WebhookProperties.Channel
  fullName: Discord.WebhookProperties.Channel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Webhooks/WebhookProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Channel
    path: ../src/Discord.Net.Core/Entities/Webhooks/WebhookProperties.cs
    startLine: 22
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the channel for this webhook.\n"
  remarks: "\nThis field is not used when authenticated with <xref href=\"Discord.TokenType.Webhook\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Optional<ITextChannel> Channel { get; set; }
    parameters: []
    return:
      type: Discord.Optional{Discord.ITextChannel}
    content.vb: 'Public Property Channel As '
  overload: Discord.WebhookProperties.Channel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.WebhookProperties.ChannelId
  commentId: P:Discord.WebhookProperties.ChannelId
  id: ChannelId
  parent: Discord.WebhookProperties
  langs:
  - csharp
  - vb
  name: ChannelId
  nameWithType: WebhookProperties.ChannelId
  fullName: Discord.WebhookProperties.ChannelId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Webhooks/WebhookProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelId
    path: ../src/Discord.Net.Core/Entities/Webhooks/WebhookProperties.cs
    startLine: 29
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the channel ID for this webhook.\n"
  remarks: "\nThis field is not used when authenticated with <xref href=\"Discord.TokenType.Webhook\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Optional<ulong> ChannelId { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.UInt64}
    content.vb: 'Public Property ChannelId As '
  overload: Discord.WebhookProperties.ChannelId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Discord.IWebhook
  commentId: T:Discord.IWebhook
  parent: Discord
  name: IWebhook
  nameWithType: IWebhook
  fullName: Discord.IWebhook
- uid: Discord.IWebhook.ModifyAsync(System.Action{Discord.WebhookProperties},Discord.RequestOptions)
  commentId: M:Discord.IWebhook.ModifyAsync(System.Action{Discord.WebhookProperties},Discord.RequestOptions)
  parent: Discord.IWebhook
  isExternal: true
  name: ModifyAsync(Action<WebhookProperties>, RequestOptions)
  nameWithType: IWebhook.ModifyAsync(Action<WebhookProperties>, RequestOptions)
  fullName: Discord.IWebhook.ModifyAsync(System.Action<Discord.WebhookProperties>, Discord.RequestOptions)
  nameWithType.vb: IWebhook.ModifyAsync(Action(Of WebhookProperties), RequestOptions)
  fullName.vb: Discord.IWebhook.ModifyAsync(System.Action(Of Discord.WebhookProperties), Discord.RequestOptions)
  name.vb: ModifyAsync(Action(Of WebhookProperties), RequestOptions)
  spec.csharp:
  - uid: Discord.IWebhook.ModifyAsync(System.Action{Discord.WebhookProperties},Discord.RequestOptions)
    name: ModifyAsync
    nameWithType: IWebhook.ModifyAsync
    fullName: Discord.IWebhook.ModifyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.WebhookProperties
    name: WebhookProperties
    nameWithType: WebhookProperties
    fullName: Discord.WebhookProperties
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IWebhook.ModifyAsync(System.Action{Discord.WebhookProperties},Discord.RequestOptions)
    name: ModifyAsync
    nameWithType: IWebhook.ModifyAsync
    fullName: Discord.IWebhook.ModifyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.WebhookProperties
    name: WebhookProperties
    nameWithType: WebhookProperties
    fullName: Discord.WebhookProperties
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.WebhookProperties.Name*
  commentId: Overload:Discord.WebhookProperties.Name
  name: Name
  nameWithType: WebhookProperties.Name
  fullName: Discord.WebhookProperties.Name
- uid: Discord.Optional{System.String}
  commentId: T:Discord.Optional{System.String}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<String>
  nameWithType: Optional<String>
  fullName: Discord.Optional<System.String>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Discord.Optional(Of System.String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Optional`1
  commentId: T:Discord.Optional`1
  parent: Discord
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: Discord.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: Discord.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebhookProperties.Image*
  commentId: Overload:Discord.WebhookProperties.Image
  name: Image
  nameWithType: WebhookProperties.Image
  fullName: Discord.WebhookProperties.Image
- uid: Discord.Optional{System.Nullable{Discord.Image}}
  commentId: T:Discord.Optional{System.Nullable{Discord.Image}}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<Nullable<Image>>
  nameWithType: Optional<Nullable<Image>>
  fullName: Discord.Optional<System.Nullable<Discord.Image>>
  nameWithType.vb: Optional(Of Nullable(Of Image))
  fullName.vb: Discord.Optional(Of System.Nullable(Of Discord.Image))
  name.vb: Optional(Of Nullable(Of Image))
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Image
    name: Image
    nameWithType: Image
    fullName: Discord.Image
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Image
    name: Image
    nameWithType: Image
    fullName: Discord.Image
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.TokenType.Webhook
  commentId: F:Discord.TokenType.Webhook
  isExternal: true
- uid: Discord.WebhookProperties.Channel*
  commentId: Overload:Discord.WebhookProperties.Channel
  name: Channel
  nameWithType: WebhookProperties.Channel
  fullName: Discord.WebhookProperties.Channel
- uid: Discord.Optional{Discord.ITextChannel}
  commentId: T:Discord.Optional{Discord.ITextChannel}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<ITextChannel>
  nameWithType: Optional<ITextChannel>
  fullName: Discord.Optional<Discord.ITextChannel>
  nameWithType.vb: Optional(Of ITextChannel)
  fullName.vb: Discord.Optional(Of Discord.ITextChannel)
  name.vb: Optional(Of ITextChannel)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.ITextChannel
    name: ITextChannel
    nameWithType: ITextChannel
    fullName: Discord.ITextChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.ITextChannel
    name: ITextChannel
    nameWithType: ITextChannel
    fullName: Discord.ITextChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebhookProperties.ChannelId*
  commentId: Overload:Discord.WebhookProperties.ChannelId
  name: ChannelId
  nameWithType: WebhookProperties.ChannelId
  fullName: Discord.WebhookProperties.ChannelId
- uid: Discord.Optional{System.UInt64}
  commentId: T:Discord.Optional{System.UInt64}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<UInt64>
  nameWithType: Optional<UInt64>
  fullName: Discord.Optional<System.UInt64>
  nameWithType.vb: Optional(Of UInt64)
  fullName.vb: Discord.Optional(Of System.UInt64)
  name.vb: Optional(Of UInt64)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
