### YamlMime:ManagedReference
items:
- uid: Discord.Emoji
  commentId: T:Discord.Emoji
  id: Emoji
  parent: Discord
  children:
  - Discord.Emoji.#ctor(System.String)
  - Discord.Emoji.Equals(System.Object)
  - Discord.Emoji.GetHashCode
  - Discord.Emoji.Name
  - Discord.Emoji.ToString
  langs:
  - csharp
  - vb
  name: Emoji
  nameWithType: Emoji
  fullName: Discord.Emoji
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Emotes/Emoji.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Emoji
    path: ../src/Discord.Net.Core/Entities/Emotes/Emoji.cs
    startLine: 5
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nA Unicode emoji.\n"
  example: []
  syntax:
    content: 'public class Emoji : object, IEmote'
    content.vb: >-
      Public Class Emoji
          Inherits Object
          Implements IEmote
  inheritance:
  - System.Object
  implements:
  - Discord.IEmote
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Emoji.Name
  commentId: P:Discord.Emoji.Name
  id: Name
  parent: Discord.Emoji
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Emoji.Name
  fullName: Discord.Emoji.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Emotes/Emoji.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Core/Entities/Emotes/Emoji.cs
    startLine: 10
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the display name or Unicode representation of this emote.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string representing the display name or the Unicode representation (e.g. <code>\U0001F914</code>) of this emote.\n"
    content.vb: Public ReadOnly Property Name As String
  overload: Discord.Emoji.Name*
  implements:
  - Discord.IEmote.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Emoji.ToString
  commentId: M:Discord.Emoji.ToString
  id: ToString
  parent: Discord.Emoji
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Emoji.ToString()
  fullName: Discord.Emoji.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Emotes/Emoji.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.Core/Entities/Emotes/Emoji.cs
    startLine: 17
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the Unicode representation of this emote.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA string that resolves to <xref href=\"Discord.Emoji.Name\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Overrides Function ToString As String
  overload: Discord.Emoji.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Discord.Emoji.#ctor(System.String)
  commentId: M:Discord.Emoji.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Discord.Emoji
  langs:
  - csharp
  - vb
  name: Emoji(String)
  nameWithType: Emoji.Emoji(String)
  fullName: Discord.Emoji.Emoji(System.String)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Emotes/Emoji.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Core/Entities/Emotes/Emoji.cs
    startLine: 23
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nInitializes a new <xref href=\"Discord.Emoji\" data-throw-if-not-resolved=\"false\"></xref> class with the provided Unicode.\n"
  example: []
  syntax:
    content: public Emoji(string unicode)
    parameters:
    - id: unicode
      type: System.String
      description: The pure UTF-8 encoding of an emoji.
    content.vb: Public Sub New(unicode As String)
  overload: Discord.Emoji.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Emoji.Equals(System.Object)
  commentId: M:Discord.Emoji.Equals(System.Object)
  id: Equals(System.Object)
  parent: Discord.Emoji
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Emoji.Equals(Object)
  fullName: Discord.Emoji.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Emotes/Emoji.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Equals
    path: ../src/Discord.Net.Core/Entities/Emotes/Emoji.cs
    startLine: 32
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nDetermines whether the specified emoji is equal to the current one.\n"
  example: []
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
      description: The object to compare with the current object.
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overload: Discord.Emoji.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Discord.Emoji.GetHashCode
  commentId: M:Discord.Emoji.GetHashCode
  id: GetHashCode
  parent: Discord.Emoji
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Emoji.GetHashCode()
  fullName: Discord.Emoji.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Emotes/Emoji.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetHashCode
    path: ../src/Discord.Net.Core/Entities/Emotes/Emoji.cs
    startLine: 44
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: Discord.Emoji.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.IEmote
  commentId: T:Discord.IEmote
  parent: Discord
  name: IEmote
  nameWithType: IEmote
  fullName: Discord.IEmote
- uid: Discord.Emoji.Name*
  commentId: Overload:Discord.Emoji.Name
  name: Name
  nameWithType: Emoji.Name
  fullName: Discord.Emoji.Name
- uid: Discord.IEmote.Name
  commentId: P:Discord.IEmote.Name
  parent: Discord.IEmote
  name: Name
  nameWithType: IEmote.Name
  fullName: Discord.IEmote.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Emoji.Name
  commentId: P:Discord.Emoji.Name
  isExternal: true
- uid: Discord.Emoji.ToString*
  commentId: Overload:Discord.Emoji.ToString
  name: ToString
  nameWithType: Emoji.ToString
  fullName: Discord.Emoji.ToString
- uid: Discord.Emoji
  commentId: T:Discord.Emoji
  name: Emoji
  nameWithType: Emoji
  fullName: Discord.Emoji
- uid: Discord.Emoji.#ctor*
  commentId: Overload:Discord.Emoji.#ctor
  name: Emoji
  nameWithType: Emoji.Emoji
  fullName: Discord.Emoji.Emoji
- uid: Discord.Emoji.Equals*
  commentId: Overload:Discord.Emoji.Equals
  name: Equals
  nameWithType: Emoji.Equals
  fullName: Discord.Emoji.Equals
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.Emoji.GetHashCode*
  commentId: Overload:Discord.Emoji.GetHashCode
  name: GetHashCode
  nameWithType: Emoji.GetHashCode
  fullName: Discord.Emoji.GetHashCode
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
