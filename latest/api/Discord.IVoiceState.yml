### YamlMime:ManagedReference
items:
- uid: Discord.IVoiceState
  commentId: T:Discord.IVoiceState
  id: IVoiceState
  parent: Discord
  children:
  - Discord.IVoiceState.IsDeafened
  - Discord.IVoiceState.IsMuted
  - Discord.IVoiceState.IsSelfDeafened
  - Discord.IVoiceState.IsSelfMuted
  - Discord.IVoiceState.IsSuppressed
  - Discord.IVoiceState.VoiceChannel
  - Discord.IVoiceState.VoiceSessionId
  langs:
  - csharp
  - vb
  name: IVoiceState
  nameWithType: IVoiceState
  fullName: Discord.IVoiceState
  type: Interface
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/IVoiceState.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IVoiceState
    path: ../src/Discord.Net.Core/Entities/Users/IVoiceState.cs
    startLine: 5
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nRepresents a user&apos;s voice connection status.\n"
  example: []
  syntax:
    content: public interface IVoiceState
    content.vb: Public Interface IVoiceState
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Discord.IVoiceState.IsDeafened
  commentId: P:Discord.IVoiceState.IsDeafened
  id: IsDeafened
  parent: Discord.IVoiceState
  langs:
  - csharp
  - vb
  name: IsDeafened
  nameWithType: IVoiceState.IsDeafened
  fullName: Discord.IVoiceState.IsDeafened
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/IVoiceState.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IsDeafened
    path: ../src/Discord.Net.Core/Entities/Users/IVoiceState.cs
    startLine: 14
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets a value that indicates whether this user is deafened by the guild.\n"
  example: []
  syntax:
    content: bool IsDeafened { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the user is deafened (i.e. not permitted to listen to or speak to others) by the guild;\notherwise <code>false</code>.\n"
    content.vb: ReadOnly Property IsDeafened As Boolean
  overload: Discord.IVoiceState.IsDeafened*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IVoiceState.IsMuted
  commentId: P:Discord.IVoiceState.IsMuted
  id: IsMuted
  parent: Discord.IVoiceState
  langs:
  - csharp
  - vb
  name: IsMuted
  nameWithType: IVoiceState.IsMuted
  fullName: Discord.IVoiceState.IsMuted
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/IVoiceState.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IsMuted
    path: ../src/Discord.Net.Core/Entities/Users/IVoiceState.cs
    startLine: 22
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets a value that indicates whether this user is muted (i.e. not permitted to speak via voice) by the\nguild.\n"
  example: []
  syntax:
    content: bool IsMuted { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this user is muted by the guild; otherwise <code>false</code>.\n"
    content.vb: ReadOnly Property IsMuted As Boolean
  overload: Discord.IVoiceState.IsMuted*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IVoiceState.IsSelfDeafened
  commentId: P:Discord.IVoiceState.IsSelfDeafened
  id: IsSelfDeafened
  parent: Discord.IVoiceState
  langs:
  - csharp
  - vb
  name: IsSelfDeafened
  nameWithType: IVoiceState.IsSelfDeafened
  fullName: Discord.IVoiceState.IsSelfDeafened
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/IVoiceState.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IsSelfDeafened
    path: ../src/Discord.Net.Core/Entities/Users/IVoiceState.cs
    startLine: 29
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets a value that indicates whether this user has marked themselves as deafened.\n"
  example: []
  syntax:
    content: bool IsSelfDeafened { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this user has deafened themselves (i.e. not permitted to listen to or speak to others); otherwise <code>false</code>.\n"
    content.vb: ReadOnly Property IsSelfDeafened As Boolean
  overload: Discord.IVoiceState.IsSelfDeafened*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IVoiceState.IsSelfMuted
  commentId: P:Discord.IVoiceState.IsSelfMuted
  id: IsSelfMuted
  parent: Discord.IVoiceState
  langs:
  - csharp
  - vb
  name: IsSelfMuted
  nameWithType: IVoiceState.IsSelfMuted
  fullName: Discord.IVoiceState.IsSelfMuted
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/IVoiceState.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IsSelfMuted
    path: ../src/Discord.Net.Core/Entities/Users/IVoiceState.cs
    startLine: 37
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets a value that indicates whether this user has marked themselves as muted (i.e. not permitted to\nspeak via voice).\n"
  example: []
  syntax:
    content: bool IsSelfMuted { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this user has muted themselves; otherwise <code>false</code>.\n"
    content.vb: ReadOnly Property IsSelfMuted As Boolean
  overload: Discord.IVoiceState.IsSelfMuted*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IVoiceState.IsSuppressed
  commentId: P:Discord.IVoiceState.IsSuppressed
  id: IsSuppressed
  parent: Discord.IVoiceState
  langs:
  - csharp
  - vb
  name: IsSuppressed
  nameWithType: IVoiceState.IsSuppressed
  fullName: Discord.IVoiceState.IsSuppressed
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/IVoiceState.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IsSuppressed
    path: ../src/Discord.Net.Core/Entities/Users/IVoiceState.cs
    startLine: 44
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets a value that indicates whether the user is muted by the current user.\n"
  example: []
  syntax:
    content: bool IsSuppressed { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the guild is temporarily blocking audio to/from this user; otherwise <code>false</code>.\n"
    content.vb: ReadOnly Property IsSuppressed As Boolean
  overload: Discord.IVoiceState.IsSuppressed*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IVoiceState.VoiceChannel
  commentId: P:Discord.IVoiceState.VoiceChannel
  id: VoiceChannel
  parent: Discord.IVoiceState
  langs:
  - csharp
  - vb
  name: VoiceChannel
  nameWithType: IVoiceState.VoiceChannel
  fullName: Discord.IVoiceState.VoiceChannel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/IVoiceState.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: VoiceChannel
    path: ../src/Discord.Net.Core/Entities/Users/IVoiceState.cs
    startLine: 52
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the voice channel this user is currently in.\n"
  example: []
  syntax:
    content: IVoiceChannel VoiceChannel { get; }
    parameters: []
    return:
      type: Discord.IVoiceChannel
      description: "\nA generic voice channel object representing the voice channel that the user is currently in; <code>null</code>\nif none.\n"
    content.vb: ReadOnly Property VoiceChannel As IVoiceChannel
  overload: Discord.IVoiceState.VoiceChannel*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IVoiceState.VoiceSessionId
  commentId: P:Discord.IVoiceState.VoiceSessionId
  id: VoiceSessionId
  parent: Discord.IVoiceState
  langs:
  - csharp
  - vb
  name: VoiceSessionId
  nameWithType: IVoiceState.VoiceSessionId
  fullName: Discord.IVoiceState.VoiceSessionId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/IVoiceState.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: VoiceSessionId
    path: ../src/Discord.Net.Core/Entities/Users/IVoiceState.cs
    startLine: 56
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the unique identifier for this user&apos;s voice session.\n"
  example: []
  syntax:
    content: string VoiceSessionId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property VoiceSessionId As String
  overload: Discord.IVoiceState.VoiceSessionId*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.IVoiceState.IsDeafened*
  commentId: Overload:Discord.IVoiceState.IsDeafened
  name: IsDeafened
  nameWithType: IVoiceState.IsDeafened
  fullName: Discord.IVoiceState.IsDeafened
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.IVoiceState.IsMuted*
  commentId: Overload:Discord.IVoiceState.IsMuted
  name: IsMuted
  nameWithType: IVoiceState.IsMuted
  fullName: Discord.IVoiceState.IsMuted
- uid: Discord.IVoiceState.IsSelfDeafened*
  commentId: Overload:Discord.IVoiceState.IsSelfDeafened
  name: IsSelfDeafened
  nameWithType: IVoiceState.IsSelfDeafened
  fullName: Discord.IVoiceState.IsSelfDeafened
- uid: Discord.IVoiceState.IsSelfMuted*
  commentId: Overload:Discord.IVoiceState.IsSelfMuted
  name: IsSelfMuted
  nameWithType: IVoiceState.IsSelfMuted
  fullName: Discord.IVoiceState.IsSelfMuted
- uid: Discord.IVoiceState.IsSuppressed*
  commentId: Overload:Discord.IVoiceState.IsSuppressed
  name: IsSuppressed
  nameWithType: IVoiceState.IsSuppressed
  fullName: Discord.IVoiceState.IsSuppressed
- uid: Discord.IVoiceState.VoiceChannel*
  commentId: Overload:Discord.IVoiceState.VoiceChannel
  name: VoiceChannel
  nameWithType: IVoiceState.VoiceChannel
  fullName: Discord.IVoiceState.VoiceChannel
- uid: Discord.IVoiceChannel
  commentId: T:Discord.IVoiceChannel
  parent: Discord
  name: IVoiceChannel
  nameWithType: IVoiceChannel
  fullName: Discord.IVoiceChannel
- uid: Discord.IVoiceState.VoiceSessionId*
  commentId: Overload:Discord.IVoiceState.VoiceSessionId
  name: VoiceSessionId
  nameWithType: IVoiceState.VoiceSessionId
  fullName: Discord.IVoiceState.VoiceSessionId
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
