### YamlMime:ManagedReference
items:
- uid: Discord.Rest.RestGuildChannel
  commentId: T:Discord.Rest.RestGuildChannel
  id: RestGuildChannel
  parent: Discord.Rest
  children:
  - Discord.Rest.RestGuildChannel.AddPermissionOverwriteAsync(Discord.IRole,Discord.OverwritePermissions,Discord.RequestOptions)
  - Discord.Rest.RestGuildChannel.AddPermissionOverwriteAsync(Discord.IUser,Discord.OverwritePermissions,Discord.RequestOptions)
  - Discord.Rest.RestGuildChannel.DeleteAsync(Discord.RequestOptions)
  - Discord.Rest.RestGuildChannel.Discord#IGuildChannel#Guild
  - Discord.Rest.RestGuildChannel.GetPermissionOverwrite(Discord.IRole)
  - Discord.Rest.RestGuildChannel.GetPermissionOverwrite(Discord.IUser)
  - Discord.Rest.RestGuildChannel.GuildId
  - Discord.Rest.RestGuildChannel.ModifyAsync(Action{Discord.GuildChannelProperties},Discord.RequestOptions)
  - Discord.Rest.RestGuildChannel.Name
  - Discord.Rest.RestGuildChannel.PermissionOverwrites
  - Discord.Rest.RestGuildChannel.Position
  - Discord.Rest.RestGuildChannel.RemovePermissionOverwriteAsync(Discord.IRole,Discord.RequestOptions)
  - Discord.Rest.RestGuildChannel.RemovePermissionOverwriteAsync(Discord.IUser,Discord.RequestOptions)
  - Discord.Rest.RestGuildChannel.ToString
  - Discord.Rest.RestGuildChannel.UpdateAsync(Discord.RequestOptions)
  langs:
  - csharp
  - vb
  name: RestGuildChannel
  nameWithType: RestGuildChannel
  fullName: Discord.Rest.RestGuildChannel
  type: Class
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RestGuildChannel
    path: ../src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
    startLine: 12
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nRepresents a private REST-based group channel.\n"
  example: []
  syntax:
    content: 'public class RestGuildChannel : RestChannel, IEntity<ulong>, IUpdateable, IGuildChannel, IChannel, ISnowflakeEntity, IEntity<ulong>, IDeletable'
    content.vb: >-
      Public Class RestGuildChannel
          Inherits RestChannel
          Implements IEntity(Of ULong), IUpdateable, IGuildChannel, IChannel, ISnowflakeEntity, IEntity(Of ULong), IDeletable
  inheritance:
  - System.Object
  - Discord.Rest.RestEntity{System.UInt64}
  - Discord.Rest.RestChannel
  derivedClasses:
  - Discord.Rest.RestCategoryChannel
  - Discord.Rest.RestTextChannel
  - Discord.Rest.RestVoiceChannel
  implements:
  - Discord.IEntity{System.UInt64}
  - Discord.IUpdateable
  - Discord.IGuildChannel
  - Discord.IChannel
  - Discord.ISnowflakeEntity
  - Discord.IEntity{System.UInt64}
  - Discord.IDeletable
  inheritedMembers:
  - Discord.Rest.RestChannel.CreatedAt
  - Discord.Rest.RestEntity{System.UInt64}.Id
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Rest.RestGuildChannel.PermissionOverwrites
  commentId: P:Discord.Rest.RestGuildChannel.PermissionOverwrites
  id: PermissionOverwrites
  parent: Discord.Rest.RestGuildChannel
  langs:
  - csharp
  - vb
  name: PermissionOverwrites
  nameWithType: RestGuildChannel.PermissionOverwrites
  fullName: Discord.Rest.RestGuildChannel.PermissionOverwrites
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: PermissionOverwrites
    path: ../src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
    startLine: 17
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public virtual IReadOnlyCollection<Overwrite> PermissionOverwrites { get; }
    parameters: []
    return:
      type: IReadOnlyCollection{Discord.Overwrite}
    content.vb: Public Overridable ReadOnly Property PermissionOverwrites As IReadOnlyCollection(Of Overwrite)
  overload: Discord.Rest.RestGuildChannel.PermissionOverwrites*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: Discord.Rest.RestGuildChannel.Name
  commentId: P:Discord.Rest.RestGuildChannel.Name
  id: Name
  parent: Discord.Rest.RestGuildChannel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RestGuildChannel.Name
  fullName: Discord.Rest.RestGuildChannel.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
    startLine: 21
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Discord.Rest.RestGuildChannel.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestGuildChannel.Position
  commentId: P:Discord.Rest.RestGuildChannel.Position
  id: Position
  parent: Discord.Rest.RestGuildChannel
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: RestGuildChannel.Position
  fullName: Discord.Rest.RestGuildChannel.Position
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Position
    path: ../src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
    startLine: 23
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public int Position { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Position As Integer
  overload: Discord.Rest.RestGuildChannel.Position*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestGuildChannel.GuildId
  commentId: P:Discord.Rest.RestGuildChannel.GuildId
  id: GuildId
  parent: Discord.Rest.RestGuildChannel
  langs:
  - csharp
  - vb
  name: GuildId
  nameWithType: RestGuildChannel.GuildId
  fullName: Discord.Rest.RestGuildChannel.GuildId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GuildId
    path: ../src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
    startLine: 25
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public ulong GuildId { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property GuildId As ULong
  overload: Discord.Rest.RestGuildChannel.GuildId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestGuildChannel.UpdateAsync(Discord.RequestOptions)
  commentId: M:Discord.Rest.RestGuildChannel.UpdateAsync(Discord.RequestOptions)
  id: UpdateAsync(Discord.RequestOptions)
  parent: Discord.Rest.RestGuildChannel
  langs:
  - csharp
  - vb
  name: UpdateAsync(RequestOptions)
  nameWithType: RestGuildChannel.UpdateAsync(RequestOptions)
  fullName: Discord.Rest.RestGuildChannel.UpdateAsync(Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: UpdateAsync
    path: ../src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
    startLine: 61
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public override Task UpdateAsync(RequestOptions options = null)
    parameters:
    - id: options
      type: Discord.RequestOptions
    return:
      type: Task
    content.vb: Public Overrides Function UpdateAsync(options As RequestOptions = Nothing) As Task
  overridden: Discord.Rest.RestChannel.UpdateAsync(Discord.RequestOptions)
  overload: Discord.Rest.RestGuildChannel.UpdateAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Discord.Rest.RestGuildChannel.ModifyAsync(Action{Discord.GuildChannelProperties},Discord.RequestOptions)
  commentId: M:Discord.Rest.RestGuildChannel.ModifyAsync(Action{Discord.GuildChannelProperties},Discord.RequestOptions)
  id: ModifyAsync(Action{Discord.GuildChannelProperties},Discord.RequestOptions)
  parent: Discord.Rest.RestGuildChannel
  langs:
  - csharp
  - vb
  name: ModifyAsync(Action<GuildChannelProperties>, RequestOptions)
  nameWithType: RestGuildChannel.ModifyAsync(Action<GuildChannelProperties>, RequestOptions)
  fullName: Discord.Rest.RestGuildChannel.ModifyAsync(Action<Discord.GuildChannelProperties>, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ModifyAsync
    path: ../src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
    startLine: 67
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public Task ModifyAsync(Action<GuildChannelProperties> func, RequestOptions options = null)
    parameters:
    - id: func
      type: Action{Discord.GuildChannelProperties}
    - id: options
      type: Discord.RequestOptions
    return:
      type: Task
    content.vb: Public Function ModifyAsync(func As Action(Of GuildChannelProperties), options As RequestOptions = Nothing) As Task
  overload: Discord.Rest.RestGuildChannel.ModifyAsync*
  nameWithType.vb: RestGuildChannel.ModifyAsync(Action(Of GuildChannelProperties), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Rest.RestGuildChannel.ModifyAsync(Action(Of Discord.GuildChannelProperties), Discord.RequestOptions)
  name.vb: ModifyAsync(Action(Of GuildChannelProperties), RequestOptions)
- uid: Discord.Rest.RestGuildChannel.DeleteAsync(Discord.RequestOptions)
  commentId: M:Discord.Rest.RestGuildChannel.DeleteAsync(Discord.RequestOptions)
  id: DeleteAsync(Discord.RequestOptions)
  parent: Discord.Rest.RestGuildChannel
  langs:
  - csharp
  - vb
  name: DeleteAsync(RequestOptions)
  nameWithType: RestGuildChannel.DeleteAsync(RequestOptions)
  fullName: Discord.Rest.RestGuildChannel.DeleteAsync(Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: DeleteAsync
    path: ../src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
    startLine: 73
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public Task DeleteAsync(RequestOptions options = null)
    parameters:
    - id: options
      type: Discord.RequestOptions
    return:
      type: Task
    content.vb: Public Function DeleteAsync(options As RequestOptions = Nothing) As Task
  overload: Discord.Rest.RestGuildChannel.DeleteAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Rest.RestGuildChannel.GetPermissionOverwrite(Discord.IUser)
  commentId: M:Discord.Rest.RestGuildChannel.GetPermissionOverwrite(Discord.IUser)
  id: GetPermissionOverwrite(Discord.IUser)
  parent: Discord.Rest.RestGuildChannel
  langs:
  - csharp
  - vb
  name: GetPermissionOverwrite(IUser)
  nameWithType: RestGuildChannel.GetPermissionOverwrite(IUser)
  fullName: Discord.Rest.RestGuildChannel.GetPermissionOverwrite(Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetPermissionOverwrite
    path: ../src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
    startLine: 83
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the permission overwrite for a specific user.\n"
  example: []
  syntax:
    content: public virtual OverwritePermissions? GetPermissionOverwrite(IUser user)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to get the overwrite from.
    return:
      type: System.Nullable{Discord.OverwritePermissions}
      description: "\nAn overwrite object for the targeted user; <code>null</code> if none is set.\n"
    content.vb: Public Overridable Function GetPermissionOverwrite(user As IUser) As OverwritePermissions?
  overload: Discord.Rest.RestGuildChannel.GetPermissionOverwrite*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Discord.Rest.RestGuildChannel.GetPermissionOverwrite(Discord.IRole)
  commentId: M:Discord.Rest.RestGuildChannel.GetPermissionOverwrite(Discord.IRole)
  id: GetPermissionOverwrite(Discord.IRole)
  parent: Discord.Rest.RestGuildChannel
  langs:
  - csharp
  - vb
  name: GetPermissionOverwrite(IRole)
  nameWithType: RestGuildChannel.GetPermissionOverwrite(IRole)
  fullName: Discord.Rest.RestGuildChannel.GetPermissionOverwrite(Discord.IRole)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetPermissionOverwrite
    path: ../src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
    startLine: 100
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the permission overwrite for a specific role.\n"
  example: []
  syntax:
    content: public virtual OverwritePermissions? GetPermissionOverwrite(IRole role)
    parameters:
    - id: role
      type: Discord.IRole
      description: The role to get the overwrite from.
    return:
      type: System.Nullable{Discord.OverwritePermissions}
      description: "\nAn overwrite object for the targeted role; <code>null</code> if none is set.\n"
    content.vb: Public Overridable Function GetPermissionOverwrite(role As IRole) As OverwritePermissions?
  overload: Discord.Rest.RestGuildChannel.GetPermissionOverwrite*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Discord.Rest.RestGuildChannel.AddPermissionOverwriteAsync(Discord.IUser,Discord.OverwritePermissions,Discord.RequestOptions)
  commentId: M:Discord.Rest.RestGuildChannel.AddPermissionOverwriteAsync(Discord.IUser,Discord.OverwritePermissions,Discord.RequestOptions)
  id: AddPermissionOverwriteAsync(Discord.IUser,Discord.OverwritePermissions,Discord.RequestOptions)
  parent: Discord.Rest.RestGuildChannel
  langs:
  - csharp
  - vb
  name: AddPermissionOverwriteAsync(IUser, OverwritePermissions, RequestOptions)
  nameWithType: RestGuildChannel.AddPermissionOverwriteAsync(IUser, OverwritePermissions, RequestOptions)
  fullName: Discord.Rest.RestGuildChannel.AddPermissionOverwriteAsync(Discord.IUser, Discord.OverwritePermissions, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AddPermissionOverwriteAsync
    path: ../src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
    startLine: 119
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nAdds or updates the permission overwrite for the given user.\n"
  example: []
  syntax:
    content: public virtual Task AddPermissionOverwriteAsync(IUser user, OverwritePermissions permissions, RequestOptions options = null)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to add the overwrite to.
    - id: permissions
      type: Discord.OverwritePermissions
      description: The overwrite to add to the user.
    - id: options
      type: Discord.RequestOptions
      description: The options to be used when sending the request.
    return:
      type: Task
      description: "\nA task representing the asynchronous permission operation for adding the specified permissions to the channel.\n"
    content.vb: Public Overridable Function AddPermissionOverwriteAsync(user As IUser, permissions As OverwritePermissions, options As RequestOptions = Nothing) As Task
  overload: Discord.Rest.RestGuildChannel.AddPermissionOverwriteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Discord.Rest.RestGuildChannel.AddPermissionOverwriteAsync(Discord.IRole,Discord.OverwritePermissions,Discord.RequestOptions)
  commentId: M:Discord.Rest.RestGuildChannel.AddPermissionOverwriteAsync(Discord.IRole,Discord.OverwritePermissions,Discord.RequestOptions)
  id: AddPermissionOverwriteAsync(Discord.IRole,Discord.OverwritePermissions,Discord.RequestOptions)
  parent: Discord.Rest.RestGuildChannel
  langs:
  - csharp
  - vb
  name: AddPermissionOverwriteAsync(IRole, OverwritePermissions, RequestOptions)
  nameWithType: RestGuildChannel.AddPermissionOverwriteAsync(IRole, OverwritePermissions, RequestOptions)
  fullName: Discord.Rest.RestGuildChannel.AddPermissionOverwriteAsync(Discord.IRole, Discord.OverwritePermissions, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AddPermissionOverwriteAsync
    path: ../src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
    startLine: 133
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nAdds or updates the permission overwrite for the given role.\n"
  example: []
  syntax:
    content: public virtual Task AddPermissionOverwriteAsync(IRole role, OverwritePermissions permissions, RequestOptions options = null)
    parameters:
    - id: role
      type: Discord.IRole
      description: The role to add the overwrite to.
    - id: permissions
      type: Discord.OverwritePermissions
      description: The overwrite to add to the role.
    - id: options
      type: Discord.RequestOptions
      description: The options to be used when sending the request.
    return:
      type: Task
      description: "\nA task representing the asynchronous permission operation for adding the specified permissions to the channel.\n"
    content.vb: Public Overridable Function AddPermissionOverwriteAsync(role As IRole, permissions As OverwritePermissions, options As RequestOptions = Nothing) As Task
  overload: Discord.Rest.RestGuildChannel.AddPermissionOverwriteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Discord.Rest.RestGuildChannel.RemovePermissionOverwriteAsync(Discord.IUser,Discord.RequestOptions)
  commentId: M:Discord.Rest.RestGuildChannel.RemovePermissionOverwriteAsync(Discord.IUser,Discord.RequestOptions)
  id: RemovePermissionOverwriteAsync(Discord.IUser,Discord.RequestOptions)
  parent: Discord.Rest.RestGuildChannel
  langs:
  - csharp
  - vb
  name: RemovePermissionOverwriteAsync(IUser, RequestOptions)
  nameWithType: RestGuildChannel.RemovePermissionOverwriteAsync(IUser, RequestOptions)
  fullName: Discord.Rest.RestGuildChannel.RemovePermissionOverwriteAsync(Discord.IUser, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RemovePermissionOverwriteAsync
    path: ../src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
    startLine: 147
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nRemoves the permission overwrite for the given user, if one exists.\n"
  example: []
  syntax:
    content: public virtual Task RemovePermissionOverwriteAsync(IUser user, RequestOptions options = null)
    parameters:
    - id: user
      type: Discord.IUser
      description: The user to remove the overwrite from.
    - id: options
      type: Discord.RequestOptions
      description: The options to be used when sending the request.
    return:
      type: Task
      description: "\nA task representing the asynchronous operation for removing the specified permissions from the channel.\n"
    content.vb: Public Overridable Function RemovePermissionOverwriteAsync(user As IUser, options As RequestOptions = Nothing) As Task
  overload: Discord.Rest.RestGuildChannel.RemovePermissionOverwriteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Discord.Rest.RestGuildChannel.RemovePermissionOverwriteAsync(Discord.IRole,Discord.RequestOptions)
  commentId: M:Discord.Rest.RestGuildChannel.RemovePermissionOverwriteAsync(Discord.IRole,Discord.RequestOptions)
  id: RemovePermissionOverwriteAsync(Discord.IRole,Discord.RequestOptions)
  parent: Discord.Rest.RestGuildChannel
  langs:
  - csharp
  - vb
  name: RemovePermissionOverwriteAsync(IRole, RequestOptions)
  nameWithType: RestGuildChannel.RemovePermissionOverwriteAsync(IRole, RequestOptions)
  fullName: Discord.Rest.RestGuildChannel.RemovePermissionOverwriteAsync(Discord.IRole, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RemovePermissionOverwriteAsync
    path: ../src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
    startLine: 168
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nRemoves the permission overwrite for the given role, if one exists.\n"
  example: []
  syntax:
    content: public virtual Task RemovePermissionOverwriteAsync(IRole role, RequestOptions options = null)
    parameters:
    - id: role
      type: Discord.IRole
      description: The role to remove the overwrite from.
    - id: options
      type: Discord.RequestOptions
      description: The options to be used when sending the request.
    return:
      type: Task
      description: "\nA task representing the asynchronous operation for removing the specified permissions from the channel.\n"
    content.vb: Public Overridable Function RemovePermissionOverwriteAsync(role As IRole, options As RequestOptions = Nothing) As Task
  overload: Discord.Rest.RestGuildChannel.RemovePermissionOverwriteAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Discord.Rest.RestGuildChannel.ToString
  commentId: M:Discord.Rest.RestGuildChannel.ToString
  id: ToString
  parent: Discord.Rest.RestGuildChannel
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RestGuildChannel.ToString()
  fullName: Discord.Rest.RestGuildChannel.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
    startLine: 188
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the name of this channel.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA string that is the name of this channel.\n"
    content.vb: Public Overrides Function ToString As String
  overload: Discord.Rest.RestGuildChannel.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Discord.Rest.RestGuildChannel.Discord#IGuildChannel#Guild
  commentId: P:Discord.Rest.RestGuildChannel.Discord#IGuildChannel#Guild
  id: Discord#IGuildChannel#Guild
  isEii: true
  parent: Discord.Rest.RestGuildChannel
  langs:
  - csharp
  - vb
  name: IGuildChannel.Guild
  nameWithType: RestGuildChannel.IGuildChannel.Guild
  fullName: Discord.Rest.RestGuildChannel.Discord.IGuildChannel.Guild
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IGuildChannel.Guild
    path: ../src/Discord.Net.Rest/Entities/Channels/RestGuildChannel.cs
    startLine: 192
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the guild associated with this channel.\n"
  example: []
  syntax:
    content: IGuild IGuildChannel.Guild { get; }
    parameters: []
    return:
      type: Discord.IGuild
      description: "\nA guild object that this channel belongs to.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IGuildChannel.Guild As IGuild Implements IGuildChannel.Guild
  overload: Discord.Rest.RestGuildChannel.Discord#IGuildChannel#Guild*
  implements:
  - Discord.IGuildChannel.Guild
  nameWithType.vb: RestGuildChannel.Discord.IGuildChannel.Guild
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IGuildChannel.Guild
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Rest.RestEntity{System.UInt64}
  commentId: T:Discord.Rest.RestEntity{System.UInt64}
  parent: Discord.Rest
  definition: Discord.Rest.RestEntity`1
  name: RestEntity<UInt64>
  nameWithType: RestEntity<UInt64>
  fullName: Discord.Rest.RestEntity<System.UInt64>
  nameWithType.vb: RestEntity(Of UInt64)
  fullName.vb: Discord.Rest.RestEntity(Of System.UInt64)
  name.vb: RestEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestChannel
  commentId: T:Discord.Rest.RestChannel
  parent: Discord.Rest
  name: RestChannel
  nameWithType: RestChannel
  fullName: Discord.Rest.RestChannel
- uid: Discord.IEntity{System.UInt64}
  commentId: T:Discord.IEntity{System.UInt64}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<UInt64>
  nameWithType: IEntity<UInt64>
  fullName: Discord.IEntity<System.UInt64>
  nameWithType.vb: IEntity(Of UInt64)
  fullName.vb: Discord.IEntity(Of System.UInt64)
  name.vb: IEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IUpdateable
  commentId: T:Discord.IUpdateable
  parent: Discord
  name: IUpdateable
  nameWithType: IUpdateable
  fullName: Discord.IUpdateable
- uid: Discord.IGuildChannel
  commentId: T:Discord.IGuildChannel
  parent: Discord
  name: IGuildChannel
  nameWithType: IGuildChannel
  fullName: Discord.IGuildChannel
- uid: Discord.IChannel
  commentId: T:Discord.IChannel
  parent: Discord
  name: IChannel
  nameWithType: IChannel
  fullName: Discord.IChannel
- uid: Discord.ISnowflakeEntity
  commentId: T:Discord.ISnowflakeEntity
  parent: Discord
  name: ISnowflakeEntity
  nameWithType: ISnowflakeEntity
  fullName: Discord.ISnowflakeEntity
- uid: Discord.IDeletable
  commentId: T:Discord.IDeletable
  parent: Discord
  name: IDeletable
  nameWithType: IDeletable
  fullName: Discord.IDeletable
- uid: Discord.Rest.RestChannel.CreatedAt
  commentId: P:Discord.Rest.RestChannel.CreatedAt
  parent: Discord.Rest.RestChannel
  name: CreatedAt
  nameWithType: RestChannel.CreatedAt
  fullName: Discord.Rest.RestChannel.CreatedAt
- uid: Discord.Rest.RestEntity{System.UInt64}.Id
  commentId: P:Discord.Rest.RestEntity{System.UInt64}.Id
  parent: Discord.Rest.RestEntity{System.UInt64}
  definition: Discord.Rest.RestEntity`1.Id
  name: Id
  nameWithType: RestEntity<UInt64>.Id
  fullName: Discord.Rest.RestEntity<System.UInt64>.Id
  nameWithType.vb: RestEntity(Of UInt64).Id
  fullName.vb: Discord.Rest.RestEntity(Of System.UInt64).Id
- uid: Discord.Rest.RestEntity`1
  commentId: T:Discord.Rest.RestEntity`1
  name: RestEntity<T>
  nameWithType: RestEntity<T>
  fullName: Discord.Rest.RestEntity<T>
  nameWithType.vb: RestEntity(Of T)
  fullName.vb: Discord.Rest.RestEntity(Of T)
  name.vb: RestEntity(Of T)
  spec.csharp:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Rest.RestEntity`1.Id
  commentId: P:Discord.Rest.RestEntity`1.Id
  name: Id
  nameWithType: RestEntity<T>.Id
  fullName: Discord.Rest.RestEntity<T>.Id
  nameWithType.vb: RestEntity(Of T).Id
  fullName.vb: Discord.Rest.RestEntity(Of T).Id
- uid: Discord.Rest.RestGuildChannel.PermissionOverwrites*
  commentId: Overload:Discord.Rest.RestGuildChannel.PermissionOverwrites
  name: PermissionOverwrites
  nameWithType: RestGuildChannel.PermissionOverwrites
  fullName: Discord.Rest.RestGuildChannel.PermissionOverwrites
- uid: IReadOnlyCollection{Discord.Overwrite}
  commentId: '!:IReadOnlyCollection{Discord.Overwrite}'
  definition: IReadOnlyCollection`1
  name: IReadOnlyCollection<Overwrite>
  nameWithType: IReadOnlyCollection<Overwrite>
  fullName: IReadOnlyCollection<Discord.Overwrite>
  nameWithType.vb: IReadOnlyCollection(Of Overwrite)
  fullName.vb: IReadOnlyCollection(Of Discord.Overwrite)
  name.vb: IReadOnlyCollection(Of Overwrite)
  spec.csharp:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Overwrite
    name: Overwrite
    nameWithType: Overwrite
    fullName: Discord.Overwrite
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Overwrite
    name: Overwrite
    nameWithType: Overwrite
    fullName: Discord.Overwrite
  - name: )
    nameWithType: )
    fullName: )
- uid: IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<>
  nameWithType: IReadOnlyCollection<>
  fullName: IReadOnlyCollection<>
  nameWithType.vb: IReadOnlyCollection(Of )
  fullName.vb: IReadOnlyCollection(Of )
  name.vb: IReadOnlyCollection(Of )
  spec.csharp:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestGuildChannel.Name*
  commentId: Overload:Discord.Rest.RestGuildChannel.Name
  name: Name
  nameWithType: RestGuildChannel.Name
  fullName: Discord.Rest.RestGuildChannel.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Rest.RestGuildChannel.Position*
  commentId: Overload:Discord.Rest.RestGuildChannel.Position
  name: Position
  nameWithType: RestGuildChannel.Position
  fullName: Discord.Rest.RestGuildChannel.Position
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Discord.Rest.RestGuildChannel.GuildId*
  commentId: Overload:Discord.Rest.RestGuildChannel.GuildId
  name: GuildId
  nameWithType: RestGuildChannel.GuildId
  fullName: Discord.Rest.RestGuildChannel.GuildId
- uid: System.UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.Rest.RestChannel.UpdateAsync(Discord.RequestOptions)
  commentId: M:Discord.Rest.RestChannel.UpdateAsync(Discord.RequestOptions)
  parent: Discord.Rest.RestChannel
  name: UpdateAsync(RequestOptions)
  nameWithType: RestChannel.UpdateAsync(RequestOptions)
  fullName: Discord.Rest.RestChannel.UpdateAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Rest.RestChannel.UpdateAsync(Discord.RequestOptions)
    name: UpdateAsync
    nameWithType: RestChannel.UpdateAsync
    fullName: Discord.Rest.RestChannel.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestChannel.UpdateAsync(Discord.RequestOptions)
    name: UpdateAsync
    nameWithType: RestChannel.UpdateAsync
    fullName: Discord.Rest.RestChannel.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestGuildChannel.UpdateAsync*
  commentId: Overload:Discord.Rest.RestGuildChannel.UpdateAsync
  name: UpdateAsync
  nameWithType: RestGuildChannel.UpdateAsync
  fullName: Discord.Rest.RestGuildChannel.UpdateAsync
- uid: Discord.RequestOptions
  commentId: T:Discord.RequestOptions
  parent: Discord
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: Discord.RequestOptions
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Discord.Rest.RestGuildChannel.ModifyAsync*
  commentId: Overload:Discord.Rest.RestGuildChannel.ModifyAsync
  name: ModifyAsync
  nameWithType: RestGuildChannel.ModifyAsync
  fullName: Discord.Rest.RestGuildChannel.ModifyAsync
- uid: Action{Discord.GuildChannelProperties}
  commentId: '!:Action{Discord.GuildChannelProperties}'
  definition: Action`1
  name: Action<GuildChannelProperties>
  nameWithType: Action<GuildChannelProperties>
  fullName: Action<Discord.GuildChannelProperties>
  nameWithType.vb: Action(Of GuildChannelProperties)
  fullName.vb: Action(Of Discord.GuildChannelProperties)
  name.vb: Action(Of GuildChannelProperties)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.GuildChannelProperties
    name: GuildChannelProperties
    nameWithType: GuildChannelProperties
    fullName: Discord.GuildChannelProperties
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.GuildChannelProperties
    name: GuildChannelProperties
    nameWithType: GuildChannelProperties
    fullName: Discord.GuildChannelProperties
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestGuildChannel.DeleteAsync*
  commentId: Overload:Discord.Rest.RestGuildChannel.DeleteAsync
  name: DeleteAsync
  nameWithType: RestGuildChannel.DeleteAsync
  fullName: Discord.Rest.RestGuildChannel.DeleteAsync
- uid: Discord.Rest.RestGuildChannel.GetPermissionOverwrite*
  commentId: Overload:Discord.Rest.RestGuildChannel.GetPermissionOverwrite
  name: GetPermissionOverwrite
  nameWithType: RestGuildChannel.GetPermissionOverwrite
  fullName: Discord.Rest.RestGuildChannel.GetPermissionOverwrite
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: System.Nullable{Discord.OverwritePermissions}
  commentId: '!:System.Nullable{Discord.OverwritePermissions}'
  definition: System.Nullable`1
  name: Nullable<OverwritePermissions>
  nameWithType: Nullable<OverwritePermissions>
  fullName: System.Nullable<Discord.OverwritePermissions>
  nameWithType.vb: Nullable(Of OverwritePermissions)
  fullName.vb: System.Nullable(Of Discord.OverwritePermissions)
  name.vb: Nullable(Of OverwritePermissions)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.OverwritePermissions
    name: OverwritePermissions
    nameWithType: OverwritePermissions
    fullName: Discord.OverwritePermissions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.OverwritePermissions
    name: OverwritePermissions
    nameWithType: OverwritePermissions
    fullName: Discord.OverwritePermissions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IRole
  commentId: T:Discord.IRole
  parent: Discord
  name: IRole
  nameWithType: IRole
  fullName: Discord.IRole
- uid: Discord.Rest.RestGuildChannel.AddPermissionOverwriteAsync*
  commentId: Overload:Discord.Rest.RestGuildChannel.AddPermissionOverwriteAsync
  name: AddPermissionOverwriteAsync
  nameWithType: RestGuildChannel.AddPermissionOverwriteAsync
  fullName: Discord.Rest.RestGuildChannel.AddPermissionOverwriteAsync
- uid: Discord.OverwritePermissions
  commentId: T:Discord.OverwritePermissions
  parent: Discord
  name: OverwritePermissions
  nameWithType: OverwritePermissions
  fullName: Discord.OverwritePermissions
- uid: Discord.Rest.RestGuildChannel.RemovePermissionOverwriteAsync*
  commentId: Overload:Discord.Rest.RestGuildChannel.RemovePermissionOverwriteAsync
  name: RemovePermissionOverwriteAsync
  nameWithType: RestGuildChannel.RemovePermissionOverwriteAsync
  fullName: Discord.Rest.RestGuildChannel.RemovePermissionOverwriteAsync
- uid: Discord.Rest.RestGuildChannel.ToString*
  commentId: Overload:Discord.Rest.RestGuildChannel.ToString
  name: ToString
  nameWithType: RestGuildChannel.ToString
  fullName: Discord.Rest.RestGuildChannel.ToString
- uid: Discord.Rest.RestGuildChannel.Discord#IGuildChannel#Guild*
  commentId: Overload:Discord.Rest.RestGuildChannel.Discord#IGuildChannel#Guild
  name: IGuildChannel.Guild
  nameWithType: RestGuildChannel.IGuildChannel.Guild
  fullName: Discord.Rest.RestGuildChannel.Discord.IGuildChannel.Guild
  nameWithType.vb: RestGuildChannel.Discord.IGuildChannel.Guild
  name.vb: Discord.IGuildChannel.Guild
- uid: Discord.IGuildChannel.Guild
  commentId: P:Discord.IGuildChannel.Guild
  parent: Discord.IGuildChannel
  name: Guild
  nameWithType: IGuildChannel.Guild
  fullName: Discord.IGuildChannel.Guild
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
