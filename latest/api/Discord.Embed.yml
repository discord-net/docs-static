### YamlMime:ManagedReference
items:
- uid: Discord.Embed
  commentId: T:Discord.Embed
  id: Embed
  parent: Discord
  children:
  - Discord.Embed.Author
  - Discord.Embed.Color
  - Discord.Embed.Description
  - Discord.Embed.Fields
  - Discord.Embed.Footer
  - Discord.Embed.Image
  - Discord.Embed.Length
  - Discord.Embed.Provider
  - Discord.Embed.Thumbnail
  - Discord.Embed.Timestamp
  - Discord.Embed.Title
  - Discord.Embed.ToString
  - Discord.Embed.Type
  - Discord.Embed.Url
  - Discord.Embed.Video
  langs:
  - csharp
  - vb
  name: Embed
  nameWithType: Embed
  fullName: Discord.Embed
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/Embed.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Embed
    path: ../src/Discord.Net.Core/Entities/Messages/Embed.cs
    startLine: 10
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nRepresents an embed object seen in an <xref href=\"Discord.IUserMessage\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class Embed : IEmbed'
    content.vb: >-
      Public Class Embed
          Implements IEmbed
  inheritance:
  - System.Object
  implements:
  - Discord.IEmbed
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - Discord.IEmbed.Discord.EmbedBuilderExtensions.ToEmbedBuilder
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Embed.Type
  commentId: P:Discord.Embed.Type
  id: Type
  parent: Discord.Embed
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Embed.Type
  fullName: Discord.Embed.Type
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/Embed.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Type
    path: ../src/Discord.Net.Core/Entities/Messages/Embed.cs
    startLine: 14
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the type of this embed.\n"
  example: []
  syntax:
    content: public EmbedType Type { get; }
    parameters: []
    return:
      type: Discord.EmbedType
      description: "\nThe type of the embed.\n"
    content.vb: Public ReadOnly Property Type As EmbedType
  overload: Discord.Embed.Type*
  implements:
  - Discord.IEmbed.Type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Embed.Description
  commentId: P:Discord.Embed.Description
  id: Description
  parent: Discord.Embed
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Embed.Description
  fullName: Discord.Embed.Description
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/Embed.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Description
    path: ../src/Discord.Net.Core/Entities/Messages/Embed.cs
    startLine: 17
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the description of this embed.\n"
  example: []
  syntax:
    content: public string Description { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe description field of the embed.\n"
    content.vb: Public ReadOnly Property Description As String
  overload: Discord.Embed.Description*
  implements:
  - Discord.IEmbed.Description
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Embed.Url
  commentId: P:Discord.Embed.Url
  id: Url
  parent: Discord.Embed
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: Embed.Url
  fullName: Discord.Embed.Url
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/Embed.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Url
    path: ../src/Discord.Net.Core/Entities/Messages/Embed.cs
    startLine: 19
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the title URL of this embed.\n"
  example: []
  syntax:
    content: public string Url { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the URL set in a title of the embed.\n"
    content.vb: Public ReadOnly Property Url As String
  overload: Discord.Embed.Url*
  implements:
  - Discord.IEmbed.Url
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Embed.Title
  commentId: P:Discord.Embed.Title
  id: Title
  parent: Discord.Embed
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: Embed.Title
  fullName: Discord.Embed.Title
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/Embed.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Title
    path: ../src/Discord.Net.Core/Entities/Messages/Embed.cs
    startLine: 21
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the title of this embed.\n"
  example: []
  syntax:
    content: public string Title { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe title of the embed.\n"
    content.vb: Public ReadOnly Property Title As String
  overload: Discord.Embed.Title*
  implements:
  - Discord.IEmbed.Title
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Embed.Timestamp
  commentId: P:Discord.Embed.Timestamp
  id: Timestamp
  parent: Discord.Embed
  langs:
  - csharp
  - vb
  name: Timestamp
  nameWithType: Embed.Timestamp
  fullName: Discord.Embed.Timestamp
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/Embed.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Timestamp
    path: ../src/Discord.Net.Core/Entities/Messages/Embed.cs
    startLine: 23
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the timestamp of this embed.\n"
  example: []
  syntax:
    content: public DateTimeOffset? Timestamp { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTimeOffset}
      description: "\nA <xref href=\"System.DateTimeOffset\" data-throw-if-not-resolved=\"false\"></xref> based on the timestamp present at the bottom left of the embed, or \n<code>null</code> if none is set.\n"
    content.vb: Public ReadOnly Property Timestamp As DateTimeOffset?
  overload: Discord.Embed.Timestamp*
  implements:
  - Discord.IEmbed.Timestamp
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Embed.Color
  commentId: P:Discord.Embed.Color
  id: Color
  parent: Discord.Embed
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: Embed.Color
  fullName: Discord.Embed.Color
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/Embed.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Color
    path: ../src/Discord.Net.Core/Entities/Messages/Embed.cs
    startLine: 25
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the color of this embed.\n"
  example: []
  syntax:
    content: public Color? Color { get; }
    parameters: []
    return:
      type: System.Nullable{Discord.Color}
      description: "\nThe color of the embed present on the side of the embed, or <code>null</code> if none is set.\n"
    content.vb: Public ReadOnly Property Color As Color?
  overload: Discord.Embed.Color*
  implements:
  - Discord.IEmbed.Color
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Embed.Image
  commentId: P:Discord.Embed.Image
  id: Image
  parent: Discord.Embed
  langs:
  - csharp
  - vb
  name: Image
  nameWithType: Embed.Image
  fullName: Discord.Embed.Image
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/Embed.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Image
    path: ../src/Discord.Net.Core/Entities/Messages/Embed.cs
    startLine: 27
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the image of this embed.\n"
  example: []
  syntax:
    content: public EmbedImage? Image { get; }
    parameters: []
    return:
      type: System.Nullable{Discord.EmbedImage}
      description: "\nThe image of the embed, or <code>null</code> if none is set.\n"
    content.vb: Public ReadOnly Property Image As EmbedImage?
  overload: Discord.Embed.Image*
  implements:
  - Discord.IEmbed.Image
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Embed.Video
  commentId: P:Discord.Embed.Video
  id: Video
  parent: Discord.Embed
  langs:
  - csharp
  - vb
  name: Video
  nameWithType: Embed.Video
  fullName: Discord.Embed.Video
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/Embed.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Video
    path: ../src/Discord.Net.Core/Entities/Messages/Embed.cs
    startLine: 29
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the video of this embed.\n"
  example: []
  syntax:
    content: public EmbedVideo? Video { get; }
    parameters: []
    return:
      type: System.Nullable{Discord.EmbedVideo}
      description: "\nThe video of the embed, or <code>null</code> if none is set.\n"
    content.vb: Public ReadOnly Property Video As EmbedVideo?
  overload: Discord.Embed.Video*
  implements:
  - Discord.IEmbed.Video
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Embed.Author
  commentId: P:Discord.Embed.Author
  id: Author
  parent: Discord.Embed
  langs:
  - csharp
  - vb
  name: Author
  nameWithType: Embed.Author
  fullName: Discord.Embed.Author
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/Embed.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Author
    path: ../src/Discord.Net.Core/Entities/Messages/Embed.cs
    startLine: 31
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the author field of this embed.\n"
  example: []
  syntax:
    content: public EmbedAuthor? Author { get; }
    parameters: []
    return:
      type: System.Nullable{Discord.EmbedAuthor}
      description: "\nThe author field of the embed, or <code>null</code> if none is set.\n"
    content.vb: Public ReadOnly Property Author As EmbedAuthor?
  overload: Discord.Embed.Author*
  implements:
  - Discord.IEmbed.Author
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Embed.Footer
  commentId: P:Discord.Embed.Footer
  id: Footer
  parent: Discord.Embed
  langs:
  - csharp
  - vb
  name: Footer
  nameWithType: Embed.Footer
  fullName: Discord.Embed.Footer
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/Embed.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Footer
    path: ../src/Discord.Net.Core/Entities/Messages/Embed.cs
    startLine: 33
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the footer field of this embed.\n"
  example: []
  syntax:
    content: public EmbedFooter? Footer { get; }
    parameters: []
    return:
      type: System.Nullable{Discord.EmbedFooter}
      description: "\nThe author field of the embed, or <code>null</code> if none is set.\n"
    content.vb: Public ReadOnly Property Footer As EmbedFooter?
  overload: Discord.Embed.Footer*
  implements:
  - Discord.IEmbed.Footer
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Embed.Provider
  commentId: P:Discord.Embed.Provider
  id: Provider
  parent: Discord.Embed
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: Embed.Provider
  fullName: Discord.Embed.Provider
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/Embed.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Provider
    path: ../src/Discord.Net.Core/Entities/Messages/Embed.cs
    startLine: 35
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the provider of this embed.\n"
  example: []
  syntax:
    content: public EmbedProvider? Provider { get; }
    parameters: []
    return:
      type: System.Nullable{Discord.EmbedProvider}
      description: "\nThe source of the embed, or <code>null</code> if none is set.\n"
    content.vb: Public ReadOnly Property Provider As EmbedProvider?
  overload: Discord.Embed.Provider*
  implements:
  - Discord.IEmbed.Provider
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Embed.Thumbnail
  commentId: P:Discord.Embed.Thumbnail
  id: Thumbnail
  parent: Discord.Embed
  langs:
  - csharp
  - vb
  name: Thumbnail
  nameWithType: Embed.Thumbnail
  fullName: Discord.Embed.Thumbnail
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/Embed.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Thumbnail
    path: ../src/Discord.Net.Core/Entities/Messages/Embed.cs
    startLine: 37
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the thumbnail featured in this embed.\n"
  example: []
  syntax:
    content: public EmbedThumbnail? Thumbnail { get; }
    parameters: []
    return:
      type: System.Nullable{Discord.EmbedThumbnail}
      description: "\nThe thumbnail featured in the embed, or <code>null</code> if none is set.\n"
    content.vb: Public ReadOnly Property Thumbnail As EmbedThumbnail?
  overload: Discord.Embed.Thumbnail*
  implements:
  - Discord.IEmbed.Thumbnail
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Embed.Fields
  commentId: P:Discord.Embed.Fields
  id: Fields
  parent: Discord.Embed
  langs:
  - csharp
  - vb
  name: Fields
  nameWithType: Embed.Fields
  fullName: Discord.Embed.Fields
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/Embed.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Fields
    path: ../src/Discord.Net.Core/Entities/Messages/Embed.cs
    startLine: 39
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the fields of the embed.\n"
  example: []
  syntax:
    content: public ImmutableArray<EmbedField> Fields { get; }
    parameters: []
    return:
      type: System.Collections.Immutable.ImmutableArray{Discord.EmbedField}
      description: "\nAn array of the fields of the embed.\n"
    content.vb: Public ReadOnly Property Fields As ImmutableArray(Of EmbedField)
  overload: Discord.Embed.Fields*
  implements:
  - Discord.IEmbed.Fields
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Embed.Length
  commentId: P:Discord.Embed.Length
  id: Length
  parent: Discord.Embed
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Embed.Length
  fullName: Discord.Embed.Length
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/Embed.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Length
    path: ../src/Discord.Net.Core/Entities/Messages/Embed.cs
    startLine: 78
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the total length of all embed properties.\n"
  example: []
  syntax:
    content: public int Length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Length As Integer
  overload: Discord.Embed.Length*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Embed.ToString
  commentId: M:Discord.Embed.ToString
  id: ToString
  parent: Discord.Embed
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Embed.ToString()
  fullName: Discord.Embed.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/Embed.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.Core/Entities/Messages/Embed.cs
    startLine: 94
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the title of the embed.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Discord.Embed.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Discord.IUserMessage
  commentId: T:Discord.IUserMessage
  parent: Discord
  name: IUserMessage
  nameWithType: IUserMessage
  fullName: Discord.IUserMessage
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.IEmbed
  commentId: T:Discord.IEmbed
  parent: Discord
  name: IEmbed
  nameWithType: IEmbed
  fullName: Discord.IEmbed
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEmbed.Discord.EmbedBuilderExtensions.ToEmbedBuilder
  commentId: M:Discord.EmbedBuilderExtensions.ToEmbedBuilder(Discord.IEmbed)
  parent: Discord.EmbedBuilderExtensions
  definition: Discord.EmbedBuilderExtensions.ToEmbedBuilder(Discord.IEmbed)
  name: ToEmbedBuilder()
  nameWithType: EmbedBuilderExtensions.ToEmbedBuilder()
  fullName: Discord.EmbedBuilderExtensions.ToEmbedBuilder()
  spec.csharp:
  - uid: Discord.EmbedBuilderExtensions.ToEmbedBuilder
    name: ToEmbedBuilder
    nameWithType: EmbedBuilderExtensions.ToEmbedBuilder
    fullName: Discord.EmbedBuilderExtensions.ToEmbedBuilder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.EmbedBuilderExtensions.ToEmbedBuilder
    name: ToEmbedBuilder
    nameWithType: EmbedBuilderExtensions.ToEmbedBuilder
    fullName: Discord.EmbedBuilderExtensions.ToEmbedBuilder
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.EmbedBuilderExtensions.ToEmbedBuilder(Discord.IEmbed)
  commentId: M:Discord.EmbedBuilderExtensions.ToEmbedBuilder(Discord.IEmbed)
  name: ToEmbedBuilder(IEmbed)
  nameWithType: EmbedBuilderExtensions.ToEmbedBuilder(IEmbed)
  fullName: Discord.EmbedBuilderExtensions.ToEmbedBuilder(Discord.IEmbed)
  spec.csharp:
  - uid: Discord.EmbedBuilderExtensions.ToEmbedBuilder(Discord.IEmbed)
    name: ToEmbedBuilder
    nameWithType: EmbedBuilderExtensions.ToEmbedBuilder
    fullName: Discord.EmbedBuilderExtensions.ToEmbedBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IEmbed
    name: IEmbed
    nameWithType: IEmbed
    fullName: Discord.IEmbed
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.EmbedBuilderExtensions.ToEmbedBuilder(Discord.IEmbed)
    name: ToEmbedBuilder
    nameWithType: EmbedBuilderExtensions.ToEmbedBuilder
    fullName: Discord.EmbedBuilderExtensions.ToEmbedBuilder
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IEmbed
    name: IEmbed
    nameWithType: IEmbed
    fullName: Discord.IEmbed
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedBuilderExtensions
  commentId: T:Discord.EmbedBuilderExtensions
  parent: Discord
  name: EmbedBuilderExtensions
  nameWithType: EmbedBuilderExtensions
  fullName: Discord.EmbedBuilderExtensions
- uid: Discord.Embed.Type*
  commentId: Overload:Discord.Embed.Type
  name: Type
  nameWithType: Embed.Type
  fullName: Discord.Embed.Type
- uid: Discord.IEmbed.Type
  commentId: P:Discord.IEmbed.Type
  parent: Discord.IEmbed
  name: Type
  nameWithType: IEmbed.Type
  fullName: Discord.IEmbed.Type
- uid: Discord.EmbedType
  commentId: T:Discord.EmbedType
  parent: Discord
  name: EmbedType
  nameWithType: EmbedType
  fullName: Discord.EmbedType
- uid: Discord.Embed.Description*
  commentId: Overload:Discord.Embed.Description
  name: Description
  nameWithType: Embed.Description
  fullName: Discord.Embed.Description
- uid: Discord.IEmbed.Description
  commentId: P:Discord.IEmbed.Description
  parent: Discord.IEmbed
  name: Description
  nameWithType: IEmbed.Description
  fullName: Discord.IEmbed.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Embed.Url*
  commentId: Overload:Discord.Embed.Url
  name: Url
  nameWithType: Embed.Url
  fullName: Discord.Embed.Url
- uid: Discord.IEmbed.Url
  commentId: P:Discord.IEmbed.Url
  parent: Discord.IEmbed
  name: Url
  nameWithType: IEmbed.Url
  fullName: Discord.IEmbed.Url
- uid: Discord.Embed.Title*
  commentId: Overload:Discord.Embed.Title
  name: Title
  nameWithType: Embed.Title
  fullName: Discord.Embed.Title
- uid: Discord.IEmbed.Title
  commentId: P:Discord.IEmbed.Title
  parent: Discord.IEmbed
  name: Title
  nameWithType: IEmbed.Title
  fullName: Discord.IEmbed.Title
- uid: Discord.Embed.Timestamp*
  commentId: Overload:Discord.Embed.Timestamp
  name: Timestamp
  nameWithType: Embed.Timestamp
  fullName: Discord.Embed.Timestamp
- uid: Discord.IEmbed.Timestamp
  commentId: P:Discord.IEmbed.Timestamp
  parent: Discord.IEmbed
  name: Timestamp
  nameWithType: IEmbed.Timestamp
  fullName: Discord.IEmbed.Timestamp
- uid: System.Nullable{System.DateTimeOffset}
  commentId: T:System.Nullable{System.DateTimeOffset}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<System.DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of System.DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Embed.Color*
  commentId: Overload:Discord.Embed.Color
  name: Color
  nameWithType: Embed.Color
  fullName: Discord.Embed.Color
- uid: Discord.IEmbed.Color
  commentId: P:Discord.IEmbed.Color
  parent: Discord.IEmbed
  name: Color
  nameWithType: IEmbed.Color
  fullName: Discord.IEmbed.Color
- uid: System.Nullable{Discord.Color}
  commentId: T:System.Nullable{Discord.Color}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Color>
  nameWithType: Nullable<Color>
  fullName: System.Nullable<Discord.Color>
  nameWithType.vb: Nullable(Of Color)
  fullName.vb: System.Nullable(Of Discord.Color)
  name.vb: Nullable(Of Color)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Color
    name: Color
    nameWithType: Color
    fullName: Discord.Color
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Color
    name: Color
    nameWithType: Color
    fullName: Discord.Color
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Embed.Image*
  commentId: Overload:Discord.Embed.Image
  name: Image
  nameWithType: Embed.Image
  fullName: Discord.Embed.Image
- uid: Discord.IEmbed.Image
  commentId: P:Discord.IEmbed.Image
  parent: Discord.IEmbed
  name: Image
  nameWithType: IEmbed.Image
  fullName: Discord.IEmbed.Image
- uid: System.Nullable{Discord.EmbedImage}
  commentId: T:System.Nullable{Discord.EmbedImage}
  parent: System
  definition: System.Nullable`1
  name: Nullable<EmbedImage>
  nameWithType: Nullable<EmbedImage>
  fullName: System.Nullable<Discord.EmbedImage>
  nameWithType.vb: Nullable(Of EmbedImage)
  fullName.vb: System.Nullable(Of Discord.EmbedImage)
  name.vb: Nullable(Of EmbedImage)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.EmbedImage
    name: EmbedImage
    nameWithType: EmbedImage
    fullName: Discord.EmbedImage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.EmbedImage
    name: EmbedImage
    nameWithType: EmbedImage
    fullName: Discord.EmbedImage
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Embed.Video*
  commentId: Overload:Discord.Embed.Video
  name: Video
  nameWithType: Embed.Video
  fullName: Discord.Embed.Video
- uid: Discord.IEmbed.Video
  commentId: P:Discord.IEmbed.Video
  parent: Discord.IEmbed
  name: Video
  nameWithType: IEmbed.Video
  fullName: Discord.IEmbed.Video
- uid: System.Nullable{Discord.EmbedVideo}
  commentId: T:System.Nullable{Discord.EmbedVideo}
  parent: System
  definition: System.Nullable`1
  name: Nullable<EmbedVideo>
  nameWithType: Nullable<EmbedVideo>
  fullName: System.Nullable<Discord.EmbedVideo>
  nameWithType.vb: Nullable(Of EmbedVideo)
  fullName.vb: System.Nullable(Of Discord.EmbedVideo)
  name.vb: Nullable(Of EmbedVideo)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.EmbedVideo
    name: EmbedVideo
    nameWithType: EmbedVideo
    fullName: Discord.EmbedVideo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.EmbedVideo
    name: EmbedVideo
    nameWithType: EmbedVideo
    fullName: Discord.EmbedVideo
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Embed.Author*
  commentId: Overload:Discord.Embed.Author
  name: Author
  nameWithType: Embed.Author
  fullName: Discord.Embed.Author
- uid: Discord.IEmbed.Author
  commentId: P:Discord.IEmbed.Author
  parent: Discord.IEmbed
  name: Author
  nameWithType: IEmbed.Author
  fullName: Discord.IEmbed.Author
- uid: System.Nullable{Discord.EmbedAuthor}
  commentId: T:System.Nullable{Discord.EmbedAuthor}
  parent: System
  definition: System.Nullable`1
  name: Nullable<EmbedAuthor>
  nameWithType: Nullable<EmbedAuthor>
  fullName: System.Nullable<Discord.EmbedAuthor>
  nameWithType.vb: Nullable(Of EmbedAuthor)
  fullName.vb: System.Nullable(Of Discord.EmbedAuthor)
  name.vb: Nullable(Of EmbedAuthor)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.EmbedAuthor
    name: EmbedAuthor
    nameWithType: EmbedAuthor
    fullName: Discord.EmbedAuthor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.EmbedAuthor
    name: EmbedAuthor
    nameWithType: EmbedAuthor
    fullName: Discord.EmbedAuthor
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Embed.Footer*
  commentId: Overload:Discord.Embed.Footer
  name: Footer
  nameWithType: Embed.Footer
  fullName: Discord.Embed.Footer
- uid: Discord.IEmbed.Footer
  commentId: P:Discord.IEmbed.Footer
  parent: Discord.IEmbed
  name: Footer
  nameWithType: IEmbed.Footer
  fullName: Discord.IEmbed.Footer
- uid: System.Nullable{Discord.EmbedFooter}
  commentId: T:System.Nullable{Discord.EmbedFooter}
  parent: System
  definition: System.Nullable`1
  name: Nullable<EmbedFooter>
  nameWithType: Nullable<EmbedFooter>
  fullName: System.Nullable<Discord.EmbedFooter>
  nameWithType.vb: Nullable(Of EmbedFooter)
  fullName.vb: System.Nullable(Of Discord.EmbedFooter)
  name.vb: Nullable(Of EmbedFooter)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.EmbedFooter
    name: EmbedFooter
    nameWithType: EmbedFooter
    fullName: Discord.EmbedFooter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.EmbedFooter
    name: EmbedFooter
    nameWithType: EmbedFooter
    fullName: Discord.EmbedFooter
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Embed.Provider*
  commentId: Overload:Discord.Embed.Provider
  name: Provider
  nameWithType: Embed.Provider
  fullName: Discord.Embed.Provider
- uid: Discord.IEmbed.Provider
  commentId: P:Discord.IEmbed.Provider
  parent: Discord.IEmbed
  name: Provider
  nameWithType: IEmbed.Provider
  fullName: Discord.IEmbed.Provider
- uid: System.Nullable{Discord.EmbedProvider}
  commentId: T:System.Nullable{Discord.EmbedProvider}
  parent: System
  definition: System.Nullable`1
  name: Nullable<EmbedProvider>
  nameWithType: Nullable<EmbedProvider>
  fullName: System.Nullable<Discord.EmbedProvider>
  nameWithType.vb: Nullable(Of EmbedProvider)
  fullName.vb: System.Nullable(Of Discord.EmbedProvider)
  name.vb: Nullable(Of EmbedProvider)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.EmbedProvider
    name: EmbedProvider
    nameWithType: EmbedProvider
    fullName: Discord.EmbedProvider
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.EmbedProvider
    name: EmbedProvider
    nameWithType: EmbedProvider
    fullName: Discord.EmbedProvider
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Embed.Thumbnail*
  commentId: Overload:Discord.Embed.Thumbnail
  name: Thumbnail
  nameWithType: Embed.Thumbnail
  fullName: Discord.Embed.Thumbnail
- uid: Discord.IEmbed.Thumbnail
  commentId: P:Discord.IEmbed.Thumbnail
  parent: Discord.IEmbed
  name: Thumbnail
  nameWithType: IEmbed.Thumbnail
  fullName: Discord.IEmbed.Thumbnail
- uid: System.Nullable{Discord.EmbedThumbnail}
  commentId: T:System.Nullable{Discord.EmbedThumbnail}
  parent: System
  definition: System.Nullable`1
  name: Nullable<EmbedThumbnail>
  nameWithType: Nullable<EmbedThumbnail>
  fullName: System.Nullable<Discord.EmbedThumbnail>
  nameWithType.vb: Nullable(Of EmbedThumbnail)
  fullName.vb: System.Nullable(Of Discord.EmbedThumbnail)
  name.vb: Nullable(Of EmbedThumbnail)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.EmbedThumbnail
    name: EmbedThumbnail
    nameWithType: EmbedThumbnail
    fullName: Discord.EmbedThumbnail
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.EmbedThumbnail
    name: EmbedThumbnail
    nameWithType: EmbedThumbnail
    fullName: Discord.EmbedThumbnail
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Embed.Fields*
  commentId: Overload:Discord.Embed.Fields
  name: Fields
  nameWithType: Embed.Fields
  fullName: Discord.Embed.Fields
- uid: Discord.IEmbed.Fields
  commentId: P:Discord.IEmbed.Fields
  parent: Discord.IEmbed
  name: Fields
  nameWithType: IEmbed.Fields
  fullName: Discord.IEmbed.Fields
- uid: System.Collections.Immutable.ImmutableArray{Discord.EmbedField}
  commentId: T:System.Collections.Immutable.ImmutableArray{Discord.EmbedField}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableArray`1
  name: ImmutableArray<EmbedField>
  nameWithType: ImmutableArray<EmbedField>
  fullName: System.Collections.Immutable.ImmutableArray<Discord.EmbedField>
  nameWithType.vb: ImmutableArray(Of EmbedField)
  fullName.vb: System.Collections.Immutable.ImmutableArray(Of Discord.EmbedField)
  name.vb: ImmutableArray(Of EmbedField)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.EmbedField
    name: EmbedField
    nameWithType: EmbedField
    fullName: Discord.EmbedField
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.EmbedField
    name: EmbedField
    nameWithType: EmbedField
    fullName: Discord.EmbedField
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Immutable.ImmutableArray`1
  commentId: T:System.Collections.Immutable.ImmutableArray`1
  isExternal: true
  name: ImmutableArray<T>
  nameWithType: ImmutableArray<T>
  fullName: System.Collections.Immutable.ImmutableArray<T>
  nameWithType.vb: ImmutableArray(Of T)
  fullName.vb: System.Collections.Immutable.ImmutableArray(Of T)
  name.vb: ImmutableArray(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    nameWithType: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: true
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
- uid: Discord.Embed.Length*
  commentId: Overload:Discord.Embed.Length
  name: Length
  nameWithType: Embed.Length
  fullName: Discord.Embed.Length
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Embed.ToString*
  commentId: Overload:Discord.Embed.ToString
  name: ToString
  nameWithType: Embed.ToString
  fullName: Discord.Embed.ToString
