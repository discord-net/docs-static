### YamlMime:ManagedReference
items:
- uid: Discord.WebSocket.SocketSelfUser
  commentId: T:Discord.WebSocket.SocketSelfUser
  id: SocketSelfUser
  parent: Discord.WebSocket
  children:
  - Discord.WebSocket.SocketSelfUser.AvatarId
  - Discord.WebSocket.SocketSelfUser.DiscriminatorValue
  - Discord.WebSocket.SocketSelfUser.Email
  - Discord.WebSocket.SocketSelfUser.Flags
  - Discord.WebSocket.SocketSelfUser.IsBot
  - Discord.WebSocket.SocketSelfUser.IsMfaEnabled
  - Discord.WebSocket.SocketSelfUser.IsVerified
  - Discord.WebSocket.SocketSelfUser.IsWebhook
  - Discord.WebSocket.SocketSelfUser.Locale
  - Discord.WebSocket.SocketSelfUser.ModifyAsync(Action{Discord.SelfUserProperties},Discord.RequestOptions)
  - Discord.WebSocket.SocketSelfUser.PremiumType
  - Discord.WebSocket.SocketSelfUser.Username
  langs:
  - csharp
  - vb
  name: SocketSelfUser
  nameWithType: SocketSelfUser
  fullName: Discord.WebSocket.SocketSelfUser
  type: Class
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: SocketSelfUser
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
    startLine: 11
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nRepresents the logged-in WebSocket-based user.\n"
  example: []
  syntax:
    content: 'public class SocketSelfUser : SocketUser, IEntity<ulong>, ISelfUser, IUser, ISnowflakeEntity, IEntity<ulong>, IMentionable, IPresence'
    content.vb: >-
      Public Class SocketSelfUser
          Inherits SocketUser
          Implements IEntity(Of ULong), ISelfUser, IUser, ISnowflakeEntity, IEntity(Of ULong), IMentionable, IPresence
  inheritance:
  - System.Object
  - Discord.WebSocket.SocketEntity{System.UInt64}
  - Discord.WebSocket.SocketUser
  implements:
  - Discord.IEntity{System.UInt64}
  - Discord.ISelfUser
  - Discord.IUser
  - Discord.ISnowflakeEntity
  - Discord.IEntity{System.UInt64}
  - Discord.IMentionable
  - Discord.IPresence
  inheritedMembers:
  - Discord.WebSocket.SocketUser.CreatedAt
  - Discord.WebSocket.SocketUser.Discriminator
  - Discord.WebSocket.SocketUser.Mention
  - Discord.WebSocket.SocketUser.Activity
  - Discord.WebSocket.SocketUser.Status
  - Discord.WebSocket.SocketUser.ActiveClients
  - Discord.WebSocket.SocketUser.MutualGuilds
  - Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  - Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  - Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  - Discord.WebSocket.SocketUser.ToString
  - Discord.WebSocket.SocketEntity{System.UInt64}.Id
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.WebSocket.SocketSelfUser.Email
  commentId: P:Discord.WebSocket.SocketSelfUser.Email
  id: Email
  parent: Discord.WebSocket.SocketSelfUser
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: SocketSelfUser.Email
  fullName: Discord.WebSocket.SocketSelfUser.Email
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Email
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
    startLine: 15
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public string Email { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Email As String
  overload: Discord.WebSocket.SocketSelfUser.Email*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketSelfUser.IsVerified
  commentId: P:Discord.WebSocket.SocketSelfUser.IsVerified
  id: IsVerified
  parent: Discord.WebSocket.SocketSelfUser
  langs:
  - csharp
  - vb
  name: IsVerified
  nameWithType: SocketSelfUser.IsVerified
  fullName: Discord.WebSocket.SocketSelfUser.IsVerified
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IsVerified
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
    startLine: 17
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public bool IsVerified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsVerified As Boolean
  overload: Discord.WebSocket.SocketSelfUser.IsVerified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketSelfUser.IsMfaEnabled
  commentId: P:Discord.WebSocket.SocketSelfUser.IsMfaEnabled
  id: IsMfaEnabled
  parent: Discord.WebSocket.SocketSelfUser
  langs:
  - csharp
  - vb
  name: IsMfaEnabled
  nameWithType: SocketSelfUser.IsMfaEnabled
  fullName: Discord.WebSocket.SocketSelfUser.IsMfaEnabled
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IsMfaEnabled
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
    startLine: 19
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public bool IsMfaEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMfaEnabled As Boolean
  overload: Discord.WebSocket.SocketSelfUser.IsMfaEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketSelfUser.IsBot
  commentId: P:Discord.WebSocket.SocketSelfUser.IsBot
  id: IsBot
  parent: Discord.WebSocket.SocketSelfUser
  langs:
  - csharp
  - vb
  name: IsBot
  nameWithType: SocketSelfUser.IsBot
  fullName: Discord.WebSocket.SocketSelfUser.IsBot
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IsBot
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
    startLine: 23
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public override bool IsBot { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsBot As Boolean
  overridden: Discord.WebSocket.SocketUser.IsBot
  overload: Discord.WebSocket.SocketSelfUser.IsBot*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketSelfUser.Username
  commentId: P:Discord.WebSocket.SocketSelfUser.Username
  id: Username
  parent: Discord.WebSocket.SocketSelfUser
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: SocketSelfUser.Username
  fullName: Discord.WebSocket.SocketSelfUser.Username
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Username
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
    startLine: 25
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public override string Username { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Username As String
  overridden: Discord.WebSocket.SocketUser.Username
  overload: Discord.WebSocket.SocketSelfUser.Username*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketSelfUser.DiscriminatorValue
  commentId: P:Discord.WebSocket.SocketSelfUser.DiscriminatorValue
  id: DiscriminatorValue
  parent: Discord.WebSocket.SocketSelfUser
  langs:
  - csharp
  - vb
  name: DiscriminatorValue
  nameWithType: SocketSelfUser.DiscriminatorValue
  fullName: Discord.WebSocket.SocketSelfUser.DiscriminatorValue
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: DiscriminatorValue
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
    startLine: 27
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public override ushort DiscriminatorValue { get; }
    parameters: []
    return:
      type: System.UInt16
    content.vb: Public Overrides ReadOnly Property DiscriminatorValue As UShort
  overridden: Discord.WebSocket.SocketUser.DiscriminatorValue
  overload: Discord.WebSocket.SocketSelfUser.DiscriminatorValue*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketSelfUser.AvatarId
  commentId: P:Discord.WebSocket.SocketSelfUser.AvatarId
  id: AvatarId
  parent: Discord.WebSocket.SocketSelfUser
  langs:
  - csharp
  - vb
  name: AvatarId
  nameWithType: SocketSelfUser.AvatarId
  fullName: Discord.WebSocket.SocketSelfUser.AvatarId
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: AvatarId
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
    startLine: 29
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public override string AvatarId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property AvatarId As String
  overridden: Discord.WebSocket.SocketUser.AvatarId
  overload: Discord.WebSocket.SocketSelfUser.AvatarId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketSelfUser.Flags
  commentId: P:Discord.WebSocket.SocketSelfUser.Flags
  id: Flags
  parent: Discord.WebSocket.SocketSelfUser
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: SocketSelfUser.Flags
  fullName: Discord.WebSocket.SocketSelfUser.Flags
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Flags
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
    startLine: 33
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the flags that are applied to a user&apos;s account.\n"
  remarks: "\nThis value is determined by bitwise OR-ing <xref href=\"Discord.UserProperties\" data-throw-if-not-resolved=\"false\"></xref> values together.\n"
  example: []
  syntax:
    content: public UserProperties Flags { get; }
    parameters: []
    return:
      type: Discord.UserProperties
      description: "\nThe value of flags for this user.\n"
    content.vb: Public ReadOnly Property Flags As UserProperties
  overload: Discord.WebSocket.SocketSelfUser.Flags*
  implements:
  - Discord.ISelfUser.Flags
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketSelfUser.PremiumType
  commentId: P:Discord.WebSocket.SocketSelfUser.PremiumType
  id: PremiumType
  parent: Discord.WebSocket.SocketSelfUser
  langs:
  - csharp
  - vb
  name: PremiumType
  nameWithType: SocketSelfUser.PremiumType
  fullName: Discord.WebSocket.SocketSelfUser.PremiumType
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: PremiumType
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
    startLine: 35
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the type of Nitro subscription that is active on this user&apos;s account.\n"
  remarks: "\nThis information may only be available with the identify OAuth scope.\n"
  example: []
  syntax:
    content: public PremiumType PremiumType { get; }
    parameters: []
    return:
      type: Discord.PremiumType
      description: "\nThe type of Nitro subscription the user subscribes to, if any.\n"
    content.vb: Public ReadOnly Property PremiumType As PremiumType
  overload: Discord.WebSocket.SocketSelfUser.PremiumType*
  implements:
  - Discord.ISelfUser.PremiumType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketSelfUser.Locale
  commentId: P:Discord.WebSocket.SocketSelfUser.Locale
  id: Locale
  parent: Discord.WebSocket.SocketSelfUser
  langs:
  - csharp
  - vb
  name: Locale
  nameWithType: SocketSelfUser.Locale
  fullName: Discord.WebSocket.SocketSelfUser.Locale
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Locale
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
    startLine: 37
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public string Locale { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Locale As String
  overload: Discord.WebSocket.SocketSelfUser.Locale*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketSelfUser.IsWebhook
  commentId: P:Discord.WebSocket.SocketSelfUser.IsWebhook
  id: IsWebhook
  parent: Discord.WebSocket.SocketSelfUser
  langs:
  - csharp
  - vb
  name: IsWebhook
  nameWithType: SocketSelfUser.IsWebhook
  fullName: Discord.WebSocket.SocketSelfUser.IsWebhook
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IsWebhook
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
    startLine: 40
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public override bool IsWebhook { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsWebhook As Boolean
  overridden: Discord.WebSocket.SocketUser.IsWebhook
  overload: Discord.WebSocket.SocketSelfUser.IsWebhook*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketSelfUser.ModifyAsync(Action{Discord.SelfUserProperties},Discord.RequestOptions)
  commentId: M:Discord.WebSocket.SocketSelfUser.ModifyAsync(Action{Discord.SelfUserProperties},Discord.RequestOptions)
  id: ModifyAsync(Action{Discord.SelfUserProperties},Discord.RequestOptions)
  parent: Discord.WebSocket.SocketSelfUser
  langs:
  - csharp
  - vb
  name: ModifyAsync(Action<SelfUserProperties>, RequestOptions)
  nameWithType: SocketSelfUser.ModifyAsync(Action<SelfUserProperties>, RequestOptions)
  fullName: Discord.WebSocket.SocketSelfUser.ModifyAsync(Action<Discord.SelfUserProperties>, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ModifyAsync
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketSelfUser.cs
    startLine: 90
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public Task ModifyAsync(Action<SelfUserProperties> func, RequestOptions options = null)
    parameters:
    - id: func
      type: Action{Discord.SelfUserProperties}
    - id: options
      type: Discord.RequestOptions
    return:
      type: Task
    content.vb: Public Function ModifyAsync(func As Action(Of SelfUserProperties), options As RequestOptions = Nothing) As Task
  overload: Discord.WebSocket.SocketSelfUser.ModifyAsync*
  nameWithType.vb: SocketSelfUser.ModifyAsync(Action(Of SelfUserProperties), RequestOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.WebSocket.SocketSelfUser.ModifyAsync(Action(Of Discord.SelfUserProperties), Discord.RequestOptions)
  name.vb: ModifyAsync(Action(Of SelfUserProperties), RequestOptions)
references:
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.WebSocket.SocketEntity{System.UInt64}
  commentId: T:Discord.WebSocket.SocketEntity{System.UInt64}
  parent: Discord.WebSocket
  definition: Discord.WebSocket.SocketEntity`1
  name: SocketEntity<UInt64>
  nameWithType: SocketEntity<UInt64>
  fullName: Discord.WebSocket.SocketEntity<System.UInt64>
  nameWithType.vb: SocketEntity(Of UInt64)
  fullName.vb: Discord.WebSocket.SocketEntity(Of System.UInt64)
  name.vb: SocketEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.WebSocket.SocketEntity`1
    name: SocketEntity
    nameWithType: SocketEntity
    fullName: Discord.WebSocket.SocketEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.WebSocket.SocketEntity`1
    name: SocketEntity
    nameWithType: SocketEntity
    fullName: Discord.WebSocket.SocketEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketUser
  commentId: T:Discord.WebSocket.SocketUser
  parent: Discord.WebSocket
  name: SocketUser
  nameWithType: SocketUser
  fullName: Discord.WebSocket.SocketUser
- uid: Discord.IEntity{System.UInt64}
  commentId: T:Discord.IEntity{System.UInt64}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<UInt64>
  nameWithType: IEntity<UInt64>
  fullName: Discord.IEntity<System.UInt64>
  nameWithType.vb: IEntity(Of UInt64)
  fullName.vb: Discord.IEntity(Of System.UInt64)
  name.vb: IEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.ISelfUser
  commentId: T:Discord.ISelfUser
  parent: Discord
  name: ISelfUser
  nameWithType: ISelfUser
  fullName: Discord.ISelfUser
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord.ISnowflakeEntity
  commentId: T:Discord.ISnowflakeEntity
  parent: Discord
  name: ISnowflakeEntity
  nameWithType: ISnowflakeEntity
  fullName: Discord.ISnowflakeEntity
- uid: Discord.IMentionable
  commentId: T:Discord.IMentionable
  parent: Discord
  name: IMentionable
  nameWithType: IMentionable
  fullName: Discord.IMentionable
- uid: Discord.IPresence
  commentId: T:Discord.IPresence
  parent: Discord
  name: IPresence
  nameWithType: IPresence
  fullName: Discord.IPresence
- uid: Discord.WebSocket.SocketUser.CreatedAt
  commentId: P:Discord.WebSocket.SocketUser.CreatedAt
  parent: Discord.WebSocket.SocketUser
  name: CreatedAt
  nameWithType: SocketUser.CreatedAt
  fullName: Discord.WebSocket.SocketUser.CreatedAt
- uid: Discord.WebSocket.SocketUser.Discriminator
  commentId: P:Discord.WebSocket.SocketUser.Discriminator
  parent: Discord.WebSocket.SocketUser
  name: Discriminator
  nameWithType: SocketUser.Discriminator
  fullName: Discord.WebSocket.SocketUser.Discriminator
- uid: Discord.WebSocket.SocketUser.Mention
  commentId: P:Discord.WebSocket.SocketUser.Mention
  parent: Discord.WebSocket.SocketUser
  name: Mention
  nameWithType: SocketUser.Mention
  fullName: Discord.WebSocket.SocketUser.Mention
- uid: Discord.WebSocket.SocketUser.Activity
  commentId: P:Discord.WebSocket.SocketUser.Activity
  parent: Discord.WebSocket.SocketUser
  name: Activity
  nameWithType: SocketUser.Activity
  fullName: Discord.WebSocket.SocketUser.Activity
- uid: Discord.WebSocket.SocketUser.Status
  commentId: P:Discord.WebSocket.SocketUser.Status
  parent: Discord.WebSocket.SocketUser
  name: Status
  nameWithType: SocketUser.Status
  fullName: Discord.WebSocket.SocketUser.Status
- uid: Discord.WebSocket.SocketUser.ActiveClients
  commentId: P:Discord.WebSocket.SocketUser.ActiveClients
  parent: Discord.WebSocket.SocketUser
  name: ActiveClients
  nameWithType: SocketUser.ActiveClients
  fullName: Discord.WebSocket.SocketUser.ActiveClients
- uid: Discord.WebSocket.SocketUser.MutualGuilds
  commentId: P:Discord.WebSocket.SocketUser.MutualGuilds
  parent: Discord.WebSocket.SocketUser
  name: MutualGuilds
  nameWithType: SocketUser.MutualGuilds
  fullName: Discord.WebSocket.SocketUser.MutualGuilds
- uid: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  commentId: M:Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  parent: Discord.WebSocket.SocketUser
  name: GetOrCreateDMChannelAsync(RequestOptions)
  nameWithType: SocketUser.GetOrCreateDMChannelAsync(RequestOptions)
  fullName: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
    name: GetOrCreateDMChannelAsync
    nameWithType: SocketUser.GetOrCreateDMChannelAsync
    fullName: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
    name: GetOrCreateDMChannelAsync
    nameWithType: SocketUser.GetOrCreateDMChannelAsync
    fullName: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  commentId: M:Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  parent: Discord.WebSocket.SocketUser
  isExternal: true
  name: GetAvatarUrl(ImageFormat, UInt16)
  nameWithType: SocketUser.GetAvatarUrl(ImageFormat, UInt16)
  fullName: Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat, System.UInt16)
  spec.csharp:
  - uid: Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
    name: GetAvatarUrl
    nameWithType: SocketUser.GetAvatarUrl
    fullName: Discord.WebSocket.SocketUser.GetAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.ImageFormat
    name: ImageFormat
    nameWithType: ImageFormat
    fullName: Discord.ImageFormat
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
    name: GetAvatarUrl
    nameWithType: SocketUser.GetAvatarUrl
    fullName: Discord.WebSocket.SocketUser.GetAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.ImageFormat
    name: ImageFormat
    nameWithType: ImageFormat
    fullName: Discord.ImageFormat
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  commentId: M:Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  parent: Discord.WebSocket.SocketUser
  name: GetDefaultAvatarUrl()
  nameWithType: SocketUser.GetDefaultAvatarUrl()
  fullName: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl()
  spec.csharp:
  - uid: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
    name: GetDefaultAvatarUrl
    nameWithType: SocketUser.GetDefaultAvatarUrl
    fullName: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
    name: GetDefaultAvatarUrl
    nameWithType: SocketUser.GetDefaultAvatarUrl
    fullName: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketUser.ToString
  commentId: M:Discord.WebSocket.SocketUser.ToString
  parent: Discord.WebSocket.SocketUser
  name: ToString()
  nameWithType: SocketUser.ToString()
  fullName: Discord.WebSocket.SocketUser.ToString()
  spec.csharp:
  - uid: Discord.WebSocket.SocketUser.ToString
    name: ToString
    nameWithType: SocketUser.ToString
    fullName: Discord.WebSocket.SocketUser.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.WebSocket.SocketUser.ToString
    name: ToString
    nameWithType: SocketUser.ToString
    fullName: Discord.WebSocket.SocketUser.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketEntity{System.UInt64}.Id
  commentId: P:Discord.WebSocket.SocketEntity{System.UInt64}.Id
  parent: Discord.WebSocket.SocketEntity{System.UInt64}
  definition: Discord.WebSocket.SocketEntity`1.Id
  name: Id
  nameWithType: SocketEntity<UInt64>.Id
  fullName: Discord.WebSocket.SocketEntity<System.UInt64>.Id
  nameWithType.vb: SocketEntity(Of UInt64).Id
  fullName.vb: Discord.WebSocket.SocketEntity(Of System.UInt64).Id
- uid: Discord.WebSocket.SocketEntity`1
  commentId: T:Discord.WebSocket.SocketEntity`1
  name: SocketEntity<T>
  nameWithType: SocketEntity<T>
  fullName: Discord.WebSocket.SocketEntity<T>
  nameWithType.vb: SocketEntity(Of T)
  fullName.vb: Discord.WebSocket.SocketEntity(Of T)
  name.vb: SocketEntity(Of T)
  spec.csharp:
  - uid: Discord.WebSocket.SocketEntity`1
    name: SocketEntity
    nameWithType: SocketEntity
    fullName: Discord.WebSocket.SocketEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.WebSocket.SocketEntity`1
    name: SocketEntity
    nameWithType: SocketEntity
    fullName: Discord.WebSocket.SocketEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.WebSocket.SocketEntity`1.Id
  commentId: P:Discord.WebSocket.SocketEntity`1.Id
  name: Id
  nameWithType: SocketEntity<T>.Id
  fullName: Discord.WebSocket.SocketEntity<T>.Id
  nameWithType.vb: SocketEntity(Of T).Id
  fullName.vb: Discord.WebSocket.SocketEntity(Of T).Id
- uid: Discord.WebSocket.SocketSelfUser.Email*
  commentId: Overload:Discord.WebSocket.SocketSelfUser.Email
  name: Email
  nameWithType: SocketSelfUser.Email
  fullName: Discord.WebSocket.SocketSelfUser.Email
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.WebSocket.SocketSelfUser.IsVerified*
  commentId: Overload:Discord.WebSocket.SocketSelfUser.IsVerified
  name: IsVerified
  nameWithType: SocketSelfUser.IsVerified
  fullName: Discord.WebSocket.SocketSelfUser.IsVerified
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.WebSocket.SocketSelfUser.IsMfaEnabled*
  commentId: Overload:Discord.WebSocket.SocketSelfUser.IsMfaEnabled
  name: IsMfaEnabled
  nameWithType: SocketSelfUser.IsMfaEnabled
  fullName: Discord.WebSocket.SocketSelfUser.IsMfaEnabled
- uid: Discord.WebSocket.SocketUser.IsBot
  commentId: P:Discord.WebSocket.SocketUser.IsBot
  parent: Discord.WebSocket.SocketUser
  name: IsBot
  nameWithType: SocketUser.IsBot
  fullName: Discord.WebSocket.SocketUser.IsBot
- uid: Discord.WebSocket.SocketSelfUser.IsBot*
  commentId: Overload:Discord.WebSocket.SocketSelfUser.IsBot
  name: IsBot
  nameWithType: SocketSelfUser.IsBot
  fullName: Discord.WebSocket.SocketSelfUser.IsBot
- uid: Discord.WebSocket.SocketUser.Username
  commentId: P:Discord.WebSocket.SocketUser.Username
  parent: Discord.WebSocket.SocketUser
  name: Username
  nameWithType: SocketUser.Username
  fullName: Discord.WebSocket.SocketUser.Username
- uid: Discord.WebSocket.SocketSelfUser.Username*
  commentId: Overload:Discord.WebSocket.SocketSelfUser.Username
  name: Username
  nameWithType: SocketSelfUser.Username
  fullName: Discord.WebSocket.SocketSelfUser.Username
- uid: Discord.WebSocket.SocketUser.DiscriminatorValue
  commentId: P:Discord.WebSocket.SocketUser.DiscriminatorValue
  parent: Discord.WebSocket.SocketUser
  name: DiscriminatorValue
  nameWithType: SocketUser.DiscriminatorValue
  fullName: Discord.WebSocket.SocketUser.DiscriminatorValue
- uid: Discord.WebSocket.SocketSelfUser.DiscriminatorValue*
  commentId: Overload:Discord.WebSocket.SocketSelfUser.DiscriminatorValue
  name: DiscriminatorValue
  nameWithType: SocketSelfUser.DiscriminatorValue
  fullName: Discord.WebSocket.SocketSelfUser.DiscriminatorValue
- uid: System.UInt16
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Discord.WebSocket.SocketUser.AvatarId
  commentId: P:Discord.WebSocket.SocketUser.AvatarId
  parent: Discord.WebSocket.SocketUser
  name: AvatarId
  nameWithType: SocketUser.AvatarId
  fullName: Discord.WebSocket.SocketUser.AvatarId
- uid: Discord.WebSocket.SocketSelfUser.AvatarId*
  commentId: Overload:Discord.WebSocket.SocketSelfUser.AvatarId
  name: AvatarId
  nameWithType: SocketSelfUser.AvatarId
  fullName: Discord.WebSocket.SocketSelfUser.AvatarId
- uid: Discord.WebSocket.SocketSelfUser.Flags*
  commentId: Overload:Discord.WebSocket.SocketSelfUser.Flags
  name: Flags
  nameWithType: SocketSelfUser.Flags
  fullName: Discord.WebSocket.SocketSelfUser.Flags
- uid: Discord.ISelfUser.Flags
  commentId: P:Discord.ISelfUser.Flags
  parent: Discord.ISelfUser
  name: Flags
  nameWithType: ISelfUser.Flags
  fullName: Discord.ISelfUser.Flags
- uid: Discord.UserProperties
  commentId: T:Discord.UserProperties
  parent: Discord
  name: UserProperties
  nameWithType: UserProperties
  fullName: Discord.UserProperties
- uid: Discord.WebSocket.SocketSelfUser.PremiumType*
  commentId: Overload:Discord.WebSocket.SocketSelfUser.PremiumType
  name: PremiumType
  nameWithType: SocketSelfUser.PremiumType
  fullName: Discord.WebSocket.SocketSelfUser.PremiumType
- uid: Discord.ISelfUser.PremiumType
  commentId: P:Discord.ISelfUser.PremiumType
  parent: Discord.ISelfUser
  name: PremiumType
  nameWithType: ISelfUser.PremiumType
  fullName: Discord.ISelfUser.PremiumType
- uid: Discord.PremiumType
  commentId: T:Discord.PremiumType
  parent: Discord
  name: PremiumType
  nameWithType: PremiumType
  fullName: Discord.PremiumType
- uid: Discord.WebSocket.SocketSelfUser.Locale*
  commentId: Overload:Discord.WebSocket.SocketSelfUser.Locale
  name: Locale
  nameWithType: SocketSelfUser.Locale
  fullName: Discord.WebSocket.SocketSelfUser.Locale
- uid: Discord.WebSocket.SocketUser.IsWebhook
  commentId: P:Discord.WebSocket.SocketUser.IsWebhook
  parent: Discord.WebSocket.SocketUser
  name: IsWebhook
  nameWithType: SocketUser.IsWebhook
  fullName: Discord.WebSocket.SocketUser.IsWebhook
- uid: Discord.WebSocket.SocketSelfUser.IsWebhook*
  commentId: Overload:Discord.WebSocket.SocketSelfUser.IsWebhook
  name: IsWebhook
  nameWithType: SocketSelfUser.IsWebhook
  fullName: Discord.WebSocket.SocketSelfUser.IsWebhook
- uid: Discord.WebSocket.SocketSelfUser.ModifyAsync*
  commentId: Overload:Discord.WebSocket.SocketSelfUser.ModifyAsync
  name: ModifyAsync
  nameWithType: SocketSelfUser.ModifyAsync
  fullName: Discord.WebSocket.SocketSelfUser.ModifyAsync
- uid: Action{Discord.SelfUserProperties}
  commentId: '!:Action{Discord.SelfUserProperties}'
  definition: Action`1
  name: Action<SelfUserProperties>
  nameWithType: Action<SelfUserProperties>
  fullName: Action<Discord.SelfUserProperties>
  nameWithType.vb: Action(Of SelfUserProperties)
  fullName.vb: Action(Of Discord.SelfUserProperties)
  name.vb: Action(Of SelfUserProperties)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.SelfUserProperties
    name: SelfUserProperties
    nameWithType: SelfUserProperties
    fullName: Discord.SelfUserProperties
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.SelfUserProperties
    name: SelfUserProperties
    nameWithType: SelfUserProperties
    fullName: Discord.SelfUserProperties
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.RequestOptions
  commentId: T:Discord.RequestOptions
  parent: Discord
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: Discord.RequestOptions
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
