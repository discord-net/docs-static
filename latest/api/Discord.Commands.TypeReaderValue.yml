### YamlMime:ManagedReference
items:
- uid: Discord.Commands.TypeReaderValue
  commentId: T:Discord.Commands.TypeReaderValue
  id: TypeReaderValue
  parent: Discord.Commands
  children:
  - Discord.Commands.TypeReaderValue.#ctor(System.Object,System.Single)
  - Discord.Commands.TypeReaderValue.Score
  - Discord.Commands.TypeReaderValue.ToString
  - Discord.Commands.TypeReaderValue.Value
  langs:
  - csharp
  - vb
  name: TypeReaderValue
  nameWithType: TypeReaderValue
  fullName: Discord.Commands.TypeReaderValue
  type: Struct
  source:
    remote:
      path: src/Discord.Net.Commands/Results/TypeReaderResult.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: TypeReaderValue
    path: ../src/Discord.Net.Commands/Results/TypeReaderResult.cs
    startLine: 8
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  syntax:
    content: public struct TypeReaderValue
    content.vb: Public Structure TypeReaderValue
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Discord.Commands.TypeReaderValue.Value
  commentId: P:Discord.Commands.TypeReaderValue.Value
  id: Value
  parent: Discord.Commands.TypeReaderValue
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: TypeReaderValue.Value
  fullName: Discord.Commands.TypeReaderValue.Value
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Results/TypeReaderResult.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Value
    path: ../src/Discord.Net.Commands/Results/TypeReaderResult.cs
    startLine: 11
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  syntax:
    content: public object Value { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Value As Object
  overload: Discord.Commands.TypeReaderValue.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.TypeReaderValue.Score
  commentId: P:Discord.Commands.TypeReaderValue.Score
  id: Score
  parent: Discord.Commands.TypeReaderValue
  langs:
  - csharp
  - vb
  name: Score
  nameWithType: TypeReaderValue.Score
  fullName: Discord.Commands.TypeReaderValue.Score
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Results/TypeReaderResult.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Score
    path: ../src/Discord.Net.Commands/Results/TypeReaderResult.cs
    startLine: 12
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  syntax:
    content: public float Score { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Score As Single
  overload: Discord.Commands.TypeReaderValue.Score*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.TypeReaderValue.#ctor(System.Object,System.Single)
  commentId: M:Discord.Commands.TypeReaderValue.#ctor(System.Object,System.Single)
  id: '#ctor(System.Object,System.Single)'
  parent: Discord.Commands.TypeReaderValue
  langs:
  - csharp
  - vb
  name: TypeReaderValue(Object, Single)
  nameWithType: TypeReaderValue.TypeReaderValue(Object, Single)
  fullName: Discord.Commands.TypeReaderValue.TypeReaderValue(System.Object, System.Single)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Commands/Results/TypeReaderResult.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Commands/Results/TypeReaderResult.cs
    startLine: 14
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  syntax:
    content: public TypeReaderValue(object value, float score)
    parameters:
    - id: value
      type: System.Object
    - id: score
      type: System.Single
    content.vb: Public Sub New(value As Object, score As Single)
  overload: Discord.Commands.TypeReaderValue.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.TypeReaderValue.ToString
  commentId: M:Discord.Commands.TypeReaderValue.ToString
  id: ToString
  parent: Discord.Commands.TypeReaderValue
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TypeReaderValue.ToString()
  fullName: Discord.Commands.TypeReaderValue.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Results/TypeReaderResult.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.Commands/Results/TypeReaderResult.cs
    startLine: 20
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Discord.Commands.TypeReaderValue.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Discord.Commands
  commentId: N:Discord.Commands
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Commands.TypeReaderValue.Value*
  commentId: Overload:Discord.Commands.TypeReaderValue.Value
  name: Value
  nameWithType: TypeReaderValue.Value
  fullName: Discord.Commands.TypeReaderValue.Value
- uid: Discord.Commands.TypeReaderValue.Score*
  commentId: Overload:Discord.Commands.TypeReaderValue.Score
  name: Score
  nameWithType: TypeReaderValue.Score
  fullName: Discord.Commands.TypeReaderValue.Score
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Discord.Commands.TypeReaderValue.#ctor*
  commentId: Overload:Discord.Commands.TypeReaderValue.#ctor
  name: TypeReaderValue
  nameWithType: TypeReaderValue.TypeReaderValue
  fullName: Discord.Commands.TypeReaderValue.TypeReaderValue
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Commands.TypeReaderValue.ToString*
  commentId: Overload:Discord.Commands.TypeReaderValue.ToString
  name: ToString
  nameWithType: TypeReaderValue.ToString
  fullName: Discord.Commands.TypeReaderValue.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
