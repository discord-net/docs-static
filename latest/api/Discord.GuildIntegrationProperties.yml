### YamlMime:ManagedReference
items:
- uid: Discord.GuildIntegrationProperties
  commentId: T:Discord.GuildIntegrationProperties
  id: GuildIntegrationProperties
  parent: Discord
  children:
  - Discord.GuildIntegrationProperties.EnableEmoticons
  - Discord.GuildIntegrationProperties.ExpireBehavior
  - Discord.GuildIntegrationProperties.ExpireGracePeriod
  langs:
  - csharp
  - vb
  name: GuildIntegrationProperties
  nameWithType: GuildIntegrationProperties
  fullName: Discord.GuildIntegrationProperties
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildIntegrationProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GuildIntegrationProperties
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildIntegrationProperties.cs
    startLine: 5
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nProvides properties used to modify an <xref href=\"Discord.IGuildIntegration\" data-throw-if-not-resolved=\"false\"></xref> with the specified changes.\n"
  example: []
  syntax:
    content: 'public class GuildIntegrationProperties : object'
    content.vb: >-
      Public Class GuildIntegrationProperties
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.GuildIntegrationProperties.ExpireBehavior
  commentId: P:Discord.GuildIntegrationProperties.ExpireBehavior
  id: ExpireBehavior
  parent: Discord.GuildIntegrationProperties
  langs:
  - csharp
  - vb
  name: ExpireBehavior
  nameWithType: GuildIntegrationProperties.ExpireBehavior
  fullName: Discord.GuildIntegrationProperties.ExpireBehavior
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildIntegrationProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ExpireBehavior
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildIntegrationProperties.cs
    startLine: 10
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the behavior when an integration subscription lapses.\n"
  example: []
  syntax:
    content: public Optional<int> ExpireBehavior { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Int32}
    content.vb: 'Public Property ExpireBehavior As '
  overload: Discord.GuildIntegrationProperties.ExpireBehavior*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildIntegrationProperties.ExpireGracePeriod
  commentId: P:Discord.GuildIntegrationProperties.ExpireGracePeriod
  id: ExpireGracePeriod
  parent: Discord.GuildIntegrationProperties
  langs:
  - csharp
  - vb
  name: ExpireGracePeriod
  nameWithType: GuildIntegrationProperties.ExpireGracePeriod
  fullName: Discord.GuildIntegrationProperties.ExpireGracePeriod
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildIntegrationProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ExpireGracePeriod
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildIntegrationProperties.cs
    startLine: 14
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the period (in seconds) where the integration will ignore lapsed subscriptions.\n"
  example: []
  syntax:
    content: public Optional<int> ExpireGracePeriod { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Int32}
    content.vb: 'Public Property ExpireGracePeriod As '
  overload: Discord.GuildIntegrationProperties.ExpireGracePeriod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildIntegrationProperties.EnableEmoticons
  commentId: P:Discord.GuildIntegrationProperties.EnableEmoticons
  id: EnableEmoticons
  parent: Discord.GuildIntegrationProperties
  langs:
  - csharp
  - vb
  name: EnableEmoticons
  nameWithType: GuildIntegrationProperties.EnableEmoticons
  fullName: Discord.GuildIntegrationProperties.EnableEmoticons
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildIntegrationProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: EnableEmoticons
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildIntegrationProperties.cs
    startLine: 18
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets whether emoticons should be synced for this integration.\n"
  example: []
  syntax:
    content: public Optional<bool> EnableEmoticons { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Boolean}
    content.vb: 'Public Property EnableEmoticons As '
  overload: Discord.GuildIntegrationProperties.EnableEmoticons*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Discord.IGuildIntegration
  commentId: T:Discord.IGuildIntegration
  parent: Discord
  name: IGuildIntegration
  nameWithType: IGuildIntegration
  fullName: Discord.IGuildIntegration
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.GuildIntegrationProperties.ExpireBehavior*
  commentId: Overload:Discord.GuildIntegrationProperties.ExpireBehavior
  name: ExpireBehavior
  nameWithType: GuildIntegrationProperties.ExpireBehavior
  fullName: Discord.GuildIntegrationProperties.ExpireBehavior
- uid: Discord.Optional{System.Int32}
  commentId: T:Discord.Optional{System.Int32}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<Int32>
  nameWithType: Optional<Int32>
  fullName: Discord.Optional<System.Int32>
  nameWithType.vb: Optional(Of Int32)
  fullName.vb: Discord.Optional(Of System.Int32)
  name.vb: Optional(Of Int32)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Optional`1
  commentId: T:Discord.Optional`1
  parent: Discord
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: Discord.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: Discord.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildIntegrationProperties.ExpireGracePeriod*
  commentId: Overload:Discord.GuildIntegrationProperties.ExpireGracePeriod
  name: ExpireGracePeriod
  nameWithType: GuildIntegrationProperties.ExpireGracePeriod
  fullName: Discord.GuildIntegrationProperties.ExpireGracePeriod
- uid: Discord.GuildIntegrationProperties.EnableEmoticons*
  commentId: Overload:Discord.GuildIntegrationProperties.EnableEmoticons
  name: EnableEmoticons
  nameWithType: GuildIntegrationProperties.EnableEmoticons
  fullName: Discord.GuildIntegrationProperties.EnableEmoticons
- uid: Discord.Optional{System.Boolean}
  commentId: T:Discord.Optional{System.Boolean}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<Boolean>
  nameWithType: Optional<Boolean>
  fullName: Discord.Optional<System.Boolean>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: Discord.Optional(Of System.Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
