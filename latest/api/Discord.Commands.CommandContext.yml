### YamlMime:ManagedReference
items:
- uid: Discord.Commands.CommandContext
  commentId: T:Discord.Commands.CommandContext
  id: CommandContext
  parent: Discord.Commands
  children:
  - Discord.Commands.CommandContext.#ctor(Discord.IDiscordClient,Discord.IUserMessage)
  - Discord.Commands.CommandContext.Channel
  - Discord.Commands.CommandContext.Client
  - Discord.Commands.CommandContext.Guild
  - Discord.Commands.CommandContext.IsPrivate
  - Discord.Commands.CommandContext.Message
  - Discord.Commands.CommandContext.User
  langs:
  - csharp
  - vb
  name: CommandContext
  nameWithType: CommandContext
  fullName: Discord.Commands.CommandContext
  type: Class
  source:
    remote:
      path: src/Discord.Net.Commands/CommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: CommandContext
    path: ../src/Discord.Net.Commands/CommandContext.cs
    startLine: 3
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: 'The context of a command which may contain the client, user, guild, channel, and message. '
  example: []
  syntax:
    content: 'public class CommandContext : object, ICommandContext'
    content.vb: >-
      Public Class CommandContext
          Inherits Object
          Implements ICommandContext
  inheritance:
  - System.Object
  implements:
  - Discord.Commands.ICommandContext
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Commands.CommandContext.Client
  commentId: P:Discord.Commands.CommandContext.Client
  id: Client
  parent: Discord.Commands.CommandContext
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: CommandContext.Client
  fullName: Discord.Commands.CommandContext.Client
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/CommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Client
    path: ../src/Discord.Net.Commands/CommandContext.cs
    startLine: 6
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.IDiscordClient\" data-throw-if-not-resolved=\"false\"></xref> that the command is executed with.\n"
  example: []
  syntax:
    content: public IDiscordClient Client { get; }
    parameters: []
    return:
      type: Discord.IDiscordClient
    content.vb: Public ReadOnly Property Client As IDiscordClient
  overload: Discord.Commands.CommandContext.Client*
  implements:
  - Discord.Commands.ICommandContext.Client
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.CommandContext.Guild
  commentId: P:Discord.Commands.CommandContext.Guild
  id: Guild
  parent: Discord.Commands.CommandContext
  langs:
  - csharp
  - vb
  name: Guild
  nameWithType: CommandContext.Guild
  fullName: Discord.Commands.CommandContext.Guild
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/CommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Guild
    path: ../src/Discord.Net.Commands/CommandContext.cs
    startLine: 8
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.IGuild\" data-throw-if-not-resolved=\"false\"></xref> that the command is executed in.\n"
  example: []
  syntax:
    content: public IGuild Guild { get; }
    parameters: []
    return:
      type: Discord.IGuild
    content.vb: Public ReadOnly Property Guild As IGuild
  overload: Discord.Commands.CommandContext.Guild*
  implements:
  - Discord.Commands.ICommandContext.Guild
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.CommandContext.Channel
  commentId: P:Discord.Commands.CommandContext.Channel
  id: Channel
  parent: Discord.Commands.CommandContext
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: CommandContext.Channel
  fullName: Discord.Commands.CommandContext.Channel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/CommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Channel
    path: ../src/Discord.Net.Commands/CommandContext.cs
    startLine: 10
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.IMessageChannel\" data-throw-if-not-resolved=\"false\"></xref> that the command is executed in.\n"
  example: []
  syntax:
    content: public IMessageChannel Channel { get; }
    parameters: []
    return:
      type: Discord.IMessageChannel
    content.vb: Public ReadOnly Property Channel As IMessageChannel
  overload: Discord.Commands.CommandContext.Channel*
  implements:
  - Discord.Commands.ICommandContext.Channel
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.CommandContext.User
  commentId: P:Discord.Commands.CommandContext.User
  id: User
  parent: Discord.Commands.CommandContext
  langs:
  - csharp
  - vb
  name: User
  nameWithType: CommandContext.User
  fullName: Discord.Commands.CommandContext.User
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/CommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: User
    path: ../src/Discord.Net.Commands/CommandContext.cs
    startLine: 12
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.IUser\" data-throw-if-not-resolved=\"false\"></xref> who executed the command.\n"
  example: []
  syntax:
    content: public IUser User { get; }
    parameters: []
    return:
      type: Discord.IUser
    content.vb: Public ReadOnly Property User As IUser
  overload: Discord.Commands.CommandContext.User*
  implements:
  - Discord.Commands.ICommandContext.User
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.CommandContext.Message
  commentId: P:Discord.Commands.CommandContext.Message
  id: Message
  parent: Discord.Commands.CommandContext
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: CommandContext.Message
  fullName: Discord.Commands.CommandContext.Message
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/CommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Message
    path: ../src/Discord.Net.Commands/CommandContext.cs
    startLine: 14
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nGets the <xref href=\"Discord.IUserMessage\" data-throw-if-not-resolved=\"false\"></xref> that the command is interpreted from.\n"
  example: []
  syntax:
    content: public IUserMessage Message { get; }
    parameters: []
    return:
      type: Discord.IUserMessage
    content.vb: Public ReadOnly Property Message As IUserMessage
  overload: Discord.Commands.CommandContext.Message*
  implements:
  - Discord.Commands.ICommandContext.Message
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.CommandContext.IsPrivate
  commentId: P:Discord.Commands.CommandContext.IsPrivate
  id: IsPrivate
  parent: Discord.Commands.CommandContext
  langs:
  - csharp
  - vb
  name: IsPrivate
  nameWithType: CommandContext.IsPrivate
  fullName: Discord.Commands.CommandContext.IsPrivate
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/CommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsPrivate
    path: ../src/Discord.Net.Commands/CommandContext.cs
    startLine: 17
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: 'Indicates whether the channel that the command is executed in is a private channel. '
  example: []
  syntax:
    content: public bool IsPrivate { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPrivate As Boolean
  overload: Discord.Commands.CommandContext.IsPrivate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.CommandContext.#ctor(Discord.IDiscordClient,Discord.IUserMessage)
  commentId: M:Discord.Commands.CommandContext.#ctor(Discord.IDiscordClient,Discord.IUserMessage)
  id: '#ctor(Discord.IDiscordClient,Discord.IUserMessage)'
  parent: Discord.Commands.CommandContext
  langs:
  - csharp
  - vb
  name: CommandContext(IDiscordClient, IUserMessage)
  nameWithType: CommandContext.CommandContext(IDiscordClient, IUserMessage)
  fullName: Discord.Commands.CommandContext.CommandContext(Discord.IDiscordClient, Discord.IUserMessage)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Commands/CommandContext.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Commands/CommandContext.cs
    startLine: 24
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nInitializes a new <xref href=\"Discord.Commands.CommandContext\" data-throw-if-not-resolved=\"false\"></xref> class with the provided client and message.\n"
  example: []
  syntax:
    content: public CommandContext(IDiscordClient client, IUserMessage msg)
    parameters:
    - id: client
      type: Discord.IDiscordClient
      description: The underlying client.
    - id: msg
      type: Discord.IUserMessage
      description: The underlying message.
    content.vb: Public Sub New(client As IDiscordClient, msg As IUserMessage)
  overload: Discord.Commands.CommandContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Discord.Commands
  commentId: N:Discord.Commands
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Commands.ICommandContext
  commentId: T:Discord.Commands.ICommandContext
  parent: Discord.Commands
  name: ICommandContext
  nameWithType: ICommandContext
  fullName: Discord.Commands.ICommandContext
- uid: Discord.Commands.CommandContext.Client*
  commentId: Overload:Discord.Commands.CommandContext.Client
  name: Client
  nameWithType: CommandContext.Client
  fullName: Discord.Commands.CommandContext.Client
- uid: Discord.Commands.ICommandContext.Client
  commentId: P:Discord.Commands.ICommandContext.Client
  parent: Discord.Commands.ICommandContext
  name: Client
  nameWithType: ICommandContext.Client
  fullName: Discord.Commands.ICommandContext.Client
- uid: Discord.IDiscordClient
  commentId: T:Discord.IDiscordClient
  parent: Discord
  name: IDiscordClient
  nameWithType: IDiscordClient
  fullName: Discord.IDiscordClient
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Commands.CommandContext.Guild*
  commentId: Overload:Discord.Commands.CommandContext.Guild
  name: Guild
  nameWithType: CommandContext.Guild
  fullName: Discord.Commands.CommandContext.Guild
- uid: Discord.Commands.ICommandContext.Guild
  commentId: P:Discord.Commands.ICommandContext.Guild
  parent: Discord.Commands.ICommandContext
  name: Guild
  nameWithType: ICommandContext.Guild
  fullName: Discord.Commands.ICommandContext.Guild
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: Discord.Commands.CommandContext.Channel*
  commentId: Overload:Discord.Commands.CommandContext.Channel
  name: Channel
  nameWithType: CommandContext.Channel
  fullName: Discord.Commands.CommandContext.Channel
- uid: Discord.Commands.ICommandContext.Channel
  commentId: P:Discord.Commands.ICommandContext.Channel
  parent: Discord.Commands.ICommandContext
  name: Channel
  nameWithType: ICommandContext.Channel
  fullName: Discord.Commands.ICommandContext.Channel
- uid: Discord.IMessageChannel
  commentId: T:Discord.IMessageChannel
  parent: Discord
  name: IMessageChannel
  nameWithType: IMessageChannel
  fullName: Discord.IMessageChannel
- uid: Discord.Commands.CommandContext.User*
  commentId: Overload:Discord.Commands.CommandContext.User
  name: User
  nameWithType: CommandContext.User
  fullName: Discord.Commands.CommandContext.User
- uid: Discord.Commands.ICommandContext.User
  commentId: P:Discord.Commands.ICommandContext.User
  parent: Discord.Commands.ICommandContext
  name: User
  nameWithType: ICommandContext.User
  fullName: Discord.Commands.ICommandContext.User
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord.Commands.CommandContext.Message*
  commentId: Overload:Discord.Commands.CommandContext.Message
  name: Message
  nameWithType: CommandContext.Message
  fullName: Discord.Commands.CommandContext.Message
- uid: Discord.Commands.ICommandContext.Message
  commentId: P:Discord.Commands.ICommandContext.Message
  parent: Discord.Commands.ICommandContext
  name: Message
  nameWithType: ICommandContext.Message
  fullName: Discord.Commands.ICommandContext.Message
- uid: Discord.IUserMessage
  commentId: T:Discord.IUserMessage
  parent: Discord
  name: IUserMessage
  nameWithType: IUserMessage
  fullName: Discord.IUserMessage
- uid: Discord.Commands.CommandContext.IsPrivate*
  commentId: Overload:Discord.Commands.CommandContext.IsPrivate
  name: IsPrivate
  nameWithType: CommandContext.IsPrivate
  fullName: Discord.Commands.CommandContext.IsPrivate
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.Commands.CommandContext
  commentId: T:Discord.Commands.CommandContext
  name: CommandContext
  nameWithType: CommandContext
  fullName: Discord.Commands.CommandContext
- uid: Discord.Commands.CommandContext.#ctor*
  commentId: Overload:Discord.Commands.CommandContext.#ctor
  name: CommandContext
  nameWithType: CommandContext.CommandContext
  fullName: Discord.Commands.CommandContext.CommandContext
