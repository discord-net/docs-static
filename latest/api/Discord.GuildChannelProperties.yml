### YamlMime:ManagedReference
items:
- uid: Discord.GuildChannelProperties
  commentId: T:Discord.GuildChannelProperties
  id: GuildChannelProperties
  parent: Discord
  children:
  - Discord.GuildChannelProperties.CategoryId
  - Discord.GuildChannelProperties.Name
  - Discord.GuildChannelProperties.Position
  langs:
  - csharp
  - vb
  name: GuildChannelProperties
  nameWithType: GuildChannelProperties
  fullName: Discord.GuildChannelProperties
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Channels/GuildChannelProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GuildChannelProperties
    path: ../src/Discord.Net.Core/Entities/Channels/GuildChannelProperties.cs
    startLine: 6
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nProperties that are used to modify an <xref href=\"Discord.IGuildChannel\" data-throw-if-not-resolved=\"false\"></xref> with the specified changes.\n"
  example: []
  syntax:
    content: 'public class GuildChannelProperties : object'
    content.vb: >-
      Public Class GuildChannelProperties
          Inherits Object
  seealso:
  - linkId: Discord.IGuildChannel.ModifyAsync(Action{Discord.GuildChannelProperties},Discord.RequestOptions)
    commentId: M:Discord.IGuildChannel.ModifyAsync(Action{Discord.GuildChannelProperties},Discord.RequestOptions)
  inheritance:
  - System.Object
  derivedClasses:
  - Discord.TextChannelProperties
  - Discord.VoiceChannelProperties
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.GuildChannelProperties.Name
  commentId: P:Discord.GuildChannelProperties.Name
  id: Name
  parent: Discord.GuildChannelProperties
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: GuildChannelProperties.Name
  fullName: Discord.GuildChannelProperties.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Channels/GuildChannelProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Core/Entities/Channels/GuildChannelProperties.cs
    startLine: 18
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the channel to this name.\n"
  remarks: "\nThis property defines the new name for this channel.\n<div class=\"WARNING\"><h5>warning</h5><p>\n    When modifying an <xref href=\"Discord.ITextChannel\" data-throw-if-not-resolved=\"false\"></xref>, the <xref href=\"Discord.GuildChannelProperties.Name\" data-throw-if-not-resolved=\"false\"></xref> must be alphanumeric with\n    dashes. It must match the RegEx <code>[a-z0-9-_]{2,100}</code>.\n</p></div>\n"
  example: []
  syntax:
    content: public Optional<string> Name { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.String}
    content.vb: 'Public Property Name As '
  overload: Discord.GuildChannelProperties.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildChannelProperties.Position
  commentId: P:Discord.GuildChannelProperties.Position
  id: Position
  parent: Discord.GuildChannelProperties
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: GuildChannelProperties.Position
  fullName: Discord.GuildChannelProperties.Position
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Channels/GuildChannelProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Position
    path: ../src/Discord.Net.Core/Entities/Channels/GuildChannelProperties.cs
    startLine: 22
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nMoves the channel to the following position. This property is zero-based.\n"
  example: []
  syntax:
    content: public Optional<int> Position { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Int32}
    content.vb: 'Public Property Position As '
  overload: Discord.GuildChannelProperties.Position*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildChannelProperties.CategoryId
  commentId: P:Discord.GuildChannelProperties.CategoryId
  id: CategoryId
  parent: Discord.GuildChannelProperties
  langs:
  - csharp
  - vb
  name: CategoryId
  nameWithType: GuildChannelProperties.CategoryId
  fullName: Discord.GuildChannelProperties.CategoryId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Channels/GuildChannelProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: CategoryId
    path: ../src/Discord.Net.Core/Entities/Channels/GuildChannelProperties.cs
    startLine: 31
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the category ID for this channel.\n"
  remarks: "\nSetting this value to a category&apos;s snowflake identifier will change or set this channel&apos;s parent to the\nspecified channel; setting this value to <code>0</code> will detach this channel from its parent if one\nis set.\n"
  example: []
  syntax:
    content: public Optional<ulong?> CategoryId { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Nullable{System.UInt64}}
    content.vb: 'Public Property CategoryId As '
  overload: Discord.GuildChannelProperties.CategoryId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Discord.IGuildChannel
  commentId: T:Discord.IGuildChannel
  parent: Discord
  name: IGuildChannel
  nameWithType: IGuildChannel
  fullName: Discord.IGuildChannel
- uid: Discord.IGuildChannel.ModifyAsync(Action{Discord.GuildChannelProperties},Discord.RequestOptions)
  commentId: M:Discord.IGuildChannel.ModifyAsync(Action{Discord.GuildChannelProperties},Discord.RequestOptions)
  parent: Discord.IGuildChannel
  isExternal: true
  name: ModifyAsync(Action<GuildChannelProperties>, RequestOptions)
  nameWithType: IGuildChannel.ModifyAsync(Action<GuildChannelProperties>, RequestOptions)
  fullName: Discord.IGuildChannel.ModifyAsync(Action<Discord.GuildChannelProperties>, Discord.RequestOptions)
  nameWithType.vb: IGuildChannel.ModifyAsync(Action(Of GuildChannelProperties), RequestOptions)
  fullName.vb: Discord.IGuildChannel.ModifyAsync(Action(Of Discord.GuildChannelProperties), Discord.RequestOptions)
  name.vb: ModifyAsync(Action(Of GuildChannelProperties), RequestOptions)
  spec.csharp:
  - uid: Discord.IGuildChannel.ModifyAsync(Action{Discord.GuildChannelProperties},Discord.RequestOptions)
    name: ModifyAsync
    nameWithType: IGuildChannel.ModifyAsync
    fullName: Discord.IGuildChannel.ModifyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.GuildChannelProperties
    name: GuildChannelProperties
    nameWithType: GuildChannelProperties
    fullName: Discord.GuildChannelProperties
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IGuildChannel.ModifyAsync(Action{Discord.GuildChannelProperties},Discord.RequestOptions)
    name: ModifyAsync
    nameWithType: IGuildChannel.ModifyAsync
    fullName: Discord.IGuildChannel.ModifyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.GuildChannelProperties
    name: GuildChannelProperties
    nameWithType: GuildChannelProperties
    fullName: Discord.GuildChannelProperties
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.ITextChannel
  commentId: T:Discord.ITextChannel
  parent: Discord
  name: ITextChannel
  nameWithType: ITextChannel
  fullName: Discord.ITextChannel
- uid: Discord.GuildChannelProperties.Name
  commentId: P:Discord.GuildChannelProperties.Name
  parent: Discord.GuildChannelProperties
  name: Name
  nameWithType: GuildChannelProperties.Name
  fullName: Discord.GuildChannelProperties.Name
- uid: Discord.GuildChannelProperties.Name*
  commentId: Overload:Discord.GuildChannelProperties.Name
  name: Name
  nameWithType: GuildChannelProperties.Name
  fullName: Discord.GuildChannelProperties.Name
- uid: Discord.Optional{System.String}
  commentId: T:Discord.Optional{System.String}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<String>
  nameWithType: Optional<String>
  fullName: Discord.Optional<System.String>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Discord.Optional(Of System.String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildChannelProperties
  commentId: T:Discord.GuildChannelProperties
  parent: Discord
  name: GuildChannelProperties
  nameWithType: GuildChannelProperties
  fullName: Discord.GuildChannelProperties
- uid: Discord.Optional`1
  commentId: T:Discord.Optional`1
  parent: Discord
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: Discord.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: Discord.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildChannelProperties.Position*
  commentId: Overload:Discord.GuildChannelProperties.Position
  name: Position
  nameWithType: GuildChannelProperties.Position
  fullName: Discord.GuildChannelProperties.Position
- uid: Discord.Optional{System.Int32}
  commentId: T:Discord.Optional{System.Int32}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<Int32>
  nameWithType: Optional<Int32>
  fullName: Discord.Optional<System.Int32>
  nameWithType.vb: Optional(Of Int32)
  fullName.vb: Discord.Optional(Of System.Int32)
  name.vb: Optional(Of Int32)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildChannelProperties.CategoryId*
  commentId: Overload:Discord.GuildChannelProperties.CategoryId
  name: CategoryId
  nameWithType: GuildChannelProperties.CategoryId
  fullName: Discord.GuildChannelProperties.CategoryId
- uid: Discord.Optional{System.Nullable{System.UInt64}}
  commentId: T:Discord.Optional{System.Nullable{System.UInt64}}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<Nullable<UInt64>>
  nameWithType: Optional<Nullable<UInt64>>
  fullName: Discord.Optional<System.Nullable<System.UInt64>>
  nameWithType.vb: Optional(Of Nullable(Of UInt64))
  fullName.vb: Discord.Optional(Of System.Nullable(Of System.UInt64))
  name.vb: Optional(Of Nullable(Of UInt64))
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
