### YamlMime:ManagedReference
items:
- uid: Discord.Audio.IAudioClient
  commentId: T:Discord.Audio.IAudioClient
  id: IAudioClient
  parent: Discord.Audio
  children:
  - Discord.Audio.IAudioClient.Connected
  - Discord.Audio.IAudioClient.ConnectionState
  - Discord.Audio.IAudioClient.CreateDirectOpusStream
  - Discord.Audio.IAudioClient.CreateDirectPCMStream(Discord.Audio.AudioApplication,System.Nullable{System.Int32},System.Int32)
  - Discord.Audio.IAudioClient.CreateOpusStream(System.Int32)
  - Discord.Audio.IAudioClient.CreatePCMStream(Discord.Audio.AudioApplication,System.Nullable{System.Int32},System.Int32,System.Int32)
  - Discord.Audio.IAudioClient.Disconnected
  - Discord.Audio.IAudioClient.Latency
  - Discord.Audio.IAudioClient.LatencyUpdated
  - Discord.Audio.IAudioClient.SetSpeakingAsync(System.Boolean)
  - Discord.Audio.IAudioClient.SpeakingUpdated
  - Discord.Audio.IAudioClient.StopAsync
  - Discord.Audio.IAudioClient.StreamCreated
  - Discord.Audio.IAudioClient.StreamDestroyed
  - Discord.Audio.IAudioClient.UdpLatency
  - Discord.Audio.IAudioClient.UdpLatencyUpdated
  langs:
  - csharp
  - vb
  name: IAudioClient
  nameWithType: IAudioClient
  fullName: Discord.Audio.IAudioClient
  type: Interface
  source:
    remote:
      path: src/Discord.Net.Core/Audio/IAudioClient.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IAudioClient
    path: ../src/Discord.Net.Core/Audio/IAudioClient.cs
    startLine: 5
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: 'public interface IAudioClient : IDisposable'
    content.vb: >-
      Public Interface IAudioClient
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Discord.Audio.IAudioClient.Connected
  commentId: E:Discord.Audio.IAudioClient.Connected
  id: Connected
  parent: Discord.Audio.IAudioClient
  langs:
  - csharp
  - vb
  name: Connected
  nameWithType: IAudioClient.Connected
  fullName: Discord.Audio.IAudioClient.Connected
  type: Event
  source:
    remote:
      path: src/Discord.Net.Core/Audio/IAudioClient.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Connected
    path: ../src/Discord.Net.Core/Audio/IAudioClient.cs
    startLine: 7
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: event Func<Task> Connected
    return:
      type: System.Func{System.Threading.Tasks.Task}
    content.vb: Event Connected As Func(Of Task)
- uid: Discord.Audio.IAudioClient.Disconnected
  commentId: E:Discord.Audio.IAudioClient.Disconnected
  id: Disconnected
  parent: Discord.Audio.IAudioClient
  langs:
  - csharp
  - vb
  name: Disconnected
  nameWithType: IAudioClient.Disconnected
  fullName: Discord.Audio.IAudioClient.Disconnected
  type: Event
  source:
    remote:
      path: src/Discord.Net.Core/Audio/IAudioClient.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Disconnected
    path: ../src/Discord.Net.Core/Audio/IAudioClient.cs
    startLine: 8
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: event Func<Exception, Task> Disconnected
    return:
      type: System.Func{System.Exception,System.Threading.Tasks.Task}
    content.vb: Event Disconnected As Func(Of Exception, Task)
- uid: Discord.Audio.IAudioClient.LatencyUpdated
  commentId: E:Discord.Audio.IAudioClient.LatencyUpdated
  id: LatencyUpdated
  parent: Discord.Audio.IAudioClient
  langs:
  - csharp
  - vb
  name: LatencyUpdated
  nameWithType: IAudioClient.LatencyUpdated
  fullName: Discord.Audio.IAudioClient.LatencyUpdated
  type: Event
  source:
    remote:
      path: src/Discord.Net.Core/Audio/IAudioClient.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: LatencyUpdated
    path: ../src/Discord.Net.Core/Audio/IAudioClient.cs
    startLine: 9
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: event Func<int, int, Task> LatencyUpdated
    return:
      type: System.Func{System.Int32,System.Int32,System.Threading.Tasks.Task}
    content.vb: Event LatencyUpdated As Func(Of Integer, Integer, Task)
- uid: Discord.Audio.IAudioClient.UdpLatencyUpdated
  commentId: E:Discord.Audio.IAudioClient.UdpLatencyUpdated
  id: UdpLatencyUpdated
  parent: Discord.Audio.IAudioClient
  langs:
  - csharp
  - vb
  name: UdpLatencyUpdated
  nameWithType: IAudioClient.UdpLatencyUpdated
  fullName: Discord.Audio.IAudioClient.UdpLatencyUpdated
  type: Event
  source:
    remote:
      path: src/Discord.Net.Core/Audio/IAudioClient.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: UdpLatencyUpdated
    path: ../src/Discord.Net.Core/Audio/IAudioClient.cs
    startLine: 10
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: event Func<int, int, Task> UdpLatencyUpdated
    return:
      type: System.Func{System.Int32,System.Int32,System.Threading.Tasks.Task}
    content.vb: Event UdpLatencyUpdated As Func(Of Integer, Integer, Task)
- uid: Discord.Audio.IAudioClient.StreamCreated
  commentId: E:Discord.Audio.IAudioClient.StreamCreated
  id: StreamCreated
  parent: Discord.Audio.IAudioClient
  langs:
  - csharp
  - vb
  name: StreamCreated
  nameWithType: IAudioClient.StreamCreated
  fullName: Discord.Audio.IAudioClient.StreamCreated
  type: Event
  source:
    remote:
      path: src/Discord.Net.Core/Audio/IAudioClient.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: StreamCreated
    path: ../src/Discord.Net.Core/Audio/IAudioClient.cs
    startLine: 11
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: event Func<ulong, AudioInStream, Task> StreamCreated
    return:
      type: System.Func{System.UInt64,Discord.Audio.AudioInStream,System.Threading.Tasks.Task}
    content.vb: Event StreamCreated As Func(Of ULong, AudioInStream, Task)
- uid: Discord.Audio.IAudioClient.StreamDestroyed
  commentId: E:Discord.Audio.IAudioClient.StreamDestroyed
  id: StreamDestroyed
  parent: Discord.Audio.IAudioClient
  langs:
  - csharp
  - vb
  name: StreamDestroyed
  nameWithType: IAudioClient.StreamDestroyed
  fullName: Discord.Audio.IAudioClient.StreamDestroyed
  type: Event
  source:
    remote:
      path: src/Discord.Net.Core/Audio/IAudioClient.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: StreamDestroyed
    path: ../src/Discord.Net.Core/Audio/IAudioClient.cs
    startLine: 12
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: event Func<ulong, Task> StreamDestroyed
    return:
      type: System.Func{System.UInt64,System.Threading.Tasks.Task}
    content.vb: Event StreamDestroyed As Func(Of ULong, Task)
- uid: Discord.Audio.IAudioClient.SpeakingUpdated
  commentId: E:Discord.Audio.IAudioClient.SpeakingUpdated
  id: SpeakingUpdated
  parent: Discord.Audio.IAudioClient
  langs:
  - csharp
  - vb
  name: SpeakingUpdated
  nameWithType: IAudioClient.SpeakingUpdated
  fullName: Discord.Audio.IAudioClient.SpeakingUpdated
  type: Event
  source:
    remote:
      path: src/Discord.Net.Core/Audio/IAudioClient.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SpeakingUpdated
    path: ../src/Discord.Net.Core/Audio/IAudioClient.cs
    startLine: 13
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: event Func<ulong, bool, Task> SpeakingUpdated
    return:
      type: System.Func{System.UInt64,System.Boolean,System.Threading.Tasks.Task}
    content.vb: Event SpeakingUpdated As Func(Of ULong, Boolean, Task)
- uid: Discord.Audio.IAudioClient.ConnectionState
  commentId: P:Discord.Audio.IAudioClient.ConnectionState
  id: ConnectionState
  parent: Discord.Audio.IAudioClient
  langs:
  - csharp
  - vb
  name: ConnectionState
  nameWithType: IAudioClient.ConnectionState
  fullName: Discord.Audio.IAudioClient.ConnectionState
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Audio/IAudioClient.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ConnectionState
    path: ../src/Discord.Net.Core/Audio/IAudioClient.cs
    startLine: 16
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  summary: 'Gets the current connection state of this client. '
  example: []
  syntax:
    content: ConnectionState ConnectionState { get; }
    parameters: []
    return:
      type: Discord.ConnectionState
    content.vb: ReadOnly Property ConnectionState As ConnectionState
  overload: Discord.Audio.IAudioClient.ConnectionState*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.Audio.IAudioClient.Latency
  commentId: P:Discord.Audio.IAudioClient.Latency
  id: Latency
  parent: Discord.Audio.IAudioClient
  langs:
  - csharp
  - vb
  name: Latency
  nameWithType: IAudioClient.Latency
  fullName: Discord.Audio.IAudioClient.Latency
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Audio/IAudioClient.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Latency
    path: ../src/Discord.Net.Core/Audio/IAudioClient.cs
    startLine: 18
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  summary: 'Gets the estimated round-trip latency, in milliseconds, to the voice WebSocket server. '
  example: []
  syntax:
    content: int Latency { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Latency As Integer
  overload: Discord.Audio.IAudioClient.Latency*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.Audio.IAudioClient.UdpLatency
  commentId: P:Discord.Audio.IAudioClient.UdpLatency
  id: UdpLatency
  parent: Discord.Audio.IAudioClient
  langs:
  - csharp
  - vb
  name: UdpLatency
  nameWithType: IAudioClient.UdpLatency
  fullName: Discord.Audio.IAudioClient.UdpLatency
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Audio/IAudioClient.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: UdpLatency
    path: ../src/Discord.Net.Core/Audio/IAudioClient.cs
    startLine: 20
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  summary: 'Gets the estimated round-trip latency, in milliseconds, to the voice UDP server. '
  example: []
  syntax:
    content: int UdpLatency { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property UdpLatency As Integer
  overload: Discord.Audio.IAudioClient.UdpLatency*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.Audio.IAudioClient.StopAsync
  commentId: M:Discord.Audio.IAudioClient.StopAsync
  id: StopAsync
  parent: Discord.Audio.IAudioClient
  langs:
  - csharp
  - vb
  name: StopAsync()
  nameWithType: IAudioClient.StopAsync()
  fullName: Discord.Audio.IAudioClient.StopAsync()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Audio/IAudioClient.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: StopAsync
    path: ../src/Discord.Net.Core/Audio/IAudioClient.cs
    startLine: 22
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: Task StopAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function StopAsync As Task
  overload: Discord.Audio.IAudioClient.StopAsync*
- uid: Discord.Audio.IAudioClient.SetSpeakingAsync(System.Boolean)
  commentId: M:Discord.Audio.IAudioClient.SetSpeakingAsync(System.Boolean)
  id: SetSpeakingAsync(System.Boolean)
  parent: Discord.Audio.IAudioClient
  langs:
  - csharp
  - vb
  name: SetSpeakingAsync(Boolean)
  nameWithType: IAudioClient.SetSpeakingAsync(Boolean)
  fullName: Discord.Audio.IAudioClient.SetSpeakingAsync(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Audio/IAudioClient.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SetSpeakingAsync
    path: ../src/Discord.Net.Core/Audio/IAudioClient.cs
    startLine: 23
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: Task SetSpeakingAsync(bool value)
    parameters:
    - id: value
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetSpeakingAsync(value As Boolean) As Task
  overload: Discord.Audio.IAudioClient.SetSpeakingAsync*
- uid: Discord.Audio.IAudioClient.CreateOpusStream(System.Int32)
  commentId: M:Discord.Audio.IAudioClient.CreateOpusStream(System.Int32)
  id: CreateOpusStream(System.Int32)
  parent: Discord.Audio.IAudioClient
  langs:
  - csharp
  - vb
  name: CreateOpusStream(Int32)
  nameWithType: IAudioClient.CreateOpusStream(Int32)
  fullName: Discord.Audio.IAudioClient.CreateOpusStream(System.Int32)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Audio/IAudioClient.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: CreateOpusStream
    path: ../src/Discord.Net.Core/Audio/IAudioClient.cs
    startLine: 26
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  summary: Creates a new outgoing stream accepting Opus-encoded data.
  example: []
  syntax:
    content: AudioOutStream CreateOpusStream(int bufferMillis = 1000)
    parameters:
    - id: bufferMillis
      type: System.Int32
    return:
      type: Discord.Audio.AudioOutStream
    content.vb: Function CreateOpusStream(bufferMillis As Integer = 1000) As AudioOutStream
  overload: Discord.Audio.IAudioClient.CreateOpusStream*
- uid: Discord.Audio.IAudioClient.CreateDirectOpusStream
  commentId: M:Discord.Audio.IAudioClient.CreateDirectOpusStream
  id: CreateDirectOpusStream
  parent: Discord.Audio.IAudioClient
  langs:
  - csharp
  - vb
  name: CreateDirectOpusStream()
  nameWithType: IAudioClient.CreateDirectOpusStream()
  fullName: Discord.Audio.IAudioClient.CreateDirectOpusStream()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Audio/IAudioClient.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: CreateDirectOpusStream
    path: ../src/Discord.Net.Core/Audio/IAudioClient.cs
    startLine: 28
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  summary: Creates a new outgoing stream accepting Opus-encoded data. This is a direct stream with no internal timer.
  example: []
  syntax:
    content: AudioOutStream CreateDirectOpusStream()
    return:
      type: Discord.Audio.AudioOutStream
    content.vb: Function CreateDirectOpusStream As AudioOutStream
  overload: Discord.Audio.IAudioClient.CreateDirectOpusStream*
- uid: Discord.Audio.IAudioClient.CreatePCMStream(Discord.Audio.AudioApplication,System.Nullable{System.Int32},System.Int32,System.Int32)
  commentId: M:Discord.Audio.IAudioClient.CreatePCMStream(Discord.Audio.AudioApplication,System.Nullable{System.Int32},System.Int32,System.Int32)
  id: CreatePCMStream(Discord.Audio.AudioApplication,System.Nullable{System.Int32},System.Int32,System.Int32)
  parent: Discord.Audio.IAudioClient
  langs:
  - csharp
  - vb
  name: CreatePCMStream(AudioApplication, Nullable<Int32>, Int32, Int32)
  nameWithType: IAudioClient.CreatePCMStream(AudioApplication, Nullable<Int32>, Int32, Int32)
  fullName: Discord.Audio.IAudioClient.CreatePCMStream(Discord.Audio.AudioApplication, System.Nullable<System.Int32>, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Audio/IAudioClient.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: CreatePCMStream
    path: ../src/Discord.Net.Core/Audio/IAudioClient.cs
    startLine: 30
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  summary: Creates a new outgoing stream accepting PCM (raw) data.
  example: []
  syntax:
    content: AudioOutStream CreatePCMStream(AudioApplication application, int? bitrate = default(int? ), int bufferMillis = 1000, int packetLoss = 30)
    parameters:
    - id: application
      type: Discord.Audio.AudioApplication
    - id: bitrate
      type: System.Nullable{System.Int32}
    - id: bufferMillis
      type: System.Int32
    - id: packetLoss
      type: System.Int32
    return:
      type: Discord.Audio.AudioOutStream
    content.vb: Function CreatePCMStream(application As AudioApplication, bitrate As Integer? = Nothing, bufferMillis As Integer = 1000, packetLoss As Integer = 30) As AudioOutStream
  overload: Discord.Audio.IAudioClient.CreatePCMStream*
  nameWithType.vb: IAudioClient.CreatePCMStream(AudioApplication, Nullable(Of Int32), Int32, Int32)
  fullName.vb: Discord.Audio.IAudioClient.CreatePCMStream(Discord.Audio.AudioApplication, System.Nullable(Of System.Int32), System.Int32, System.Int32)
  name.vb: CreatePCMStream(AudioApplication, Nullable(Of Int32), Int32, Int32)
- uid: Discord.Audio.IAudioClient.CreateDirectPCMStream(Discord.Audio.AudioApplication,System.Nullable{System.Int32},System.Int32)
  commentId: M:Discord.Audio.IAudioClient.CreateDirectPCMStream(Discord.Audio.AudioApplication,System.Nullable{System.Int32},System.Int32)
  id: CreateDirectPCMStream(Discord.Audio.AudioApplication,System.Nullable{System.Int32},System.Int32)
  parent: Discord.Audio.IAudioClient
  langs:
  - csharp
  - vb
  name: CreateDirectPCMStream(AudioApplication, Nullable<Int32>, Int32)
  nameWithType: IAudioClient.CreateDirectPCMStream(AudioApplication, Nullable<Int32>, Int32)
  fullName: Discord.Audio.IAudioClient.CreateDirectPCMStream(Discord.Audio.AudioApplication, System.Nullable<System.Int32>, System.Int32)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Audio/IAudioClient.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: CreateDirectPCMStream
    path: ../src/Discord.Net.Core/Audio/IAudioClient.cs
    startLine: 32
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  summary: Creates a new direct outgoing stream accepting PCM (raw) data. This is a direct stream with no internal timer.
  example: []
  syntax:
    content: AudioOutStream CreateDirectPCMStream(AudioApplication application, int? bitrate = default(int? ), int packetLoss = 30)
    parameters:
    - id: application
      type: Discord.Audio.AudioApplication
    - id: bitrate
      type: System.Nullable{System.Int32}
    - id: packetLoss
      type: System.Int32
    return:
      type: Discord.Audio.AudioOutStream
    content.vb: Function CreateDirectPCMStream(application As AudioApplication, bitrate As Integer? = Nothing, packetLoss As Integer = 30) As AudioOutStream
  overload: Discord.Audio.IAudioClient.CreateDirectPCMStream*
  nameWithType.vb: IAudioClient.CreateDirectPCMStream(AudioApplication, Nullable(Of Int32), Int32)
  fullName.vb: Discord.Audio.IAudioClient.CreateDirectPCMStream(Discord.Audio.AudioApplication, System.Nullable(Of System.Int32), System.Int32)
  name.vb: CreateDirectPCMStream(AudioApplication, Nullable(Of Int32), Int32)
references:
- uid: Discord.Audio
  commentId: N:Discord.Audio
  name: Discord.Audio
  nameWithType: Discord.Audio
  fullName: Discord.Audio
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Func{System.Threading.Tasks.Task}
  commentId: T:System.Func{System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`1
  name: Func<Task>
  nameWithType: Func<Task>
  fullName: System.Func<System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of Task)
  fullName.vb: System.Func(Of System.Threading.Tasks.Task)
  name.vb: Func(Of Task)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Exception,System.Threading.Tasks.Task}
  commentId: T:System.Func{System.Exception,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`2
  name: Func<Exception, Task>
  nameWithType: Func<Exception, Task>
  fullName: System.Func<System.Exception, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of Exception, Task)
  fullName.vb: System.Func(Of System.Exception, System.Threading.Tasks.Task)
  name.vb: Func(Of Exception, Task)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: System.Exception
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.Int32,System.Int32,System.Threading.Tasks.Task}
  commentId: T:System.Func{System.Int32,System.Int32,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`3
  name: Func<Int32, Int32, Task>
  nameWithType: Func<Int32, Int32, Task>
  fullName: System.Func<System.Int32, System.Int32, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of Int32, Int32, Task)
  fullName.vb: System.Func(Of System.Int32, System.Int32, System.Threading.Tasks.Task)
  name.vb: Func(Of Int32, Int32, Task)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.UInt64,Discord.Audio.AudioInStream,System.Threading.Tasks.Task}
  commentId: T:System.Func{System.UInt64,Discord.Audio.AudioInStream,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`3
  name: Func<UInt64, AudioInStream, Task>
  nameWithType: Func<UInt64, AudioInStream, Task>
  fullName: System.Func<System.UInt64, Discord.Audio.AudioInStream, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of UInt64, AudioInStream, Task)
  fullName.vb: System.Func(Of System.UInt64, Discord.Audio.AudioInStream, System.Threading.Tasks.Task)
  name.vb: Func(Of UInt64, AudioInStream, Task)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Audio.AudioInStream
    name: AudioInStream
    nameWithType: AudioInStream
    fullName: Discord.Audio.AudioInStream
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Audio.AudioInStream
    name: AudioInStream
    nameWithType: AudioInStream
    fullName: Discord.Audio.AudioInStream
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.UInt64,System.Threading.Tasks.Task}
  commentId: T:System.Func{System.UInt64,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`2
  name: Func<UInt64, Task>
  nameWithType: Func<UInt64, Task>
  fullName: System.Func<System.UInt64, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of UInt64, Task)
  fullName.vb: System.Func(Of System.UInt64, System.Threading.Tasks.Task)
  name.vb: Func(Of UInt64, Task)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func{System.UInt64,System.Boolean,System.Threading.Tasks.Task}
  commentId: T:System.Func{System.UInt64,System.Boolean,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`3
  name: Func<UInt64, Boolean, Task>
  nameWithType: Func<UInt64, Boolean, Task>
  fullName: System.Func<System.UInt64, System.Boolean, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of UInt64, Boolean, Task)
  fullName.vb: System.Func(Of System.UInt64, System.Boolean, System.Threading.Tasks.Task)
  name.vb: Func(Of UInt64, Boolean, Task)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Audio.IAudioClient.ConnectionState*
  commentId: Overload:Discord.Audio.IAudioClient.ConnectionState
  name: ConnectionState
  nameWithType: IAudioClient.ConnectionState
  fullName: Discord.Audio.IAudioClient.ConnectionState
- uid: Discord.ConnectionState
  commentId: T:Discord.ConnectionState
  parent: Discord
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: Discord.ConnectionState
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Audio.IAudioClient.Latency*
  commentId: Overload:Discord.Audio.IAudioClient.Latency
  name: Latency
  nameWithType: IAudioClient.Latency
  fullName: Discord.Audio.IAudioClient.Latency
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Discord.Audio.IAudioClient.UdpLatency*
  commentId: Overload:Discord.Audio.IAudioClient.UdpLatency
  name: UdpLatency
  nameWithType: IAudioClient.UdpLatency
  fullName: Discord.Audio.IAudioClient.UdpLatency
- uid: Discord.Audio.IAudioClient.StopAsync*
  commentId: Overload:Discord.Audio.IAudioClient.StopAsync
  name: StopAsync
  nameWithType: IAudioClient.StopAsync
  fullName: Discord.Audio.IAudioClient.StopAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Discord.Audio.IAudioClient.SetSpeakingAsync*
  commentId: Overload:Discord.Audio.IAudioClient.SetSpeakingAsync
  name: SetSpeakingAsync
  nameWithType: IAudioClient.SetSpeakingAsync
  fullName: Discord.Audio.IAudioClient.SetSpeakingAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.Audio.IAudioClient.CreateOpusStream*
  commentId: Overload:Discord.Audio.IAudioClient.CreateOpusStream
  name: CreateOpusStream
  nameWithType: IAudioClient.CreateOpusStream
  fullName: Discord.Audio.IAudioClient.CreateOpusStream
- uid: Discord.Audio.AudioOutStream
  commentId: T:Discord.Audio.AudioOutStream
  parent: Discord.Audio
  name: AudioOutStream
  nameWithType: AudioOutStream
  fullName: Discord.Audio.AudioOutStream
- uid: Discord.Audio.IAudioClient.CreateDirectOpusStream*
  commentId: Overload:Discord.Audio.IAudioClient.CreateDirectOpusStream
  name: CreateDirectOpusStream
  nameWithType: IAudioClient.CreateDirectOpusStream
  fullName: Discord.Audio.IAudioClient.CreateDirectOpusStream
- uid: Discord.Audio.IAudioClient.CreatePCMStream*
  commentId: Overload:Discord.Audio.IAudioClient.CreatePCMStream
  name: CreatePCMStream
  nameWithType: IAudioClient.CreatePCMStream
  fullName: Discord.Audio.IAudioClient.CreatePCMStream
- uid: Discord.Audio.AudioApplication
  commentId: T:Discord.Audio.AudioApplication
  parent: Discord.Audio
  name: AudioApplication
  nameWithType: AudioApplication
  fullName: Discord.Audio.AudioApplication
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Audio.IAudioClient.CreateDirectPCMStream*
  commentId: Overload:Discord.Audio.IAudioClient.CreateDirectPCMStream
  name: CreateDirectPCMStream
  nameWithType: IAudioClient.CreateDirectPCMStream
  fullName: Discord.Audio.IAudioClient.CreateDirectPCMStream
