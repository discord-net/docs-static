### YamlMime:ManagedReference
items:
- uid: Discord.Rest.OverwriteUpdateAuditLogData
  commentId: T:Discord.Rest.OverwriteUpdateAuditLogData
  id: OverwriteUpdateAuditLogData
  parent: Discord.Rest
  children:
  - Discord.Rest.OverwriteUpdateAuditLogData.NewPermissions
  - Discord.Rest.OverwriteUpdateAuditLogData.OldPermissions
  - Discord.Rest.OverwriteUpdateAuditLogData.OverwriteTargetId
  - Discord.Rest.OverwriteUpdateAuditLogData.OverwriteType
  langs:
  - csharp
  - vb
  name: OverwriteUpdateAuditLogData
  nameWithType: OverwriteUpdateAuditLogData
  fullName: Discord.Rest.OverwriteUpdateAuditLogData
  type: Class
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/OverwriteUpdateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: OverwriteUpdateAuditLogData
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/OverwriteUpdateAuditLogData.cs
    startLine: 10
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nContains a piece of audit log data related to the update of a permission overwrite.\n"
  example: []
  syntax:
    content: 'public class OverwriteUpdateAuditLogData : IAuditLogData'
    content.vb: >-
      Public Class OverwriteUpdateAuditLogData
          Implements IAuditLogData
  inheritance:
  - System.Object
  implements:
  - Discord.IAuditLogData
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Rest.OverwriteUpdateAuditLogData.OldPermissions
  commentId: P:Discord.Rest.OverwriteUpdateAuditLogData.OldPermissions
  id: OldPermissions
  parent: Discord.Rest.OverwriteUpdateAuditLogData
  langs:
  - csharp
  - vb
  name: OldPermissions
  nameWithType: OverwriteUpdateAuditLogData.OldPermissions
  fullName: Discord.Rest.OverwriteUpdateAuditLogData.OldPermissions
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/OverwriteUpdateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: OldPermissions
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/OverwriteUpdateAuditLogData.cs
    startLine: 47
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the overwrite permissions before the changes.\n"
  example: []
  syntax:
    content: public OverwritePermissions OldPermissions { get; }
    parameters: []
    return:
      type: Discord.OverwritePermissions
      description: "\nAn overwrite permissions object representing the overwrite permissions that the overwrite had before\nthe changes were made.\n"
    content.vb: Public ReadOnly Property OldPermissions As OverwritePermissions
  overload: Discord.Rest.OverwriteUpdateAuditLogData.OldPermissions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.OverwriteUpdateAuditLogData.NewPermissions
  commentId: P:Discord.Rest.OverwriteUpdateAuditLogData.NewPermissions
  id: NewPermissions
  parent: Discord.Rest.OverwriteUpdateAuditLogData
  langs:
  - csharp
  - vb
  name: NewPermissions
  nameWithType: OverwriteUpdateAuditLogData.NewPermissions
  fullName: Discord.Rest.OverwriteUpdateAuditLogData.NewPermissions
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/OverwriteUpdateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: NewPermissions
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/OverwriteUpdateAuditLogData.cs
    startLine: 55
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the overwrite permissions after the changes.\n"
  example: []
  syntax:
    content: public OverwritePermissions NewPermissions { get; }
    parameters: []
    return:
      type: Discord.OverwritePermissions
      description: "\nAn overwrite permissions object representing the overwrite permissions that the overwrite had after the\nchanges.\n"
    content.vb: Public ReadOnly Property NewPermissions As OverwritePermissions
  overload: Discord.Rest.OverwriteUpdateAuditLogData.NewPermissions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.OverwriteUpdateAuditLogData.OverwriteTargetId
  commentId: P:Discord.Rest.OverwriteUpdateAuditLogData.OverwriteTargetId
  id: OverwriteTargetId
  parent: Discord.Rest.OverwriteUpdateAuditLogData
  langs:
  - csharp
  - vb
  name: OverwriteTargetId
  nameWithType: OverwriteUpdateAuditLogData.OverwriteTargetId
  fullName: Discord.Rest.OverwriteUpdateAuditLogData.OverwriteTargetId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/OverwriteUpdateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: OverwriteTargetId
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/OverwriteUpdateAuditLogData.cs
    startLine: 62
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the ID of the overwrite that was updated.\n"
  example: []
  syntax:
    content: public ulong OverwriteTargetId { get; }
    parameters: []
    return:
      type: System.UInt64
      description: "\nA <xref href=\"System.UInt64\" data-throw-if-not-resolved=\"false\"></xref> representing the snowflake identifier of the overwrite that was updated.\n"
    content.vb: Public ReadOnly Property OverwriteTargetId As ULong
  overload: Discord.Rest.OverwriteUpdateAuditLogData.OverwriteTargetId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.OverwriteUpdateAuditLogData.OverwriteType
  commentId: P:Discord.Rest.OverwriteUpdateAuditLogData.OverwriteType
  id: OverwriteType
  parent: Discord.Rest.OverwriteUpdateAuditLogData
  langs:
  - csharp
  - vb
  name: OverwriteType
  nameWithType: OverwriteUpdateAuditLogData.OverwriteType
  fullName: Discord.Rest.OverwriteUpdateAuditLogData.OverwriteType
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/OverwriteUpdateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: OverwriteType
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/OverwriteUpdateAuditLogData.cs
    startLine: 69
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the target of the updated permission overwrite.\n"
  example: []
  syntax:
    content: public PermissionTarget OverwriteType { get; }
    parameters: []
    return:
      type: Discord.PermissionTarget
      description: "\nThe target of the updated permission overwrite.\n"
    content.vb: Public ReadOnly Property OverwriteType As PermissionTarget
  overload: Discord.Rest.OverwriteUpdateAuditLogData.OverwriteType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.IAuditLogData
  commentId: T:Discord.IAuditLogData
  parent: Discord
  name: IAuditLogData
  nameWithType: IAuditLogData
  fullName: Discord.IAuditLogData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Rest.OverwriteUpdateAuditLogData.OldPermissions*
  commentId: Overload:Discord.Rest.OverwriteUpdateAuditLogData.OldPermissions
  name: OldPermissions
  nameWithType: OverwriteUpdateAuditLogData.OldPermissions
  fullName: Discord.Rest.OverwriteUpdateAuditLogData.OldPermissions
- uid: Discord.OverwritePermissions
  commentId: T:Discord.OverwritePermissions
  parent: Discord
  name: OverwritePermissions
  nameWithType: OverwritePermissions
  fullName: Discord.OverwritePermissions
- uid: Discord.Rest.OverwriteUpdateAuditLogData.NewPermissions*
  commentId: Overload:Discord.Rest.OverwriteUpdateAuditLogData.NewPermissions
  name: NewPermissions
  nameWithType: OverwriteUpdateAuditLogData.NewPermissions
  fullName: Discord.Rest.OverwriteUpdateAuditLogData.NewPermissions
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.Rest.OverwriteUpdateAuditLogData.OverwriteTargetId*
  commentId: Overload:Discord.Rest.OverwriteUpdateAuditLogData.OverwriteTargetId
  name: OverwriteTargetId
  nameWithType: OverwriteUpdateAuditLogData.OverwriteTargetId
  fullName: Discord.Rest.OverwriteUpdateAuditLogData.OverwriteTargetId
- uid: Discord.Rest.OverwriteUpdateAuditLogData.OverwriteType*
  commentId: Overload:Discord.Rest.OverwriteUpdateAuditLogData.OverwriteType
  name: OverwriteType
  nameWithType: OverwriteUpdateAuditLogData.OverwriteType
  fullName: Discord.Rest.OverwriteUpdateAuditLogData.OverwriteType
- uid: Discord.PermissionTarget
  commentId: T:Discord.PermissionTarget
  parent: Discord
  name: PermissionTarget
  nameWithType: PermissionTarget
  fullName: Discord.PermissionTarget
