### YamlMime:ManagedReference
items:
- uid: Discord.GuildProperties
  commentId: T:Discord.GuildProperties
  id: GuildProperties
  parent: Discord
  children:
  - Discord.GuildProperties.AfkChannel
  - Discord.GuildProperties.AfkChannelId
  - Discord.GuildProperties.AfkTimeout
  - Discord.GuildProperties.DefaultMessageNotifications
  - Discord.GuildProperties.ExplicitContentFilter
  - Discord.GuildProperties.Icon
  - Discord.GuildProperties.Name
  - Discord.GuildProperties.Owner
  - Discord.GuildProperties.OwnerId
  - Discord.GuildProperties.PreferredCulture
  - Discord.GuildProperties.PreferredLocale
  - Discord.GuildProperties.Region
  - Discord.GuildProperties.RegionId
  - Discord.GuildProperties.Splash
  - Discord.GuildProperties.SystemChannel
  - Discord.GuildProperties.SystemChannelFlags
  - Discord.GuildProperties.SystemChannelId
  - Discord.GuildProperties.VerificationLevel
  langs:
  - csharp
  - vb
  name: GuildProperties
  nameWithType: GuildProperties
  fullName: Discord.GuildProperties
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GuildProperties
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 8
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nProvides properties that are used to modify an <xref href=\"Discord.IGuild\" data-throw-if-not-resolved=\"false\"></xref> with the specified changes.\n"
  example: []
  syntax:
    content: public class GuildProperties
    content.vb: Public Class GuildProperties
  see:
  - linkId: Discord.IGuild.ModifyAsync(System.Action{Discord.GuildProperties},Discord.RequestOptions)
    commentId: M:Discord.IGuild.ModifyAsync(System.Action{Discord.GuildProperties},Discord.RequestOptions)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.GuildProperties.Name
  commentId: P:Discord.GuildProperties.Name
  id: Name
  parent: Discord.GuildProperties
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: GuildProperties.Name
  fullName: Discord.GuildProperties.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 13
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the name of the guild. Must be within 100 characters.\n"
  example: []
  syntax:
    content: public Optional<string> Name { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.String}
    content.vb: 'Public Property Name As '
  overload: Discord.GuildProperties.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildProperties.Region
  commentId: P:Discord.GuildProperties.Region
  id: Region
  parent: Discord.GuildProperties
  langs:
  - csharp
  - vb
  name: Region
  nameWithType: GuildProperties.Region
  fullName: Discord.GuildProperties.Region
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Region
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 17
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the region for the guild&apos;s voice connections.\n"
  example: []
  syntax:
    content: public Optional<IVoiceRegion> Region { get; set; }
    parameters: []
    return:
      type: Discord.Optional{Discord.IVoiceRegion}
    content.vb: 'Public Property Region As '
  overload: Discord.GuildProperties.Region*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildProperties.RegionId
  commentId: P:Discord.GuildProperties.RegionId
  id: RegionId
  parent: Discord.GuildProperties
  langs:
  - csharp
  - vb
  name: RegionId
  nameWithType: GuildProperties.RegionId
  fullName: Discord.GuildProperties.RegionId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RegionId
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 21
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the ID of the region for the guild&apos;s voice connections.\n"
  example: []
  syntax:
    content: public Optional<string> RegionId { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.String}
    content.vb: 'Public Property RegionId As '
  overload: Discord.GuildProperties.RegionId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildProperties.VerificationLevel
  commentId: P:Discord.GuildProperties.VerificationLevel
  id: VerificationLevel
  parent: Discord.GuildProperties
  langs:
  - csharp
  - vb
  name: VerificationLevel
  nameWithType: GuildProperties.VerificationLevel
  fullName: Discord.GuildProperties.VerificationLevel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: VerificationLevel
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 25
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the verification level new users need to achieve before speaking.\n"
  example: []
  syntax:
    content: public Optional<VerificationLevel> VerificationLevel { get; set; }
    parameters: []
    return:
      type: Discord.Optional{Discord.VerificationLevel}
    content.vb: 'Public Property VerificationLevel As '
  overload: Discord.GuildProperties.VerificationLevel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildProperties.DefaultMessageNotifications
  commentId: P:Discord.GuildProperties.DefaultMessageNotifications
  id: DefaultMessageNotifications
  parent: Discord.GuildProperties
  langs:
  - csharp
  - vb
  name: DefaultMessageNotifications
  nameWithType: GuildProperties.DefaultMessageNotifications
  fullName: Discord.GuildProperties.DefaultMessageNotifications
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: DefaultMessageNotifications
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 29
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the default message notification state for the guild.\n"
  example: []
  syntax:
    content: public Optional<DefaultMessageNotifications> DefaultMessageNotifications { get; set; }
    parameters: []
    return:
      type: Discord.Optional{Discord.DefaultMessageNotifications}
    content.vb: 'Public Property DefaultMessageNotifications As '
  overload: Discord.GuildProperties.DefaultMessageNotifications*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildProperties.AfkTimeout
  commentId: P:Discord.GuildProperties.AfkTimeout
  id: AfkTimeout
  parent: Discord.GuildProperties
  langs:
  - csharp
  - vb
  name: AfkTimeout
  nameWithType: GuildProperties.AfkTimeout
  fullName: Discord.GuildProperties.AfkTimeout
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AfkTimeout
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 34
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets how many seconds before a user is sent to AFK. This value MUST be one of: (60, 300, 900,\n1800, 3600).\n"
  example: []
  syntax:
    content: public Optional<int> AfkTimeout { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Int32}
    content.vb: 'Public Property AfkTimeout As '
  overload: Discord.GuildProperties.AfkTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildProperties.Icon
  commentId: P:Discord.GuildProperties.Icon
  id: Icon
  parent: Discord.GuildProperties
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: GuildProperties.Icon
  fullName: Discord.GuildProperties.Icon
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Icon
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 38
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the icon of the guild.\n"
  example: []
  syntax:
    content: public Optional<Image?> Icon { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Nullable{Discord.Image}}
    content.vb: 'Public Property Icon As '
  overload: Discord.GuildProperties.Icon*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildProperties.Splash
  commentId: P:Discord.GuildProperties.Splash
  id: Splash
  parent: Discord.GuildProperties
  langs:
  - csharp
  - vb
  name: Splash
  nameWithType: GuildProperties.Splash
  fullName: Discord.GuildProperties.Splash
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Splash
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 45
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the guild&apos;s splash image.\n"
  remarks: "\nThe guild must be partnered for this value to have any effect.\n"
  example: []
  syntax:
    content: public Optional<Image?> Splash { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Nullable{Discord.Image}}
    content.vb: 'Public Property Splash As '
  overload: Discord.GuildProperties.Splash*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildProperties.AfkChannel
  commentId: P:Discord.GuildProperties.AfkChannel
  id: AfkChannel
  parent: Discord.GuildProperties
  langs:
  - csharp
  - vb
  name: AfkChannel
  nameWithType: GuildProperties.AfkChannel
  fullName: Discord.GuildProperties.AfkChannel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AfkChannel
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 49
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the <xref href=\"Discord.IVoiceChannel\" data-throw-if-not-resolved=\"false\"></xref> where AFK users should be sent.\n"
  example: []
  syntax:
    content: public Optional<IVoiceChannel> AfkChannel { get; set; }
    parameters: []
    return:
      type: Discord.Optional{Discord.IVoiceChannel}
    content.vb: 'Public Property AfkChannel As '
  overload: Discord.GuildProperties.AfkChannel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildProperties.AfkChannelId
  commentId: P:Discord.GuildProperties.AfkChannelId
  id: AfkChannelId
  parent: Discord.GuildProperties
  langs:
  - csharp
  - vb
  name: AfkChannelId
  nameWithType: GuildProperties.AfkChannelId
  fullName: Discord.GuildProperties.AfkChannelId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AfkChannelId
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 53
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the ID of the <xref href=\"Discord.IVoiceChannel\" data-throw-if-not-resolved=\"false\"></xref> where AFK users should be sent.\n"
  example: []
  syntax:
    content: public Optional<ulong?> AfkChannelId { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Nullable{System.UInt64}}
    content.vb: 'Public Property AfkChannelId As '
  overload: Discord.GuildProperties.AfkChannelId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildProperties.SystemChannel
  commentId: P:Discord.GuildProperties.SystemChannel
  id: SystemChannel
  parent: Discord.GuildProperties
  langs:
  - csharp
  - vb
  name: SystemChannel
  nameWithType: GuildProperties.SystemChannel
  fullName: Discord.GuildProperties.SystemChannel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SystemChannel
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 57
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the <xref href=\"Discord.ITextChannel\" data-throw-if-not-resolved=\"false\"></xref> where system messages should be sent.\n"
  example: []
  syntax:
    content: public Optional<ITextChannel> SystemChannel { get; set; }
    parameters: []
    return:
      type: Discord.Optional{Discord.ITextChannel}
    content.vb: 'Public Property SystemChannel As '
  overload: Discord.GuildProperties.SystemChannel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildProperties.SystemChannelId
  commentId: P:Discord.GuildProperties.SystemChannelId
  id: SystemChannelId
  parent: Discord.GuildProperties
  langs:
  - csharp
  - vb
  name: SystemChannelId
  nameWithType: GuildProperties.SystemChannelId
  fullName: Discord.GuildProperties.SystemChannelId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SystemChannelId
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 61
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the ID of the <xref href=\"Discord.ITextChannel\" data-throw-if-not-resolved=\"false\"></xref> where system messages should be sent.\n"
  example: []
  syntax:
    content: public Optional<ulong?> SystemChannelId { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Nullable{System.UInt64}}
    content.vb: 'Public Property SystemChannelId As '
  overload: Discord.GuildProperties.SystemChannelId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildProperties.Owner
  commentId: P:Discord.GuildProperties.Owner
  id: Owner
  parent: Discord.GuildProperties
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: GuildProperties.Owner
  fullName: Discord.GuildProperties.Owner
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Owner
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 65
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the owner of this guild.\n"
  example: []
  syntax:
    content: public Optional<IUser> Owner { get; set; }
    parameters: []
    return:
      type: Discord.Optional{Discord.IUser}
    content.vb: 'Public Property Owner As '
  overload: Discord.GuildProperties.Owner*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildProperties.OwnerId
  commentId: P:Discord.GuildProperties.OwnerId
  id: OwnerId
  parent: Discord.GuildProperties
  langs:
  - csharp
  - vb
  name: OwnerId
  nameWithType: GuildProperties.OwnerId
  fullName: Discord.GuildProperties.OwnerId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: OwnerId
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 69
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the ID of the owner of this guild.\n"
  example: []
  syntax:
    content: public Optional<ulong> OwnerId { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.UInt64}
    content.vb: 'Public Property OwnerId As '
  overload: Discord.GuildProperties.OwnerId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildProperties.ExplicitContentFilter
  commentId: P:Discord.GuildProperties.ExplicitContentFilter
  id: ExplicitContentFilter
  parent: Discord.GuildProperties
  langs:
  - csharp
  - vb
  name: ExplicitContentFilter
  nameWithType: GuildProperties.ExplicitContentFilter
  fullName: Discord.GuildProperties.ExplicitContentFilter
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ExplicitContentFilter
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 73
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the explicit content filter level of this guild.\n"
  example: []
  syntax:
    content: public Optional<ExplicitContentFilterLevel> ExplicitContentFilter { get; set; }
    parameters: []
    return:
      type: Discord.Optional{Discord.ExplicitContentFilterLevel}
    content.vb: 'Public Property ExplicitContentFilter As '
  overload: Discord.GuildProperties.ExplicitContentFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildProperties.SystemChannelFlags
  commentId: P:Discord.GuildProperties.SystemChannelFlags
  id: SystemChannelFlags
  parent: Discord.GuildProperties
  langs:
  - csharp
  - vb
  name: SystemChannelFlags
  nameWithType: GuildProperties.SystemChannelFlags
  fullName: Discord.GuildProperties.SystemChannelFlags
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SystemChannelFlags
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 87
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the flags that DISABLE types of system channel messages.\n"
  remarks: "\nThese flags are inverted. Setting a flag will disable that system channel message from being sent.\nA value of <xref href=\"Discord.SystemChannelMessageDeny.None\" data-throw-if-not-resolved=\"false\"></xref> will allow all system channel message types to be sent,\ngiven that the <xref href=\"Discord.GuildProperties.SystemChannelId\" data-throw-if-not-resolved=\"false\"></xref> has also been set.\nA value of <xref href=\"Discord.SystemChannelMessageDeny.GuildBoost\" data-throw-if-not-resolved=\"false\"></xref> will deny guild boost messages from being sent, and allow all\nother types of messages.\nRefer to the extension methods <xref href=\"Discord.GuildExtensions.GetGuildBoostMessagesEnabled(Discord.IGuild)\" data-throw-if-not-resolved=\"false\"></xref> and\n<xref href=\"Discord.GuildExtensions.GetWelcomeMessagesEnabled(Discord.IGuild)\" data-throw-if-not-resolved=\"false\"></xref> to check if these system channel message types\nare enabled, without the need to manipulate the logic of the flag.\n"
  example: []
  syntax:
    content: public Optional<SystemChannelMessageDeny> SystemChannelFlags { get; set; }
    parameters: []
    return:
      type: Discord.Optional{Discord.SystemChannelMessageDeny}
    content.vb: 'Public Property SystemChannelFlags As '
  overload: Discord.GuildProperties.SystemChannelFlags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildProperties.PreferredLocale
  commentId: P:Discord.GuildProperties.PreferredLocale
  id: PreferredLocale
  parent: Discord.GuildProperties
  langs:
  - csharp
  - vb
  name: PreferredLocale
  nameWithType: GuildProperties.PreferredLocale
  fullName: Discord.GuildProperties.PreferredLocale
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: PreferredLocale
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 96
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the preferred locale of the guild in IETF BCP 47 language tag format.\n"
  remarks: "\nThis property takes precedence over <xref href=\"Discord.GuildProperties.PreferredCulture\" data-throw-if-not-resolved=\"false\"></xref>.\nWhen it is set, the value of <xref href=\"Discord.GuildProperties.PreferredCulture\" data-throw-if-not-resolved=\"false\"></xref>\nwill not be used.\n"
  example: []
  syntax:
    content: public Optional<string> PreferredLocale { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.String}
    content.vb: 'Public Property PreferredLocale As '
  overload: Discord.GuildProperties.PreferredLocale*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.GuildProperties.PreferredCulture
  commentId: P:Discord.GuildProperties.PreferredCulture
  id: PreferredCulture
  parent: Discord.GuildProperties
  langs:
  - csharp
  - vb
  name: PreferredCulture
  nameWithType: GuildProperties.PreferredCulture
  fullName: Discord.GuildProperties.PreferredCulture
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: PreferredCulture
    path: ../src/Discord.Net.Core/Entities/Guilds/GuildProperties.cs
    startLine: 105
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the preferred locale of the guild.\n"
  remarks: "\nThe <xref href=\"Discord.GuildProperties.PreferredLocale\" data-throw-if-not-resolved=\"false\"></xref> property takes precedence\nover this property. When <xref href=\"Discord.GuildProperties.PreferredLocale\" data-throw-if-not-resolved=\"false\"></xref> is set,\nthe value of <xref href=\"Discord.GuildProperties.PreferredCulture\" data-throw-if-not-resolved=\"false\"></xref> will be unused.\n"
  example: []
  syntax:
    content: public Optional<CultureInfo> PreferredCulture { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Globalization.CultureInfo}
    content.vb: 'Public Property PreferredCulture As '
  overload: Discord.GuildProperties.PreferredCulture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: Discord.IGuild.ModifyAsync(System.Action{Discord.GuildProperties},Discord.RequestOptions)
  commentId: M:Discord.IGuild.ModifyAsync(System.Action{Discord.GuildProperties},Discord.RequestOptions)
  parent: Discord.IGuild
  isExternal: true
  name: ModifyAsync(Action<GuildProperties>, RequestOptions)
  nameWithType: IGuild.ModifyAsync(Action<GuildProperties>, RequestOptions)
  fullName: Discord.IGuild.ModifyAsync(System.Action<Discord.GuildProperties>, Discord.RequestOptions)
  nameWithType.vb: IGuild.ModifyAsync(Action(Of GuildProperties), RequestOptions)
  fullName.vb: Discord.IGuild.ModifyAsync(System.Action(Of Discord.GuildProperties), Discord.RequestOptions)
  name.vb: ModifyAsync(Action(Of GuildProperties), RequestOptions)
  spec.csharp:
  - uid: Discord.IGuild.ModifyAsync(System.Action{Discord.GuildProperties},Discord.RequestOptions)
    name: ModifyAsync
    nameWithType: IGuild.ModifyAsync
    fullName: Discord.IGuild.ModifyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.GuildProperties
    name: GuildProperties
    nameWithType: GuildProperties
    fullName: Discord.GuildProperties
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IGuild.ModifyAsync(System.Action{Discord.GuildProperties},Discord.RequestOptions)
    name: ModifyAsync
    nameWithType: IGuild.ModifyAsync
    fullName: Discord.IGuild.ModifyAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.GuildProperties
    name: GuildProperties
    nameWithType: GuildProperties
    fullName: Discord.GuildProperties
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.GuildProperties.Name*
  commentId: Overload:Discord.GuildProperties.Name
  name: Name
  nameWithType: GuildProperties.Name
  fullName: Discord.GuildProperties.Name
- uid: Discord.Optional{System.String}
  commentId: T:Discord.Optional{System.String}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<String>
  nameWithType: Optional<String>
  fullName: Discord.Optional<System.String>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Discord.Optional(Of System.String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Optional`1
  commentId: T:Discord.Optional`1
  parent: Discord
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: Discord.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: Discord.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildProperties.Region*
  commentId: Overload:Discord.GuildProperties.Region
  name: Region
  nameWithType: GuildProperties.Region
  fullName: Discord.GuildProperties.Region
- uid: Discord.Optional{Discord.IVoiceRegion}
  commentId: T:Discord.Optional{Discord.IVoiceRegion}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<IVoiceRegion>
  nameWithType: Optional<IVoiceRegion>
  fullName: Discord.Optional<Discord.IVoiceRegion>
  nameWithType.vb: Optional(Of IVoiceRegion)
  fullName.vb: Discord.Optional(Of Discord.IVoiceRegion)
  name.vb: Optional(Of IVoiceRegion)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.IVoiceRegion
    name: IVoiceRegion
    nameWithType: IVoiceRegion
    fullName: Discord.IVoiceRegion
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.IVoiceRegion
    name: IVoiceRegion
    nameWithType: IVoiceRegion
    fullName: Discord.IVoiceRegion
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildProperties.RegionId*
  commentId: Overload:Discord.GuildProperties.RegionId
  name: RegionId
  nameWithType: GuildProperties.RegionId
  fullName: Discord.GuildProperties.RegionId
- uid: Discord.GuildProperties.VerificationLevel*
  commentId: Overload:Discord.GuildProperties.VerificationLevel
  name: VerificationLevel
  nameWithType: GuildProperties.VerificationLevel
  fullName: Discord.GuildProperties.VerificationLevel
- uid: Discord.Optional{Discord.VerificationLevel}
  commentId: T:Discord.Optional{Discord.VerificationLevel}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<VerificationLevel>
  nameWithType: Optional<VerificationLevel>
  fullName: Discord.Optional<Discord.VerificationLevel>
  nameWithType.vb: Optional(Of VerificationLevel)
  fullName.vb: Discord.Optional(Of Discord.VerificationLevel)
  name.vb: Optional(Of VerificationLevel)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.VerificationLevel
    name: VerificationLevel
    nameWithType: VerificationLevel
    fullName: Discord.VerificationLevel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.VerificationLevel
    name: VerificationLevel
    nameWithType: VerificationLevel
    fullName: Discord.VerificationLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildProperties.DefaultMessageNotifications*
  commentId: Overload:Discord.GuildProperties.DefaultMessageNotifications
  name: DefaultMessageNotifications
  nameWithType: GuildProperties.DefaultMessageNotifications
  fullName: Discord.GuildProperties.DefaultMessageNotifications
- uid: Discord.Optional{Discord.DefaultMessageNotifications}
  commentId: T:Discord.Optional{Discord.DefaultMessageNotifications}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<DefaultMessageNotifications>
  nameWithType: Optional<DefaultMessageNotifications>
  fullName: Discord.Optional<Discord.DefaultMessageNotifications>
  nameWithType.vb: Optional(Of DefaultMessageNotifications)
  fullName.vb: Discord.Optional(Of Discord.DefaultMessageNotifications)
  name.vb: Optional(Of DefaultMessageNotifications)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.DefaultMessageNotifications
    name: DefaultMessageNotifications
    nameWithType: DefaultMessageNotifications
    fullName: Discord.DefaultMessageNotifications
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.DefaultMessageNotifications
    name: DefaultMessageNotifications
    nameWithType: DefaultMessageNotifications
    fullName: Discord.DefaultMessageNotifications
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildProperties.AfkTimeout*
  commentId: Overload:Discord.GuildProperties.AfkTimeout
  name: AfkTimeout
  nameWithType: GuildProperties.AfkTimeout
  fullName: Discord.GuildProperties.AfkTimeout
- uid: Discord.Optional{System.Int32}
  commentId: T:Discord.Optional{System.Int32}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<Int32>
  nameWithType: Optional<Int32>
  fullName: Discord.Optional<System.Int32>
  nameWithType.vb: Optional(Of Int32)
  fullName.vb: Discord.Optional(Of System.Int32)
  name.vb: Optional(Of Int32)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildProperties.Icon*
  commentId: Overload:Discord.GuildProperties.Icon
  name: Icon
  nameWithType: GuildProperties.Icon
  fullName: Discord.GuildProperties.Icon
- uid: Discord.Optional{System.Nullable{Discord.Image}}
  commentId: T:Discord.Optional{System.Nullable{Discord.Image}}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<Nullable<Image>>
  nameWithType: Optional<Nullable<Image>>
  fullName: Discord.Optional<System.Nullable<Discord.Image>>
  nameWithType.vb: Optional(Of Nullable(Of Image))
  fullName.vb: Discord.Optional(Of System.Nullable(Of Discord.Image))
  name.vb: Optional(Of Nullable(Of Image))
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Image
    name: Image
    nameWithType: Image
    fullName: Discord.Image
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Image
    name: Image
    nameWithType: Image
    fullName: Discord.Image
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildProperties.Splash*
  commentId: Overload:Discord.GuildProperties.Splash
  name: Splash
  nameWithType: GuildProperties.Splash
  fullName: Discord.GuildProperties.Splash
- uid: Discord.IVoiceChannel
  commentId: T:Discord.IVoiceChannel
  parent: Discord
  name: IVoiceChannel
  nameWithType: IVoiceChannel
  fullName: Discord.IVoiceChannel
- uid: Discord.GuildProperties.AfkChannel*
  commentId: Overload:Discord.GuildProperties.AfkChannel
  name: AfkChannel
  nameWithType: GuildProperties.AfkChannel
  fullName: Discord.GuildProperties.AfkChannel
- uid: Discord.Optional{Discord.IVoiceChannel}
  commentId: T:Discord.Optional{Discord.IVoiceChannel}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<IVoiceChannel>
  nameWithType: Optional<IVoiceChannel>
  fullName: Discord.Optional<Discord.IVoiceChannel>
  nameWithType.vb: Optional(Of IVoiceChannel)
  fullName.vb: Discord.Optional(Of Discord.IVoiceChannel)
  name.vb: Optional(Of IVoiceChannel)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.IVoiceChannel
    name: IVoiceChannel
    nameWithType: IVoiceChannel
    fullName: Discord.IVoiceChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.IVoiceChannel
    name: IVoiceChannel
    nameWithType: IVoiceChannel
    fullName: Discord.IVoiceChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildProperties.AfkChannelId*
  commentId: Overload:Discord.GuildProperties.AfkChannelId
  name: AfkChannelId
  nameWithType: GuildProperties.AfkChannelId
  fullName: Discord.GuildProperties.AfkChannelId
- uid: Discord.Optional{System.Nullable{System.UInt64}}
  commentId: T:Discord.Optional{System.Nullable{System.UInt64}}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<Nullable<UInt64>>
  nameWithType: Optional<Nullable<UInt64>>
  fullName: Discord.Optional<System.Nullable<System.UInt64>>
  nameWithType.vb: Optional(Of Nullable(Of UInt64))
  fullName.vb: Discord.Optional(Of System.Nullable(Of System.UInt64))
  name.vb: Optional(Of Nullable(Of UInt64))
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.ITextChannel
  commentId: T:Discord.ITextChannel
  parent: Discord
  name: ITextChannel
  nameWithType: ITextChannel
  fullName: Discord.ITextChannel
- uid: Discord.GuildProperties.SystemChannel*
  commentId: Overload:Discord.GuildProperties.SystemChannel
  name: SystemChannel
  nameWithType: GuildProperties.SystemChannel
  fullName: Discord.GuildProperties.SystemChannel
- uid: Discord.Optional{Discord.ITextChannel}
  commentId: T:Discord.Optional{Discord.ITextChannel}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<ITextChannel>
  nameWithType: Optional<ITextChannel>
  fullName: Discord.Optional<Discord.ITextChannel>
  nameWithType.vb: Optional(Of ITextChannel)
  fullName.vb: Discord.Optional(Of Discord.ITextChannel)
  name.vb: Optional(Of ITextChannel)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.ITextChannel
    name: ITextChannel
    nameWithType: ITextChannel
    fullName: Discord.ITextChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.ITextChannel
    name: ITextChannel
    nameWithType: ITextChannel
    fullName: Discord.ITextChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildProperties.SystemChannelId*
  commentId: Overload:Discord.GuildProperties.SystemChannelId
  name: SystemChannelId
  nameWithType: GuildProperties.SystemChannelId
  fullName: Discord.GuildProperties.SystemChannelId
- uid: Discord.GuildProperties.Owner*
  commentId: Overload:Discord.GuildProperties.Owner
  name: Owner
  nameWithType: GuildProperties.Owner
  fullName: Discord.GuildProperties.Owner
- uid: Discord.Optional{Discord.IUser}
  commentId: T:Discord.Optional{Discord.IUser}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<IUser>
  nameWithType: Optional<IUser>
  fullName: Discord.Optional<Discord.IUser>
  nameWithType.vb: Optional(Of IUser)
  fullName.vb: Discord.Optional(Of Discord.IUser)
  name.vb: Optional(Of IUser)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.IUser
    name: IUser
    nameWithType: IUser
    fullName: Discord.IUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.IUser
    name: IUser
    nameWithType: IUser
    fullName: Discord.IUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildProperties.OwnerId*
  commentId: Overload:Discord.GuildProperties.OwnerId
  name: OwnerId
  nameWithType: GuildProperties.OwnerId
  fullName: Discord.GuildProperties.OwnerId
- uid: Discord.Optional{System.UInt64}
  commentId: T:Discord.Optional{System.UInt64}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<UInt64>
  nameWithType: Optional<UInt64>
  fullName: Discord.Optional<System.UInt64>
  nameWithType.vb: Optional(Of UInt64)
  fullName.vb: Discord.Optional(Of System.UInt64)
  name.vb: Optional(Of UInt64)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildProperties.ExplicitContentFilter*
  commentId: Overload:Discord.GuildProperties.ExplicitContentFilter
  name: ExplicitContentFilter
  nameWithType: GuildProperties.ExplicitContentFilter
  fullName: Discord.GuildProperties.ExplicitContentFilter
- uid: Discord.Optional{Discord.ExplicitContentFilterLevel}
  commentId: T:Discord.Optional{Discord.ExplicitContentFilterLevel}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<ExplicitContentFilterLevel>
  nameWithType: Optional<ExplicitContentFilterLevel>
  fullName: Discord.Optional<Discord.ExplicitContentFilterLevel>
  nameWithType.vb: Optional(Of ExplicitContentFilterLevel)
  fullName.vb: Discord.Optional(Of Discord.ExplicitContentFilterLevel)
  name.vb: Optional(Of ExplicitContentFilterLevel)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.ExplicitContentFilterLevel
    name: ExplicitContentFilterLevel
    nameWithType: ExplicitContentFilterLevel
    fullName: Discord.ExplicitContentFilterLevel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.ExplicitContentFilterLevel
    name: ExplicitContentFilterLevel
    nameWithType: ExplicitContentFilterLevel
    fullName: Discord.ExplicitContentFilterLevel
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.SystemChannelMessageDeny.None
  commentId: F:Discord.SystemChannelMessageDeny.None
  isExternal: true
- uid: Discord.GuildProperties.SystemChannelId
  commentId: P:Discord.GuildProperties.SystemChannelId
  isExternal: true
- uid: Discord.SystemChannelMessageDeny.GuildBoost
  commentId: F:Discord.SystemChannelMessageDeny.GuildBoost
  isExternal: true
- uid: Discord.GuildExtensions.GetGuildBoostMessagesEnabled(Discord.IGuild)
  commentId: M:Discord.GuildExtensions.GetGuildBoostMessagesEnabled(Discord.IGuild)
  name: GetGuildBoostMessagesEnabled(IGuild)
  nameWithType: GuildExtensions.GetGuildBoostMessagesEnabled(IGuild)
  fullName: Discord.GuildExtensions.GetGuildBoostMessagesEnabled(Discord.IGuild)
  spec.csharp:
  - uid: Discord.GuildExtensions.GetGuildBoostMessagesEnabled(Discord.IGuild)
    name: GetGuildBoostMessagesEnabled
    nameWithType: GuildExtensions.GetGuildBoostMessagesEnabled
    fullName: Discord.GuildExtensions.GetGuildBoostMessagesEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IGuild
    name: IGuild
    nameWithType: IGuild
    fullName: Discord.IGuild
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.GuildExtensions.GetGuildBoostMessagesEnabled(Discord.IGuild)
    name: GetGuildBoostMessagesEnabled
    nameWithType: GuildExtensions.GetGuildBoostMessagesEnabled
    fullName: Discord.GuildExtensions.GetGuildBoostMessagesEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IGuild
    name: IGuild
    nameWithType: IGuild
    fullName: Discord.IGuild
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildExtensions.GetWelcomeMessagesEnabled(Discord.IGuild)
  commentId: M:Discord.GuildExtensions.GetWelcomeMessagesEnabled(Discord.IGuild)
  name: GetWelcomeMessagesEnabled(IGuild)
  nameWithType: GuildExtensions.GetWelcomeMessagesEnabled(IGuild)
  fullName: Discord.GuildExtensions.GetWelcomeMessagesEnabled(Discord.IGuild)
  spec.csharp:
  - uid: Discord.GuildExtensions.GetWelcomeMessagesEnabled(Discord.IGuild)
    name: GetWelcomeMessagesEnabled
    nameWithType: GuildExtensions.GetWelcomeMessagesEnabled
    fullName: Discord.GuildExtensions.GetWelcomeMessagesEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IGuild
    name: IGuild
    nameWithType: IGuild
    fullName: Discord.IGuild
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.GuildExtensions.GetWelcomeMessagesEnabled(Discord.IGuild)
    name: GetWelcomeMessagesEnabled
    nameWithType: GuildExtensions.GetWelcomeMessagesEnabled
    fullName: Discord.GuildExtensions.GetWelcomeMessagesEnabled
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IGuild
    name: IGuild
    nameWithType: IGuild
    fullName: Discord.IGuild
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildProperties.SystemChannelFlags*
  commentId: Overload:Discord.GuildProperties.SystemChannelFlags
  name: SystemChannelFlags
  nameWithType: GuildProperties.SystemChannelFlags
  fullName: Discord.GuildProperties.SystemChannelFlags
- uid: Discord.Optional{Discord.SystemChannelMessageDeny}
  commentId: T:Discord.Optional{Discord.SystemChannelMessageDeny}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<SystemChannelMessageDeny>
  nameWithType: Optional<SystemChannelMessageDeny>
  fullName: Discord.Optional<Discord.SystemChannelMessageDeny>
  nameWithType.vb: Optional(Of SystemChannelMessageDeny)
  fullName.vb: Discord.Optional(Of Discord.SystemChannelMessageDeny)
  name.vb: Optional(Of SystemChannelMessageDeny)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.SystemChannelMessageDeny
    name: SystemChannelMessageDeny
    nameWithType: SystemChannelMessageDeny
    fullName: Discord.SystemChannelMessageDeny
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.SystemChannelMessageDeny
    name: SystemChannelMessageDeny
    nameWithType: SystemChannelMessageDeny
    fullName: Discord.SystemChannelMessageDeny
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildProperties.PreferredCulture
  commentId: P:Discord.GuildProperties.PreferredCulture
  isExternal: true
- uid: Discord.GuildProperties.PreferredLocale*
  commentId: Overload:Discord.GuildProperties.PreferredLocale
  name: PreferredLocale
  nameWithType: GuildProperties.PreferredLocale
  fullName: Discord.GuildProperties.PreferredLocale
- uid: Discord.GuildProperties.PreferredLocale
  commentId: P:Discord.GuildProperties.PreferredLocale
  isExternal: true
- uid: Discord.GuildProperties.PreferredCulture*
  commentId: Overload:Discord.GuildProperties.PreferredCulture
  name: PreferredCulture
  nameWithType: GuildProperties.PreferredCulture
  fullName: Discord.GuildProperties.PreferredCulture
- uid: Discord.Optional{System.Globalization.CultureInfo}
  commentId: T:Discord.Optional{System.Globalization.CultureInfo}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<CultureInfo>
  nameWithType: Optional<CultureInfo>
  fullName: Discord.Optional<System.Globalization.CultureInfo>
  nameWithType.vb: Optional(Of CultureInfo)
  fullName.vb: Discord.Optional(Of System.Globalization.CultureInfo)
  name.vb: Optional(Of CultureInfo)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
