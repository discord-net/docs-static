### YamlMime:ManagedReference
items:
- uid: Discord.Commands.OverrideTypeReaderAttribute
  commentId: T:Discord.Commands.OverrideTypeReaderAttribute
  id: OverrideTypeReaderAttribute
  parent: Discord.Commands
  children:
  - Discord.Commands.OverrideTypeReaderAttribute.#ctor(Type)
  - Discord.Commands.OverrideTypeReaderAttribute.TypeReader
  langs:
  - csharp
  - vb
  name: OverrideTypeReaderAttribute
  nameWithType: OverrideTypeReaderAttribute
  fullName: Discord.Commands.OverrideTypeReaderAttribute
  type: Class
  source:
    remote:
      path: src/Discord.Net.Commands/Attributes/OverrideTypeReaderAttribute.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: OverrideTypeReaderAttribute
    path: ../src/Discord.Net.Commands/Attributes/OverrideTypeReaderAttribute.cs
    startLine: 28
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nMarks the <see cref=\"!:Type\"></see> to be read by the specified <xref href=\"Discord.Commands.TypeReader\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThis attribute will override the <xref href=\"Discord.Commands.TypeReader\" data-throw-if-not-resolved=\"false\"></xref> to be used when parsing for the\ndesired type in the command. This is useful when one wishes to use a particular \n<xref href=\"Discord.Commands.TypeReader\" data-throw-if-not-resolved=\"false\"></xref> without affecting other commands that are using the same target\ntype.\n<div class=\"WARNING\"><h5>warning</h5><p>\n    If the given type reader does not inherit from <xref href=\"Discord.Commands.TypeReader\" data-throw-if-not-resolved=\"false\"></xref>, an \n<see cref=\"!:ArgumentException\"></see> will be thrown.\n</p></div>\n"
  example:
  - "\nIn this example, the <see cref=\"!:TimeSpan\"></see> will be read by a custom \n<xref href=\"Discord.Commands.TypeReader\" data-throw-if-not-resolved=\"false\"></xref>, <code>FriendlyTimeSpanTypeReader</code>, instead of the \n<xref href=\"Discord.Commands.TimeSpanTypeReader\" data-throw-if-not-resolved=\"false\"></xref> shipped by Discord.Net.\n<pre><code class=\"lang-cs\">[Command(&quot;time&quot;)]\npublic Task GetTimeAsync([OverrideTypeReader(typeof(FriendlyTimeSpanTypeReader))]TimeSpan time)\n    => ReplyAsync(time);</code></pre>\n"
  syntax:
    content: 'public sealed class OverrideTypeReaderAttribute : Attribute'
    content.vb: >-
      Public NotInheritable Class OverrideTypeReaderAttribute
          Inherits Attribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Discord.Commands.OverrideTypeReaderAttribute.TypeReader
  commentId: P:Discord.Commands.OverrideTypeReaderAttribute.TypeReader
  id: TypeReader
  parent: Discord.Commands.OverrideTypeReaderAttribute
  langs:
  - csharp
  - vb
  name: TypeReader
  nameWithType: OverrideTypeReaderAttribute.TypeReader
  fullName: Discord.Commands.OverrideTypeReaderAttribute.TypeReader
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Attributes/OverrideTypeReaderAttribute.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: TypeReader
    path: ../src/Discord.Net.Commands/Attributes/OverrideTypeReaderAttribute.cs
    startLine: 36
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nGets the specified <xref href=\"Discord.Commands.OverrideTypeReaderAttribute.TypeReader\" data-throw-if-not-resolved=\"false\"></xref> of the parameter. \n"
  example: []
  syntax:
    content: public Type TypeReader { get; }
    parameters: []
    return:
      type: Type
    content.vb: Public ReadOnly Property TypeReader As Type
  overload: Discord.Commands.OverrideTypeReaderAttribute.TypeReader*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.OverrideTypeReaderAttribute.#ctor(Type)
  commentId: M:Discord.Commands.OverrideTypeReaderAttribute.#ctor(Type)
  id: '#ctor(Type)'
  parent: Discord.Commands.OverrideTypeReaderAttribute
  langs:
  - csharp
  - vb
  name: OverrideTypeReaderAttribute(Type)
  nameWithType: OverrideTypeReaderAttribute.OverrideTypeReaderAttribute(Type)
  fullName: Discord.Commands.OverrideTypeReaderAttribute.OverrideTypeReaderAttribute(Type)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Commands/Attributes/OverrideTypeReaderAttribute.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Commands/Attributes/OverrideTypeReaderAttribute.cs
    startLine: 41
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  example: []
  syntax:
    content: public OverrideTypeReaderAttribute(Type overridenTypeReader)
    parameters:
    - id: overridenTypeReader
      type: Type
      description: 'The <xref href="Discord.Commands.OverrideTypeReaderAttribute.TypeReader" data-throw-if-not-resolved="false"></xref> to be used with the parameter. '
    content.vb: Public Sub New(overridenTypeReader As Type)
  overload: Discord.Commands.OverrideTypeReaderAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Discord.Commands.TypeReader
  commentId: T:Discord.Commands.TypeReader
  parent: Discord.Commands
  name: TypeReader
  nameWithType: TypeReader
  fullName: Discord.Commands.TypeReader
- uid: Discord.Commands.TimeSpanTypeReader
  commentId: T:Discord.Commands.TimeSpanTypeReader
  isExternal: true
- uid: Discord.Commands
  commentId: N:Discord.Commands
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Commands.OverrideTypeReaderAttribute.TypeReader
  commentId: P:Discord.Commands.OverrideTypeReaderAttribute.TypeReader
  isExternal: true
- uid: Discord.Commands.OverrideTypeReaderAttribute.TypeReader*
  commentId: Overload:Discord.Commands.OverrideTypeReaderAttribute.TypeReader
  name: TypeReader
  nameWithType: OverrideTypeReaderAttribute.TypeReader
  fullName: Discord.Commands.OverrideTypeReaderAttribute.TypeReader
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: Discord.Commands.OverrideTypeReaderAttribute.#ctor*
  commentId: Overload:Discord.Commands.OverrideTypeReaderAttribute.#ctor
  name: OverrideTypeReaderAttribute
  nameWithType: OverrideTypeReaderAttribute.OverrideTypeReaderAttribute
  fullName: Discord.Commands.OverrideTypeReaderAttribute.OverrideTypeReaderAttribute
