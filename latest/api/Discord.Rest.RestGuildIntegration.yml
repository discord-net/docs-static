### YamlMime:ManagedReference
items:
- uid: Discord.Rest.RestGuildIntegration
  commentId: T:Discord.Rest.RestGuildIntegration
  id: RestGuildIntegration
  parent: Discord.Rest
  children:
  - Discord.Rest.RestGuildIntegration.Account
  - Discord.Rest.RestGuildIntegration.DeleteAsync
  - Discord.Rest.RestGuildIntegration.Discord#IGuildIntegration#Guild
  - Discord.Rest.RestGuildIntegration.Discord#IGuildIntegration#User
  - Discord.Rest.RestGuildIntegration.ExpireBehavior
  - Discord.Rest.RestGuildIntegration.ExpireGracePeriod
  - Discord.Rest.RestGuildIntegration.GuildId
  - Discord.Rest.RestGuildIntegration.IsEnabled
  - Discord.Rest.RestGuildIntegration.IsSyncing
  - Discord.Rest.RestGuildIntegration.ModifyAsync(Action{Discord.GuildIntegrationProperties})
  - Discord.Rest.RestGuildIntegration.Name
  - Discord.Rest.RestGuildIntegration.RoleId
  - Discord.Rest.RestGuildIntegration.SyncAsync
  - Discord.Rest.RestGuildIntegration.SyncedAt
  - Discord.Rest.RestGuildIntegration.ToString
  - Discord.Rest.RestGuildIntegration.Type
  - Discord.Rest.RestGuildIntegration.User
  langs:
  - csharp
  - vb
  name: RestGuildIntegration
  nameWithType: RestGuildIntegration
  fullName: Discord.Rest.RestGuildIntegration
  type: Class
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: RestGuildIntegration
    path: ../src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
    startLine: 7
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: 'public class RestGuildIntegration : RestEntity<ulong>, IEntity<ulong>, IGuildIntegration'
    content.vb: >-
      Public Class RestGuildIntegration
          Inherits RestEntity(Of ULong)
          Implements IEntity(Of ULong), IGuildIntegration
  inheritance:
  - System.Object
  - Discord.Rest.RestEntity{System.UInt64}
  implements:
  - Discord.IEntity{System.UInt64}
  - Discord.IGuildIntegration
  inheritedMembers:
  - Discord.Rest.RestEntity{System.UInt64}.Id
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Rest.RestGuildIntegration.Name
  commentId: P:Discord.Rest.RestGuildIntegration.Name
  id: Name
  parent: Discord.Rest.RestGuildIntegration
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RestGuildIntegration.Name
  fullName: Discord.Rest.RestGuildIntegration.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
    startLine: 13
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Discord.Rest.RestGuildIntegration.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestGuildIntegration.Type
  commentId: P:Discord.Rest.RestGuildIntegration.Type
  id: Type
  parent: Discord.Rest.RestGuildIntegration
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: RestGuildIntegration.Type
  fullName: Discord.Rest.RestGuildIntegration.Type
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Type
    path: ../src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
    startLine: 15
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public string Type { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Type As String
  overload: Discord.Rest.RestGuildIntegration.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestGuildIntegration.IsEnabled
  commentId: P:Discord.Rest.RestGuildIntegration.IsEnabled
  id: IsEnabled
  parent: Discord.Rest.RestGuildIntegration
  langs:
  - csharp
  - vb
  name: IsEnabled
  nameWithType: RestGuildIntegration.IsEnabled
  fullName: Discord.Rest.RestGuildIntegration.IsEnabled
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IsEnabled
    path: ../src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
    startLine: 17
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public bool IsEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEnabled As Boolean
  overload: Discord.Rest.RestGuildIntegration.IsEnabled*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestGuildIntegration.IsSyncing
  commentId: P:Discord.Rest.RestGuildIntegration.IsSyncing
  id: IsSyncing
  parent: Discord.Rest.RestGuildIntegration
  langs:
  - csharp
  - vb
  name: IsSyncing
  nameWithType: RestGuildIntegration.IsSyncing
  fullName: Discord.Rest.RestGuildIntegration.IsSyncing
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IsSyncing
    path: ../src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
    startLine: 19
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public bool IsSyncing { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSyncing As Boolean
  overload: Discord.Rest.RestGuildIntegration.IsSyncing*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestGuildIntegration.ExpireBehavior
  commentId: P:Discord.Rest.RestGuildIntegration.ExpireBehavior
  id: ExpireBehavior
  parent: Discord.Rest.RestGuildIntegration
  langs:
  - csharp
  - vb
  name: ExpireBehavior
  nameWithType: RestGuildIntegration.ExpireBehavior
  fullName: Discord.Rest.RestGuildIntegration.ExpireBehavior
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ExpireBehavior
    path: ../src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
    startLine: 21
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public ulong ExpireBehavior { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property ExpireBehavior As ULong
  overload: Discord.Rest.RestGuildIntegration.ExpireBehavior*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestGuildIntegration.ExpireGracePeriod
  commentId: P:Discord.Rest.RestGuildIntegration.ExpireGracePeriod
  id: ExpireGracePeriod
  parent: Discord.Rest.RestGuildIntegration
  langs:
  - csharp
  - vb
  name: ExpireGracePeriod
  nameWithType: RestGuildIntegration.ExpireGracePeriod
  fullName: Discord.Rest.RestGuildIntegration.ExpireGracePeriod
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ExpireGracePeriod
    path: ../src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
    startLine: 23
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public ulong ExpireGracePeriod { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property ExpireGracePeriod As ULong
  overload: Discord.Rest.RestGuildIntegration.ExpireGracePeriod*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestGuildIntegration.GuildId
  commentId: P:Discord.Rest.RestGuildIntegration.GuildId
  id: GuildId
  parent: Discord.Rest.RestGuildIntegration
  langs:
  - csharp
  - vb
  name: GuildId
  nameWithType: RestGuildIntegration.GuildId
  fullName: Discord.Rest.RestGuildIntegration.GuildId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: GuildId
    path: ../src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
    startLine: 25
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public ulong GuildId { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property GuildId As ULong
  overload: Discord.Rest.RestGuildIntegration.GuildId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestGuildIntegration.RoleId
  commentId: P:Discord.Rest.RestGuildIntegration.RoleId
  id: RoleId
  parent: Discord.Rest.RestGuildIntegration
  langs:
  - csharp
  - vb
  name: RoleId
  nameWithType: RestGuildIntegration.RoleId
  fullName: Discord.Rest.RestGuildIntegration.RoleId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: RoleId
    path: ../src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
    startLine: 27
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public ulong RoleId { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property RoleId As ULong
  overload: Discord.Rest.RestGuildIntegration.RoleId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestGuildIntegration.User
  commentId: P:Discord.Rest.RestGuildIntegration.User
  id: User
  parent: Discord.Rest.RestGuildIntegration
  langs:
  - csharp
  - vb
  name: User
  nameWithType: RestGuildIntegration.User
  fullName: Discord.Rest.RestGuildIntegration.User
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: User
    path: ../src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
    startLine: 28
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: public RestUser User { get; }
    parameters: []
    return:
      type: Discord.Rest.RestUser
    content.vb: Public ReadOnly Property User As RestUser
  overload: Discord.Rest.RestGuildIntegration.User*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestGuildIntegration.Account
  commentId: P:Discord.Rest.RestGuildIntegration.Account
  id: Account
  parent: Discord.Rest.RestGuildIntegration
  langs:
  - csharp
  - vb
  name: Account
  nameWithType: RestGuildIntegration.Account
  fullName: Discord.Rest.RestGuildIntegration.Account
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Account
    path: ../src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
    startLine: 30
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets integration account information.\n"
  example: []
  syntax:
    content: public IntegrationAccount Account { get; }
    parameters: []
    return:
      type: Discord.IntegrationAccount
    content.vb: Public ReadOnly Property Account As IntegrationAccount
  overload: Discord.Rest.RestGuildIntegration.Account*
  implements:
  - Discord.IGuildIntegration.Account
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestGuildIntegration.SyncedAt
  commentId: P:Discord.Rest.RestGuildIntegration.SyncedAt
  id: SyncedAt
  parent: Discord.Rest.RestGuildIntegration
  langs:
  - csharp
  - vb
  name: SyncedAt
  nameWithType: RestGuildIntegration.SyncedAt
  fullName: Discord.Rest.RestGuildIntegration.SyncedAt
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: SyncedAt
    path: ../src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
    startLine: 34
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public DateTimeOffset SyncedAt { get; }
    parameters: []
    return:
      type: DateTimeOffset
    content.vb: Public ReadOnly Property SyncedAt As DateTimeOffset
  overload: Discord.Rest.RestGuildIntegration.SyncedAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestGuildIntegration.DeleteAsync
  commentId: M:Discord.Rest.RestGuildIntegration.DeleteAsync
  id: DeleteAsync
  parent: Discord.Rest.RestGuildIntegration
  langs:
  - csharp
  - vb
  name: DeleteAsync()
  nameWithType: RestGuildIntegration.DeleteAsync()
  fullName: Discord.Rest.RestGuildIntegration.DeleteAsync()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: DeleteAsync
    path: ../src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
    startLine: 62
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: public Task DeleteAsync()
    return:
      type: Task
    content.vb: Public Function DeleteAsync As Task
  overload: Discord.Rest.RestGuildIntegration.DeleteAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Rest.RestGuildIntegration.ModifyAsync(Action{Discord.GuildIntegrationProperties})
  commentId: M:Discord.Rest.RestGuildIntegration.ModifyAsync(Action{Discord.GuildIntegrationProperties})
  id: ModifyAsync(Action{Discord.GuildIntegrationProperties})
  parent: Discord.Rest.RestGuildIntegration
  langs:
  - csharp
  - vb
  name: ModifyAsync(Action<GuildIntegrationProperties>)
  nameWithType: RestGuildIntegration.ModifyAsync(Action<GuildIntegrationProperties>)
  fullName: Discord.Rest.RestGuildIntegration.ModifyAsync(Action<Discord.GuildIntegrationProperties>)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ModifyAsync
    path: ../src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
    startLine: 66
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: public Task ModifyAsync(Action<GuildIntegrationProperties> func)
    parameters:
    - id: func
      type: Action{Discord.GuildIntegrationProperties}
    return:
      type: Task
    content.vb: Public Function ModifyAsync(func As Action(Of GuildIntegrationProperties)) As Task
  overload: Discord.Rest.RestGuildIntegration.ModifyAsync*
  nameWithType.vb: RestGuildIntegration.ModifyAsync(Action(Of GuildIntegrationProperties))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Rest.RestGuildIntegration.ModifyAsync(Action(Of Discord.GuildIntegrationProperties))
  name.vb: ModifyAsync(Action(Of GuildIntegrationProperties))
- uid: Discord.Rest.RestGuildIntegration.SyncAsync
  commentId: M:Discord.Rest.RestGuildIntegration.SyncAsync
  id: SyncAsync
  parent: Discord.Rest.RestGuildIntegration
  langs:
  - csharp
  - vb
  name: SyncAsync()
  nameWithType: RestGuildIntegration.SyncAsync()
  fullName: Discord.Rest.RestGuildIntegration.SyncAsync()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: SyncAsync
    path: ../src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
    startLine: 82
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: public Task SyncAsync()
    return:
      type: Task
    content.vb: Public Function SyncAsync As Task
  overload: Discord.Rest.RestGuildIntegration.SyncAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Rest.RestGuildIntegration.ToString
  commentId: M:Discord.Rest.RestGuildIntegration.ToString
  id: ToString
  parent: Discord.Rest.RestGuildIntegration
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RestGuildIntegration.ToString()
  fullName: Discord.Rest.RestGuildIntegration.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
    startLine: 87
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: Discord.Rest.RestGuildIntegration.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Discord.Rest.RestGuildIntegration.Discord#IGuildIntegration#Guild
  commentId: P:Discord.Rest.RestGuildIntegration.Discord#IGuildIntegration#Guild
  id: Discord#IGuildIntegration#Guild
  isEii: true
  parent: Discord.Rest.RestGuildIntegration
  langs:
  - csharp
  - vb
  name: IGuildIntegration.Guild
  nameWithType: RestGuildIntegration.IGuildIntegration.Guild
  fullName: Discord.Rest.RestGuildIntegration.Discord.IGuildIntegration.Guild
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IGuildIntegration.Guild
    path: ../src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
    startLine: 91
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: IGuild IGuildIntegration.Guild { get; }
    parameters: []
    return:
      type: Discord.IGuild
    content.vb: ReadOnly WriteOnly Property Discord.IGuildIntegration.Guild As IGuild Implements IGuildIntegration.Guild
  overload: Discord.Rest.RestGuildIntegration.Discord#IGuildIntegration#Guild*
  implements:
  - Discord.IGuildIntegration.Guild
  nameWithType.vb: RestGuildIntegration.Discord.IGuildIntegration.Guild
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IGuildIntegration.Guild
- uid: Discord.Rest.RestGuildIntegration.Discord#IGuildIntegration#User
  commentId: P:Discord.Rest.RestGuildIntegration.Discord#IGuildIntegration#User
  id: Discord#IGuildIntegration#User
  isEii: true
  parent: Discord.Rest.RestGuildIntegration
  langs:
  - csharp
  - vb
  name: IGuildIntegration.User
  nameWithType: RestGuildIntegration.IGuildIntegration.User
  fullName: Discord.Rest.RestGuildIntegration.Discord.IGuildIntegration.User
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IGuildIntegration.User
    path: ../src/Discord.Net.Rest/Entities/Guilds/RestGuildIntegration.cs
    startLine: 101
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: IUser IGuildIntegration.User { get; }
    parameters: []
    return:
      type: Discord.IUser
    content.vb: ReadOnly WriteOnly Property Discord.IGuildIntegration.User As IUser Implements IGuildIntegration.User
  overload: Discord.Rest.RestGuildIntegration.Discord#IGuildIntegration#User*
  implements:
  - Discord.IGuildIntegration.User
  nameWithType.vb: RestGuildIntegration.Discord.IGuildIntegration.User
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IGuildIntegration.User
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Rest.RestEntity{System.UInt64}
  commentId: T:Discord.Rest.RestEntity{System.UInt64}
  parent: Discord.Rest
  definition: Discord.Rest.RestEntity`1
  name: RestEntity<UInt64>
  nameWithType: RestEntity<UInt64>
  fullName: Discord.Rest.RestEntity<System.UInt64>
  nameWithType.vb: RestEntity(Of UInt64)
  fullName.vb: Discord.Rest.RestEntity(Of System.UInt64)
  name.vb: RestEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEntity{System.UInt64}
  commentId: T:Discord.IEntity{System.UInt64}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<UInt64>
  nameWithType: IEntity<UInt64>
  fullName: Discord.IEntity<System.UInt64>
  nameWithType.vb: IEntity(Of UInt64)
  fullName.vb: Discord.IEntity(Of System.UInt64)
  name.vb: IEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IGuildIntegration
  commentId: T:Discord.IGuildIntegration
  parent: Discord
  name: IGuildIntegration
  nameWithType: IGuildIntegration
  fullName: Discord.IGuildIntegration
- uid: Discord.Rest.RestEntity{System.UInt64}.Id
  commentId: P:Discord.Rest.RestEntity{System.UInt64}.Id
  parent: Discord.Rest.RestEntity{System.UInt64}
  definition: Discord.Rest.RestEntity`1.Id
  name: Id
  nameWithType: RestEntity<UInt64>.Id
  fullName: Discord.Rest.RestEntity<System.UInt64>.Id
  nameWithType.vb: RestEntity(Of UInt64).Id
  fullName.vb: Discord.Rest.RestEntity(Of System.UInt64).Id
- uid: Discord.Rest.RestEntity`1
  commentId: T:Discord.Rest.RestEntity`1
  name: RestEntity<T>
  nameWithType: RestEntity<T>
  fullName: Discord.Rest.RestEntity<T>
  nameWithType.vb: RestEntity(Of T)
  fullName.vb: Discord.Rest.RestEntity(Of T)
  name.vb: RestEntity(Of T)
  spec.csharp:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Rest.RestEntity`1.Id
  commentId: P:Discord.Rest.RestEntity`1.Id
  name: Id
  nameWithType: RestEntity<T>.Id
  fullName: Discord.Rest.RestEntity<T>.Id
  nameWithType.vb: RestEntity(Of T).Id
  fullName.vb: Discord.Rest.RestEntity(Of T).Id
- uid: Discord.Rest.RestGuildIntegration.Name*
  commentId: Overload:Discord.Rest.RestGuildIntegration.Name
  name: Name
  nameWithType: RestGuildIntegration.Name
  fullName: Discord.Rest.RestGuildIntegration.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Rest.RestGuildIntegration.Type*
  commentId: Overload:Discord.Rest.RestGuildIntegration.Type
  name: Type
  nameWithType: RestGuildIntegration.Type
  fullName: Discord.Rest.RestGuildIntegration.Type
- uid: Discord.Rest.RestGuildIntegration.IsEnabled*
  commentId: Overload:Discord.Rest.RestGuildIntegration.IsEnabled
  name: IsEnabled
  nameWithType: RestGuildIntegration.IsEnabled
  fullName: Discord.Rest.RestGuildIntegration.IsEnabled
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.Rest.RestGuildIntegration.IsSyncing*
  commentId: Overload:Discord.Rest.RestGuildIntegration.IsSyncing
  name: IsSyncing
  nameWithType: RestGuildIntegration.IsSyncing
  fullName: Discord.Rest.RestGuildIntegration.IsSyncing
- uid: Discord.Rest.RestGuildIntegration.ExpireBehavior*
  commentId: Overload:Discord.Rest.RestGuildIntegration.ExpireBehavior
  name: ExpireBehavior
  nameWithType: RestGuildIntegration.ExpireBehavior
  fullName: Discord.Rest.RestGuildIntegration.ExpireBehavior
- uid: System.UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.Rest.RestGuildIntegration.ExpireGracePeriod*
  commentId: Overload:Discord.Rest.RestGuildIntegration.ExpireGracePeriod
  name: ExpireGracePeriod
  nameWithType: RestGuildIntegration.ExpireGracePeriod
  fullName: Discord.Rest.RestGuildIntegration.ExpireGracePeriod
- uid: Discord.Rest.RestGuildIntegration.GuildId*
  commentId: Overload:Discord.Rest.RestGuildIntegration.GuildId
  name: GuildId
  nameWithType: RestGuildIntegration.GuildId
  fullName: Discord.Rest.RestGuildIntegration.GuildId
- uid: Discord.Rest.RestGuildIntegration.RoleId*
  commentId: Overload:Discord.Rest.RestGuildIntegration.RoleId
  name: RoleId
  nameWithType: RestGuildIntegration.RoleId
  fullName: Discord.Rest.RestGuildIntegration.RoleId
- uid: Discord.Rest.RestGuildIntegration.User*
  commentId: Overload:Discord.Rest.RestGuildIntegration.User
  name: User
  nameWithType: RestGuildIntegration.User
  fullName: Discord.Rest.RestGuildIntegration.User
- uid: Discord.Rest.RestUser
  commentId: T:Discord.Rest.RestUser
  parent: Discord.Rest
  name: RestUser
  nameWithType: RestUser
  fullName: Discord.Rest.RestUser
- uid: Discord.Rest.RestGuildIntegration.Account*
  commentId: Overload:Discord.Rest.RestGuildIntegration.Account
  name: Account
  nameWithType: RestGuildIntegration.Account
  fullName: Discord.Rest.RestGuildIntegration.Account
- uid: Discord.IGuildIntegration.Account
  commentId: P:Discord.IGuildIntegration.Account
  parent: Discord.IGuildIntegration
  name: Account
  nameWithType: IGuildIntegration.Account
  fullName: Discord.IGuildIntegration.Account
- uid: Discord.IntegrationAccount
  commentId: T:Discord.IntegrationAccount
  parent: Discord
  name: IntegrationAccount
  nameWithType: IntegrationAccount
  fullName: Discord.IntegrationAccount
- uid: Discord.Rest.RestGuildIntegration.SyncedAt*
  commentId: Overload:Discord.Rest.RestGuildIntegration.SyncedAt
  name: SyncedAt
  nameWithType: RestGuildIntegration.SyncedAt
  fullName: Discord.Rest.RestGuildIntegration.SyncedAt
- uid: DateTimeOffset
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: DateTimeOffset
- uid: Discord.Rest.RestGuildIntegration.DeleteAsync*
  commentId: Overload:Discord.Rest.RestGuildIntegration.DeleteAsync
  name: DeleteAsync
  nameWithType: RestGuildIntegration.DeleteAsync
  fullName: Discord.Rest.RestGuildIntegration.DeleteAsync
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Discord.Rest.RestGuildIntegration.ModifyAsync*
  commentId: Overload:Discord.Rest.RestGuildIntegration.ModifyAsync
  name: ModifyAsync
  nameWithType: RestGuildIntegration.ModifyAsync
  fullName: Discord.Rest.RestGuildIntegration.ModifyAsync
- uid: Action{Discord.GuildIntegrationProperties}
  commentId: '!:Action{Discord.GuildIntegrationProperties}'
  definition: Action`1
  name: Action<GuildIntegrationProperties>
  nameWithType: Action<GuildIntegrationProperties>
  fullName: Action<Discord.GuildIntegrationProperties>
  nameWithType.vb: Action(Of GuildIntegrationProperties)
  fullName.vb: Action(Of Discord.GuildIntegrationProperties)
  name.vb: Action(Of GuildIntegrationProperties)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.GuildIntegrationProperties
    name: GuildIntegrationProperties
    nameWithType: GuildIntegrationProperties
    fullName: Discord.GuildIntegrationProperties
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.GuildIntegrationProperties
    name: GuildIntegrationProperties
    nameWithType: GuildIntegrationProperties
    fullName: Discord.GuildIntegrationProperties
  - name: )
    nameWithType: )
    fullName: )
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestGuildIntegration.SyncAsync*
  commentId: Overload:Discord.Rest.RestGuildIntegration.SyncAsync
  name: SyncAsync
  nameWithType: RestGuildIntegration.SyncAsync
  fullName: Discord.Rest.RestGuildIntegration.SyncAsync
- uid: Discord.Rest.RestGuildIntegration.ToString*
  commentId: Overload:Discord.Rest.RestGuildIntegration.ToString
  name: ToString
  nameWithType: RestGuildIntegration.ToString
  fullName: Discord.Rest.RestGuildIntegration.ToString
- uid: Discord.Rest.RestGuildIntegration.Discord#IGuildIntegration#Guild*
  commentId: Overload:Discord.Rest.RestGuildIntegration.Discord#IGuildIntegration#Guild
  name: IGuildIntegration.Guild
  nameWithType: RestGuildIntegration.IGuildIntegration.Guild
  fullName: Discord.Rest.RestGuildIntegration.Discord.IGuildIntegration.Guild
  nameWithType.vb: RestGuildIntegration.Discord.IGuildIntegration.Guild
  name.vb: Discord.IGuildIntegration.Guild
- uid: Discord.IGuildIntegration.Guild
  commentId: P:Discord.IGuildIntegration.Guild
  parent: Discord.IGuildIntegration
  name: Guild
  nameWithType: IGuildIntegration.Guild
  fullName: Discord.IGuildIntegration.Guild
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: Discord.Rest.RestGuildIntegration.Discord#IGuildIntegration#User*
  commentId: Overload:Discord.Rest.RestGuildIntegration.Discord#IGuildIntegration#User
  name: IGuildIntegration.User
  nameWithType: RestGuildIntegration.IGuildIntegration.User
  fullName: Discord.Rest.RestGuildIntegration.Discord.IGuildIntegration.User
  nameWithType.vb: RestGuildIntegration.Discord.IGuildIntegration.User
  name.vb: Discord.IGuildIntegration.User
- uid: Discord.IGuildIntegration.User
  commentId: P:Discord.IGuildIntegration.User
  parent: Discord.IGuildIntegration
  name: User
  nameWithType: IGuildIntegration.User
  fullName: Discord.IGuildIntegration.User
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
