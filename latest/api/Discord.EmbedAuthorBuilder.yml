### YamlMime:ManagedReference
items:
- uid: Discord.EmbedAuthorBuilder
  commentId: T:Discord.EmbedAuthorBuilder
  id: EmbedAuthorBuilder
  parent: Discord
  children:
  - Discord.EmbedAuthorBuilder.Build
  - Discord.EmbedAuthorBuilder.IconUrl
  - Discord.EmbedAuthorBuilder.MaxAuthorNameLength
  - Discord.EmbedAuthorBuilder.Name
  - Discord.EmbedAuthorBuilder.Url
  - Discord.EmbedAuthorBuilder.WithIconUrl(System.String)
  - Discord.EmbedAuthorBuilder.WithName(System.String)
  - Discord.EmbedAuthorBuilder.WithUrl(System.String)
  langs:
  - csharp
  - vb
  name: EmbedAuthorBuilder
  nameWithType: EmbedAuthorBuilder
  fullName: Discord.EmbedAuthorBuilder
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: EmbedAuthorBuilder
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 552
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nRepresents a builder class for a author field.\n"
  example: []
  syntax:
    content: public class EmbedAuthorBuilder
    content.vb: Public Class EmbedAuthorBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.EmbedAuthorBuilder.MaxAuthorNameLength
  commentId: F:Discord.EmbedAuthorBuilder.MaxAuthorNameLength
  id: MaxAuthorNameLength
  parent: Discord.EmbedAuthorBuilder
  langs:
  - csharp
  - vb
  name: MaxAuthorNameLength
  nameWithType: EmbedAuthorBuilder.MaxAuthorNameLength
  fullName: Discord.EmbedAuthorBuilder.MaxAuthorNameLength
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MaxAuthorNameLength
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 560
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the maximum author name length allowed by Discord.\n"
  example: []
  syntax:
    content: public const int MaxAuthorNameLength = 256
    return:
      type: System.Int32
    content.vb: Public Const MaxAuthorNameLength As Integer = 256
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.EmbedAuthorBuilder.Name
  commentId: P:Discord.EmbedAuthorBuilder.Name
  id: Name
  parent: Discord.EmbedAuthorBuilder
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: EmbedAuthorBuilder.Name
  fullName: Discord.EmbedAuthorBuilder.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 571
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the author name.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe author name.\n"
    content.vb: Public Property Name As String
  overload: Discord.EmbedAuthorBuilder.Name*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nAuthor name length is longer than <xref href=\"Discord.EmbedAuthorBuilder.MaxAuthorNameLength\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.EmbedAuthorBuilder.Url
  commentId: P:Discord.EmbedAuthorBuilder.Url
  id: Url
  parent: Discord.EmbedAuthorBuilder
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: EmbedAuthorBuilder.Url
  fullName: Discord.EmbedAuthorBuilder.Url
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Url
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 587
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the URL of the author field.\n"
  example: []
  syntax:
    content: public string Url { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe URL of the author field.\n"
    content.vb: Public Property Url As String
  overload: Discord.EmbedAuthorBuilder.Url*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Url is not a well-formed <xref href="System.Uri" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.EmbedAuthorBuilder.IconUrl
  commentId: P:Discord.EmbedAuthorBuilder.IconUrl
  id: IconUrl
  parent: Discord.EmbedAuthorBuilder
  langs:
  - csharp
  - vb
  name: IconUrl
  nameWithType: EmbedAuthorBuilder.IconUrl
  fullName: Discord.EmbedAuthorBuilder.IconUrl
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IconUrl
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 603
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the icon URL of the author field.\n"
  example: []
  syntax:
    content: public string IconUrl { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe icon URL of the author field.\n"
    content.vb: Public Property IconUrl As String
  overload: Discord.EmbedAuthorBuilder.IconUrl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Url is not a well-formed <xref href="System.Uri" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.EmbedAuthorBuilder.WithName(System.String)
  commentId: M:Discord.EmbedAuthorBuilder.WithName(System.String)
  id: WithName(System.String)
  parent: Discord.EmbedAuthorBuilder
  langs:
  - csharp
  - vb
  name: WithName(String)
  nameWithType: EmbedAuthorBuilder.WithName(String)
  fullName: Discord.EmbedAuthorBuilder.WithName(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithName
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 620
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the name of the author field.\n"
  example: []
  syntax:
    content: public EmbedAuthorBuilder WithName(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the author field.
    return:
      type: Discord.EmbedAuthorBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithName(name As String) As EmbedAuthorBuilder
  overload: Discord.EmbedAuthorBuilder.WithName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedAuthorBuilder.WithUrl(System.String)
  commentId: M:Discord.EmbedAuthorBuilder.WithUrl(System.String)
  id: WithUrl(System.String)
  parent: Discord.EmbedAuthorBuilder
  langs:
  - csharp
  - vb
  name: WithUrl(String)
  nameWithType: EmbedAuthorBuilder.WithUrl(String)
  fullName: Discord.EmbedAuthorBuilder.WithUrl(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithUrl
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 632
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the URL of the author field.\n"
  example: []
  syntax:
    content: public EmbedAuthorBuilder WithUrl(string url)
    parameters:
    - id: url
      type: System.String
      description: The URL of the author field.
    return:
      type: Discord.EmbedAuthorBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithUrl(url As String) As EmbedAuthorBuilder
  overload: Discord.EmbedAuthorBuilder.WithUrl*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedAuthorBuilder.WithIconUrl(System.String)
  commentId: M:Discord.EmbedAuthorBuilder.WithIconUrl(System.String)
  id: WithIconUrl(System.String)
  parent: Discord.EmbedAuthorBuilder
  langs:
  - csharp
  - vb
  name: WithIconUrl(String)
  nameWithType: EmbedAuthorBuilder.WithIconUrl(String)
  fullName: Discord.EmbedAuthorBuilder.WithIconUrl(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithIconUrl
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 644
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the icon URL of the author field.\n"
  example: []
  syntax:
    content: public EmbedAuthorBuilder WithIconUrl(string iconUrl)
    parameters:
    - id: iconUrl
      type: System.String
      description: The icon URL of the author field.
    return:
      type: Discord.EmbedAuthorBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithIconUrl(iconUrl As String) As EmbedAuthorBuilder
  overload: Discord.EmbedAuthorBuilder.WithIconUrl*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedAuthorBuilder.Build
  commentId: M:Discord.EmbedAuthorBuilder.Build
  id: Build
  parent: Discord.EmbedAuthorBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: EmbedAuthorBuilder.Build()
  fullName: Discord.EmbedAuthorBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Build
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 663
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nBuilds the author field to be used.\n"
  example: []
  syntax:
    content: public EmbedAuthor Build()
    return:
      type: Discord.EmbedAuthor
      description: "\nThe built author field.\n"
    content.vb: Public Function Build As EmbedAuthor
  overload: Discord.EmbedAuthorBuilder.Build*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n<p>Author name length is longer than <xref href=\"Discord.EmbedAuthorBuilder.MaxAuthorNameLength\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p><code>- or -</code></p>\n<p><xref href=\"Discord.EmbedAuthorBuilder.Url\" data-throw-if-not-resolved=\"false\"></xref> is not a well-formed <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n<p><code>- or -</code></p>\n<p><xref href=\"Discord.EmbedAuthorBuilder.IconUrl\" data-throw-if-not-resolved=\"false\"></xref> is not a well-formed <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Discord.EmbedAuthorBuilder.MaxAuthorNameLength
  commentId: F:Discord.EmbedAuthorBuilder.MaxAuthorNameLength
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Discord.EmbedAuthorBuilder.Name*
  commentId: Overload:Discord.EmbedAuthorBuilder.Name
  name: Name
  nameWithType: EmbedAuthorBuilder.Name
  fullName: Discord.EmbedAuthorBuilder.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri
  commentId: T:System.Uri
  isExternal: true
- uid: Discord.EmbedAuthorBuilder.Url*
  commentId: Overload:Discord.EmbedAuthorBuilder.Url
  name: Url
  nameWithType: EmbedAuthorBuilder.Url
  fullName: Discord.EmbedAuthorBuilder.Url
- uid: Discord.EmbedAuthorBuilder.IconUrl*
  commentId: Overload:Discord.EmbedAuthorBuilder.IconUrl
  name: IconUrl
  nameWithType: EmbedAuthorBuilder.IconUrl
  fullName: Discord.EmbedAuthorBuilder.IconUrl
- uid: Discord.EmbedAuthorBuilder.WithName*
  commentId: Overload:Discord.EmbedAuthorBuilder.WithName
  name: WithName
  nameWithType: EmbedAuthorBuilder.WithName
  fullName: Discord.EmbedAuthorBuilder.WithName
- uid: Discord.EmbedAuthorBuilder
  commentId: T:Discord.EmbedAuthorBuilder
  parent: Discord
  name: EmbedAuthorBuilder
  nameWithType: EmbedAuthorBuilder
  fullName: Discord.EmbedAuthorBuilder
- uid: Discord.EmbedAuthorBuilder.WithUrl*
  commentId: Overload:Discord.EmbedAuthorBuilder.WithUrl
  name: WithUrl
  nameWithType: EmbedAuthorBuilder.WithUrl
  fullName: Discord.EmbedAuthorBuilder.WithUrl
- uid: Discord.EmbedAuthorBuilder.WithIconUrl*
  commentId: Overload:Discord.EmbedAuthorBuilder.WithIconUrl
  name: WithIconUrl
  nameWithType: EmbedAuthorBuilder.WithIconUrl
  fullName: Discord.EmbedAuthorBuilder.WithIconUrl
- uid: Discord.EmbedAuthorBuilder.Url
  commentId: P:Discord.EmbedAuthorBuilder.Url
  isExternal: true
- uid: Discord.EmbedAuthorBuilder.IconUrl
  commentId: P:Discord.EmbedAuthorBuilder.IconUrl
  isExternal: true
- uid: Discord.EmbedAuthorBuilder.Build*
  commentId: Overload:Discord.EmbedAuthorBuilder.Build
  name: Build
  nameWithType: EmbedAuthorBuilder.Build
  fullName: Discord.EmbedAuthorBuilder.Build
- uid: Discord.EmbedAuthor
  commentId: T:Discord.EmbedAuthor
  parent: Discord
  name: EmbedAuthor
  nameWithType: EmbedAuthor
  fullName: Discord.EmbedAuthor
