### YamlMime:ManagedReference
items:
- uid: Discord.Commands.RuntimeResult
  commentId: T:Discord.Commands.RuntimeResult
  id: RuntimeResult
  parent: Discord.Commands
  children:
  - Discord.Commands.RuntimeResult.#ctor(System.Nullable{Discord.Commands.CommandError},System.String)
  - Discord.Commands.RuntimeResult.Discord#Commands#IResult#ErrorReason
  - Discord.Commands.RuntimeResult.Error
  - Discord.Commands.RuntimeResult.IsSuccess
  - Discord.Commands.RuntimeResult.Reason
  - Discord.Commands.RuntimeResult.ToString
  langs:
  - csharp
  - vb
  name: RuntimeResult
  nameWithType: RuntimeResult
  fullName: Discord.Commands.RuntimeResult
  type: Class
  source:
    remote:
      path: src/Discord.Net.Commands/Results/RuntimeResult.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RuntimeResult
    path: ../src/Discord.Net.Commands/Results/RuntimeResult.cs
    startLine: 4
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  syntax:
    content: 'public abstract class RuntimeResult : IResult'
    content.vb: >-
      Public MustInherit Class RuntimeResult
          Implements IResult
  inheritance:
  - System.Object
  implements:
  - Discord.Commands.IResult
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Discord.Commands.RuntimeResult.#ctor(System.Nullable{Discord.Commands.CommandError},System.String)
  commentId: M:Discord.Commands.RuntimeResult.#ctor(System.Nullable{Discord.Commands.CommandError},System.String)
  id: '#ctor(System.Nullable{Discord.Commands.CommandError},System.String)'
  parent: Discord.Commands.RuntimeResult
  langs:
  - csharp
  - vb
  name: RuntimeResult(Nullable<CommandError>, String)
  nameWithType: RuntimeResult.RuntimeResult(Nullable<CommandError>, String)
  fullName: Discord.Commands.RuntimeResult.RuntimeResult(System.Nullable<Discord.Commands.CommandError>, System.String)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Commands/Results/RuntimeResult.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Commands/Results/RuntimeResult.cs
    startLine: 12
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nInitializes a new <xref href=\"Discord.Commands.RuntimeResult\" data-throw-if-not-resolved=\"false\"></xref> class with the type of error and reason.\n"
  example: []
  syntax:
    content: protected RuntimeResult(CommandError? error, string reason)
    parameters:
    - id: error
      type: System.Nullable{Discord.Commands.CommandError}
      description: The type of failure, or <code>null</code> if none.
    - id: reason
      type: System.String
      description: The reason of failure.
    content.vb: Protected Sub New(error As CommandError?, reason As String)
  overload: Discord.Commands.RuntimeResult.#ctor*
  nameWithType.vb: RuntimeResult.RuntimeResult(Nullable(Of CommandError), String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Discord.Commands.RuntimeResult.RuntimeResult(System.Nullable(Of Discord.Commands.CommandError), System.String)
  name.vb: RuntimeResult(Nullable(Of CommandError), String)
- uid: Discord.Commands.RuntimeResult.Error
  commentId: P:Discord.Commands.RuntimeResult.Error
  id: Error
  parent: Discord.Commands.RuntimeResult
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: RuntimeResult.Error
  fullName: Discord.Commands.RuntimeResult.Error
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Results/RuntimeResult.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Error
    path: ../src/Discord.Net.Commands/Results/RuntimeResult.cs
    startLine: 19
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nDescribes the error type that may have occurred during the operation.\n"
  example: []
  syntax:
    content: public CommandError? Error { get; }
    parameters: []
    return:
      type: System.Nullable{Discord.Commands.CommandError}
      description: "\nA <xref href=\"Discord.Commands.CommandError\" data-throw-if-not-resolved=\"false\"></xref> indicating the type of error that may have occurred during the operation; \n<code>null</code> if the operation was successful.\n"
    content.vb: Public ReadOnly Property Error As CommandError?
  overload: Discord.Commands.RuntimeResult.Error*
  implements:
  - Discord.Commands.IResult.Error
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.RuntimeResult.Reason
  commentId: P:Discord.Commands.RuntimeResult.Reason
  id: Reason
  parent: Discord.Commands.RuntimeResult
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: RuntimeResult.Reason
  fullName: Discord.Commands.RuntimeResult.Reason
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Results/RuntimeResult.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Reason
    path: ../src/Discord.Net.Commands/Results/RuntimeResult.cs
    startLine: 21
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: 'Describes the execution reason or result. '
  example: []
  syntax:
    content: public string Reason { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Reason As String
  overload: Discord.Commands.RuntimeResult.Reason*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.RuntimeResult.IsSuccess
  commentId: P:Discord.Commands.RuntimeResult.IsSuccess
  id: IsSuccess
  parent: Discord.Commands.RuntimeResult
  langs:
  - csharp
  - vb
  name: IsSuccess
  nameWithType: RuntimeResult.IsSuccess
  fullName: Discord.Commands.RuntimeResult.IsSuccess
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Results/RuntimeResult.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsSuccess
    path: ../src/Discord.Net.Commands/Results/RuntimeResult.cs
    startLine: 24
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nIndicates whether the operation was successful or not.\n"
  example: []
  syntax:
    content: public bool IsSuccess { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the result is positive; otherwise <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsSuccess As Boolean
  overload: Discord.Commands.RuntimeResult.IsSuccess*
  implements:
  - Discord.Commands.IResult.IsSuccess
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.RuntimeResult.Discord#Commands#IResult#ErrorReason
  commentId: P:Discord.Commands.RuntimeResult.Discord#Commands#IResult#ErrorReason
  id: Discord#Commands#IResult#ErrorReason
  isEii: true
  parent: Discord.Commands.RuntimeResult
  langs:
  - csharp
  - vb
  name: IResult.ErrorReason
  nameWithType: RuntimeResult.IResult.ErrorReason
  fullName: Discord.Commands.RuntimeResult.Discord.Commands.IResult.ErrorReason
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Results/RuntimeResult.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.Commands.IResult.ErrorReason
    path: ../src/Discord.Net.Commands/Results/RuntimeResult.cs
    startLine: 27
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nDescribes the reason for the error.\n"
  example: []
  syntax:
    content: string IResult.ErrorReason { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the error reason.\n"
    content.vb: ReadOnly WriteOnly Property Discord.Commands.IResult.ErrorReason As String Implements IResult.ErrorReason
  overload: Discord.Commands.RuntimeResult.Discord#Commands#IResult#ErrorReason*
  implements:
  - Discord.Commands.IResult.ErrorReason
  nameWithType.vb: RuntimeResult.Discord.Commands.IResult.ErrorReason
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.Commands.IResult.ErrorReason
- uid: Discord.Commands.RuntimeResult.ToString
  commentId: M:Discord.Commands.RuntimeResult.ToString
  id: ToString
  parent: Discord.Commands.RuntimeResult
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RuntimeResult.ToString()
  fullName: Discord.Commands.RuntimeResult.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Results/RuntimeResult.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.Commands/Results/RuntimeResult.cs
    startLine: 29
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Discord.Commands.RuntimeResult.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Discord.Commands
  commentId: N:Discord.Commands
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Commands.IResult
  commentId: T:Discord.Commands.IResult
  parent: Discord.Commands
  name: IResult
  nameWithType: IResult
  fullName: Discord.Commands.IResult
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Commands.RuntimeResult
  commentId: T:Discord.Commands.RuntimeResult
  name: RuntimeResult
  nameWithType: RuntimeResult
  fullName: Discord.Commands.RuntimeResult
- uid: Discord.Commands.RuntimeResult.#ctor*
  commentId: Overload:Discord.Commands.RuntimeResult.#ctor
  name: RuntimeResult
  nameWithType: RuntimeResult.RuntimeResult
  fullName: Discord.Commands.RuntimeResult.RuntimeResult
- uid: System.Nullable{Discord.Commands.CommandError}
  commentId: T:System.Nullable{Discord.Commands.CommandError}
  parent: System
  definition: System.Nullable`1
  name: Nullable<CommandError>
  nameWithType: Nullable<CommandError>
  fullName: System.Nullable<Discord.Commands.CommandError>
  nameWithType.vb: Nullable(Of CommandError)
  fullName.vb: System.Nullable(Of Discord.Commands.CommandError)
  name.vb: Nullable(Of CommandError)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Commands.CommandError
    name: CommandError
    nameWithType: CommandError
    fullName: Discord.Commands.CommandError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Commands.CommandError
    name: CommandError
    nameWithType: CommandError
    fullName: Discord.Commands.CommandError
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Commands.RuntimeResult.Error*
  commentId: Overload:Discord.Commands.RuntimeResult.Error
  name: Error
  nameWithType: RuntimeResult.Error
  fullName: Discord.Commands.RuntimeResult.Error
- uid: Discord.Commands.IResult.Error
  commentId: P:Discord.Commands.IResult.Error
  parent: Discord.Commands.IResult
  name: Error
  nameWithType: IResult.Error
  fullName: Discord.Commands.IResult.Error
- uid: Discord.Commands.RuntimeResult.Reason*
  commentId: Overload:Discord.Commands.RuntimeResult.Reason
  name: Reason
  nameWithType: RuntimeResult.Reason
  fullName: Discord.Commands.RuntimeResult.Reason
- uid: Discord.Commands.RuntimeResult.IsSuccess*
  commentId: Overload:Discord.Commands.RuntimeResult.IsSuccess
  name: IsSuccess
  nameWithType: RuntimeResult.IsSuccess
  fullName: Discord.Commands.RuntimeResult.IsSuccess
- uid: Discord.Commands.IResult.IsSuccess
  commentId: P:Discord.Commands.IResult.IsSuccess
  parent: Discord.Commands.IResult
  name: IsSuccess
  nameWithType: IResult.IsSuccess
  fullName: Discord.Commands.IResult.IsSuccess
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.Commands.RuntimeResult.Discord#Commands#IResult#ErrorReason*
  commentId: Overload:Discord.Commands.RuntimeResult.Discord#Commands#IResult#ErrorReason
  name: IResult.ErrorReason
  nameWithType: RuntimeResult.IResult.ErrorReason
  fullName: Discord.Commands.RuntimeResult.Discord.Commands.IResult.ErrorReason
  nameWithType.vb: RuntimeResult.Discord.Commands.IResult.ErrorReason
  name.vb: Discord.Commands.IResult.ErrorReason
- uid: Discord.Commands.IResult.ErrorReason
  commentId: P:Discord.Commands.IResult.ErrorReason
  parent: Discord.Commands.IResult
  name: ErrorReason
  nameWithType: IResult.ErrorReason
  fullName: Discord.Commands.IResult.ErrorReason
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Commands.RuntimeResult.ToString*
  commentId: Overload:Discord.Commands.RuntimeResult.ToString
  name: ToString
  nameWithType: RuntimeResult.ToString
  fullName: Discord.Commands.RuntimeResult.ToString
