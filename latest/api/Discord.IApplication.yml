### YamlMime:ManagedReference
items:
- uid: Discord.IApplication
  commentId: T:Discord.IApplication
  id: IApplication
  parent: Discord
  children:
  - Discord.IApplication.Description
  - Discord.IApplication.Flags
  - Discord.IApplication.IconUrl
  - Discord.IApplication.Name
  - Discord.IApplication.Owner
  - Discord.IApplication.RPCOrigins
  langs:
  - csharp
  - vb
  name: IApplication
  nameWithType: IApplication
  fullName: Discord.IApplication
  type: Interface
  source:
    remote:
      path: src/Discord.Net.Core/Entities/IApplication.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IApplication
    path: ../src/Discord.Net.Core/Entities/IApplication.cs
    startLine: 5
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nRepresents a Discord application created via the developer portal.\n"
  example: []
  syntax:
    content: 'public interface IApplication : ISnowflakeEntity, IEntity<ulong>'
    content.vb: >-
      Public Interface IApplication
          Inherits ISnowflakeEntity
  inheritedMembers:
  - Discord.ISnowflakeEntity.CreatedAt
  - Discord.IEntity{System.UInt64}.Id
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Discord.IApplication.Name
  commentId: P:Discord.IApplication.Name
  id: Name
  parent: Discord.IApplication
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IApplication.Name
  fullName: Discord.IApplication.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/IApplication.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Core/Entities/IApplication.cs
    startLine: 10
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the name of the application.\n"
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Discord.IApplication.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IApplication.Description
  commentId: P:Discord.IApplication.Description
  id: Description
  parent: Discord.IApplication
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: IApplication.Description
  fullName: Discord.IApplication.Description
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/IApplication.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Description
    path: ../src/Discord.Net.Core/Entities/IApplication.cs
    startLine: 14
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the description of the application.\n"
  example: []
  syntax:
    content: string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Description As String
  overload: Discord.IApplication.Description*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IApplication.RPCOrigins
  commentId: P:Discord.IApplication.RPCOrigins
  id: RPCOrigins
  parent: Discord.IApplication
  langs:
  - csharp
  - vb
  name: RPCOrigins
  nameWithType: IApplication.RPCOrigins
  fullName: Discord.IApplication.RPCOrigins
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/IApplication.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: RPCOrigins
    path: ../src/Discord.Net.Core/Entities/IApplication.cs
    startLine: 18
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the RPC origins of the application.\n"
  example: []
  syntax:
    content: string[] RPCOrigins { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: ReadOnly Property RPCOrigins As String()
  overload: Discord.IApplication.RPCOrigins*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IApplication.Flags
  commentId: P:Discord.IApplication.Flags
  id: Flags
  parent: Discord.IApplication
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: IApplication.Flags
  fullName: Discord.IApplication.Flags
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/IApplication.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Flags
    path: ../src/Discord.Net.Core/Entities/IApplication.cs
    startLine: 19
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: ulong Flags { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: ReadOnly Property Flags As ULong
  overload: Discord.IApplication.Flags*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IApplication.IconUrl
  commentId: P:Discord.IApplication.IconUrl
  id: IconUrl
  parent: Discord.IApplication
  langs:
  - csharp
  - vb
  name: IconUrl
  nameWithType: IApplication.IconUrl
  fullName: Discord.IApplication.IconUrl
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/IApplication.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IconUrl
    path: ../src/Discord.Net.Core/Entities/IApplication.cs
    startLine: 23
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the icon URL of the application.\n"
  example: []
  syntax:
    content: string IconUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property IconUrl As String
  overload: Discord.IApplication.IconUrl*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IApplication.Owner
  commentId: P:Discord.IApplication.Owner
  id: Owner
  parent: Discord.IApplication
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: IApplication.Owner
  fullName: Discord.IApplication.Owner
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/IApplication.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Owner
    path: ../src/Discord.Net.Core/Entities/IApplication.cs
    startLine: 28
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the partial user object containing info on the owner of the application.\n"
  example: []
  syntax:
    content: IUser Owner { get; }
    parameters: []
    return:
      type: Discord.IUser
    content.vb: ReadOnly Property Owner As IUser
  overload: Discord.IApplication.Owner*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.ISnowflakeEntity.CreatedAt
  commentId: P:Discord.ISnowflakeEntity.CreatedAt
  parent: Discord.ISnowflakeEntity
  name: CreatedAt
  nameWithType: ISnowflakeEntity.CreatedAt
  fullName: Discord.ISnowflakeEntity.CreatedAt
- uid: Discord.IEntity{System.UInt64}.Id
  commentId: P:Discord.IEntity{System.UInt64}.Id
  parent: Discord.IEntity{System.UInt64}
  definition: Discord.IEntity`1.Id
  name: Id
  nameWithType: IEntity<UInt64>.Id
  fullName: Discord.IEntity<System.UInt64>.Id
  nameWithType.vb: IEntity(Of UInt64).Id
  fullName.vb: Discord.IEntity(Of System.UInt64).Id
- uid: Discord.ISnowflakeEntity
  commentId: T:Discord.ISnowflakeEntity
  parent: Discord
  name: ISnowflakeEntity
  nameWithType: ISnowflakeEntity
  fullName: Discord.ISnowflakeEntity
- uid: Discord.IEntity`1.Id
  commentId: P:Discord.IEntity`1.Id
  name: Id
  nameWithType: IEntity<TId>.Id
  fullName: Discord.IEntity<TId>.Id
  nameWithType.vb: IEntity(Of TId).Id
  fullName.vb: Discord.IEntity(Of TId).Id
- uid: Discord.IEntity{System.UInt64}
  commentId: T:Discord.IEntity{System.UInt64}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<UInt64>
  nameWithType: IEntity<UInt64>
  fullName: Discord.IEntity<System.UInt64>
  nameWithType.vb: IEntity(Of UInt64)
  fullName.vb: Discord.IEntity(Of System.UInt64)
  name.vb: IEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IApplication.Name*
  commentId: Overload:Discord.IApplication.Name
  name: Name
  nameWithType: IApplication.Name
  fullName: Discord.IApplication.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.IApplication.Description*
  commentId: Overload:Discord.IApplication.Description
  name: Description
  nameWithType: IApplication.Description
  fullName: Discord.IApplication.Description
- uid: Discord.IApplication.RPCOrigins*
  commentId: Overload:Discord.IApplication.RPCOrigins
  name: RPCOrigins
  nameWithType: IApplication.RPCOrigins
  fullName: Discord.IApplication.RPCOrigins
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Discord.IApplication.Flags*
  commentId: Overload:Discord.IApplication.Flags
  name: Flags
  nameWithType: IApplication.Flags
  fullName: Discord.IApplication.Flags
- uid: System.UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.IApplication.IconUrl*
  commentId: Overload:Discord.IApplication.IconUrl
  name: IconUrl
  nameWithType: IApplication.IconUrl
  fullName: Discord.IApplication.IconUrl
- uid: Discord.IApplication.Owner*
  commentId: Overload:Discord.IApplication.Owner
  name: Owner
  nameWithType: IApplication.Owner
  fullName: Discord.IApplication.Owner
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
