### YamlMime:ManagedReference
items:
- uid: Discord.Audio.SecretBox
  commentId: T:Discord.Audio.SecretBox
  id: SecretBox
  parent: Discord.Audio
  children:
  - Discord.Audio.SecretBox.Decrypt(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Byte[],System.Byte[])
  - Discord.Audio.SecretBox.Encrypt(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Byte[],System.Byte[])
  langs:
  - csharp
  - vb
  name: SecretBox
  nameWithType: SecretBox
  fullName: Discord.Audio.SecretBox
  type: Class
  source:
    remote:
      path: src/Discord.Net.WebSocket/Audio/Sodium/SecretBox.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SecretBox
    path: ../src/Discord.Net.WebSocket/Audio/Sodium/SecretBox.cs
    startLine: 5
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.Audio
  syntax:
    content: public static class SecretBox
    content.vb: Public Module SecretBox
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Discord.Audio.SecretBox.Encrypt(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Byte[],System.Byte[])
  commentId: M:Discord.Audio.SecretBox.Encrypt(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Byte[],System.Byte[])
  id: Encrypt(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Byte[],System.Byte[])
  parent: Discord.Audio.SecretBox
  langs:
  - csharp
  - vb
  name: Encrypt(Byte[], Int32, Int32, Byte[], Int32, Byte[], Byte[])
  nameWithType: SecretBox.Encrypt(Byte[], Int32, Int32, Byte[], Int32, Byte[], Byte[])
  fullName: Discord.Audio.SecretBox.Encrypt(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32, System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: src/Discord.Net.WebSocket/Audio/Sodium/SecretBox.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Encrypt
    path: ../src/Discord.Net.WebSocket/Audio/Sodium/SecretBox.cs
    startLine: 12
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.Audio
  syntax:
    content: public static int Encrypt(byte[] input, int inputOffset, int inputLength, byte[] output, int outputOffset, byte[] nonce, byte[] secret)
    parameters:
    - id: input
      type: System.Byte[]
    - id: inputOffset
      type: System.Int32
    - id: inputLength
      type: System.Int32
    - id: output
      type: System.Byte[]
    - id: outputOffset
      type: System.Int32
    - id: nonce
      type: System.Byte[]
    - id: secret
      type: System.Byte[]
    return:
      type: System.Int32
    content.vb: Public Shared Function Encrypt(input As Byte(), inputOffset As Integer, inputLength As Integer, output As Byte(), outputOffset As Integer, nonce As Byte(), secret As Byte()) As Integer
  overload: Discord.Audio.SecretBox.Encrypt*
  nameWithType.vb: SecretBox.Encrypt(Byte(), Int32, Int32, Byte(), Int32, Byte(), Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.Audio.SecretBox.Encrypt(System.Byte(), System.Int32, System.Int32, System.Byte(), System.Int32, System.Byte(), System.Byte())
  name.vb: Encrypt(Byte(), Int32, Int32, Byte(), Int32, Byte(), Byte())
- uid: Discord.Audio.SecretBox.Decrypt(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Byte[],System.Byte[])
  commentId: M:Discord.Audio.SecretBox.Decrypt(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Byte[],System.Byte[])
  id: Decrypt(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Byte[],System.Byte[])
  parent: Discord.Audio.SecretBox
  langs:
  - csharp
  - vb
  name: Decrypt(Byte[], Int32, Int32, Byte[], Int32, Byte[], Byte[])
  nameWithType: SecretBox.Decrypt(Byte[], Int32, Int32, Byte[], Int32, Byte[], Byte[])
  fullName: Discord.Audio.SecretBox.Decrypt(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32, System.Byte[], System.Byte[])
  type: Method
  source:
    remote:
      path: src/Discord.Net.WebSocket/Audio/Sodium/SecretBox.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Decrypt
    path: ../src/Discord.Net.WebSocket/Audio/Sodium/SecretBox.cs
    startLine: 23
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.Audio
  syntax:
    content: public static int Decrypt(byte[] input, int inputOffset, int inputLength, byte[] output, int outputOffset, byte[] nonce, byte[] secret)
    parameters:
    - id: input
      type: System.Byte[]
    - id: inputOffset
      type: System.Int32
    - id: inputLength
      type: System.Int32
    - id: output
      type: System.Byte[]
    - id: outputOffset
      type: System.Int32
    - id: nonce
      type: System.Byte[]
    - id: secret
      type: System.Byte[]
    return:
      type: System.Int32
    content.vb: Public Shared Function Decrypt(input As Byte(), inputOffset As Integer, inputLength As Integer, output As Byte(), outputOffset As Integer, nonce As Byte(), secret As Byte()) As Integer
  overload: Discord.Audio.SecretBox.Decrypt*
  nameWithType.vb: SecretBox.Decrypt(Byte(), Int32, Int32, Byte(), Int32, Byte(), Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.Audio.SecretBox.Decrypt(System.Byte(), System.Int32, System.Int32, System.Byte(), System.Int32, System.Byte(), System.Byte())
  name.vb: Decrypt(Byte(), Int32, Int32, Byte(), Int32, Byte(), Byte())
references:
- uid: Discord.Audio
  commentId: N:Discord.Audio
  name: Discord.Audio
  nameWithType: Discord.Audio
  fullName: Discord.Audio
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Audio.SecretBox.Encrypt*
  commentId: Overload:Discord.Audio.SecretBox.Encrypt
  name: Encrypt
  nameWithType: SecretBox.Encrypt
  fullName: Discord.Audio.SecretBox.Encrypt
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Discord.Audio.SecretBox.Decrypt*
  commentId: Overload:Discord.Audio.SecretBox.Decrypt
  name: Decrypt
  nameWithType: SecretBox.Decrypt
  fullName: Discord.Audio.SecretBox.Decrypt
