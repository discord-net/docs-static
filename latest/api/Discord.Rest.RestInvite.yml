### YamlMime:ManagedReference
items:
- uid: Discord.Rest.RestInvite
  commentId: T:Discord.Rest.RestInvite
  id: RestInvite
  parent: Discord.Rest
  children:
  - Discord.Rest.RestInvite.ChannelId
  - Discord.Rest.RestInvite.ChannelName
  - Discord.Rest.RestInvite.ChannelType
  - Discord.Rest.RestInvite.Code
  - Discord.Rest.RestInvite.DeleteAsync(Discord.RequestOptions)
  - Discord.Rest.RestInvite.Discord#IInvite#Channel
  - Discord.Rest.RestInvite.Discord#IInvite#Guild
  - Discord.Rest.RestInvite.GuildId
  - Discord.Rest.RestInvite.GuildName
  - Discord.Rest.RestInvite.MemberCount
  - Discord.Rest.RestInvite.PresenceCount
  - Discord.Rest.RestInvite.ToString
  - Discord.Rest.RestInvite.UpdateAsync(Discord.RequestOptions)
  - Discord.Rest.RestInvite.Url
  langs:
  - csharp
  - vb
  name: RestInvite
  nameWithType: RestInvite
  fullName: Discord.Rest.RestInvite
  type: Class
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: RestInvite
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
    startLine: 7
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: 'public class RestInvite : RestEntity<string>, IEntity<string>, IInvite, IEntity<string>, IDeletable, IUpdateable'
    content.vb: >-
      Public Class RestInvite
          Inherits RestEntity(Of String)
          Implements IEntity(Of String), IInvite, IEntity(Of String), IDeletable, IUpdateable
  inheritance:
  - System.Object
  - Discord.Rest.RestEntity{System.String}
  derivedClasses:
  - Discord.Rest.RestInviteMetadata
  implements:
  - Discord.IEntity{System.String}
  - Discord.IInvite
  - Discord.IEntity{System.String}
  - Discord.IDeletable
  - Discord.IUpdateable
  inheritedMembers:
  - Discord.Rest.RestEntity{System.String}.Id
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Rest.RestInvite.ChannelType
  commentId: P:Discord.Rest.RestInvite.ChannelType
  id: ChannelType
  parent: Discord.Rest.RestInvite
  langs:
  - csharp
  - vb
  name: ChannelType
  nameWithType: RestInvite.ChannelType
  fullName: Discord.Rest.RestInvite.ChannelType
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelType
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
    startLine: 10
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: public ChannelType ChannelType { get; }
    parameters: []
    return:
      type: Discord.ChannelType
    content.vb: Public ReadOnly Property ChannelType As ChannelType
  overload: Discord.Rest.RestInvite.ChannelType*
  implements:
  - Discord.IInvite.ChannelType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestInvite.ChannelName
  commentId: P:Discord.Rest.RestInvite.ChannelName
  id: ChannelName
  parent: Discord.Rest.RestInvite
  langs:
  - csharp
  - vb
  name: ChannelName
  nameWithType: RestInvite.ChannelName
  fullName: Discord.Rest.RestInvite.ChannelName
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelName
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
    startLine: 12
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public string ChannelName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ChannelName As String
  overload: Discord.Rest.RestInvite.ChannelName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestInvite.GuildName
  commentId: P:Discord.Rest.RestInvite.GuildName
  id: GuildName
  parent: Discord.Rest.RestInvite
  langs:
  - csharp
  - vb
  name: GuildName
  nameWithType: RestInvite.GuildName
  fullName: Discord.Rest.RestInvite.GuildName
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: GuildName
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
    startLine: 14
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public string GuildName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property GuildName As String
  overload: Discord.Rest.RestInvite.GuildName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestInvite.PresenceCount
  commentId: P:Discord.Rest.RestInvite.PresenceCount
  id: PresenceCount
  parent: Discord.Rest.RestInvite
  langs:
  - csharp
  - vb
  name: PresenceCount
  nameWithType: RestInvite.PresenceCount
  fullName: Discord.Rest.RestInvite.PresenceCount
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: PresenceCount
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
    startLine: 16
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public int? PresenceCount { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public ReadOnly Property PresenceCount As Integer?
  overload: Discord.Rest.RestInvite.PresenceCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestInvite.MemberCount
  commentId: P:Discord.Rest.RestInvite.MemberCount
  id: MemberCount
  parent: Discord.Rest.RestInvite
  langs:
  - csharp
  - vb
  name: MemberCount
  nameWithType: RestInvite.MemberCount
  fullName: Discord.Rest.RestInvite.MemberCount
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: MemberCount
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
    startLine: 18
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public int? MemberCount { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public ReadOnly Property MemberCount As Integer?
  overload: Discord.Rest.RestInvite.MemberCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestInvite.ChannelId
  commentId: P:Discord.Rest.RestInvite.ChannelId
  id: ChannelId
  parent: Discord.Rest.RestInvite
  langs:
  - csharp
  - vb
  name: ChannelId
  nameWithType: RestInvite.ChannelId
  fullName: Discord.Rest.RestInvite.ChannelId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelId
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
    startLine: 20
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public ulong ChannelId { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property ChannelId As ULong
  overload: Discord.Rest.RestInvite.ChannelId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestInvite.GuildId
  commentId: P:Discord.Rest.RestInvite.GuildId
  id: GuildId
  parent: Discord.Rest.RestInvite
  langs:
  - csharp
  - vb
  name: GuildId
  nameWithType: RestInvite.GuildId
  fullName: Discord.Rest.RestInvite.GuildId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: GuildId
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
    startLine: 22
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public ulong? GuildId { get; }
    parameters: []
    return:
      type: System.Nullable{System.UInt64}
    content.vb: Public ReadOnly Property GuildId As ULong?
  overload: Discord.Rest.RestInvite.GuildId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestInvite.Code
  commentId: P:Discord.Rest.RestInvite.Code
  id: Code
  parent: Discord.Rest.RestInvite
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: RestInvite.Code
  fullName: Discord.Rest.RestInvite.Code
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Code
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
    startLine: 27
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public string Code { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Code As String
  overload: Discord.Rest.RestInvite.Code*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestInvite.Url
  commentId: P:Discord.Rest.RestInvite.Url
  id: Url
  parent: Discord.Rest.RestInvite
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: RestInvite.Url
  fullName: Discord.Rest.RestInvite.Url
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Url
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
    startLine: 29
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public string Url { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Url As String
  overload: Discord.Rest.RestInvite.Url*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestInvite.UpdateAsync(Discord.RequestOptions)
  commentId: M:Discord.Rest.RestInvite.UpdateAsync(Discord.RequestOptions)
  id: UpdateAsync(Discord.RequestOptions)
  parent: Discord.Rest.RestInvite
  langs:
  - csharp
  - vb
  name: UpdateAsync(RequestOptions)
  nameWithType: RestInvite.UpdateAsync(RequestOptions)
  fullName: Discord.Rest.RestInvite.UpdateAsync(Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: UpdateAsync
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
    startLine: 55
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public Task UpdateAsync(RequestOptions options = null)
    parameters:
    - id: options
      type: Discord.RequestOptions
    return:
      type: Task
    content.vb: Public Function UpdateAsync(options As RequestOptions = Nothing) As Task
  overload: Discord.Rest.RestInvite.UpdateAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Rest.RestInvite.DeleteAsync(Discord.RequestOptions)
  commentId: M:Discord.Rest.RestInvite.DeleteAsync(Discord.RequestOptions)
  id: DeleteAsync(Discord.RequestOptions)
  parent: Discord.Rest.RestInvite
  langs:
  - csharp
  - vb
  name: DeleteAsync(RequestOptions)
  nameWithType: RestInvite.DeleteAsync(RequestOptions)
  fullName: Discord.Rest.RestInvite.DeleteAsync(Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: DeleteAsync
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
    startLine: 61
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public Task DeleteAsync(RequestOptions options = null)
    parameters:
    - id: options
      type: Discord.RequestOptions
    return:
      type: Task
    content.vb: Public Function DeleteAsync(options As RequestOptions = Nothing) As Task
  overload: Discord.Rest.RestInvite.DeleteAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Rest.RestInvite.ToString
  commentId: M:Discord.Rest.RestInvite.ToString
  id: ToString
  parent: Discord.Rest.RestInvite
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RestInvite.ToString()
  fullName: Discord.Rest.RestInvite.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
    startLine: 70
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the URL of the invite.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA string that resolves to the Url of the invite.\n"
    content.vb: Public Overrides Function ToString As String
  overload: Discord.Rest.RestInvite.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Discord.Rest.RestInvite.Discord#IInvite#Guild
  commentId: P:Discord.Rest.RestInvite.Discord#IInvite#Guild
  id: Discord#IInvite#Guild
  isEii: true
  parent: Discord.Rest.RestInvite
  langs:
  - csharp
  - vb
  name: IInvite.Guild
  nameWithType: RestInvite.IInvite.Guild
  fullName: Discord.Rest.RestInvite.Discord.IInvite.Guild
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IInvite.Guild
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
    startLine: 74
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the guild this invite is linked to.\n"
  example: []
  syntax:
    content: IGuild IInvite.Guild { get; }
    parameters: []
    return:
      type: Discord.IGuild
      description: "\nA guild object representing the guild that the invite points to.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IInvite.Guild As IGuild Implements IInvite.Guild
  overload: Discord.Rest.RestInvite.Discord#IInvite#Guild*
  implements:
  - Discord.IInvite.Guild
  nameWithType.vb: RestInvite.Discord.IInvite.Guild
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IInvite.Guild
- uid: Discord.Rest.RestInvite.Discord#IInvite#Channel
  commentId: P:Discord.Rest.RestInvite.Discord#IInvite#Channel
  id: Discord#IInvite#Channel
  isEii: true
  parent: Discord.Rest.RestInvite
  langs:
  - csharp
  - vb
  name: IInvite.Channel
  nameWithType: RestInvite.IInvite.Channel
  fullName: Discord.Rest.RestInvite.Discord.IInvite.Channel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IInvite.Channel
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInvite.cs
    startLine: 86
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the channel this invite is linked to.\n"
  example: []
  syntax:
    content: IChannel IInvite.Channel { get; }
    parameters: []
    return:
      type: Discord.IChannel
      description: "\nA generic channel that the invite points to.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IInvite.Channel As IChannel Implements IInvite.Channel
  overload: Discord.Rest.RestInvite.Discord#IInvite#Channel*
  implements:
  - Discord.IInvite.Channel
  nameWithType.vb: RestInvite.Discord.IInvite.Channel
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IInvite.Channel
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Rest.RestEntity{System.String}
  commentId: T:Discord.Rest.RestEntity{System.String}
  parent: Discord.Rest
  definition: Discord.Rest.RestEntity`1
  name: RestEntity<String>
  nameWithType: RestEntity<String>
  fullName: Discord.Rest.RestEntity<System.String>
  nameWithType.vb: RestEntity(Of String)
  fullName.vb: Discord.Rest.RestEntity(Of System.String)
  name.vb: RestEntity(Of String)
  spec.csharp:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEntity{System.String}
  commentId: T:Discord.IEntity{System.String}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<String>
  nameWithType: IEntity<String>
  fullName: Discord.IEntity<System.String>
  nameWithType.vb: IEntity(Of String)
  fullName.vb: Discord.IEntity(Of System.String)
  name.vb: IEntity(Of String)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IInvite
  commentId: T:Discord.IInvite
  parent: Discord
  name: IInvite
  nameWithType: IInvite
  fullName: Discord.IInvite
- uid: Discord.IDeletable
  commentId: T:Discord.IDeletable
  parent: Discord
  name: IDeletable
  nameWithType: IDeletable
  fullName: Discord.IDeletable
- uid: Discord.IUpdateable
  commentId: T:Discord.IUpdateable
  parent: Discord
  name: IUpdateable
  nameWithType: IUpdateable
  fullName: Discord.IUpdateable
- uid: Discord.Rest.RestEntity{System.String}.Id
  commentId: P:Discord.Rest.RestEntity{System.String}.Id
  parent: Discord.Rest.RestEntity{System.String}
  definition: Discord.Rest.RestEntity`1.Id
  name: Id
  nameWithType: RestEntity<String>.Id
  fullName: Discord.Rest.RestEntity<System.String>.Id
  nameWithType.vb: RestEntity(Of String).Id
  fullName.vb: Discord.Rest.RestEntity(Of System.String).Id
- uid: Discord.Rest.RestEntity`1
  commentId: T:Discord.Rest.RestEntity`1
  name: RestEntity<T>
  nameWithType: RestEntity<T>
  fullName: Discord.Rest.RestEntity<T>
  nameWithType.vb: RestEntity(Of T)
  fullName.vb: Discord.Rest.RestEntity(Of T)
  name.vb: RestEntity(Of T)
  spec.csharp:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Rest.RestEntity`1.Id
  commentId: P:Discord.Rest.RestEntity`1.Id
  name: Id
  nameWithType: RestEntity<T>.Id
  fullName: Discord.Rest.RestEntity<T>.Id
  nameWithType.vb: RestEntity(Of T).Id
  fullName.vb: Discord.Rest.RestEntity(Of T).Id
- uid: Discord.Rest.RestInvite.ChannelType*
  commentId: Overload:Discord.Rest.RestInvite.ChannelType
  name: ChannelType
  nameWithType: RestInvite.ChannelType
  fullName: Discord.Rest.RestInvite.ChannelType
- uid: Discord.IInvite.ChannelType
  commentId: P:Discord.IInvite.ChannelType
  parent: Discord.IInvite
  name: ChannelType
  nameWithType: IInvite.ChannelType
  fullName: Discord.IInvite.ChannelType
- uid: Discord.ChannelType
  commentId: T:Discord.ChannelType
  parent: Discord
  name: ChannelType
  nameWithType: ChannelType
  fullName: Discord.ChannelType
- uid: Discord.Rest.RestInvite.ChannelName*
  commentId: Overload:Discord.Rest.RestInvite.ChannelName
  name: ChannelName
  nameWithType: RestInvite.ChannelName
  fullName: Discord.Rest.RestInvite.ChannelName
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Rest.RestInvite.GuildName*
  commentId: Overload:Discord.Rest.RestInvite.GuildName
  name: GuildName
  nameWithType: RestInvite.GuildName
  fullName: Discord.Rest.RestInvite.GuildName
- uid: Discord.Rest.RestInvite.PresenceCount*
  commentId: Overload:Discord.Rest.RestInvite.PresenceCount
  name: PresenceCount
  nameWithType: RestInvite.PresenceCount
  fullName: Discord.Rest.RestInvite.PresenceCount
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestInvite.MemberCount*
  commentId: Overload:Discord.Rest.RestInvite.MemberCount
  name: MemberCount
  nameWithType: RestInvite.MemberCount
  fullName: Discord.Rest.RestInvite.MemberCount
- uid: Discord.Rest.RestInvite.ChannelId*
  commentId: Overload:Discord.Rest.RestInvite.ChannelId
  name: ChannelId
  nameWithType: RestInvite.ChannelId
  fullName: Discord.Rest.RestInvite.ChannelId
- uid: System.UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.Rest.RestInvite.GuildId*
  commentId: Overload:Discord.Rest.RestInvite.GuildId
  name: GuildId
  nameWithType: RestInvite.GuildId
  fullName: Discord.Rest.RestInvite.GuildId
- uid: System.Nullable{System.UInt64}
  commentId: '!:System.Nullable{System.UInt64}'
  definition: System.Nullable`1
  name: Nullable<UInt64>
  nameWithType: Nullable<UInt64>
  fullName: System.Nullable<System.UInt64>
  nameWithType.vb: Nullable(Of UInt64)
  fullName.vb: System.Nullable(Of System.UInt64)
  name.vb: Nullable(Of UInt64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestInvite.Code*
  commentId: Overload:Discord.Rest.RestInvite.Code
  name: Code
  nameWithType: RestInvite.Code
  fullName: Discord.Rest.RestInvite.Code
- uid: Discord.Rest.RestInvite.Url*
  commentId: Overload:Discord.Rest.RestInvite.Url
  name: Url
  nameWithType: RestInvite.Url
  fullName: Discord.Rest.RestInvite.Url
- uid: Discord.Rest.RestInvite.UpdateAsync*
  commentId: Overload:Discord.Rest.RestInvite.UpdateAsync
  name: UpdateAsync
  nameWithType: RestInvite.UpdateAsync
  fullName: Discord.Rest.RestInvite.UpdateAsync
- uid: Discord.RequestOptions
  commentId: T:Discord.RequestOptions
  parent: Discord
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: Discord.RequestOptions
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Discord.Rest.RestInvite.DeleteAsync*
  commentId: Overload:Discord.Rest.RestInvite.DeleteAsync
  name: DeleteAsync
  nameWithType: RestInvite.DeleteAsync
  fullName: Discord.Rest.RestInvite.DeleteAsync
- uid: Discord.Rest.RestInvite.ToString*
  commentId: Overload:Discord.Rest.RestInvite.ToString
  name: ToString
  nameWithType: RestInvite.ToString
  fullName: Discord.Rest.RestInvite.ToString
- uid: Discord.Rest.RestInvite.Discord#IInvite#Guild*
  commentId: Overload:Discord.Rest.RestInvite.Discord#IInvite#Guild
  name: IInvite.Guild
  nameWithType: RestInvite.IInvite.Guild
  fullName: Discord.Rest.RestInvite.Discord.IInvite.Guild
  nameWithType.vb: RestInvite.Discord.IInvite.Guild
  name.vb: Discord.IInvite.Guild
- uid: Discord.IInvite.Guild
  commentId: P:Discord.IInvite.Guild
  parent: Discord.IInvite
  name: Guild
  nameWithType: IInvite.Guild
  fullName: Discord.IInvite.Guild
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: Discord.Rest.RestInvite.Discord#IInvite#Channel*
  commentId: Overload:Discord.Rest.RestInvite.Discord#IInvite#Channel
  name: IInvite.Channel
  nameWithType: RestInvite.IInvite.Channel
  fullName: Discord.Rest.RestInvite.Discord.IInvite.Channel
  nameWithType.vb: RestInvite.Discord.IInvite.Channel
  name.vb: Discord.IInvite.Channel
- uid: Discord.IInvite.Channel
  commentId: P:Discord.IInvite.Channel
  parent: Discord.IInvite
  name: Channel
  nameWithType: IInvite.Channel
  fullName: Discord.IInvite.Channel
- uid: Discord.IChannel
  commentId: T:Discord.IChannel
  parent: Discord
  name: IChannel
  nameWithType: IChannel
  fullName: Discord.IChannel
