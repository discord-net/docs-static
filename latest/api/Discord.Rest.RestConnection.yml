### YamlMime:ManagedReference
items:
- uid: Discord.Rest.RestConnection
  commentId: T:Discord.Rest.RestConnection
  id: RestConnection
  parent: Discord.Rest
  children:
  - Discord.Rest.RestConnection.Id
  - Discord.Rest.RestConnection.IntegrationIds
  - Discord.Rest.RestConnection.IsRevoked
  - Discord.Rest.RestConnection.Name
  - Discord.Rest.RestConnection.ToString
  - Discord.Rest.RestConnection.Type
  langs:
  - csharp
  - vb
  name: RestConnection
  nameWithType: RestConnection
  fullName: Discord.Rest.RestConnection
  type: Class
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestConnection.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RestConnection
    path: ../src/Discord.Net.Rest/Entities/Users/RestConnection.cs
    startLine: 7
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: 'public class RestConnection : object, IConnection'
    content.vb: >-
      Public Class RestConnection
          Inherits Object
          Implements IConnection
  inheritance:
  - System.Object
  implements:
  - Discord.IConnection
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Rest.RestConnection.Id
  commentId: P:Discord.Rest.RestConnection.Id
  id: Id
  parent: Discord.Rest.RestConnection
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: RestConnection.Id
  fullName: Discord.Rest.RestConnection.Id
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestConnection.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Id
    path: ../src/Discord.Net.Rest/Entities/Users/RestConnection.cs
    startLine: 11
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Id As String
  overload: Discord.Rest.RestConnection.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestConnection.Type
  commentId: P:Discord.Rest.RestConnection.Type
  id: Type
  parent: Discord.Rest.RestConnection
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: RestConnection.Type
  fullName: Discord.Rest.RestConnection.Type
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestConnection.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Type
    path: ../src/Discord.Net.Rest/Entities/Users/RestConnection.cs
    startLine: 13
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public string Type { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Type As String
  overload: Discord.Rest.RestConnection.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestConnection.Name
  commentId: P:Discord.Rest.RestConnection.Name
  id: Name
  parent: Discord.Rest.RestConnection
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RestConnection.Name
  fullName: Discord.Rest.RestConnection.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestConnection.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Rest/Entities/Users/RestConnection.cs
    startLine: 15
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Discord.Rest.RestConnection.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestConnection.IsRevoked
  commentId: P:Discord.Rest.RestConnection.IsRevoked
  id: IsRevoked
  parent: Discord.Rest.RestConnection
  langs:
  - csharp
  - vb
  name: IsRevoked
  nameWithType: RestConnection.IsRevoked
  fullName: Discord.Rest.RestConnection.IsRevoked
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestConnection.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsRevoked
    path: ../src/Discord.Net.Rest/Entities/Users/RestConnection.cs
    startLine: 17
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public bool IsRevoked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRevoked As Boolean
  overload: Discord.Rest.RestConnection.IsRevoked*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestConnection.IntegrationIds
  commentId: P:Discord.Rest.RestConnection.IntegrationIds
  id: IntegrationIds
  parent: Discord.Rest.RestConnection
  langs:
  - csharp
  - vb
  name: IntegrationIds
  nameWithType: RestConnection.IntegrationIds
  fullName: Discord.Rest.RestConnection.IntegrationIds
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestConnection.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IntegrationIds
    path: ../src/Discord.Net.Rest/Entities/Users/RestConnection.cs
    startLine: 19
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public IReadOnlyCollection<ulong> IntegrationIds { get; }
    parameters: []
    return:
      type: IReadOnlyCollection{System.UInt64}
    content.vb: Public ReadOnly Property IntegrationIds As IReadOnlyCollection(Of ULong)
  overload: Discord.Rest.RestConnection.IntegrationIds*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestConnection.ToString
  commentId: M:Discord.Rest.RestConnection.ToString
  id: ToString
  parent: Discord.Rest.RestConnection
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RestConnection.ToString()
  fullName: Discord.Rest.RestConnection.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Users/RestConnection.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.Rest/Entities/Users/RestConnection.cs
    startLine: 41
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the name of the connection.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nName of the connection.\n"
    content.vb: Public Overrides Function ToString As String
  overload: Discord.Rest.RestConnection.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.IConnection
  commentId: T:Discord.IConnection
  parent: Discord
  name: IConnection
  nameWithType: IConnection
  fullName: Discord.IConnection
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Rest.RestConnection.Id*
  commentId: Overload:Discord.Rest.RestConnection.Id
  name: Id
  nameWithType: RestConnection.Id
  fullName: Discord.Rest.RestConnection.Id
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Rest.RestConnection.Type*
  commentId: Overload:Discord.Rest.RestConnection.Type
  name: Type
  nameWithType: RestConnection.Type
  fullName: Discord.Rest.RestConnection.Type
- uid: Discord.Rest.RestConnection.Name*
  commentId: Overload:Discord.Rest.RestConnection.Name
  name: Name
  nameWithType: RestConnection.Name
  fullName: Discord.Rest.RestConnection.Name
- uid: Discord.Rest.RestConnection.IsRevoked*
  commentId: Overload:Discord.Rest.RestConnection.IsRevoked
  name: IsRevoked
  nameWithType: RestConnection.IsRevoked
  fullName: Discord.Rest.RestConnection.IsRevoked
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.Rest.RestConnection.IntegrationIds*
  commentId: Overload:Discord.Rest.RestConnection.IntegrationIds
  name: IntegrationIds
  nameWithType: RestConnection.IntegrationIds
  fullName: Discord.Rest.RestConnection.IntegrationIds
- uid: IReadOnlyCollection{System.UInt64}
  commentId: '!:IReadOnlyCollection{System.UInt64}'
  definition: IReadOnlyCollection`1
  name: IReadOnlyCollection<UInt64>
  nameWithType: IReadOnlyCollection<UInt64>
  fullName: IReadOnlyCollection<System.UInt64>
  nameWithType.vb: IReadOnlyCollection(Of UInt64)
  fullName.vb: IReadOnlyCollection(Of System.UInt64)
  name.vb: IReadOnlyCollection(Of UInt64)
  spec.csharp:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<>
  nameWithType: IReadOnlyCollection<>
  fullName: IReadOnlyCollection<>
  nameWithType.vb: IReadOnlyCollection(Of )
  fullName.vb: IReadOnlyCollection(Of )
  name.vb: IReadOnlyCollection(Of )
  spec.csharp:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestConnection.ToString*
  commentId: Overload:Discord.Rest.RestConnection.ToString
  name: ToString
  nameWithType: RestConnection.ToString
  fullName: Discord.Rest.RestConnection.ToString
