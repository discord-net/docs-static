### YamlMime:ManagedReference
items:
- uid: Discord.Commands.Builders.ModuleBuilder
  commentId: T:Discord.Commands.Builders.ModuleBuilder
  id: ModuleBuilder
  parent: Discord.Commands.Builders
  children:
  - Discord.Commands.Builders.ModuleBuilder.AddAliases(System.String[])
  - Discord.Commands.Builders.ModuleBuilder.AddAttributes(System.Attribute[])
  - Discord.Commands.Builders.ModuleBuilder.AddCommand(System.String,System.Func{Discord.Commands.ICommandContext,System.Object[],System.IServiceProvider,Discord.Commands.CommandInfo,System.Threading.Tasks.Task},System.Action{Discord.Commands.Builders.CommandBuilder})
  - Discord.Commands.Builders.ModuleBuilder.AddModule(System.String,System.Action{Discord.Commands.Builders.ModuleBuilder})
  - Discord.Commands.Builders.ModuleBuilder.AddPrecondition(Discord.Commands.PreconditionAttribute)
  - Discord.Commands.Builders.ModuleBuilder.Aliases
  - Discord.Commands.Builders.ModuleBuilder.Attributes
  - Discord.Commands.Builders.ModuleBuilder.Build(Discord.Commands.CommandService,System.IServiceProvider)
  - Discord.Commands.Builders.ModuleBuilder.Commands
  - Discord.Commands.Builders.ModuleBuilder.Group
  - Discord.Commands.Builders.ModuleBuilder.Modules
  - Discord.Commands.Builders.ModuleBuilder.Name
  - Discord.Commands.Builders.ModuleBuilder.Parent
  - Discord.Commands.Builders.ModuleBuilder.Preconditions
  - Discord.Commands.Builders.ModuleBuilder.Remarks
  - Discord.Commands.Builders.ModuleBuilder.Service
  - Discord.Commands.Builders.ModuleBuilder.Summary
  - Discord.Commands.Builders.ModuleBuilder.WithName(System.String)
  - Discord.Commands.Builders.ModuleBuilder.WithRemarks(System.String)
  - Discord.Commands.Builders.ModuleBuilder.WithSummary(System.String)
  langs:
  - csharp
  - vb
  name: ModuleBuilder
  nameWithType: ModuleBuilder
  fullName: Discord.Commands.Builders.ModuleBuilder
  type: Class
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ModuleBuilder
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 7
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public class ModuleBuilder
    content.vb: Public Class ModuleBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Commands.Builders.ModuleBuilder.Service
  commentId: P:Discord.Commands.Builders.ModuleBuilder.Service
  id: Service
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: Service
  nameWithType: ModuleBuilder.Service
  fullName: Discord.Commands.Builders.ModuleBuilder.Service
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Service
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 15
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public CommandService Service { get; }
    parameters: []
    return:
      type: Discord.Commands.CommandService
    content.vb: Public ReadOnly Property Service As CommandService
  overload: Discord.Commands.Builders.ModuleBuilder.Service*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.Builders.ModuleBuilder.Parent
  commentId: P:Discord.Commands.Builders.ModuleBuilder.Parent
  id: Parent
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: ModuleBuilder.Parent
  fullName: Discord.Commands.Builders.ModuleBuilder.Parent
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Parent
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 16
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public ModuleBuilder Parent { get; }
    parameters: []
    return:
      type: Discord.Commands.Builders.ModuleBuilder
    content.vb: Public ReadOnly Property Parent As ModuleBuilder
  overload: Discord.Commands.Builders.ModuleBuilder.Parent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.Builders.ModuleBuilder.Name
  commentId: P:Discord.Commands.Builders.ModuleBuilder.Name
  id: Name
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ModuleBuilder.Name
  fullName: Discord.Commands.Builders.ModuleBuilder.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 17
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Discord.Commands.Builders.ModuleBuilder.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ModuleBuilder.Summary
  commentId: P:Discord.Commands.Builders.ModuleBuilder.Summary
  id: Summary
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: Summary
  nameWithType: ModuleBuilder.Summary
  fullName: Discord.Commands.Builders.ModuleBuilder.Summary
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Summary
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 18
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public string Summary { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Summary As String
  overload: Discord.Commands.Builders.ModuleBuilder.Summary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ModuleBuilder.Remarks
  commentId: P:Discord.Commands.Builders.ModuleBuilder.Remarks
  id: Remarks
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: Remarks
  nameWithType: ModuleBuilder.Remarks
  fullName: Discord.Commands.Builders.ModuleBuilder.Remarks
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Remarks
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 19
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public string Remarks { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Remarks As String
  overload: Discord.Commands.Builders.ModuleBuilder.Remarks*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ModuleBuilder.Group
  commentId: P:Discord.Commands.Builders.ModuleBuilder.Group
  id: Group
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: Group
  nameWithType: ModuleBuilder.Group
  fullName: Discord.Commands.Builders.ModuleBuilder.Group
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Group
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 20
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public string Group { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Group As String
  overload: Discord.Commands.Builders.ModuleBuilder.Group*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ModuleBuilder.Commands
  commentId: P:Discord.Commands.Builders.ModuleBuilder.Commands
  id: Commands
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: Commands
  nameWithType: ModuleBuilder.Commands
  fullName: Discord.Commands.Builders.ModuleBuilder.Commands
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Commands
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 22
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public IReadOnlyList<CommandBuilder> Commands { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Discord.Commands.Builders.CommandBuilder}
    content.vb: Public ReadOnly Property Commands As IReadOnlyList(Of CommandBuilder)
  overload: Discord.Commands.Builders.ModuleBuilder.Commands*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.Builders.ModuleBuilder.Modules
  commentId: P:Discord.Commands.Builders.ModuleBuilder.Modules
  id: Modules
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: Modules
  nameWithType: ModuleBuilder.Modules
  fullName: Discord.Commands.Builders.ModuleBuilder.Modules
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Modules
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 23
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public IReadOnlyList<ModuleBuilder> Modules { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Discord.Commands.Builders.ModuleBuilder}
    content.vb: Public ReadOnly Property Modules As IReadOnlyList(Of ModuleBuilder)
  overload: Discord.Commands.Builders.ModuleBuilder.Modules*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.Builders.ModuleBuilder.Preconditions
  commentId: P:Discord.Commands.Builders.ModuleBuilder.Preconditions
  id: Preconditions
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: Preconditions
  nameWithType: ModuleBuilder.Preconditions
  fullName: Discord.Commands.Builders.ModuleBuilder.Preconditions
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Preconditions
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 24
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public IReadOnlyList<PreconditionAttribute> Preconditions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Discord.Commands.PreconditionAttribute}
    content.vb: Public ReadOnly Property Preconditions As IReadOnlyList(Of PreconditionAttribute)
  overload: Discord.Commands.Builders.ModuleBuilder.Preconditions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.Builders.ModuleBuilder.Attributes
  commentId: P:Discord.Commands.Builders.ModuleBuilder.Attributes
  id: Attributes
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: ModuleBuilder.Attributes
  fullName: Discord.Commands.Builders.ModuleBuilder.Attributes
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Attributes
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 25
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public IReadOnlyList<Attribute> Attributes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Attribute}
    content.vb: Public ReadOnly Property Attributes As IReadOnlyList(Of Attribute)
  overload: Discord.Commands.Builders.ModuleBuilder.Attributes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.Builders.ModuleBuilder.Aliases
  commentId: P:Discord.Commands.Builders.ModuleBuilder.Aliases
  id: Aliases
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: Aliases
  nameWithType: ModuleBuilder.Aliases
  fullName: Discord.Commands.Builders.ModuleBuilder.Aliases
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Aliases
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 26
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public IReadOnlyList<string> Aliases { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.String}
    content.vb: Public ReadOnly Property Aliases As IReadOnlyList(Of String)
  overload: Discord.Commands.Builders.ModuleBuilder.Aliases*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.Builders.ModuleBuilder.WithName(System.String)
  commentId: M:Discord.Commands.Builders.ModuleBuilder.WithName(System.String)
  id: WithName(System.String)
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: WithName(String)
  nameWithType: ModuleBuilder.WithName(String)
  fullName: Discord.Commands.Builders.ModuleBuilder.WithName(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithName
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 51
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public ModuleBuilder WithName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Discord.Commands.Builders.ModuleBuilder
    content.vb: Public Function WithName(name As String) As ModuleBuilder
  overload: Discord.Commands.Builders.ModuleBuilder.WithName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ModuleBuilder.WithSummary(System.String)
  commentId: M:Discord.Commands.Builders.ModuleBuilder.WithSummary(System.String)
  id: WithSummary(System.String)
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: WithSummary(String)
  nameWithType: ModuleBuilder.WithSummary(String)
  fullName: Discord.Commands.Builders.ModuleBuilder.WithSummary(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithSummary
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 56
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public ModuleBuilder WithSummary(string summary)
    parameters:
    - id: summary
      type: System.String
    return:
      type: Discord.Commands.Builders.ModuleBuilder
    content.vb: Public Function WithSummary(summary As String) As ModuleBuilder
  overload: Discord.Commands.Builders.ModuleBuilder.WithSummary*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ModuleBuilder.WithRemarks(System.String)
  commentId: M:Discord.Commands.Builders.ModuleBuilder.WithRemarks(System.String)
  id: WithRemarks(System.String)
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: WithRemarks(String)
  nameWithType: ModuleBuilder.WithRemarks(String)
  fullName: Discord.Commands.Builders.ModuleBuilder.WithRemarks(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithRemarks
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 61
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public ModuleBuilder WithRemarks(string remarks)
    parameters:
    - id: remarks
      type: System.String
    return:
      type: Discord.Commands.Builders.ModuleBuilder
    content.vb: Public Function WithRemarks(remarks As String) As ModuleBuilder
  overload: Discord.Commands.Builders.ModuleBuilder.WithRemarks*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ModuleBuilder.AddAliases(System.String[])
  commentId: M:Discord.Commands.Builders.ModuleBuilder.AddAliases(System.String[])
  id: AddAliases(System.String[])
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: AddAliases(String[])
  nameWithType: ModuleBuilder.AddAliases(String[])
  fullName: Discord.Commands.Builders.ModuleBuilder.AddAliases(System.String[])
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AddAliases
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 67
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public ModuleBuilder AddAliases(params string[] aliases)
    parameters:
    - id: aliases
      type: System.String[]
    return:
      type: Discord.Commands.Builders.ModuleBuilder
    content.vb: Public Function AddAliases(ParamArray aliases As String()) As ModuleBuilder
  overload: Discord.Commands.Builders.ModuleBuilder.AddAliases*
  nameWithType.vb: ModuleBuilder.AddAliases(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Commands.Builders.ModuleBuilder.AddAliases(System.String())
  name.vb: AddAliases(String())
- uid: Discord.Commands.Builders.ModuleBuilder.AddAttributes(System.Attribute[])
  commentId: M:Discord.Commands.Builders.ModuleBuilder.AddAttributes(System.Attribute[])
  id: AddAttributes(System.Attribute[])
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: AddAttributes(Attribute[])
  nameWithType: ModuleBuilder.AddAttributes(Attribute[])
  fullName: Discord.Commands.Builders.ModuleBuilder.AddAttributes(System.Attribute[])
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AddAttributes
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 77
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public ModuleBuilder AddAttributes(params Attribute[] attributes)
    parameters:
    - id: attributes
      type: System.Attribute[]
    return:
      type: Discord.Commands.Builders.ModuleBuilder
    content.vb: Public Function AddAttributes(ParamArray attributes As Attribute()) As ModuleBuilder
  overload: Discord.Commands.Builders.ModuleBuilder.AddAttributes*
  nameWithType.vb: ModuleBuilder.AddAttributes(Attribute())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Commands.Builders.ModuleBuilder.AddAttributes(System.Attribute())
  name.vb: AddAttributes(Attribute())
- uid: Discord.Commands.Builders.ModuleBuilder.AddPrecondition(Discord.Commands.PreconditionAttribute)
  commentId: M:Discord.Commands.Builders.ModuleBuilder.AddPrecondition(Discord.Commands.PreconditionAttribute)
  id: AddPrecondition(Discord.Commands.PreconditionAttribute)
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: AddPrecondition(PreconditionAttribute)
  nameWithType: ModuleBuilder.AddPrecondition(PreconditionAttribute)
  fullName: Discord.Commands.Builders.ModuleBuilder.AddPrecondition(Discord.Commands.PreconditionAttribute)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AddPrecondition
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 82
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public ModuleBuilder AddPrecondition(PreconditionAttribute precondition)
    parameters:
    - id: precondition
      type: Discord.Commands.PreconditionAttribute
    return:
      type: Discord.Commands.Builders.ModuleBuilder
    content.vb: Public Function AddPrecondition(precondition As PreconditionAttribute) As ModuleBuilder
  overload: Discord.Commands.Builders.ModuleBuilder.AddPrecondition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ModuleBuilder.AddCommand(System.String,System.Func{Discord.Commands.ICommandContext,System.Object[],System.IServiceProvider,Discord.Commands.CommandInfo,System.Threading.Tasks.Task},System.Action{Discord.Commands.Builders.CommandBuilder})
  commentId: M:Discord.Commands.Builders.ModuleBuilder.AddCommand(System.String,System.Func{Discord.Commands.ICommandContext,System.Object[],System.IServiceProvider,Discord.Commands.CommandInfo,System.Threading.Tasks.Task},System.Action{Discord.Commands.Builders.CommandBuilder})
  id: AddCommand(System.String,System.Func{Discord.Commands.ICommandContext,System.Object[],System.IServiceProvider,Discord.Commands.CommandInfo,System.Threading.Tasks.Task},System.Action{Discord.Commands.Builders.CommandBuilder})
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: AddCommand(String, Func<ICommandContext, Object[], IServiceProvider, CommandInfo, Task>, Action<CommandBuilder>)
  nameWithType: ModuleBuilder.AddCommand(String, Func<ICommandContext, Object[], IServiceProvider, CommandInfo, Task>, Action<CommandBuilder>)
  fullName: Discord.Commands.Builders.ModuleBuilder.AddCommand(System.String, System.Func<Discord.Commands.ICommandContext, System.Object[], System.IServiceProvider, Discord.Commands.CommandInfo, System.Threading.Tasks.Task>, System.Action<Discord.Commands.Builders.CommandBuilder>)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AddCommand
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 87
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public ModuleBuilder AddCommand(string primaryAlias, Func<ICommandContext, object[], IServiceProvider, CommandInfo, Task> callback, Action<CommandBuilder> createFunc)
    parameters:
    - id: primaryAlias
      type: System.String
    - id: callback
      type: System.Func{Discord.Commands.ICommandContext,System.Object[],System.IServiceProvider,Discord.Commands.CommandInfo,System.Threading.Tasks.Task}
    - id: createFunc
      type: System.Action{Discord.Commands.Builders.CommandBuilder}
    return:
      type: Discord.Commands.Builders.ModuleBuilder
    content.vb: Public Function AddCommand(primaryAlias As String, callback As Func(Of ICommandContext, Object(), IServiceProvider, CommandInfo, Task), createFunc As Action(Of CommandBuilder)) As ModuleBuilder
  overload: Discord.Commands.Builders.ModuleBuilder.AddCommand*
  nameWithType.vb: ModuleBuilder.AddCommand(String, Func(Of ICommandContext, Object(), IServiceProvider, CommandInfo, Task), Action(Of CommandBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Commands.Builders.ModuleBuilder.AddCommand(System.String, System.Func(Of Discord.Commands.ICommandContext, System.Object(), System.IServiceProvider, Discord.Commands.CommandInfo, System.Threading.Tasks.Task), System.Action(Of Discord.Commands.Builders.CommandBuilder))
  name.vb: AddCommand(String, Func(Of ICommandContext, Object(), IServiceProvider, CommandInfo, Task), Action(Of CommandBuilder))
- uid: Discord.Commands.Builders.ModuleBuilder.AddModule(System.String,System.Action{Discord.Commands.Builders.ModuleBuilder})
  commentId: M:Discord.Commands.Builders.ModuleBuilder.AddModule(System.String,System.Action{Discord.Commands.Builders.ModuleBuilder})
  id: AddModule(System.String,System.Action{Discord.Commands.Builders.ModuleBuilder})
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: AddModule(String, Action<ModuleBuilder>)
  nameWithType: ModuleBuilder.AddModule(String, Action<ModuleBuilder>)
  fullName: Discord.Commands.Builders.ModuleBuilder.AddModule(System.String, System.Action<Discord.Commands.Builders.ModuleBuilder>)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AddModule
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 101
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public ModuleBuilder AddModule(string primaryAlias, Action<ModuleBuilder> createFunc)
    parameters:
    - id: primaryAlias
      type: System.String
    - id: createFunc
      type: System.Action{Discord.Commands.Builders.ModuleBuilder}
    return:
      type: Discord.Commands.Builders.ModuleBuilder
    content.vb: Public Function AddModule(primaryAlias As String, createFunc As Action(Of ModuleBuilder)) As ModuleBuilder
  overload: Discord.Commands.Builders.ModuleBuilder.AddModule*
  nameWithType.vb: ModuleBuilder.AddModule(String, Action(Of ModuleBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Commands.Builders.ModuleBuilder.AddModule(System.String, System.Action(Of Discord.Commands.Builders.ModuleBuilder))
  name.vb: AddModule(String, Action(Of ModuleBuilder))
- uid: Discord.Commands.Builders.ModuleBuilder.Build(Discord.Commands.CommandService,System.IServiceProvider)
  commentId: M:Discord.Commands.Builders.ModuleBuilder.Build(Discord.Commands.CommandService,System.IServiceProvider)
  id: Build(Discord.Commands.CommandService,System.IServiceProvider)
  parent: Discord.Commands.Builders.ModuleBuilder
  langs:
  - csharp
  - vb
  name: Build(CommandService, IServiceProvider)
  nameWithType: ModuleBuilder.Build(CommandService, IServiceProvider)
  fullName: Discord.Commands.Builders.ModuleBuilder.Build(Discord.Commands.CommandService, System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ModuleBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Build
    path: ../src/Discord.Net.Commands/Builders/ModuleBuilder.cs
    startLine: 131
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public ModuleInfo Build(CommandService service, IServiceProvider services)
    parameters:
    - id: service
      type: Discord.Commands.CommandService
    - id: services
      type: System.IServiceProvider
    return:
      type: Discord.Commands.ModuleInfo
    content.vb: Public Function Build(service As CommandService, services As IServiceProvider) As ModuleInfo
  overload: Discord.Commands.Builders.ModuleBuilder.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Discord.Commands.Builders
  commentId: N:Discord.Commands.Builders
  name: Discord.Commands.Builders
  nameWithType: Discord.Commands.Builders
  fullName: Discord.Commands.Builders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Commands.Builders.ModuleBuilder.Service*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.Service
  name: Service
  nameWithType: ModuleBuilder.Service
  fullName: Discord.Commands.Builders.ModuleBuilder.Service
- uid: Discord.Commands.CommandService
  commentId: T:Discord.Commands.CommandService
  parent: Discord.Commands
  name: CommandService
  nameWithType: CommandService
  fullName: Discord.Commands.CommandService
- uid: Discord.Commands
  commentId: N:Discord.Commands
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
- uid: Discord.Commands.Builders.ModuleBuilder.Parent*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.Parent
  name: Parent
  nameWithType: ModuleBuilder.Parent
  fullName: Discord.Commands.Builders.ModuleBuilder.Parent
- uid: Discord.Commands.Builders.ModuleBuilder
  commentId: T:Discord.Commands.Builders.ModuleBuilder
  parent: Discord.Commands.Builders
  name: ModuleBuilder
  nameWithType: ModuleBuilder
  fullName: Discord.Commands.Builders.ModuleBuilder
- uid: Discord.Commands.Builders.ModuleBuilder.Name*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.Name
  name: Name
  nameWithType: ModuleBuilder.Name
  fullName: Discord.Commands.Builders.ModuleBuilder.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Commands.Builders.ModuleBuilder.Summary*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.Summary
  name: Summary
  nameWithType: ModuleBuilder.Summary
  fullName: Discord.Commands.Builders.ModuleBuilder.Summary
- uid: Discord.Commands.Builders.ModuleBuilder.Remarks*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.Remarks
  name: Remarks
  nameWithType: ModuleBuilder.Remarks
  fullName: Discord.Commands.Builders.ModuleBuilder.Remarks
- uid: Discord.Commands.Builders.ModuleBuilder.Group*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.Group
  name: Group
  nameWithType: ModuleBuilder.Group
  fullName: Discord.Commands.Builders.ModuleBuilder.Group
- uid: Discord.Commands.Builders.ModuleBuilder.Commands*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.Commands
  name: Commands
  nameWithType: ModuleBuilder.Commands
  fullName: Discord.Commands.Builders.ModuleBuilder.Commands
- uid: System.Collections.Generic.IReadOnlyList{Discord.Commands.Builders.CommandBuilder}
  commentId: T:System.Collections.Generic.IReadOnlyList{Discord.Commands.Builders.CommandBuilder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<CommandBuilder>
  nameWithType: IReadOnlyList<CommandBuilder>
  fullName: System.Collections.Generic.IReadOnlyList<Discord.Commands.Builders.CommandBuilder>
  nameWithType.vb: IReadOnlyList(Of CommandBuilder)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Discord.Commands.Builders.CommandBuilder)
  name.vb: IReadOnlyList(Of CommandBuilder)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Commands.Builders.CommandBuilder
    name: CommandBuilder
    nameWithType: CommandBuilder
    fullName: Discord.Commands.Builders.CommandBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Commands.Builders.CommandBuilder
    name: CommandBuilder
    nameWithType: CommandBuilder
    fullName: Discord.Commands.Builders.CommandBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Discord.Commands.Builders.ModuleBuilder.Modules*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.Modules
  name: Modules
  nameWithType: ModuleBuilder.Modules
  fullName: Discord.Commands.Builders.ModuleBuilder.Modules
- uid: System.Collections.Generic.IReadOnlyList{Discord.Commands.Builders.ModuleBuilder}
  commentId: T:System.Collections.Generic.IReadOnlyList{Discord.Commands.Builders.ModuleBuilder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ModuleBuilder>
  nameWithType: IReadOnlyList<ModuleBuilder>
  fullName: System.Collections.Generic.IReadOnlyList<Discord.Commands.Builders.ModuleBuilder>
  nameWithType.vb: IReadOnlyList(Of ModuleBuilder)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Discord.Commands.Builders.ModuleBuilder)
  name.vb: IReadOnlyList(Of ModuleBuilder)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    nameWithType: ModuleBuilder
    fullName: Discord.Commands.Builders.ModuleBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    nameWithType: ModuleBuilder
    fullName: Discord.Commands.Builders.ModuleBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Commands.Builders.ModuleBuilder.Preconditions*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.Preconditions
  name: Preconditions
  nameWithType: ModuleBuilder.Preconditions
  fullName: Discord.Commands.Builders.ModuleBuilder.Preconditions
- uid: System.Collections.Generic.IReadOnlyList{Discord.Commands.PreconditionAttribute}
  commentId: T:System.Collections.Generic.IReadOnlyList{Discord.Commands.PreconditionAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<PreconditionAttribute>
  nameWithType: IReadOnlyList<PreconditionAttribute>
  fullName: System.Collections.Generic.IReadOnlyList<Discord.Commands.PreconditionAttribute>
  nameWithType.vb: IReadOnlyList(Of PreconditionAttribute)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Discord.Commands.PreconditionAttribute)
  name.vb: IReadOnlyList(Of PreconditionAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Commands.PreconditionAttribute
    name: PreconditionAttribute
    nameWithType: PreconditionAttribute
    fullName: Discord.Commands.PreconditionAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Commands.PreconditionAttribute
    name: PreconditionAttribute
    nameWithType: PreconditionAttribute
    fullName: Discord.Commands.PreconditionAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Commands.Builders.ModuleBuilder.Attributes*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.Attributes
  name: Attributes
  nameWithType: ModuleBuilder.Attributes
  fullName: Discord.Commands.Builders.ModuleBuilder.Attributes
- uid: System.Collections.Generic.IReadOnlyList{System.Attribute}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Attribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Attribute>
  nameWithType: IReadOnlyList<Attribute>
  fullName: System.Collections.Generic.IReadOnlyList<System.Attribute>
  nameWithType.vb: IReadOnlyList(Of Attribute)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of System.Attribute)
  name.vb: IReadOnlyList(Of Attribute)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Commands.Builders.ModuleBuilder.Aliases*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.Aliases
  name: Aliases
  nameWithType: ModuleBuilder.Aliases
  fullName: Discord.Commands.Builders.ModuleBuilder.Aliases
- uid: System.Collections.Generic.IReadOnlyList{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<String>
  nameWithType: IReadOnlyList<String>
  fullName: System.Collections.Generic.IReadOnlyList<System.String>
  nameWithType.vb: IReadOnlyList(Of String)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of System.String)
  name.vb: IReadOnlyList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Commands.Builders.ModuleBuilder.WithName*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.WithName
  name: WithName
  nameWithType: ModuleBuilder.WithName
  fullName: Discord.Commands.Builders.ModuleBuilder.WithName
- uid: Discord.Commands.Builders.ModuleBuilder.WithSummary*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.WithSummary
  name: WithSummary
  nameWithType: ModuleBuilder.WithSummary
  fullName: Discord.Commands.Builders.ModuleBuilder.WithSummary
- uid: Discord.Commands.Builders.ModuleBuilder.WithRemarks*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.WithRemarks
  name: WithRemarks
  nameWithType: ModuleBuilder.WithRemarks
  fullName: Discord.Commands.Builders.ModuleBuilder.WithRemarks
- uid: Discord.Commands.Builders.ModuleBuilder.AddAliases*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.AddAliases
  name: AddAliases
  nameWithType: ModuleBuilder.AddAliases
  fullName: Discord.Commands.Builders.ModuleBuilder.AddAliases
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Discord.Commands.Builders.ModuleBuilder.AddAttributes*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.AddAttributes
  name: AddAttributes
  nameWithType: ModuleBuilder.AddAttributes
  fullName: Discord.Commands.Builders.ModuleBuilder.AddAttributes
- uid: System.Attribute[]
  isExternal: true
  name: Attribute[]
  nameWithType: Attribute[]
  fullName: System.Attribute[]
  nameWithType.vb: Attribute()
  fullName.vb: System.Attribute()
  name.vb: Attribute()
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Discord.Commands.Builders.ModuleBuilder.AddPrecondition*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.AddPrecondition
  name: AddPrecondition
  nameWithType: ModuleBuilder.AddPrecondition
  fullName: Discord.Commands.Builders.ModuleBuilder.AddPrecondition
- uid: Discord.Commands.PreconditionAttribute
  commentId: T:Discord.Commands.PreconditionAttribute
  parent: Discord.Commands
  name: PreconditionAttribute
  nameWithType: PreconditionAttribute
  fullName: Discord.Commands.PreconditionAttribute
- uid: Discord.Commands.Builders.ModuleBuilder.AddCommand*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.AddCommand
  name: AddCommand
  nameWithType: ModuleBuilder.AddCommand
  fullName: Discord.Commands.Builders.ModuleBuilder.AddCommand
- uid: System.Func{Discord.Commands.ICommandContext,System.Object[],System.IServiceProvider,Discord.Commands.CommandInfo,System.Threading.Tasks.Task}
  commentId: T:System.Func{Discord.Commands.ICommandContext,System.Object[],System.IServiceProvider,Discord.Commands.CommandInfo,System.Threading.Tasks.Task}
  parent: System
  definition: System.Func`5
  name: Func<ICommandContext, Object[], IServiceProvider, CommandInfo, Task>
  nameWithType: Func<ICommandContext, Object[], IServiceProvider, CommandInfo, Task>
  fullName: System.Func<Discord.Commands.ICommandContext, System.Object[], System.IServiceProvider, Discord.Commands.CommandInfo, System.Threading.Tasks.Task>
  nameWithType.vb: Func(Of ICommandContext, Object(), IServiceProvider, CommandInfo, Task)
  fullName.vb: System.Func(Of Discord.Commands.ICommandContext, System.Object(), System.IServiceProvider, Discord.Commands.CommandInfo, System.Threading.Tasks.Task)
  name.vb: Func(Of ICommandContext, Object(), IServiceProvider, CommandInfo, Task)
  spec.csharp:
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    nameWithType: ICommandContext
    fullName: Discord.Commands.ICommandContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    nameWithType: CommandInfo
    fullName: Discord.Commands.CommandInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Commands.ICommandContext
    name: ICommandContext
    nameWithType: ICommandContext
    fullName: Discord.Commands.ICommandContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.Commands.CommandInfo
    name: CommandInfo
    nameWithType: CommandInfo
    fullName: Discord.Commands.CommandInfo
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Discord.Commands.Builders.CommandBuilder}
  commentId: T:System.Action{Discord.Commands.Builders.CommandBuilder}
  parent: System
  definition: System.Action`1
  name: Action<CommandBuilder>
  nameWithType: Action<CommandBuilder>
  fullName: System.Action<Discord.Commands.Builders.CommandBuilder>
  nameWithType.vb: Action(Of CommandBuilder)
  fullName.vb: System.Action(Of Discord.Commands.Builders.CommandBuilder)
  name.vb: Action(Of CommandBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Commands.Builders.CommandBuilder
    name: CommandBuilder
    nameWithType: CommandBuilder
    fullName: Discord.Commands.Builders.CommandBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Commands.Builders.CommandBuilder
    name: CommandBuilder
    nameWithType: CommandBuilder
    fullName: Discord.Commands.Builders.CommandBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`5
  commentId: T:System.Func`5
  isExternal: true
  name: Func<T1, T2, T3, T4, TResult>
  nameWithType: Func<T1, T2, T3, T4, TResult>
  fullName: System.Func<T1, T2, T3, T4, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, T4, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, T4, TResult)
  name.vb: Func(Of T1, T2, T3, T4, TResult)
  spec.csharp:
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`5
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Commands.Builders.ModuleBuilder.AddModule*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.AddModule
  name: AddModule
  nameWithType: ModuleBuilder.AddModule
  fullName: Discord.Commands.Builders.ModuleBuilder.AddModule
- uid: System.Action{Discord.Commands.Builders.ModuleBuilder}
  commentId: T:System.Action{Discord.Commands.Builders.ModuleBuilder}
  parent: System
  definition: System.Action`1
  name: Action<ModuleBuilder>
  nameWithType: Action<ModuleBuilder>
  fullName: System.Action<Discord.Commands.Builders.ModuleBuilder>
  nameWithType.vb: Action(Of ModuleBuilder)
  fullName.vb: System.Action(Of Discord.Commands.Builders.ModuleBuilder)
  name.vb: Action(Of ModuleBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    nameWithType: ModuleBuilder
    fullName: Discord.Commands.Builders.ModuleBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Commands.Builders.ModuleBuilder
    name: ModuleBuilder
    nameWithType: ModuleBuilder
    fullName: Discord.Commands.Builders.ModuleBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Commands.Builders.ModuleBuilder.Build*
  commentId: Overload:Discord.Commands.Builders.ModuleBuilder.Build
  name: Build
  nameWithType: ModuleBuilder.Build
  fullName: Discord.Commands.Builders.ModuleBuilder.Build
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Discord.Commands.ModuleInfo
  commentId: T:Discord.Commands.ModuleInfo
  parent: Discord.Commands
  name: ModuleInfo
  nameWithType: ModuleInfo
  fullName: Discord.Commands.ModuleInfo
