### YamlMime:ManagedReference
items:
- uid: Discord.WebSocket.SocketEntity`1
  commentId: T:Discord.WebSocket.SocketEntity`1
  id: SocketEntity`1
  parent: Discord.WebSocket
  children:
  - Discord.WebSocket.SocketEntity`1.Id
  langs:
  - csharp
  - vb
  name: SocketEntity<T>
  nameWithType: SocketEntity<T>
  fullName: Discord.WebSocket.SocketEntity<T>
  type: Class
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/SocketEntity.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SocketEntity
    path: ../src/Discord.Net.WebSocket/Entities/SocketEntity.cs
    startLine: 4
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  syntax:
    content: 'public abstract class SocketEntity<T> : object, IEntity<T> where T : IEquatable<T>'
    typeParameters:
    - id: T
    content.vb: >-
      Public MustInherit Class SocketEntity(Of T As IEquatable(Of T))
          Inherits Object
          Implements IEntity(Of T)
  inheritance:
  - System.Object
  derivedClasses:
  - Discord.WebSocket.SocketChannel
  - Discord.WebSocket.SocketGuild
  - Discord.WebSocket.SocketMessage
  - Discord.WebSocket.SocketRole
  - Discord.WebSocket.SocketUser
  implements:
  - Discord.IEntity{{T}}
  nameWithType.vb: SocketEntity(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Discord.WebSocket.SocketEntity(Of T)
  name.vb: SocketEntity(Of T)
- uid: Discord.WebSocket.SocketEntity`1.Id
  commentId: P:Discord.WebSocket.SocketEntity`1.Id
  id: Id
  parent: Discord.WebSocket.SocketEntity`1
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: SocketEntity<T>.Id
  fullName: Discord.WebSocket.SocketEntity<T>.Id
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/SocketEntity.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Id
    path: ../src/Discord.Net.WebSocket/Entities/SocketEntity.cs
    startLine: 9
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public T Id { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property Id As T
  overload: Discord.WebSocket.SocketEntity`1.Id*
  implements:
  - Discord.IEntity{{T}}.Id
  nameWithType.vb: SocketEntity(Of T).Id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Discord.WebSocket.SocketEntity(Of T).Id
references:
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.IEntity{{T}}
  commentId: T:Discord.IEntity{`0}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<T>
  nameWithType: IEntity<T>
  fullName: Discord.IEntity<T>
  nameWithType.vb: IEntity(Of T)
  fullName.vb: Discord.IEntity(Of T)
  name.vb: IEntity(Of T)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.WebSocket.SocketEntity`1.Id*
  commentId: Overload:Discord.WebSocket.SocketEntity`1.Id
  name: Id
  nameWithType: SocketEntity<T>.Id
  fullName: Discord.WebSocket.SocketEntity<T>.Id
  nameWithType.vb: SocketEntity(Of T).Id
  fullName.vb: Discord.WebSocket.SocketEntity(Of T).Id
- uid: Discord.IEntity{{T}}.Id
  commentId: P:Discord.IEntity{`0}.Id
  parent: Discord.IEntity{{T}}
  definition: Discord.IEntity`1.Id
  name: Id
  nameWithType: IEntity<T>.Id
  fullName: Discord.IEntity<T>.Id
  nameWithType.vb: IEntity(Of T).Id
  fullName.vb: Discord.IEntity(Of T).Id
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Discord.IEntity`1.Id
  commentId: P:Discord.IEntity`1.Id
  name: Id
  nameWithType: IEntity<TId>.Id
  fullName: Discord.IEntity<TId>.Id
  nameWithType.vb: IEntity(Of TId).Id
  fullName.vb: Discord.IEntity(Of TId).Id
- uid: T
  name: T
  nameWithType: T
  fullName: T
