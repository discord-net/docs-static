### YamlMime:ManagedReference
items:
- uid: Discord.WebSocket.SocketVoiceState
  commentId: T:Discord.WebSocket.SocketVoiceState
  id: SocketVoiceState
  parent: Discord.WebSocket
  children:
  - Discord.WebSocket.SocketVoiceState.Default
  - Discord.WebSocket.SocketVoiceState.Discord#IVoiceState#VoiceChannel
  - Discord.WebSocket.SocketVoiceState.IsDeafened
  - Discord.WebSocket.SocketVoiceState.IsMuted
  - Discord.WebSocket.SocketVoiceState.IsSelfDeafened
  - Discord.WebSocket.SocketVoiceState.IsSelfMuted
  - Discord.WebSocket.SocketVoiceState.IsStreaming
  - Discord.WebSocket.SocketVoiceState.IsSuppressed
  - Discord.WebSocket.SocketVoiceState.ToString
  - Discord.WebSocket.SocketVoiceState.VoiceChannel
  - Discord.WebSocket.SocketVoiceState.VoiceSessionId
  langs:
  - csharp
  - vb
  name: SocketVoiceState
  nameWithType: SocketVoiceState
  fullName: Discord.WebSocket.SocketVoiceState
  type: Struct
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SocketVoiceState
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
    startLine: 9
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nRepresents a WebSocket user&apos;s voice connection status.\n"
  example: []
  syntax:
    content: 'public struct SocketVoiceState : IVoiceState'
    content.vb: >-
      Public Structure SocketVoiceState
          Implements IVoiceState
  implements:
  - Discord.IVoiceState
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Discord.WebSocket.SocketVoiceState.Default
  commentId: F:Discord.WebSocket.SocketVoiceState.Default
  id: Default
  parent: Discord.WebSocket.SocketVoiceState
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: SocketVoiceState.Default
  fullName: Discord.WebSocket.SocketVoiceState.Default
  type: Field
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Default
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
    startLine: 15
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nInitializes a default <xref href=\"Discord.WebSocket.SocketVoiceState\" data-throw-if-not-resolved=\"false\"></xref> with everything set to <code>null</code> or <code>false</code>.\n"
  example: []
  syntax:
    content: public static readonly SocketVoiceState Default
    return:
      type: Discord.WebSocket.SocketVoiceState
    content.vb: Public Shared ReadOnly Default As SocketVoiceState
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Discord.WebSocket.SocketVoiceState.VoiceChannel
  commentId: P:Discord.WebSocket.SocketVoiceState.VoiceChannel
  id: VoiceChannel
  parent: Discord.WebSocket.SocketVoiceState
  langs:
  - csharp
  - vb
  name: VoiceChannel
  nameWithType: SocketVoiceState.VoiceChannel
  fullName: Discord.WebSocket.SocketVoiceState.VoiceChannel
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: VoiceChannel
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
    startLine: 34
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the voice channel that the user is currently in; or <code>null</code> if none.\n"
  example: []
  syntax:
    content: public SocketVoiceChannel VoiceChannel { get; }
    parameters: []
    return:
      type: Discord.WebSocket.SocketVoiceChannel
    content.vb: Public ReadOnly Property VoiceChannel As SocketVoiceChannel
  overload: Discord.WebSocket.SocketVoiceState.VoiceChannel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketVoiceState.VoiceSessionId
  commentId: P:Discord.WebSocket.SocketVoiceState.VoiceSessionId
  id: VoiceSessionId
  parent: Discord.WebSocket.SocketVoiceState
  langs:
  - csharp
  - vb
  name: VoiceSessionId
  nameWithType: SocketVoiceState.VoiceSessionId
  fullName: Discord.WebSocket.SocketVoiceState.VoiceSessionId
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: VoiceSessionId
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
    startLine: 36
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the unique identifier for this user&apos;s voice session.\n"
  example: []
  syntax:
    content: public string VoiceSessionId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property VoiceSessionId As String
  overload: Discord.WebSocket.SocketVoiceState.VoiceSessionId*
  implements:
  - Discord.IVoiceState.VoiceSessionId
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketVoiceState.IsMuted
  commentId: P:Discord.WebSocket.SocketVoiceState.IsMuted
  id: IsMuted
  parent: Discord.WebSocket.SocketVoiceState
  langs:
  - csharp
  - vb
  name: IsMuted
  nameWithType: SocketVoiceState.IsMuted
  fullName: Discord.WebSocket.SocketVoiceState.IsMuted
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsMuted
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
    startLine: 39
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets a value that indicates whether this user is muted (i.e. not permitted to speak via voice) by the\nguild.\n"
  example: []
  syntax:
    content: public bool IsMuted { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this user is muted by the guild; otherwise <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsMuted As Boolean
  overload: Discord.WebSocket.SocketVoiceState.IsMuted*
  implements:
  - Discord.IVoiceState.IsMuted
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketVoiceState.IsDeafened
  commentId: P:Discord.WebSocket.SocketVoiceState.IsDeafened
  id: IsDeafened
  parent: Discord.WebSocket.SocketVoiceState
  langs:
  - csharp
  - vb
  name: IsDeafened
  nameWithType: SocketVoiceState.IsDeafened
  fullName: Discord.WebSocket.SocketVoiceState.IsDeafened
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsDeafened
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
    startLine: 41
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets a value that indicates whether this user is deafened by the guild.\n"
  example: []
  syntax:
    content: public bool IsDeafened { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the user is deafened (i.e. not permitted to listen to or speak to others) by the guild;\notherwise <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsDeafened As Boolean
  overload: Discord.WebSocket.SocketVoiceState.IsDeafened*
  implements:
  - Discord.IVoiceState.IsDeafened
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketVoiceState.IsSuppressed
  commentId: P:Discord.WebSocket.SocketVoiceState.IsSuppressed
  id: IsSuppressed
  parent: Discord.WebSocket.SocketVoiceState
  langs:
  - csharp
  - vb
  name: IsSuppressed
  nameWithType: SocketVoiceState.IsSuppressed
  fullName: Discord.WebSocket.SocketVoiceState.IsSuppressed
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsSuppressed
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
    startLine: 43
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets a value that indicates whether the user is muted by the current user.\n"
  example: []
  syntax:
    content: public bool IsSuppressed { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the guild is temporarily blocking audio to/from this user; otherwise <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsSuppressed As Boolean
  overload: Discord.WebSocket.SocketVoiceState.IsSuppressed*
  implements:
  - Discord.IVoiceState.IsSuppressed
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketVoiceState.IsSelfMuted
  commentId: P:Discord.WebSocket.SocketVoiceState.IsSelfMuted
  id: IsSelfMuted
  parent: Discord.WebSocket.SocketVoiceState
  langs:
  - csharp
  - vb
  name: IsSelfMuted
  nameWithType: SocketVoiceState.IsSelfMuted
  fullName: Discord.WebSocket.SocketVoiceState.IsSelfMuted
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsSelfMuted
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
    startLine: 45
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets a value that indicates whether this user has marked themselves as muted (i.e. not permitted to\nspeak via voice).\n"
  example: []
  syntax:
    content: public bool IsSelfMuted { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this user has muted themselves; otherwise <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsSelfMuted As Boolean
  overload: Discord.WebSocket.SocketVoiceState.IsSelfMuted*
  implements:
  - Discord.IVoiceState.IsSelfMuted
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketVoiceState.IsSelfDeafened
  commentId: P:Discord.WebSocket.SocketVoiceState.IsSelfDeafened
  id: IsSelfDeafened
  parent: Discord.WebSocket.SocketVoiceState
  langs:
  - csharp
  - vb
  name: IsSelfDeafened
  nameWithType: SocketVoiceState.IsSelfDeafened
  fullName: Discord.WebSocket.SocketVoiceState.IsSelfDeafened
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsSelfDeafened
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
    startLine: 47
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets a value that indicates whether this user has marked themselves as deafened.\n"
  example: []
  syntax:
    content: public bool IsSelfDeafened { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this user has deafened themselves (i.e. not permitted to listen to or speak to others); otherwise <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsSelfDeafened As Boolean
  overload: Discord.WebSocket.SocketVoiceState.IsSelfDeafened*
  implements:
  - Discord.IVoiceState.IsSelfDeafened
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketVoiceState.IsStreaming
  commentId: P:Discord.WebSocket.SocketVoiceState.IsStreaming
  id: IsStreaming
  parent: Discord.WebSocket.SocketVoiceState
  langs:
  - csharp
  - vb
  name: IsStreaming
  nameWithType: SocketVoiceState.IsStreaming
  fullName: Discord.WebSocket.SocketVoiceState.IsStreaming
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsStreaming
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
    startLine: 49
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets a value that indicates if this user is streaming in a voice channel.\n"
  example: []
  syntax:
    content: public bool IsStreaming { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the user is streaming; otherwise <code>false</code>.\n"
    content.vb: Public ReadOnly Property IsStreaming As Boolean
  overload: Discord.WebSocket.SocketVoiceState.IsStreaming*
  implements:
  - Discord.IVoiceState.IsStreaming
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketVoiceState.ToString
  commentId: M:Discord.WebSocket.SocketVoiceState.ToString
  id: ToString
  parent: Discord.WebSocket.SocketVoiceState
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SocketVoiceState.ToString()
  fullName: Discord.WebSocket.SocketVoiceState.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
    startLine: 82
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the name of this voice channel.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA string that resolves to name of this voice channel; otherwise &quot;Unknown&quot;.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Discord.WebSocket.SocketVoiceState.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Discord.WebSocket.SocketVoiceState.Discord#IVoiceState#VoiceChannel
  commentId: P:Discord.WebSocket.SocketVoiceState.Discord#IVoiceState#VoiceChannel
  id: Discord#IVoiceState#VoiceChannel
  isEii: true
  parent: Discord.WebSocket.SocketVoiceState
  langs:
  - csharp
  - vb
  name: IVoiceState.VoiceChannel
  nameWithType: SocketVoiceState.IVoiceState.VoiceChannel
  fullName: Discord.WebSocket.SocketVoiceState.Discord.IVoiceState.VoiceChannel
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IVoiceState.VoiceChannel
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketVoiceState.cs
    startLine: 87
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the voice channel this user is currently in.\n"
  example: []
  syntax:
    content: IVoiceChannel IVoiceState.VoiceChannel { get; }
    parameters: []
    return:
      type: Discord.IVoiceChannel
      description: "\nA generic voice channel object representing the voice channel that the user is currently in; <code>null</code>\nif none.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IVoiceState.VoiceChannel As IVoiceChannel Implements IVoiceState.VoiceChannel
  overload: Discord.WebSocket.SocketVoiceState.Discord#IVoiceState#VoiceChannel*
  implements:
  - Discord.IVoiceState.VoiceChannel
  nameWithType.vb: SocketVoiceState.Discord.IVoiceState.VoiceChannel
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IVoiceState.VoiceChannel
references:
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
- uid: Discord.IVoiceState
  commentId: T:Discord.IVoiceState
  parent: Discord
  name: IVoiceState
  nameWithType: IVoiceState
  fullName: Discord.IVoiceState
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.WebSocket.SocketVoiceState
  commentId: T:Discord.WebSocket.SocketVoiceState
  parent: Discord.WebSocket
  name: SocketVoiceState
  nameWithType: SocketVoiceState
  fullName: Discord.WebSocket.SocketVoiceState
- uid: Discord.WebSocket.SocketVoiceState.VoiceChannel*
  commentId: Overload:Discord.WebSocket.SocketVoiceState.VoiceChannel
  name: VoiceChannel
  nameWithType: SocketVoiceState.VoiceChannel
  fullName: Discord.WebSocket.SocketVoiceState.VoiceChannel
- uid: Discord.WebSocket.SocketVoiceChannel
  commentId: T:Discord.WebSocket.SocketVoiceChannel
  parent: Discord.WebSocket
  name: SocketVoiceChannel
  nameWithType: SocketVoiceChannel
  fullName: Discord.WebSocket.SocketVoiceChannel
- uid: Discord.WebSocket.SocketVoiceState.VoiceSessionId*
  commentId: Overload:Discord.WebSocket.SocketVoiceState.VoiceSessionId
  name: VoiceSessionId
  nameWithType: SocketVoiceState.VoiceSessionId
  fullName: Discord.WebSocket.SocketVoiceState.VoiceSessionId
- uid: Discord.IVoiceState.VoiceSessionId
  commentId: P:Discord.IVoiceState.VoiceSessionId
  parent: Discord.IVoiceState
  name: VoiceSessionId
  nameWithType: IVoiceState.VoiceSessionId
  fullName: Discord.IVoiceState.VoiceSessionId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.WebSocket.SocketVoiceState.IsMuted*
  commentId: Overload:Discord.WebSocket.SocketVoiceState.IsMuted
  name: IsMuted
  nameWithType: SocketVoiceState.IsMuted
  fullName: Discord.WebSocket.SocketVoiceState.IsMuted
- uid: Discord.IVoiceState.IsMuted
  commentId: P:Discord.IVoiceState.IsMuted
  parent: Discord.IVoiceState
  name: IsMuted
  nameWithType: IVoiceState.IsMuted
  fullName: Discord.IVoiceState.IsMuted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.WebSocket.SocketVoiceState.IsDeafened*
  commentId: Overload:Discord.WebSocket.SocketVoiceState.IsDeafened
  name: IsDeafened
  nameWithType: SocketVoiceState.IsDeafened
  fullName: Discord.WebSocket.SocketVoiceState.IsDeafened
- uid: Discord.IVoiceState.IsDeafened
  commentId: P:Discord.IVoiceState.IsDeafened
  parent: Discord.IVoiceState
  name: IsDeafened
  nameWithType: IVoiceState.IsDeafened
  fullName: Discord.IVoiceState.IsDeafened
- uid: Discord.WebSocket.SocketVoiceState.IsSuppressed*
  commentId: Overload:Discord.WebSocket.SocketVoiceState.IsSuppressed
  name: IsSuppressed
  nameWithType: SocketVoiceState.IsSuppressed
  fullName: Discord.WebSocket.SocketVoiceState.IsSuppressed
- uid: Discord.IVoiceState.IsSuppressed
  commentId: P:Discord.IVoiceState.IsSuppressed
  parent: Discord.IVoiceState
  name: IsSuppressed
  nameWithType: IVoiceState.IsSuppressed
  fullName: Discord.IVoiceState.IsSuppressed
- uid: Discord.WebSocket.SocketVoiceState.IsSelfMuted*
  commentId: Overload:Discord.WebSocket.SocketVoiceState.IsSelfMuted
  name: IsSelfMuted
  nameWithType: SocketVoiceState.IsSelfMuted
  fullName: Discord.WebSocket.SocketVoiceState.IsSelfMuted
- uid: Discord.IVoiceState.IsSelfMuted
  commentId: P:Discord.IVoiceState.IsSelfMuted
  parent: Discord.IVoiceState
  name: IsSelfMuted
  nameWithType: IVoiceState.IsSelfMuted
  fullName: Discord.IVoiceState.IsSelfMuted
- uid: Discord.WebSocket.SocketVoiceState.IsSelfDeafened*
  commentId: Overload:Discord.WebSocket.SocketVoiceState.IsSelfDeafened
  name: IsSelfDeafened
  nameWithType: SocketVoiceState.IsSelfDeafened
  fullName: Discord.WebSocket.SocketVoiceState.IsSelfDeafened
- uid: Discord.IVoiceState.IsSelfDeafened
  commentId: P:Discord.IVoiceState.IsSelfDeafened
  parent: Discord.IVoiceState
  name: IsSelfDeafened
  nameWithType: IVoiceState.IsSelfDeafened
  fullName: Discord.IVoiceState.IsSelfDeafened
- uid: Discord.WebSocket.SocketVoiceState.IsStreaming*
  commentId: Overload:Discord.WebSocket.SocketVoiceState.IsStreaming
  name: IsStreaming
  nameWithType: SocketVoiceState.IsStreaming
  fullName: Discord.WebSocket.SocketVoiceState.IsStreaming
- uid: Discord.IVoiceState.IsStreaming
  commentId: P:Discord.IVoiceState.IsStreaming
  parent: Discord.IVoiceState
  name: IsStreaming
  nameWithType: IVoiceState.IsStreaming
  fullName: Discord.IVoiceState.IsStreaming
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketVoiceState.ToString*
  commentId: Overload:Discord.WebSocket.SocketVoiceState.ToString
  name: ToString
  nameWithType: SocketVoiceState.ToString
  fullName: Discord.WebSocket.SocketVoiceState.ToString
- uid: Discord.WebSocket.SocketVoiceState.Discord#IVoiceState#VoiceChannel*
  commentId: Overload:Discord.WebSocket.SocketVoiceState.Discord#IVoiceState#VoiceChannel
  name: IVoiceState.VoiceChannel
  nameWithType: SocketVoiceState.IVoiceState.VoiceChannel
  fullName: Discord.WebSocket.SocketVoiceState.Discord.IVoiceState.VoiceChannel
  nameWithType.vb: SocketVoiceState.Discord.IVoiceState.VoiceChannel
  name.vb: Discord.IVoiceState.VoiceChannel
- uid: Discord.IVoiceState.VoiceChannel
  commentId: P:Discord.IVoiceState.VoiceChannel
  parent: Discord.IVoiceState
  name: VoiceChannel
  nameWithType: IVoiceState.VoiceChannel
  fullName: Discord.IVoiceState.VoiceChannel
- uid: Discord.IVoiceChannel
  commentId: T:Discord.IVoiceChannel
  parent: Discord
  name: IVoiceChannel
  nameWithType: IVoiceChannel
  fullName: Discord.IVoiceChannel
