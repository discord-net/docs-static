### YamlMime:ManagedReference
items:
- uid: Discord.Rest.RoleEditInfo
  commentId: T:Discord.Rest.RoleEditInfo
  id: RoleEditInfo
  parent: Discord.Rest
  children:
  - Discord.Rest.RoleEditInfo.Color
  - Discord.Rest.RoleEditInfo.Hoist
  - Discord.Rest.RoleEditInfo.Mentionable
  - Discord.Rest.RoleEditInfo.Name
  - Discord.Rest.RoleEditInfo.Permissions
  langs:
  - csharp
  - vb
  name: RoleEditInfo
  nameWithType: RoleEditInfo
  fullName: Discord.Rest.RoleEditInfo
  type: Struct
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/RoleEditInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RoleEditInfo
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/RoleEditInfo.cs
    startLine: 5
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nRepresents information for a role edit.\n"
  example: []
  syntax:
    content: public struct RoleEditInfo
    content.vb: Public Structure RoleEditInfo
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Discord.Rest.RoleEditInfo.Color
  commentId: P:Discord.Rest.RoleEditInfo.Color
  id: Color
  parent: Discord.Rest.RoleEditInfo
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: RoleEditInfo.Color
  fullName: Discord.Rest.RoleEditInfo.Color
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/RoleEditInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Color
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/RoleEditInfo.cs
    startLine: 24
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the color of this role.\n"
  example: []
  syntax:
    content: public Color? Color { get; }
    parameters: []
    return:
      type: System.Nullable{Discord.Color}
      description: "\nA color object representing the color assigned to this role; <code>null</code> if this role does not have a\ncolor.\n"
    content.vb: Public ReadOnly Property Color As Color?
  overload: Discord.Rest.RoleEditInfo.Color*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RoleEditInfo.Mentionable
  commentId: P:Discord.Rest.RoleEditInfo.Mentionable
  id: Mentionable
  parent: Discord.Rest.RoleEditInfo
  langs:
  - csharp
  - vb
  name: Mentionable
  nameWithType: RoleEditInfo.Mentionable
  fullName: Discord.Rest.RoleEditInfo.Mentionable
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/RoleEditInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Mentionable
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/RoleEditInfo.cs
    startLine: 32
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets a value that indicates whether this role is mentionable.\n"
  example: []
  syntax:
    content: public bool? Mentionable { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: "\n<code>true</code> if other members can mention this role in a text channel; otherwise <code>false</code>; \n<code>null</code> if this is not mentioned in this entry.\n"
    content.vb: Public ReadOnly Property Mentionable As Boolean?
  overload: Discord.Rest.RoleEditInfo.Mentionable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RoleEditInfo.Hoist
  commentId: P:Discord.Rest.RoleEditInfo.Hoist
  id: Hoist
  parent: Discord.Rest.RoleEditInfo
  langs:
  - csharp
  - vb
  name: Hoist
  nameWithType: RoleEditInfo.Hoist
  fullName: Discord.Rest.RoleEditInfo.Hoist
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/RoleEditInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Hoist
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/RoleEditInfo.cs
    startLine: 41
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets a value that indicates whether this role is hoisted (i.e. its members will appear in a separate\nsection on the user list).\n"
  example: []
  syntax:
    content: public bool? Hoist { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
      description: "\n<code>true</code> if this role&apos;s members will appear in a separate section in the user list; otherwise \n<code>false</code>; <code>null</code> if this is not mentioned in this entry.\n"
    content.vb: Public ReadOnly Property Hoist As Boolean?
  overload: Discord.Rest.RoleEditInfo.Hoist*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RoleEditInfo.Name
  commentId: P:Discord.Rest.RoleEditInfo.Name
  id: Name
  parent: Discord.Rest.RoleEditInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RoleEditInfo.Name
  fullName: Discord.Rest.RoleEditInfo.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/RoleEditInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/RoleEditInfo.cs
    startLine: 48
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the name of this role.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the name of this role.\n"
    content.vb: Public ReadOnly Property Name As String
  overload: Discord.Rest.RoleEditInfo.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RoleEditInfo.Permissions
  commentId: P:Discord.Rest.RoleEditInfo.Permissions
  id: Permissions
  parent: Discord.Rest.RoleEditInfo
  langs:
  - csharp
  - vb
  name: Permissions
  nameWithType: RoleEditInfo.Permissions
  fullName: Discord.Rest.RoleEditInfo.Permissions
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/RoleEditInfo.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Permissions
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/RoleEditInfo.cs
    startLine: 56
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the permissions assigned to this role.\n"
  example: []
  syntax:
    content: public GuildPermissions? Permissions { get; }
    parameters: []
    return:
      type: System.Nullable{Discord.GuildPermissions}
      description: "\nA guild permissions object representing the permissions that have been assigned to this role; <code>null</code>\nif no permissions have been assigned.\n"
    content.vb: Public ReadOnly Property Permissions As GuildPermissions?
  overload: Discord.Rest.RoleEditInfo.Permissions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: Discord.Rest.RoleEditInfo.Color*
  commentId: Overload:Discord.Rest.RoleEditInfo.Color
  name: Color
  nameWithType: RoleEditInfo.Color
  fullName: Discord.Rest.RoleEditInfo.Color
- uid: System.Nullable{Discord.Color}
  commentId: '!:System.Nullable{Discord.Color}'
  definition: System.Nullable`1
  name: Nullable<Color>
  nameWithType: Nullable<Color>
  fullName: System.Nullable<Discord.Color>
  nameWithType.vb: Nullable(Of Color)
  fullName.vb: System.Nullable(Of Discord.Color)
  name.vb: Nullable(Of Color)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Color
    name: Color
    nameWithType: Color
    fullName: Discord.Color
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Color
    name: Color
    nameWithType: Color
    fullName: Discord.Color
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RoleEditInfo.Mentionable*
  commentId: Overload:Discord.Rest.RoleEditInfo.Mentionable
  name: Mentionable
  nameWithType: RoleEditInfo.Mentionable
  fullName: Discord.Rest.RoleEditInfo.Mentionable
- uid: System.Nullable{System.Boolean}
  commentId: '!:System.Nullable{System.Boolean}'
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RoleEditInfo.Hoist*
  commentId: Overload:Discord.Rest.RoleEditInfo.Hoist
  name: Hoist
  nameWithType: RoleEditInfo.Hoist
  fullName: Discord.Rest.RoleEditInfo.Hoist
- uid: Discord.Rest.RoleEditInfo.Name*
  commentId: Overload:Discord.Rest.RoleEditInfo.Name
  name: Name
  nameWithType: RoleEditInfo.Name
  fullName: Discord.Rest.RoleEditInfo.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Rest.RoleEditInfo.Permissions*
  commentId: Overload:Discord.Rest.RoleEditInfo.Permissions
  name: Permissions
  nameWithType: RoleEditInfo.Permissions
  fullName: Discord.Rest.RoleEditInfo.Permissions
- uid: System.Nullable{Discord.GuildPermissions}
  commentId: '!:System.Nullable{Discord.GuildPermissions}'
  definition: System.Nullable`1
  name: Nullable<GuildPermissions>
  nameWithType: Nullable<GuildPermissions>
  fullName: System.Nullable<Discord.GuildPermissions>
  nameWithType.vb: Nullable(Of GuildPermissions)
  fullName.vb: System.Nullable(Of Discord.GuildPermissions)
  name.vb: Nullable(Of GuildPermissions)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.GuildPermissions
    name: GuildPermissions
    nameWithType: GuildPermissions
    fullName: Discord.GuildPermissions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.GuildPermissions
    name: GuildPermissions
    nameWithType: GuildPermissions
    fullName: Discord.GuildPermissions
  - name: )
    nameWithType: )
    fullName: )
