### YamlMime:ManagedReference
items:
- uid: Discord.ISystemMessage
  commentId: T:Discord.ISystemMessage
  id: ISystemMessage
  parent: Discord
  children: []
  langs:
  - csharp
  - vb
  name: ISystemMessage
  nameWithType: ISystemMessage
  fullName: Discord.ISystemMessage
  type: Interface
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/ISystemMessage.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ISystemMessage
    path: ../src/Discord.Net.Core/Entities/Messages/ISystemMessage.cs
    startLine: 5
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nRepresents a generic message sent by the system.\n"
  example: []
  syntax:
    content: 'public interface ISystemMessage : IMessage, ISnowflakeEntity, IEntity<ulong>, IDeletable'
    content.vb: >-
      Public Interface ISystemMessage
          Inherits IMessage
  inheritedMembers:
  - Discord.IMessage.Type
  - Discord.IMessage.Source
  - Discord.IMessage.IsTTS
  - Discord.IMessage.IsPinned
  - Discord.IMessage.IsSuppressed
  - Discord.IMessage.Content
  - Discord.IMessage.Timestamp
  - Discord.IMessage.EditedTimestamp
  - Discord.IMessage.Channel
  - Discord.IMessage.Author
  - Discord.IMessage.Attachments
  - Discord.IMessage.Embeds
  - Discord.IMessage.Tags
  - Discord.IMessage.MentionedChannelIds
  - Discord.IMessage.MentionedRoleIds
  - Discord.IMessage.MentionedUserIds
  - Discord.IMessage.Activity
  - Discord.IMessage.Application
  - Discord.IMessage.Reactions
  - Discord.IMessage.AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
  - Discord.IMessage.RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
  - Discord.IMessage.RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
  - Discord.IMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
  - Discord.IMessage.GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions)
  - Discord.ISnowflakeEntity.CreatedAt
  - Discord.IEntity{System.UInt64}.Id
  - Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  extensionMethods:
  - Discord.IMessage.Discord.MessageExtensions.GetJumpUrl
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.IMessage.Type
  commentId: P:Discord.IMessage.Type
  parent: Discord.IMessage
  name: Type
  nameWithType: IMessage.Type
  fullName: Discord.IMessage.Type
- uid: Discord.IMessage.Source
  commentId: P:Discord.IMessage.Source
  parent: Discord.IMessage
  name: Source
  nameWithType: IMessage.Source
  fullName: Discord.IMessage.Source
- uid: Discord.IMessage.IsTTS
  commentId: P:Discord.IMessage.IsTTS
  parent: Discord.IMessage
  name: IsTTS
  nameWithType: IMessage.IsTTS
  fullName: Discord.IMessage.IsTTS
- uid: Discord.IMessage.IsPinned
  commentId: P:Discord.IMessage.IsPinned
  parent: Discord.IMessage
  name: IsPinned
  nameWithType: IMessage.IsPinned
  fullName: Discord.IMessage.IsPinned
- uid: Discord.IMessage.IsSuppressed
  commentId: P:Discord.IMessage.IsSuppressed
  parent: Discord.IMessage
  name: IsSuppressed
  nameWithType: IMessage.IsSuppressed
  fullName: Discord.IMessage.IsSuppressed
- uid: Discord.IMessage.Content
  commentId: P:Discord.IMessage.Content
  parent: Discord.IMessage
  name: Content
  nameWithType: IMessage.Content
  fullName: Discord.IMessage.Content
- uid: Discord.IMessage.Timestamp
  commentId: P:Discord.IMessage.Timestamp
  parent: Discord.IMessage
  name: Timestamp
  nameWithType: IMessage.Timestamp
  fullName: Discord.IMessage.Timestamp
- uid: Discord.IMessage.EditedTimestamp
  commentId: P:Discord.IMessage.EditedTimestamp
  parent: Discord.IMessage
  name: EditedTimestamp
  nameWithType: IMessage.EditedTimestamp
  fullName: Discord.IMessage.EditedTimestamp
- uid: Discord.IMessage.Channel
  commentId: P:Discord.IMessage.Channel
  parent: Discord.IMessage
  name: Channel
  nameWithType: IMessage.Channel
  fullName: Discord.IMessage.Channel
- uid: Discord.IMessage.Author
  commentId: P:Discord.IMessage.Author
  parent: Discord.IMessage
  name: Author
  nameWithType: IMessage.Author
  fullName: Discord.IMessage.Author
- uid: Discord.IMessage.Attachments
  commentId: P:Discord.IMessage.Attachments
  parent: Discord.IMessage
  name: Attachments
  nameWithType: IMessage.Attachments
  fullName: Discord.IMessage.Attachments
- uid: Discord.IMessage.Embeds
  commentId: P:Discord.IMessage.Embeds
  parent: Discord.IMessage
  name: Embeds
  nameWithType: IMessage.Embeds
  fullName: Discord.IMessage.Embeds
- uid: Discord.IMessage.Tags
  commentId: P:Discord.IMessage.Tags
  parent: Discord.IMessage
  name: Tags
  nameWithType: IMessage.Tags
  fullName: Discord.IMessage.Tags
- uid: Discord.IMessage.MentionedChannelIds
  commentId: P:Discord.IMessage.MentionedChannelIds
  parent: Discord.IMessage
  name: MentionedChannelIds
  nameWithType: IMessage.MentionedChannelIds
  fullName: Discord.IMessage.MentionedChannelIds
- uid: Discord.IMessage.MentionedRoleIds
  commentId: P:Discord.IMessage.MentionedRoleIds
  parent: Discord.IMessage
  name: MentionedRoleIds
  nameWithType: IMessage.MentionedRoleIds
  fullName: Discord.IMessage.MentionedRoleIds
- uid: Discord.IMessage.MentionedUserIds
  commentId: P:Discord.IMessage.MentionedUserIds
  parent: Discord.IMessage
  name: MentionedUserIds
  nameWithType: IMessage.MentionedUserIds
  fullName: Discord.IMessage.MentionedUserIds
- uid: Discord.IMessage.Activity
  commentId: P:Discord.IMessage.Activity
  parent: Discord.IMessage
  name: Activity
  nameWithType: IMessage.Activity
  fullName: Discord.IMessage.Activity
- uid: Discord.IMessage.Application
  commentId: P:Discord.IMessage.Application
  parent: Discord.IMessage
  name: Application
  nameWithType: IMessage.Application
  fullName: Discord.IMessage.Application
- uid: Discord.IMessage.Reactions
  commentId: P:Discord.IMessage.Reactions
  parent: Discord.IMessage
  name: Reactions
  nameWithType: IMessage.Reactions
  fullName: Discord.IMessage.Reactions
- uid: Discord.IMessage.AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
  commentId: M:Discord.IMessage.AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
  parent: Discord.IMessage
  name: AddReactionAsync(IEmote, RequestOptions)
  nameWithType: IMessage.AddReactionAsync(IEmote, RequestOptions)
  fullName: Discord.IMessage.AddReactionAsync(Discord.IEmote, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IMessage.AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
    name: AddReactionAsync
    nameWithType: IMessage.AddReactionAsync
    fullName: Discord.IMessage.AddReactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IEmote
    name: IEmote
    nameWithType: IEmote
    fullName: Discord.IEmote
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IMessage.AddReactionAsync(Discord.IEmote,Discord.RequestOptions)
    name: AddReactionAsync
    nameWithType: IMessage.AddReactionAsync
    fullName: Discord.IMessage.AddReactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IEmote
    name: IEmote
    nameWithType: IEmote
    fullName: Discord.IEmote
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IMessage.RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
  commentId: M:Discord.IMessage.RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
  parent: Discord.IMessage
  name: RemoveReactionAsync(IEmote, IUser, RequestOptions)
  nameWithType: IMessage.RemoveReactionAsync(IEmote, IUser, RequestOptions)
  fullName: Discord.IMessage.RemoveReactionAsync(Discord.IEmote, Discord.IUser, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IMessage.RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
    name: RemoveReactionAsync
    nameWithType: IMessage.RemoveReactionAsync
    fullName: Discord.IMessage.RemoveReactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IEmote
    name: IEmote
    nameWithType: IEmote
    fullName: Discord.IEmote
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.IUser
    name: IUser
    nameWithType: IUser
    fullName: Discord.IUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IMessage.RemoveReactionAsync(Discord.IEmote,Discord.IUser,Discord.RequestOptions)
    name: RemoveReactionAsync
    nameWithType: IMessage.RemoveReactionAsync
    fullName: Discord.IMessage.RemoveReactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IEmote
    name: IEmote
    nameWithType: IEmote
    fullName: Discord.IEmote
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.IUser
    name: IUser
    nameWithType: IUser
    fullName: Discord.IUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IMessage.RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
  commentId: M:Discord.IMessage.RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
  parent: Discord.IMessage
  isExternal: true
  name: RemoveReactionAsync(IEmote, UInt64, RequestOptions)
  nameWithType: IMessage.RemoveReactionAsync(IEmote, UInt64, RequestOptions)
  fullName: Discord.IMessage.RemoveReactionAsync(Discord.IEmote, System.UInt64, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IMessage.RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
    name: RemoveReactionAsync
    nameWithType: IMessage.RemoveReactionAsync
    fullName: Discord.IMessage.RemoveReactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IEmote
    name: IEmote
    nameWithType: IEmote
    fullName: Discord.IEmote
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IMessage.RemoveReactionAsync(Discord.IEmote,System.UInt64,Discord.RequestOptions)
    name: RemoveReactionAsync
    nameWithType: IMessage.RemoveReactionAsync
    fullName: Discord.IMessage.RemoveReactionAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IEmote
    name: IEmote
    nameWithType: IEmote
    fullName: Discord.IEmote
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
  commentId: M:Discord.IMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
  parent: Discord.IMessage
  name: RemoveAllReactionsAsync(RequestOptions)
  nameWithType: IMessage.RemoveAllReactionsAsync(RequestOptions)
  fullName: Discord.IMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
    name: RemoveAllReactionsAsync
    nameWithType: IMessage.RemoveAllReactionsAsync
    fullName: Discord.IMessage.RemoveAllReactionsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IMessage.RemoveAllReactionsAsync(Discord.RequestOptions)
    name: RemoveAllReactionsAsync
    nameWithType: IMessage.RemoveAllReactionsAsync
    fullName: Discord.IMessage.RemoveAllReactionsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IMessage.GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions)
  commentId: M:Discord.IMessage.GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions)
  parent: Discord.IMessage
  isExternal: true
  name: GetReactionUsersAsync(IEmote, Int32, RequestOptions)
  nameWithType: IMessage.GetReactionUsersAsync(IEmote, Int32, RequestOptions)
  fullName: Discord.IMessage.GetReactionUsersAsync(Discord.IEmote, System.Int32, Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IMessage.GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions)
    name: GetReactionUsersAsync
    nameWithType: IMessage.GetReactionUsersAsync
    fullName: Discord.IMessage.GetReactionUsersAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IEmote
    name: IEmote
    nameWithType: IEmote
    fullName: Discord.IEmote
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IMessage.GetReactionUsersAsync(Discord.IEmote,System.Int32,Discord.RequestOptions)
    name: GetReactionUsersAsync
    nameWithType: IMessage.GetReactionUsersAsync
    fullName: Discord.IMessage.GetReactionUsersAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IEmote
    name: IEmote
    nameWithType: IEmote
    fullName: Discord.IEmote
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.ISnowflakeEntity.CreatedAt
  commentId: P:Discord.ISnowflakeEntity.CreatedAt
  parent: Discord.ISnowflakeEntity
  name: CreatedAt
  nameWithType: ISnowflakeEntity.CreatedAt
  fullName: Discord.ISnowflakeEntity.CreatedAt
- uid: Discord.IEntity{System.UInt64}.Id
  commentId: P:Discord.IEntity{System.UInt64}.Id
  parent: Discord.IEntity{System.UInt64}
  definition: Discord.IEntity`1.Id
  name: Id
  nameWithType: IEntity<UInt64>.Id
  fullName: Discord.IEntity<System.UInt64>.Id
  nameWithType.vb: IEntity(Of UInt64).Id
  fullName.vb: Discord.IEntity(Of System.UInt64).Id
- uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  commentId: M:Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  parent: Discord.IDeletable
  name: DeleteAsync(RequestOptions)
  nameWithType: IDeletable.DeleteAsync(RequestOptions)
  fullName: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
    name: DeleteAsync
    nameWithType: IDeletable.DeleteAsync
    fullName: Discord.IDeletable.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
    name: DeleteAsync
    nameWithType: IDeletable.DeleteAsync
    fullName: Discord.IDeletable.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IMessage.Discord.MessageExtensions.GetJumpUrl
  commentId: M:Discord.MessageExtensions.GetJumpUrl(Discord.IMessage)
  parent: Discord.MessageExtensions
  definition: Discord.MessageExtensions.GetJumpUrl(Discord.IMessage)
  name: GetJumpUrl()
  nameWithType: MessageExtensions.GetJumpUrl()
  fullName: Discord.MessageExtensions.GetJumpUrl()
  spec.csharp:
  - uid: Discord.MessageExtensions.GetJumpUrl
    name: GetJumpUrl
    nameWithType: MessageExtensions.GetJumpUrl
    fullName: Discord.MessageExtensions.GetJumpUrl
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.MessageExtensions.GetJumpUrl
    name: GetJumpUrl
    nameWithType: MessageExtensions.GetJumpUrl
    fullName: Discord.MessageExtensions.GetJumpUrl
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IMessage
  commentId: T:Discord.IMessage
  parent: Discord
  name: IMessage
  nameWithType: IMessage
  fullName: Discord.IMessage
- uid: Discord.ISnowflakeEntity
  commentId: T:Discord.ISnowflakeEntity
  parent: Discord
  name: ISnowflakeEntity
  nameWithType: ISnowflakeEntity
  fullName: Discord.ISnowflakeEntity
- uid: Discord.IEntity`1.Id
  commentId: P:Discord.IEntity`1.Id
  name: Id
  nameWithType: IEntity<TId>.Id
  fullName: Discord.IEntity<TId>.Id
  nameWithType.vb: IEntity(Of TId).Id
  fullName.vb: Discord.IEntity(Of TId).Id
- uid: Discord.IEntity{System.UInt64}
  commentId: T:Discord.IEntity{System.UInt64}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<UInt64>
  nameWithType: IEntity<UInt64>
  fullName: Discord.IEntity<System.UInt64>
  nameWithType.vb: IEntity(Of UInt64)
  fullName.vb: Discord.IEntity(Of System.UInt64)
  name.vb: IEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IDeletable
  commentId: T:Discord.IDeletable
  parent: Discord
  name: IDeletable
  nameWithType: IDeletable
  fullName: Discord.IDeletable
- uid: Discord.MessageExtensions.GetJumpUrl(Discord.IMessage)
  commentId: M:Discord.MessageExtensions.GetJumpUrl(Discord.IMessage)
  name: GetJumpUrl(IMessage)
  nameWithType: MessageExtensions.GetJumpUrl(IMessage)
  fullName: Discord.MessageExtensions.GetJumpUrl(Discord.IMessage)
  spec.csharp:
  - uid: Discord.MessageExtensions.GetJumpUrl(Discord.IMessage)
    name: GetJumpUrl
    nameWithType: MessageExtensions.GetJumpUrl
    fullName: Discord.MessageExtensions.GetJumpUrl
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Discord.IMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.MessageExtensions.GetJumpUrl(Discord.IMessage)
    name: GetJumpUrl
    nameWithType: MessageExtensions.GetJumpUrl
    fullName: Discord.MessageExtensions.GetJumpUrl
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IMessage
    name: IMessage
    nameWithType: IMessage
    fullName: Discord.IMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.MessageExtensions
  commentId: T:Discord.MessageExtensions
  parent: Discord
  name: MessageExtensions
  nameWithType: MessageExtensions
  fullName: Discord.MessageExtensions
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
