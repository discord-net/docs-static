### YamlMime:ManagedReference
items:
- uid: Discord.Rest.ClientExtensions
  commentId: T:Discord.Rest.ClientExtensions
  id: ClientExtensions
  parent: Discord.Rest
  children:
  - Discord.Rest.ClientExtensions.AddGuildUserAsync(Discord.Rest.BaseDiscordClient,System.UInt64,System.UInt64,System.String,Action{Discord.AddGuildUserProperties},Discord.RequestOptions)
  langs:
  - csharp
  - vb
  name: ClientExtensions
  nameWithType: ClientExtensions
  fullName: Discord.Rest.ClientExtensions
  type: Class
  source:
    remote:
      path: src/Discord.Net.Rest/Extensions/ClientExtensions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ClientExtensions
    path: ../src/Discord.Net.Rest/Extensions/ClientExtensions.cs
    startLine: 5
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  syntax:
    content: 'public static class ClientExtensions : object'
    content.vb: >-
      Public Module ClientExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Discord.Rest.ClientExtensions.AddGuildUserAsync(Discord.Rest.BaseDiscordClient,System.UInt64,System.UInt64,System.String,Action{Discord.AddGuildUserProperties},Discord.RequestOptions)
  commentId: M:Discord.Rest.ClientExtensions.AddGuildUserAsync(Discord.Rest.BaseDiscordClient,System.UInt64,System.UInt64,System.String,Action{Discord.AddGuildUserProperties},Discord.RequestOptions)
  id: AddGuildUserAsync(Discord.Rest.BaseDiscordClient,System.UInt64,System.UInt64,System.String,Action{Discord.AddGuildUserProperties},Discord.RequestOptions)
  isExtensionMethod: true
  parent: Discord.Rest.ClientExtensions
  langs:
  - csharp
  - vb
  name: AddGuildUserAsync(BaseDiscordClient, UInt64, UInt64, String, Action<AddGuildUserProperties>, RequestOptions)
  nameWithType: ClientExtensions.AddGuildUserAsync(BaseDiscordClient, UInt64, UInt64, String, Action<AddGuildUserProperties>, RequestOptions)
  fullName: Discord.Rest.ClientExtensions.AddGuildUserAsync(Discord.Rest.BaseDiscordClient, System.UInt64, System.UInt64, System.String, Action<Discord.AddGuildUserProperties>, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Rest/Extensions/ClientExtensions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: AddGuildUserAsync
    path: ../src/Discord.Net.Rest/Extensions/ClientExtensions.cs
    startLine: 19
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nAdds a user to the specified guild.\n"
  remarks: "\nThis method requires you have an OAuth2 access token for the user, requested with the guilds.join scope, and that the bot have the MANAGE_INVITES permission in the guild.\n"
  example: []
  syntax:
    content: public static Task AddGuildUserAsync(this BaseDiscordClient client, ulong guildId, ulong userId, string accessToken, Action<AddGuildUserProperties> func = null, RequestOptions options = null)
    parameters:
    - id: client
      type: Discord.Rest.BaseDiscordClient
      description: The Discord client object.
    - id: guildId
      type: System.UInt64
      description: The snowflake identifier of the guild.
    - id: userId
      type: System.UInt64
      description: The snowflake identifier of the user.
    - id: accessToken
      type: System.String
      description: The OAuth2 access token for the user, requested with the guilds.join scope.
    - id: func
      type: Action{Discord.AddGuildUserProperties}
      description: The delegate containing the properties to be applied to the user upon being added to the guild.
    - id: options
      type: Discord.RequestOptions
      description: The options to be used when sending the request.
    return:
      type: Task
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddGuildUserAsync(client As BaseDiscordClient, guildId As ULong, userId As ULong, accessToken As String, func As Action(Of AddGuildUserProperties) = Nothing, options As RequestOptions = Nothing) As Task
  overload: Discord.Rest.ClientExtensions.AddGuildUserAsync*
  nameWithType.vb: ClientExtensions.AddGuildUserAsync(BaseDiscordClient, UInt64, UInt64, String, Action(Of AddGuildUserProperties), RequestOptions)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.Rest.ClientExtensions.AddGuildUserAsync(Discord.Rest.BaseDiscordClient, System.UInt64, System.UInt64, System.String, Action(Of Discord.AddGuildUserProperties), Discord.RequestOptions)
  name.vb: AddGuildUserAsync(BaseDiscordClient, UInt64, UInt64, String, Action(Of AddGuildUserProperties), RequestOptions)
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Rest.ClientExtensions.AddGuildUserAsync*
  commentId: Overload:Discord.Rest.ClientExtensions.AddGuildUserAsync
  name: AddGuildUserAsync
  nameWithType: ClientExtensions.AddGuildUserAsync
  fullName: Discord.Rest.ClientExtensions.AddGuildUserAsync
- uid: Discord.Rest.BaseDiscordClient
  commentId: T:Discord.Rest.BaseDiscordClient
  parent: Discord.Rest
  name: BaseDiscordClient
  nameWithType: BaseDiscordClient
  fullName: Discord.Rest.BaseDiscordClient
- uid: System.UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Action{Discord.AddGuildUserProperties}
  commentId: '!:Action{Discord.AddGuildUserProperties}'
  definition: Action`1
  name: Action<AddGuildUserProperties>
  nameWithType: Action<AddGuildUserProperties>
  fullName: Action<Discord.AddGuildUserProperties>
  nameWithType.vb: Action(Of AddGuildUserProperties)
  fullName.vb: Action(Of Discord.AddGuildUserProperties)
  name.vb: Action(Of AddGuildUserProperties)
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.AddGuildUserProperties
    name: AddGuildUserProperties
    nameWithType: AddGuildUserProperties
    fullName: Discord.AddGuildUserProperties
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.AddGuildUserProperties
    name: AddGuildUserProperties
    nameWithType: AddGuildUserProperties
    fullName: Discord.AddGuildUserProperties
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.RequestOptions
  commentId: T:Discord.RequestOptions
  parent: Discord
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: Discord.RequestOptions
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Action`1
    name: Action
    nameWithType: Action
    fullName: Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
