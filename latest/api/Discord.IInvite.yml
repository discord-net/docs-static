### YamlMime:ManagedReference
items:
- uid: Discord.IInvite
  commentId: T:Discord.IInvite
  id: IInvite
  parent: Discord
  children:
  - Discord.IInvite.Channel
  - Discord.IInvite.ChannelId
  - Discord.IInvite.ChannelName
  - Discord.IInvite.ChannelType
  - Discord.IInvite.Code
  - Discord.IInvite.Guild
  - Discord.IInvite.GuildId
  - Discord.IInvite.GuildName
  - Discord.IInvite.MemberCount
  - Discord.IInvite.PresenceCount
  - Discord.IInvite.Url
  langs:
  - csharp
  - vb
  name: IInvite
  nameWithType: IInvite
  fullName: Discord.IInvite
  type: Interface
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInvite.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IInvite
    path: ../src/Discord.Net.Core/Entities/Invites/IInvite.cs
    startLine: 5
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nRepresents a generic invite object.\n"
  example: []
  syntax:
    content: 'public interface IInvite : IEntity<string>, IDeletable'
    content.vb: >-
      Public Interface IInvite
          Inherits IEntity(Of String), IDeletable
  inheritedMembers:
  - Discord.IEntity{System.String}.Id
  - Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Discord.IInvite.Code
  commentId: P:Discord.IInvite.Code
  id: Code
  parent: Discord.IInvite
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: IInvite.Code
  fullName: Discord.IInvite.Code
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInvite.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Code
    path: ../src/Discord.Net.Core/Entities/Invites/IInvite.cs
    startLine: 13
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the unique identifier for this invite.\n"
  example: []
  syntax:
    content: string Code { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the invite code (e.g. <code>FTqNnyS</code>).\n"
    content.vb: ReadOnly Property Code As String
  overload: Discord.IInvite.Code*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IInvite.Url
  commentId: P:Discord.IInvite.Url
  id: Url
  parent: Discord.IInvite
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: IInvite.Url
  fullName: Discord.IInvite.Url
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInvite.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Url
    path: ../src/Discord.Net.Core/Entities/Invites/IInvite.cs
    startLine: 20
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the URL used to accept this invite using <xref href=\"Discord.IInvite.Code\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: string Url { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the full invite URL (e.g. <code>https://discord.gg/FTqNnyS</code>).\n"
    content.vb: ReadOnly Property Url As String
  overload: Discord.IInvite.Url*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IInvite.Channel
  commentId: P:Discord.IInvite.Channel
  id: Channel
  parent: Discord.IInvite
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: IInvite.Channel
  fullName: Discord.IInvite.Channel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInvite.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Channel
    path: ../src/Discord.Net.Core/Entities/Invites/IInvite.cs
    startLine: 28
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the channel this invite is linked to.\n"
  example: []
  syntax:
    content: IChannel Channel { get; }
    parameters: []
    return:
      type: Discord.IChannel
      description: "\nA generic channel that the invite points to.\n"
    content.vb: ReadOnly Property Channel As IChannel
  overload: Discord.IInvite.Channel*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IInvite.ChannelType
  commentId: P:Discord.IInvite.ChannelType
  id: ChannelType
  parent: Discord.IInvite
  langs:
  - csharp
  - vb
  name: ChannelType
  nameWithType: IInvite.ChannelType
  fullName: Discord.IInvite.ChannelType
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInvite.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelType
    path: ../src/Discord.Net.Core/Entities/Invites/IInvite.cs
    startLine: 32
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the type of the channel this invite is linked to.\n"
  example: []
  syntax:
    content: ChannelType ChannelType { get; }
    parameters: []
    return:
      type: Discord.ChannelType
    content.vb: ReadOnly Property ChannelType As ChannelType
  overload: Discord.IInvite.ChannelType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IInvite.ChannelId
  commentId: P:Discord.IInvite.ChannelId
  id: ChannelId
  parent: Discord.IInvite
  langs:
  - csharp
  - vb
  name: ChannelId
  nameWithType: IInvite.ChannelId
  fullName: Discord.IInvite.ChannelId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInvite.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelId
    path: ../src/Discord.Net.Core/Entities/Invites/IInvite.cs
    startLine: 39
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the ID of the channel this invite is linked to.\n"
  example: []
  syntax:
    content: ulong ChannelId { get; }
    parameters: []
    return:
      type: System.UInt64
      description: "\nAn <see cref=\"!:System.UInt64\"></see> representing the channel snowflake identifier that the invite points to.\n"
    content.vb: ReadOnly Property ChannelId As ULong
  overload: Discord.IInvite.ChannelId*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IInvite.ChannelName
  commentId: P:Discord.IInvite.ChannelName
  id: ChannelName
  parent: Discord.IInvite
  langs:
  - csharp
  - vb
  name: ChannelName
  nameWithType: IInvite.ChannelName
  fullName: Discord.IInvite.ChannelName
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInvite.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelName
    path: ../src/Discord.Net.Core/Entities/Invites/IInvite.cs
    startLine: 46
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the name of the channel this invite is linked to.\n"
  example: []
  syntax:
    content: string ChannelName { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the name of the channel that the invite points to.\n"
    content.vb: ReadOnly Property ChannelName As String
  overload: Discord.IInvite.ChannelName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IInvite.Guild
  commentId: P:Discord.IInvite.Guild
  id: Guild
  parent: Discord.IInvite
  langs:
  - csharp
  - vb
  name: Guild
  nameWithType: IInvite.Guild
  fullName: Discord.IInvite.Guild
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInvite.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Guild
    path: ../src/Discord.Net.Core/Entities/Invites/IInvite.cs
    startLine: 54
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the guild this invite is linked to.\n"
  example: []
  syntax:
    content: IGuild Guild { get; }
    parameters: []
    return:
      type: Discord.IGuild
      description: "\nA guild object representing the guild that the invite points to.\n"
    content.vb: ReadOnly Property Guild As IGuild
  overload: Discord.IInvite.Guild*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IInvite.GuildId
  commentId: P:Discord.IInvite.GuildId
  id: GuildId
  parent: Discord.IInvite
  langs:
  - csharp
  - vb
  name: GuildId
  nameWithType: IInvite.GuildId
  fullName: Discord.IInvite.GuildId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInvite.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GuildId
    path: ../src/Discord.Net.Core/Entities/Invites/IInvite.cs
    startLine: 61
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the ID of the guild this invite is linked to.\n"
  example: []
  syntax:
    content: ulong? GuildId { get; }
    parameters: []
    return:
      type: System.Nullable{System.UInt64}
      description: "\nAn <see cref=\"!:System.UInt64\"></see> representing the guild snowflake identifier that the invite points to.\n"
    content.vb: ReadOnly Property GuildId As ULong?
  overload: Discord.IInvite.GuildId*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IInvite.GuildName
  commentId: P:Discord.IInvite.GuildName
  id: GuildName
  parent: Discord.IInvite
  langs:
  - csharp
  - vb
  name: GuildName
  nameWithType: IInvite.GuildName
  fullName: Discord.IInvite.GuildName
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInvite.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GuildName
    path: ../src/Discord.Net.Core/Entities/Invites/IInvite.cs
    startLine: 68
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the name of the guild this invite is linked to.\n"
  example: []
  syntax:
    content: string GuildName { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the name of the guild that the invite points to.\n"
    content.vb: ReadOnly Property GuildName As String
  overload: Discord.IInvite.GuildName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IInvite.PresenceCount
  commentId: P:Discord.IInvite.PresenceCount
  id: PresenceCount
  parent: Discord.IInvite
  langs:
  - csharp
  - vb
  name: PresenceCount
  nameWithType: IInvite.PresenceCount
  fullName: Discord.IInvite.PresenceCount
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInvite.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: PresenceCount
    path: ../src/Discord.Net.Core/Entities/Invites/IInvite.cs
    startLine: 76
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the approximated count of online members in the guild.\n"
  example: []
  syntax:
    content: int? PresenceCount { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn <see cref=\"!:System.Int32\"></see> representing the approximated online member count of the guild that the\ninvite points to; <code>null</code> if one cannot be obtained.\n"
    content.vb: ReadOnly Property PresenceCount As Integer?
  overload: Discord.IInvite.PresenceCount*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IInvite.MemberCount
  commentId: P:Discord.IInvite.MemberCount
  id: MemberCount
  parent: Discord.IInvite
  langs:
  - csharp
  - vb
  name: MemberCount
  nameWithType: IInvite.MemberCount
  fullName: Discord.IInvite.MemberCount
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInvite.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MemberCount
    path: ../src/Discord.Net.Core/Entities/Invites/IInvite.cs
    startLine: 84
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the approximated count of total members in the guild.\n"
  example: []
  syntax:
    content: int? MemberCount { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn <see cref=\"!:System.Int32\"></see> representing the approximated total member count of the guild that the\ninvite points to; <code>null</code> if one cannot be obtained.\n"
    content.vb: ReadOnly Property MemberCount As Integer?
  overload: Discord.IInvite.MemberCount*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.IEntity{System.String}.Id
  commentId: P:Discord.IEntity{System.String}.Id
  parent: Discord.IEntity{System.String}
  definition: Discord.IEntity`1.Id
  name: Id
  nameWithType: IEntity<String>.Id
  fullName: Discord.IEntity<System.String>.Id
  nameWithType.vb: IEntity(Of String).Id
  fullName.vb: Discord.IEntity(Of System.String).Id
- uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  commentId: M:Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  parent: Discord.IDeletable
  name: DeleteAsync(RequestOptions)
  nameWithType: IDeletable.DeleteAsync(RequestOptions)
  fullName: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
    name: DeleteAsync
    nameWithType: IDeletable.DeleteAsync
    fullName: Discord.IDeletable.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
    name: DeleteAsync
    nameWithType: IDeletable.DeleteAsync
    fullName: Discord.IDeletable.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEntity`1.Id
  commentId: P:Discord.IEntity`1.Id
  name: Id
  nameWithType: IEntity<TId>.Id
  fullName: Discord.IEntity<TId>.Id
  nameWithType.vb: IEntity(Of TId).Id
  fullName.vb: Discord.IEntity(Of TId).Id
- uid: Discord.IEntity{System.String}
  commentId: T:Discord.IEntity{System.String}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<String>
  nameWithType: IEntity<String>
  fullName: Discord.IEntity<System.String>
  nameWithType.vb: IEntity(Of String)
  fullName.vb: Discord.IEntity(Of System.String)
  name.vb: IEntity(Of String)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IDeletable
  commentId: T:Discord.IDeletable
  parent: Discord
  name: IDeletable
  nameWithType: IDeletable
  fullName: Discord.IDeletable
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IInvite.Code*
  commentId: Overload:Discord.IInvite.Code
  name: Code
  nameWithType: IInvite.Code
  fullName: Discord.IInvite.Code
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.IInvite.Code
  commentId: P:Discord.IInvite.Code
  parent: Discord.IInvite
  name: Code
  nameWithType: IInvite.Code
  fullName: Discord.IInvite.Code
- uid: Discord.IInvite.Url*
  commentId: Overload:Discord.IInvite.Url
  name: Url
  nameWithType: IInvite.Url
  fullName: Discord.IInvite.Url
- uid: Discord.IInvite
  commentId: T:Discord.IInvite
  parent: Discord
  name: IInvite
  nameWithType: IInvite
  fullName: Discord.IInvite
- uid: Discord.IInvite.Channel*
  commentId: Overload:Discord.IInvite.Channel
  name: Channel
  nameWithType: IInvite.Channel
  fullName: Discord.IInvite.Channel
- uid: Discord.IChannel
  commentId: T:Discord.IChannel
  parent: Discord
  name: IChannel
  nameWithType: IChannel
  fullName: Discord.IChannel
- uid: Discord.IInvite.ChannelType*
  commentId: Overload:Discord.IInvite.ChannelType
  name: ChannelType
  nameWithType: IInvite.ChannelType
  fullName: Discord.IInvite.ChannelType
- uid: Discord.ChannelType
  commentId: T:Discord.ChannelType
  parent: Discord
  name: ChannelType
  nameWithType: ChannelType
  fullName: Discord.ChannelType
- uid: Discord.IInvite.ChannelId*
  commentId: Overload:Discord.IInvite.ChannelId
  name: ChannelId
  nameWithType: IInvite.ChannelId
  fullName: Discord.IInvite.ChannelId
- uid: System.UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.IInvite.ChannelName*
  commentId: Overload:Discord.IInvite.ChannelName
  name: ChannelName
  nameWithType: IInvite.ChannelName
  fullName: Discord.IInvite.ChannelName
- uid: Discord.IInvite.Guild*
  commentId: Overload:Discord.IInvite.Guild
  name: Guild
  nameWithType: IInvite.Guild
  fullName: Discord.IInvite.Guild
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: Discord.IInvite.GuildId*
  commentId: Overload:Discord.IInvite.GuildId
  name: GuildId
  nameWithType: IInvite.GuildId
  fullName: Discord.IInvite.GuildId
- uid: System.Nullable{System.UInt64}
  commentId: '!:System.Nullable{System.UInt64}'
  definition: System.Nullable`1
  name: Nullable<UInt64>
  nameWithType: Nullable<UInt64>
  fullName: System.Nullable<System.UInt64>
  nameWithType.vb: Nullable(Of UInt64)
  fullName.vb: System.Nullable(Of System.UInt64)
  name.vb: Nullable(Of UInt64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IInvite.GuildName*
  commentId: Overload:Discord.IInvite.GuildName
  name: GuildName
  nameWithType: IInvite.GuildName
  fullName: Discord.IInvite.GuildName
- uid: Discord.IInvite.PresenceCount*
  commentId: Overload:Discord.IInvite.PresenceCount
  name: PresenceCount
  nameWithType: IInvite.PresenceCount
  fullName: Discord.IInvite.PresenceCount
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IInvite.MemberCount*
  commentId: Overload:Discord.IInvite.MemberCount
  name: MemberCount
  nameWithType: IInvite.MemberCount
  fullName: Discord.IInvite.MemberCount
