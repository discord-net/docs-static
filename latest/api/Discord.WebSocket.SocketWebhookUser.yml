### YamlMime:ManagedReference
items:
- uid: Discord.WebSocket.SocketWebhookUser
  commentId: T:Discord.WebSocket.SocketWebhookUser
  id: SocketWebhookUser
  parent: Discord.WebSocket
  children:
  - Discord.WebSocket.SocketWebhookUser.AvatarId
  - Discord.WebSocket.SocketWebhookUser.Discord#IGuildUser#GetPermissions(Discord.IGuildChannel)
  - Discord.WebSocket.SocketWebhookUser.Discord#IGuildUser#Guild
  - Discord.WebSocket.SocketWebhookUser.Discord#IGuildUser#GuildPermissions
  - Discord.WebSocket.SocketWebhookUser.Discord#IVoiceState#VoiceChannel
  - Discord.WebSocket.SocketWebhookUser.DiscriminatorValue
  - Discord.WebSocket.SocketWebhookUser.Guild
  - Discord.WebSocket.SocketWebhookUser.IsBot
  - Discord.WebSocket.SocketWebhookUser.IsWebhook
  - Discord.WebSocket.SocketWebhookUser.Username
  - Discord.WebSocket.SocketWebhookUser.WebhookId
  langs:
  - csharp
  - vb
  name: SocketWebhookUser
  nameWithType: SocketWebhookUser
  fullName: Discord.WebSocket.SocketWebhookUser
  type: Class
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SocketWebhookUser
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
    startLine: 12
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nRepresents a WebSocket-based webhook user.\n"
  example: []
  syntax:
    content: 'public class SocketWebhookUser : SocketUser, IEntity<ulong>, IWebhookUser, IGuildUser, IUser, ISnowflakeEntity, IEntity<ulong>, IMentionable, IPresence, IVoiceState'
    content.vb: >-
      Public Class SocketWebhookUser
          Inherits SocketUser
          Implements IEntity(Of ULong), IWebhookUser, IGuildUser, IUser, ISnowflakeEntity, IEntity(Of ULong), IMentionable, IPresence, IVoiceState
  inheritance:
  - System.Object
  - Discord.WebSocket.SocketEntity{System.UInt64}
  - Discord.WebSocket.SocketUser
  implements:
  - Discord.IEntity{System.UInt64}
  - Discord.IWebhookUser
  - Discord.IGuildUser
  - Discord.IUser
  - Discord.ISnowflakeEntity
  - Discord.IEntity{System.UInt64}
  - Discord.IMentionable
  - Discord.IPresence
  - Discord.IVoiceState
  inheritedMembers:
  - Discord.WebSocket.SocketUser.CreatedAt
  - Discord.WebSocket.SocketUser.Discriminator
  - Discord.WebSocket.SocketUser.Mention
  - Discord.WebSocket.SocketUser.Activity
  - Discord.WebSocket.SocketUser.Status
  - Discord.WebSocket.SocketUser.ActiveClients
  - Discord.WebSocket.SocketUser.MutualGuilds
  - Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  - Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  - Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  - Discord.WebSocket.SocketUser.ToString
  - Discord.WebSocket.SocketEntity{System.UInt64}.Id
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.WebSocket.SocketWebhookUser.Guild
  commentId: P:Discord.WebSocket.SocketWebhookUser.Guild
  id: Guild
  parent: Discord.WebSocket.SocketWebhookUser
  langs:
  - csharp
  - vb
  name: Guild
  nameWithType: SocketWebhookUser.Guild
  fullName: Discord.WebSocket.SocketWebhookUser.Guild
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Guild
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
    startLine: 16
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: 'Gets the guild of this webhook. '
  example: []
  syntax:
    content: public SocketGuild Guild { get; }
    parameters: []
    return:
      type: Discord.WebSocket.SocketGuild
    content.vb: Public ReadOnly Property Guild As SocketGuild
  overload: Discord.WebSocket.SocketWebhookUser.Guild*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketWebhookUser.WebhookId
  commentId: P:Discord.WebSocket.SocketWebhookUser.WebhookId
  id: WebhookId
  parent: Discord.WebSocket.SocketWebhookUser
  langs:
  - csharp
  - vb
  name: WebhookId
  nameWithType: SocketWebhookUser.WebhookId
  fullName: Discord.WebSocket.SocketWebhookUser.WebhookId
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WebhookId
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
    startLine: 18
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public ulong WebhookId { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public ReadOnly Property WebhookId As ULong
  overload: Discord.WebSocket.SocketWebhookUser.WebhookId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketWebhookUser.Username
  commentId: P:Discord.WebSocket.SocketWebhookUser.Username
  id: Username
  parent: Discord.WebSocket.SocketWebhookUser
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: SocketWebhookUser.Username
  fullName: Discord.WebSocket.SocketWebhookUser.Username
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Username
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
    startLine: 21
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public override string Username { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Username As String
  overridden: Discord.WebSocket.SocketUser.Username
  overload: Discord.WebSocket.SocketWebhookUser.Username*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketWebhookUser.DiscriminatorValue
  commentId: P:Discord.WebSocket.SocketWebhookUser.DiscriminatorValue
  id: DiscriminatorValue
  parent: Discord.WebSocket.SocketWebhookUser
  langs:
  - csharp
  - vb
  name: DiscriminatorValue
  nameWithType: SocketWebhookUser.DiscriminatorValue
  fullName: Discord.WebSocket.SocketWebhookUser.DiscriminatorValue
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: DiscriminatorValue
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
    startLine: 23
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public override ushort DiscriminatorValue { get; }
    parameters: []
    return:
      type: System.UInt16
    content.vb: Public Overrides ReadOnly Property DiscriminatorValue As UShort
  overridden: Discord.WebSocket.SocketUser.DiscriminatorValue
  overload: Discord.WebSocket.SocketWebhookUser.DiscriminatorValue*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketWebhookUser.AvatarId
  commentId: P:Discord.WebSocket.SocketWebhookUser.AvatarId
  id: AvatarId
  parent: Discord.WebSocket.SocketWebhookUser
  langs:
  - csharp
  - vb
  name: AvatarId
  nameWithType: SocketWebhookUser.AvatarId
  fullName: Discord.WebSocket.SocketWebhookUser.AvatarId
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AvatarId
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
    startLine: 25
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public override string AvatarId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property AvatarId As String
  overridden: Discord.WebSocket.SocketUser.AvatarId
  overload: Discord.WebSocket.SocketWebhookUser.AvatarId*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketWebhookUser.IsBot
  commentId: P:Discord.WebSocket.SocketWebhookUser.IsBot
  id: IsBot
  parent: Discord.WebSocket.SocketWebhookUser
  langs:
  - csharp
  - vb
  name: IsBot
  nameWithType: SocketWebhookUser.IsBot
  fullName: Discord.WebSocket.SocketWebhookUser.IsBot
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsBot
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
    startLine: 27
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public override bool IsBot { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsBot As Boolean
  overridden: Discord.WebSocket.SocketUser.IsBot
  overload: Discord.WebSocket.SocketWebhookUser.IsBot*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketWebhookUser.IsWebhook
  commentId: P:Discord.WebSocket.SocketWebhookUser.IsWebhook
  id: IsWebhook
  parent: Discord.WebSocket.SocketWebhookUser
  langs:
  - csharp
  - vb
  name: IsWebhook
  nameWithType: SocketWebhookUser.IsWebhook
  fullName: Discord.WebSocket.SocketWebhookUser.IsWebhook
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsWebhook
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
    startLine: 30
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  example: []
  syntax:
    content: public override bool IsWebhook { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsWebhook As Boolean
  overridden: Discord.WebSocket.SocketUser.IsWebhook
  overload: Discord.WebSocket.SocketWebhookUser.IsWebhook*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.WebSocket.SocketWebhookUser.Discord#IGuildUser#Guild
  commentId: P:Discord.WebSocket.SocketWebhookUser.Discord#IGuildUser#Guild
  id: Discord#IGuildUser#Guild
  isEii: true
  parent: Discord.WebSocket.SocketWebhookUser
  langs:
  - csharp
  - vb
  name: IGuildUser.Guild
  nameWithType: SocketWebhookUser.IGuildUser.Guild
  fullName: Discord.WebSocket.SocketWebhookUser.Discord.IGuildUser.Guild
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IGuildUser.Guild
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
    startLine: 55
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the guild for this user.\n"
  example: []
  syntax:
    content: IGuild IGuildUser.Guild { get; }
    parameters: []
    return:
      type: Discord.IGuild
      description: "\nA guild object that this user belongs to.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IGuildUser.Guild As IGuild Implements IGuildUser.Guild
  overload: Discord.WebSocket.SocketWebhookUser.Discord#IGuildUser#Guild*
  implements:
  - Discord.IGuildUser.Guild
  nameWithType.vb: SocketWebhookUser.Discord.IGuildUser.Guild
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IGuildUser.Guild
- uid: Discord.WebSocket.SocketWebhookUser.Discord#IGuildUser#GuildPermissions
  commentId: P:Discord.WebSocket.SocketWebhookUser.Discord#IGuildUser#GuildPermissions
  id: Discord#IGuildUser#GuildPermissions
  isEii: true
  parent: Discord.WebSocket.SocketWebhookUser
  langs:
  - csharp
  - vb
  name: IGuildUser.GuildPermissions
  nameWithType: SocketWebhookUser.IGuildUser.GuildPermissions
  fullName: Discord.WebSocket.SocketWebhookUser.Discord.IGuildUser.GuildPermissions
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IGuildUser.GuildPermissions
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
    startLine: 67
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the guild-level permissions for this user.\n"
  example: []
  syntax:
    content: GuildPermissions IGuildUser.GuildPermissions { get; }
    parameters: []
    return:
      type: Discord.GuildPermissions
      description: "\nA <xref href=\"Discord.GuildPermissions\" data-throw-if-not-resolved=\"false\"></xref> structure for this user, representing what\npermissions this user has in the guild.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IGuildUser.GuildPermissions As GuildPermissions Implements IGuildUser.GuildPermissions
  overload: Discord.WebSocket.SocketWebhookUser.Discord#IGuildUser#GuildPermissions*
  implements:
  - Discord.IGuildUser.GuildPermissions
  nameWithType.vb: SocketWebhookUser.Discord.IGuildUser.GuildPermissions
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IGuildUser.GuildPermissions
- uid: Discord.WebSocket.SocketWebhookUser.Discord#IGuildUser#GetPermissions(Discord.IGuildChannel)
  commentId: M:Discord.WebSocket.SocketWebhookUser.Discord#IGuildUser#GetPermissions(Discord.IGuildChannel)
  id: Discord#IGuildUser#GetPermissions(Discord.IGuildChannel)
  isEii: true
  parent: Discord.WebSocket.SocketWebhookUser
  langs:
  - csharp
  - vb
  name: IGuildUser.GetPermissions(IGuildChannel)
  nameWithType: SocketWebhookUser.IGuildUser.GetPermissions(IGuildChannel)
  fullName: Discord.WebSocket.SocketWebhookUser.Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
  type: Method
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IGuildUser.GetPermissions
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
    startLine: 70
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the level permissions granted to this user to a given channel.\n"
  example: []
  syntax:
    content: ChannelPermissions IGuildUser.GetPermissions(IGuildChannel channel)
    parameters:
    - id: channel
      type: Discord.IGuildChannel
      description: The channel to get the permission from.
    return:
      type: Discord.ChannelPermissions
      description: "\nA <xref href=\"Discord.ChannelPermissions\" data-throw-if-not-resolved=\"false\"></xref> structure representing the permissions that a user has in the\nspecified channel.\n"
    content.vb: Function Discord.IGuildUser.GetPermissions(channel As IGuildChannel) As ChannelPermissions Implements IGuildUser.GetPermissions
  overload: Discord.WebSocket.SocketWebhookUser.Discord#IGuildUser#GetPermissions*
  implements:
  - Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
  nameWithType.vb: SocketWebhookUser.Discord.IGuildUser.GetPermissions(IGuildChannel)
  name.vb: Discord.IGuildUser.GetPermissions(IGuildChannel)
- uid: Discord.WebSocket.SocketWebhookUser.Discord#IVoiceState#VoiceChannel
  commentId: P:Discord.WebSocket.SocketWebhookUser.Discord#IVoiceState#VoiceChannel
  id: Discord#IVoiceState#VoiceChannel
  isEii: true
  parent: Discord.WebSocket.SocketWebhookUser
  langs:
  - csharp
  - vb
  name: IVoiceState.VoiceChannel
  nameWithType: SocketWebhookUser.IVoiceState.VoiceChannel
  fullName: Discord.WebSocket.SocketWebhookUser.Discord.IVoiceState.VoiceChannel
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IVoiceState.VoiceChannel
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketWebhookUser.cs
    startLine: 113
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the voice channel this user is currently in.\n"
  example: []
  syntax:
    content: IVoiceChannel IVoiceState.VoiceChannel { get; }
    parameters: []
    return:
      type: Discord.IVoiceChannel
      description: "\nA generic voice channel object representing the voice channel that the user is currently in; <code>null</code>\nif none.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IVoiceState.VoiceChannel As IVoiceChannel Implements IVoiceState.VoiceChannel
  overload: Discord.WebSocket.SocketWebhookUser.Discord#IVoiceState#VoiceChannel*
  implements:
  - Discord.IVoiceState.VoiceChannel
  nameWithType.vb: SocketWebhookUser.Discord.IVoiceState.VoiceChannel
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IVoiceState.VoiceChannel
references:
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.WebSocket.SocketEntity{System.UInt64}
  commentId: T:Discord.WebSocket.SocketEntity{System.UInt64}
  parent: Discord.WebSocket
  definition: Discord.WebSocket.SocketEntity`1
  name: SocketEntity<UInt64>
  nameWithType: SocketEntity<UInt64>
  fullName: Discord.WebSocket.SocketEntity<System.UInt64>
  nameWithType.vb: SocketEntity(Of UInt64)
  fullName.vb: Discord.WebSocket.SocketEntity(Of System.UInt64)
  name.vb: SocketEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.WebSocket.SocketEntity`1
    name: SocketEntity
    nameWithType: SocketEntity
    fullName: Discord.WebSocket.SocketEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.WebSocket.SocketEntity`1
    name: SocketEntity
    nameWithType: SocketEntity
    fullName: Discord.WebSocket.SocketEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketUser
  commentId: T:Discord.WebSocket.SocketUser
  parent: Discord.WebSocket
  name: SocketUser
  nameWithType: SocketUser
  fullName: Discord.WebSocket.SocketUser
- uid: Discord.IEntity{System.UInt64}
  commentId: T:Discord.IEntity{System.UInt64}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<UInt64>
  nameWithType: IEntity<UInt64>
  fullName: Discord.IEntity<System.UInt64>
  nameWithType.vb: IEntity(Of UInt64)
  fullName.vb: Discord.IEntity(Of System.UInt64)
  name.vb: IEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IWebhookUser
  commentId: T:Discord.IWebhookUser
  parent: Discord
  name: IWebhookUser
  nameWithType: IWebhookUser
  fullName: Discord.IWebhookUser
- uid: Discord.IGuildUser
  commentId: T:Discord.IGuildUser
  parent: Discord
  name: IGuildUser
  nameWithType: IGuildUser
  fullName: Discord.IGuildUser
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord.ISnowflakeEntity
  commentId: T:Discord.ISnowflakeEntity
  parent: Discord
  name: ISnowflakeEntity
  nameWithType: ISnowflakeEntity
  fullName: Discord.ISnowflakeEntity
- uid: Discord.IMentionable
  commentId: T:Discord.IMentionable
  parent: Discord
  name: IMentionable
  nameWithType: IMentionable
  fullName: Discord.IMentionable
- uid: Discord.IPresence
  commentId: T:Discord.IPresence
  parent: Discord
  name: IPresence
  nameWithType: IPresence
  fullName: Discord.IPresence
- uid: Discord.IVoiceState
  commentId: T:Discord.IVoiceState
  parent: Discord
  name: IVoiceState
  nameWithType: IVoiceState
  fullName: Discord.IVoiceState
- uid: Discord.WebSocket.SocketUser.CreatedAt
  commentId: P:Discord.WebSocket.SocketUser.CreatedAt
  parent: Discord.WebSocket.SocketUser
  name: CreatedAt
  nameWithType: SocketUser.CreatedAt
  fullName: Discord.WebSocket.SocketUser.CreatedAt
- uid: Discord.WebSocket.SocketUser.Discriminator
  commentId: P:Discord.WebSocket.SocketUser.Discriminator
  parent: Discord.WebSocket.SocketUser
  name: Discriminator
  nameWithType: SocketUser.Discriminator
  fullName: Discord.WebSocket.SocketUser.Discriminator
- uid: Discord.WebSocket.SocketUser.Mention
  commentId: P:Discord.WebSocket.SocketUser.Mention
  parent: Discord.WebSocket.SocketUser
  name: Mention
  nameWithType: SocketUser.Mention
  fullName: Discord.WebSocket.SocketUser.Mention
- uid: Discord.WebSocket.SocketUser.Activity
  commentId: P:Discord.WebSocket.SocketUser.Activity
  parent: Discord.WebSocket.SocketUser
  name: Activity
  nameWithType: SocketUser.Activity
  fullName: Discord.WebSocket.SocketUser.Activity
- uid: Discord.WebSocket.SocketUser.Status
  commentId: P:Discord.WebSocket.SocketUser.Status
  parent: Discord.WebSocket.SocketUser
  name: Status
  nameWithType: SocketUser.Status
  fullName: Discord.WebSocket.SocketUser.Status
- uid: Discord.WebSocket.SocketUser.ActiveClients
  commentId: P:Discord.WebSocket.SocketUser.ActiveClients
  parent: Discord.WebSocket.SocketUser
  name: ActiveClients
  nameWithType: SocketUser.ActiveClients
  fullName: Discord.WebSocket.SocketUser.ActiveClients
- uid: Discord.WebSocket.SocketUser.MutualGuilds
  commentId: P:Discord.WebSocket.SocketUser.MutualGuilds
  parent: Discord.WebSocket.SocketUser
  name: MutualGuilds
  nameWithType: SocketUser.MutualGuilds
  fullName: Discord.WebSocket.SocketUser.MutualGuilds
- uid: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  commentId: M:Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  parent: Discord.WebSocket.SocketUser
  name: GetOrCreateDMChannelAsync(RequestOptions)
  nameWithType: SocketUser.GetOrCreateDMChannelAsync(RequestOptions)
  fullName: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
    name: GetOrCreateDMChannelAsync
    nameWithType: SocketUser.GetOrCreateDMChannelAsync
    fullName: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync(Discord.RequestOptions)
    name: GetOrCreateDMChannelAsync
    nameWithType: SocketUser.GetOrCreateDMChannelAsync
    fullName: Discord.WebSocket.SocketUser.GetOrCreateDMChannelAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  commentId: M:Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  parent: Discord.WebSocket.SocketUser
  isExternal: true
  name: GetAvatarUrl(ImageFormat, UInt16)
  nameWithType: SocketUser.GetAvatarUrl(ImageFormat, UInt16)
  fullName: Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat, System.UInt16)
  spec.csharp:
  - uid: Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
    name: GetAvatarUrl
    nameWithType: SocketUser.GetAvatarUrl
    fullName: Discord.WebSocket.SocketUser.GetAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.ImageFormat
    name: ImageFormat
    nameWithType: ImageFormat
    fullName: Discord.ImageFormat
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.WebSocket.SocketUser.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
    name: GetAvatarUrl
    nameWithType: SocketUser.GetAvatarUrl
    fullName: Discord.WebSocket.SocketUser.GetAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.ImageFormat
    name: ImageFormat
    nameWithType: ImageFormat
    fullName: Discord.ImageFormat
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  commentId: M:Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  parent: Discord.WebSocket.SocketUser
  name: GetDefaultAvatarUrl()
  nameWithType: SocketUser.GetDefaultAvatarUrl()
  fullName: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl()
  spec.csharp:
  - uid: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
    name: GetDefaultAvatarUrl
    nameWithType: SocketUser.GetDefaultAvatarUrl
    fullName: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
    name: GetDefaultAvatarUrl
    nameWithType: SocketUser.GetDefaultAvatarUrl
    fullName: Discord.WebSocket.SocketUser.GetDefaultAvatarUrl
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketUser.ToString
  commentId: M:Discord.WebSocket.SocketUser.ToString
  parent: Discord.WebSocket.SocketUser
  name: ToString()
  nameWithType: SocketUser.ToString()
  fullName: Discord.WebSocket.SocketUser.ToString()
  spec.csharp:
  - uid: Discord.WebSocket.SocketUser.ToString
    name: ToString
    nameWithType: SocketUser.ToString
    fullName: Discord.WebSocket.SocketUser.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.WebSocket.SocketUser.ToString
    name: ToString
    nameWithType: SocketUser.ToString
    fullName: Discord.WebSocket.SocketUser.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketEntity{System.UInt64}.Id
  commentId: P:Discord.WebSocket.SocketEntity{System.UInt64}.Id
  parent: Discord.WebSocket.SocketEntity{System.UInt64}
  definition: Discord.WebSocket.SocketEntity`1.Id
  name: Id
  nameWithType: SocketEntity<UInt64>.Id
  fullName: Discord.WebSocket.SocketEntity<System.UInt64>.Id
  nameWithType.vb: SocketEntity(Of UInt64).Id
  fullName.vb: Discord.WebSocket.SocketEntity(Of System.UInt64).Id
- uid: Discord.WebSocket.SocketEntity`1
  commentId: T:Discord.WebSocket.SocketEntity`1
  name: SocketEntity<T>
  nameWithType: SocketEntity<T>
  fullName: Discord.WebSocket.SocketEntity<T>
  nameWithType.vb: SocketEntity(Of T)
  fullName.vb: Discord.WebSocket.SocketEntity(Of T)
  name.vb: SocketEntity(Of T)
  spec.csharp:
  - uid: Discord.WebSocket.SocketEntity`1
    name: SocketEntity
    nameWithType: SocketEntity
    fullName: Discord.WebSocket.SocketEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.WebSocket.SocketEntity`1
    name: SocketEntity
    nameWithType: SocketEntity
    fullName: Discord.WebSocket.SocketEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.WebSocket.SocketEntity`1.Id
  commentId: P:Discord.WebSocket.SocketEntity`1.Id
  name: Id
  nameWithType: SocketEntity<T>.Id
  fullName: Discord.WebSocket.SocketEntity<T>.Id
  nameWithType.vb: SocketEntity(Of T).Id
  fullName.vb: Discord.WebSocket.SocketEntity(Of T).Id
- uid: Discord.WebSocket.SocketWebhookUser.Guild*
  commentId: Overload:Discord.WebSocket.SocketWebhookUser.Guild
  name: Guild
  nameWithType: SocketWebhookUser.Guild
  fullName: Discord.WebSocket.SocketWebhookUser.Guild
- uid: Discord.WebSocket.SocketGuild
  commentId: T:Discord.WebSocket.SocketGuild
  parent: Discord.WebSocket
  name: SocketGuild
  nameWithType: SocketGuild
  fullName: Discord.WebSocket.SocketGuild
- uid: Discord.WebSocket.SocketWebhookUser.WebhookId*
  commentId: Overload:Discord.WebSocket.SocketWebhookUser.WebhookId
  name: WebhookId
  nameWithType: SocketWebhookUser.WebhookId
  fullName: Discord.WebSocket.SocketWebhookUser.WebhookId
- uid: System.UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.WebSocket.SocketUser.Username
  commentId: P:Discord.WebSocket.SocketUser.Username
  parent: Discord.WebSocket.SocketUser
  name: Username
  nameWithType: SocketUser.Username
  fullName: Discord.WebSocket.SocketUser.Username
- uid: Discord.WebSocket.SocketWebhookUser.Username*
  commentId: Overload:Discord.WebSocket.SocketWebhookUser.Username
  name: Username
  nameWithType: SocketWebhookUser.Username
  fullName: Discord.WebSocket.SocketWebhookUser.Username
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.WebSocket.SocketUser.DiscriminatorValue
  commentId: P:Discord.WebSocket.SocketUser.DiscriminatorValue
  parent: Discord.WebSocket.SocketUser
  name: DiscriminatorValue
  nameWithType: SocketUser.DiscriminatorValue
  fullName: Discord.WebSocket.SocketUser.DiscriminatorValue
- uid: Discord.WebSocket.SocketWebhookUser.DiscriminatorValue*
  commentId: Overload:Discord.WebSocket.SocketWebhookUser.DiscriminatorValue
  name: DiscriminatorValue
  nameWithType: SocketWebhookUser.DiscriminatorValue
  fullName: Discord.WebSocket.SocketWebhookUser.DiscriminatorValue
- uid: System.UInt16
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Discord.WebSocket.SocketUser.AvatarId
  commentId: P:Discord.WebSocket.SocketUser.AvatarId
  parent: Discord.WebSocket.SocketUser
  name: AvatarId
  nameWithType: SocketUser.AvatarId
  fullName: Discord.WebSocket.SocketUser.AvatarId
- uid: Discord.WebSocket.SocketWebhookUser.AvatarId*
  commentId: Overload:Discord.WebSocket.SocketWebhookUser.AvatarId
  name: AvatarId
  nameWithType: SocketWebhookUser.AvatarId
  fullName: Discord.WebSocket.SocketWebhookUser.AvatarId
- uid: Discord.WebSocket.SocketUser.IsBot
  commentId: P:Discord.WebSocket.SocketUser.IsBot
  parent: Discord.WebSocket.SocketUser
  name: IsBot
  nameWithType: SocketUser.IsBot
  fullName: Discord.WebSocket.SocketUser.IsBot
- uid: Discord.WebSocket.SocketWebhookUser.IsBot*
  commentId: Overload:Discord.WebSocket.SocketWebhookUser.IsBot
  name: IsBot
  nameWithType: SocketWebhookUser.IsBot
  fullName: Discord.WebSocket.SocketWebhookUser.IsBot
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.WebSocket.SocketUser.IsWebhook
  commentId: P:Discord.WebSocket.SocketUser.IsWebhook
  parent: Discord.WebSocket.SocketUser
  name: IsWebhook
  nameWithType: SocketUser.IsWebhook
  fullName: Discord.WebSocket.SocketUser.IsWebhook
- uid: Discord.WebSocket.SocketWebhookUser.IsWebhook*
  commentId: Overload:Discord.WebSocket.SocketWebhookUser.IsWebhook
  name: IsWebhook
  nameWithType: SocketWebhookUser.IsWebhook
  fullName: Discord.WebSocket.SocketWebhookUser.IsWebhook
- uid: Discord.WebSocket.SocketWebhookUser.Discord#IGuildUser#Guild*
  commentId: Overload:Discord.WebSocket.SocketWebhookUser.Discord#IGuildUser#Guild
  name: IGuildUser.Guild
  nameWithType: SocketWebhookUser.IGuildUser.Guild
  fullName: Discord.WebSocket.SocketWebhookUser.Discord.IGuildUser.Guild
  nameWithType.vb: SocketWebhookUser.Discord.IGuildUser.Guild
  name.vb: Discord.IGuildUser.Guild
- uid: Discord.IGuildUser.Guild
  commentId: P:Discord.IGuildUser.Guild
  parent: Discord.IGuildUser
  name: Guild
  nameWithType: IGuildUser.Guild
  fullName: Discord.IGuildUser.Guild
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: Discord.WebSocket.SocketWebhookUser.Discord#IGuildUser#GuildPermissions*
  commentId: Overload:Discord.WebSocket.SocketWebhookUser.Discord#IGuildUser#GuildPermissions
  name: IGuildUser.GuildPermissions
  nameWithType: SocketWebhookUser.IGuildUser.GuildPermissions
  fullName: Discord.WebSocket.SocketWebhookUser.Discord.IGuildUser.GuildPermissions
  nameWithType.vb: SocketWebhookUser.Discord.IGuildUser.GuildPermissions
  name.vb: Discord.IGuildUser.GuildPermissions
- uid: Discord.IGuildUser.GuildPermissions
  commentId: P:Discord.IGuildUser.GuildPermissions
  parent: Discord.IGuildUser
  name: GuildPermissions
  nameWithType: IGuildUser.GuildPermissions
  fullName: Discord.IGuildUser.GuildPermissions
- uid: Discord.GuildPermissions
  commentId: T:Discord.GuildPermissions
  parent: Discord
  name: GuildPermissions
  nameWithType: GuildPermissions
  fullName: Discord.GuildPermissions
- uid: Discord.WebSocket.SocketWebhookUser.Discord#IGuildUser#GetPermissions*
  commentId: Overload:Discord.WebSocket.SocketWebhookUser.Discord#IGuildUser#GetPermissions
  name: IGuildUser.GetPermissions
  nameWithType: SocketWebhookUser.IGuildUser.GetPermissions
  fullName: Discord.WebSocket.SocketWebhookUser.Discord.IGuildUser.GetPermissions
  nameWithType.vb: SocketWebhookUser.Discord.IGuildUser.GetPermissions
  name.vb: Discord.IGuildUser.GetPermissions
- uid: Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
  commentId: M:Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
  parent: Discord.IGuildUser
  name: GetPermissions(IGuildChannel)
  nameWithType: IGuildUser.GetPermissions(IGuildChannel)
  fullName: Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
  spec.csharp:
  - uid: Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
    name: GetPermissions
    nameWithType: IGuildUser.GetPermissions
    fullName: Discord.IGuildUser.GetPermissions
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IGuildChannel
    name: IGuildChannel
    nameWithType: IGuildChannel
    fullName: Discord.IGuildChannel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IGuildUser.GetPermissions(Discord.IGuildChannel)
    name: GetPermissions
    nameWithType: IGuildUser.GetPermissions
    fullName: Discord.IGuildUser.GetPermissions
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.IGuildChannel
    name: IGuildChannel
    nameWithType: IGuildChannel
    fullName: Discord.IGuildChannel
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IGuildChannel
  commentId: T:Discord.IGuildChannel
  parent: Discord
  name: IGuildChannel
  nameWithType: IGuildChannel
  fullName: Discord.IGuildChannel
- uid: Discord.ChannelPermissions
  commentId: T:Discord.ChannelPermissions
  parent: Discord
  name: ChannelPermissions
  nameWithType: ChannelPermissions
  fullName: Discord.ChannelPermissions
- uid: Discord.WebSocket.SocketWebhookUser.Discord#IVoiceState#VoiceChannel*
  commentId: Overload:Discord.WebSocket.SocketWebhookUser.Discord#IVoiceState#VoiceChannel
  name: IVoiceState.VoiceChannel
  nameWithType: SocketWebhookUser.IVoiceState.VoiceChannel
  fullName: Discord.WebSocket.SocketWebhookUser.Discord.IVoiceState.VoiceChannel
  nameWithType.vb: SocketWebhookUser.Discord.IVoiceState.VoiceChannel
  name.vb: Discord.IVoiceState.VoiceChannel
- uid: Discord.IVoiceState.VoiceChannel
  commentId: P:Discord.IVoiceState.VoiceChannel
  parent: Discord.IVoiceState
  name: VoiceChannel
  nameWithType: IVoiceState.VoiceChannel
  fullName: Discord.IVoiceState.VoiceChannel
- uid: Discord.IVoiceChannel
  commentId: T:Discord.IVoiceChannel
  parent: Discord
  name: IVoiceChannel
  nameWithType: IVoiceChannel
  fullName: Discord.IVoiceChannel
