### YamlMime:ManagedReference
items:
- uid: Discord.Audio.AudioOutStream
  commentId: T:Discord.Audio.AudioOutStream
  id: AudioOutStream
  parent: Discord.Audio
  children:
  - Discord.Audio.AudioOutStream.CanWrite
  - Discord.Audio.AudioOutStream.Read(System.Byte[],System.Int32,System.Int32)
  - Discord.Audio.AudioOutStream.Seek(System.Int64,SeekOrigin)
  - Discord.Audio.AudioOutStream.SetLength(System.Int64)
  langs:
  - csharp
  - vb
  name: AudioOutStream
  nameWithType: AudioOutStream
  fullName: Discord.Audio.AudioOutStream
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioOutStream.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AudioOutStream
    path: ../src/Discord.Net.Core/Audio/AudioOutStream.cs
    startLine: 5
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: 'public abstract class AudioOutStream : AudioStream'
    content.vb: >-
      Public MustInherit Class AudioOutStream
          Inherits AudioStream
  inheritance:
  - System.Object
  - Discord.Audio.AudioStream
  derivedClasses:
  - Discord.Audio.Streams.BufferedWriteStream
  - Discord.Audio.Streams.OpusDecodeStream
  - Discord.Audio.Streams.OpusEncodeStream
  - Discord.Audio.Streams.OutputStream
  - Discord.Audio.Streams.RTPReadStream
  - Discord.Audio.Streams.RTPWriteStream
  - Discord.Audio.Streams.SodiumDecryptStream
  - Discord.Audio.Streams.SodiumEncryptStream
  inheritedMembers:
  - Discord.Audio.AudioStream.CanRead
  - Discord.Audio.AudioStream.CanSeek
  - Discord.Audio.AudioStream.WriteHeader(System.UInt16,System.UInt32,System.Boolean)
  - Discord.Audio.AudioStream.Write(System.Byte[],System.Int32,System.Int32)
  - Discord.Audio.AudioStream.Flush
  - Discord.Audio.AudioStream.Clear
  - Discord.Audio.AudioStream.ClearAsync(CancellationToken)
  - Discord.Audio.AudioStream.Length
  - Discord.Audio.AudioStream.Position
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Discord.Audio.AudioOutStream.CanWrite
  commentId: P:Discord.Audio.AudioOutStream.CanWrite
  id: CanWrite
  parent: Discord.Audio.AudioOutStream
  langs:
  - csharp
  - vb
  name: CanWrite
  nameWithType: AudioOutStream.CanWrite
  fullName: Discord.Audio.AudioOutStream.CanWrite
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioOutStream.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: CanWrite
    path: ../src/Discord.Net.Core/Audio/AudioOutStream.cs
    startLine: 7
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: public override bool CanWrite { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean
  overridden: Discord.Audio.AudioStream.CanWrite
  overload: Discord.Audio.AudioOutStream.CanWrite*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.Audio.AudioOutStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:Discord.Audio.AudioOutStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: Discord.Audio.AudioOutStream
  langs:
  - csharp
  - vb
  name: Read(Byte[], Int32, Int32)
  nameWithType: AudioOutStream.Read(Byte[], Int32, Int32)
  fullName: Discord.Audio.AudioOutStream.Read(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioOutStream.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Read
    path: ../src/Discord.Net.Core/Audio/AudioOutStream.cs
    startLine: 11
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  example: []
  syntax:
    content: public override int Read(byte[] buffer, int offset, int count)
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overrides Function Read(buffer As Byte(), offset As Integer, count As Integer) As Integer
  overridden: Discord.Audio.AudioStream.Read(System.Byte[],System.Int32,System.Int32)
  overload: Discord.Audio.AudioOutStream.Read*
  nameWithType.vb: AudioOutStream.Read(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Discord.Audio.AudioOutStream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
- uid: Discord.Audio.AudioOutStream.SetLength(System.Int64)
  commentId: M:Discord.Audio.AudioOutStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: Discord.Audio.AudioOutStream
  langs:
  - csharp
  - vb
  name: SetLength(Int64)
  nameWithType: AudioOutStream.SetLength(Int64)
  fullName: Discord.Audio.AudioOutStream.SetLength(System.Int64)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioOutStream.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SetLength
    path: ../src/Discord.Net.Core/Audio/AudioOutStream.cs
    startLine: 15
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  example: []
  syntax:
    content: public override void SetLength(long value)
    parameters:
    - id: value
      type: System.Int64
    content.vb: Public Overrides Sub SetLength(value As Long)
  overridden: Discord.Audio.AudioStream.SetLength(System.Int64)
  overload: Discord.Audio.AudioOutStream.SetLength*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Discord.Audio.AudioOutStream.Seek(System.Int64,SeekOrigin)
  commentId: M:Discord.Audio.AudioOutStream.Seek(System.Int64,SeekOrigin)
  id: Seek(System.Int64,SeekOrigin)
  parent: Discord.Audio.AudioOutStream
  langs:
  - csharp
  - vb
  name: Seek(Int64, SeekOrigin)
  nameWithType: AudioOutStream.Seek(Int64, SeekOrigin)
  fullName: Discord.Audio.AudioOutStream.Seek(System.Int64, SeekOrigin)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioOutStream.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Seek
    path: ../src/Discord.Net.Core/Audio/AudioOutStream.cs
    startLine: 19
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  example: []
  syntax:
    content: public override long Seek(long offset, SeekOrigin origin)
    parameters:
    - id: offset
      type: System.Int64
    - id: origin
      type: SeekOrigin
    return:
      type: System.Int64
    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long
  overridden: Discord.Audio.AudioStream.Seek(System.Int64,SeekOrigin)
  overload: Discord.Audio.AudioOutStream.Seek*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Discord.Audio
  commentId: N:Discord.Audio
  name: Discord.Audio
  nameWithType: Discord.Audio
  fullName: Discord.Audio
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Audio.AudioStream
  commentId: T:Discord.Audio.AudioStream
  parent: Discord.Audio
  name: AudioStream
  nameWithType: AudioStream
  fullName: Discord.Audio.AudioStream
- uid: Discord.Audio.AudioStream.CanRead
  commentId: P:Discord.Audio.AudioStream.CanRead
  parent: Discord.Audio.AudioStream
  name: CanRead
  nameWithType: AudioStream.CanRead
  fullName: Discord.Audio.AudioStream.CanRead
- uid: Discord.Audio.AudioStream.CanSeek
  commentId: P:Discord.Audio.AudioStream.CanSeek
  parent: Discord.Audio.AudioStream
  name: CanSeek
  nameWithType: AudioStream.CanSeek
  fullName: Discord.Audio.AudioStream.CanSeek
- uid: Discord.Audio.AudioStream.WriteHeader(System.UInt16,System.UInt32,System.Boolean)
  commentId: M:Discord.Audio.AudioStream.WriteHeader(System.UInt16,System.UInt32,System.Boolean)
  parent: Discord.Audio.AudioStream
  isExternal: true
  name: WriteHeader(UInt16, UInt32, Boolean)
  nameWithType: AudioStream.WriteHeader(UInt16, UInt32, Boolean)
  fullName: Discord.Audio.AudioStream.WriteHeader(System.UInt16, System.UInt32, System.Boolean)
  spec.csharp:
  - uid: Discord.Audio.AudioStream.WriteHeader(System.UInt16,System.UInt32,System.Boolean)
    name: WriteHeader
    nameWithType: AudioStream.WriteHeader
    fullName: Discord.Audio.AudioStream.WriteHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Audio.AudioStream.WriteHeader(System.UInt16,System.UInt32,System.Boolean)
    name: WriteHeader
    nameWithType: AudioStream.WriteHeader
    fullName: Discord.Audio.AudioStream.WriteHeader
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Audio.AudioStream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:Discord.Audio.AudioStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: Discord.Audio.AudioStream
  isExternal: true
  name: Write(Byte[], Int32, Int32)
  nameWithType: AudioStream.Write(Byte[], Int32, Int32)
  fullName: Discord.Audio.AudioStream.Write(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: AudioStream.Write(Byte(), Int32, Int32)
  fullName.vb: Discord.Audio.AudioStream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Discord.Audio.AudioStream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    nameWithType: AudioStream.Write
    fullName: Discord.Audio.AudioStream.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Audio.AudioStream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    nameWithType: AudioStream.Write
    fullName: Discord.Audio.AudioStream.Write
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Audio.AudioStream.Flush
  commentId: M:Discord.Audio.AudioStream.Flush
  parent: Discord.Audio.AudioStream
  name: Flush()
  nameWithType: AudioStream.Flush()
  fullName: Discord.Audio.AudioStream.Flush()
  spec.csharp:
  - uid: Discord.Audio.AudioStream.Flush
    name: Flush
    nameWithType: AudioStream.Flush
    fullName: Discord.Audio.AudioStream.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Audio.AudioStream.Flush
    name: Flush
    nameWithType: AudioStream.Flush
    fullName: Discord.Audio.AudioStream.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Audio.AudioStream.Clear
  commentId: M:Discord.Audio.AudioStream.Clear
  parent: Discord.Audio.AudioStream
  name: Clear()
  nameWithType: AudioStream.Clear()
  fullName: Discord.Audio.AudioStream.Clear()
  spec.csharp:
  - uid: Discord.Audio.AudioStream.Clear
    name: Clear
    nameWithType: AudioStream.Clear
    fullName: Discord.Audio.AudioStream.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Audio.AudioStream.Clear
    name: Clear
    nameWithType: AudioStream.Clear
    fullName: Discord.Audio.AudioStream.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Audio.AudioStream.ClearAsync(CancellationToken)
  commentId: M:Discord.Audio.AudioStream.ClearAsync(CancellationToken)
  parent: Discord.Audio.AudioStream
  isExternal: true
  name: ClearAsync(CancellationToken)
  nameWithType: AudioStream.ClearAsync(CancellationToken)
  fullName: Discord.Audio.AudioStream.ClearAsync(CancellationToken)
  spec.csharp:
  - uid: Discord.Audio.AudioStream.ClearAsync(CancellationToken)
    name: ClearAsync
    nameWithType: AudioStream.ClearAsync
    fullName: Discord.Audio.AudioStream.ClearAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Audio.AudioStream.ClearAsync(CancellationToken)
    name: ClearAsync
    nameWithType: AudioStream.ClearAsync
    fullName: Discord.Audio.AudioStream.ClearAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Audio.AudioStream.Length
  commentId: P:Discord.Audio.AudioStream.Length
  parent: Discord.Audio.AudioStream
  name: Length
  nameWithType: AudioStream.Length
  fullName: Discord.Audio.AudioStream.Length
- uid: Discord.Audio.AudioStream.Position
  commentId: P:Discord.Audio.AudioStream.Position
  parent: Discord.Audio.AudioStream
  name: Position
  nameWithType: AudioStream.Position
  fullName: Discord.Audio.AudioStream.Position
- uid: Discord.Audio.AudioStream.CanWrite
  commentId: P:Discord.Audio.AudioStream.CanWrite
  parent: Discord.Audio.AudioStream
  name: CanWrite
  nameWithType: AudioStream.CanWrite
  fullName: Discord.Audio.AudioStream.CanWrite
- uid: Discord.Audio.AudioOutStream.CanWrite*
  commentId: Overload:Discord.Audio.AudioOutStream.CanWrite
  name: CanWrite
  nameWithType: AudioOutStream.CanWrite
  fullName: Discord.Audio.AudioOutStream.CanWrite
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.Audio.AudioStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:Discord.Audio.AudioStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: Discord.Audio.AudioStream
  isExternal: true
  name: Read(Byte[], Int32, Int32)
  nameWithType: AudioStream.Read(Byte[], Int32, Int32)
  fullName: Discord.Audio.AudioStream.Read(System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: AudioStream.Read(Byte(), Int32, Int32)
  fullName.vb: Discord.Audio.AudioStream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
  spec.csharp:
  - uid: Discord.Audio.AudioStream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    nameWithType: AudioStream.Read
    fullName: Discord.Audio.AudioStream.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Audio.AudioStream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    nameWithType: AudioStream.Read
    fullName: Discord.Audio.AudioStream.Read
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Audio.AudioOutStream.Read*
  commentId: Overload:Discord.Audio.AudioOutStream.Read
  name: Read
  nameWithType: AudioOutStream.Read
  fullName: Discord.Audio.AudioOutStream.Read
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Discord.Audio.AudioStream.SetLength(System.Int64)
  commentId: M:Discord.Audio.AudioStream.SetLength(System.Int64)
  parent: Discord.Audio.AudioStream
  isExternal: true
  name: SetLength(Int64)
  nameWithType: AudioStream.SetLength(Int64)
  fullName: Discord.Audio.AudioStream.SetLength(System.Int64)
  spec.csharp:
  - uid: Discord.Audio.AudioStream.SetLength(System.Int64)
    name: SetLength
    nameWithType: AudioStream.SetLength
    fullName: Discord.Audio.AudioStream.SetLength
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Audio.AudioStream.SetLength(System.Int64)
    name: SetLength
    nameWithType: AudioStream.SetLength
    fullName: Discord.Audio.AudioStream.SetLength
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Audio.AudioOutStream.SetLength*
  commentId: Overload:Discord.Audio.AudioOutStream.SetLength
  name: SetLength
  nameWithType: AudioOutStream.SetLength
  fullName: Discord.Audio.AudioOutStream.SetLength
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Discord.Audio.AudioStream.Seek(System.Int64,SeekOrigin)
  commentId: M:Discord.Audio.AudioStream.Seek(System.Int64,SeekOrigin)
  parent: Discord.Audio.AudioStream
  isExternal: true
  name: Seek(Int64, SeekOrigin)
  nameWithType: AudioStream.Seek(Int64, SeekOrigin)
  fullName: Discord.Audio.AudioStream.Seek(System.Int64, SeekOrigin)
  spec.csharp:
  - uid: Discord.Audio.AudioStream.Seek(System.Int64,SeekOrigin)
    name: Seek
    nameWithType: AudioStream.Seek
    fullName: Discord.Audio.AudioStream.Seek
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SeekOrigin
    name: SeekOrigin
    nameWithType: SeekOrigin
    fullName: SeekOrigin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Audio.AudioStream.Seek(System.Int64,SeekOrigin)
    name: Seek
    nameWithType: AudioStream.Seek
    fullName: Discord.Audio.AudioStream.Seek
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SeekOrigin
    name: SeekOrigin
    nameWithType: SeekOrigin
    fullName: SeekOrigin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Audio.AudioOutStream.Seek*
  commentId: Overload:Discord.Audio.AudioOutStream.Seek
  name: Seek
  nameWithType: AudioOutStream.Seek
  fullName: Discord.Audio.AudioOutStream.Seek
- uid: SeekOrigin
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: SeekOrigin
