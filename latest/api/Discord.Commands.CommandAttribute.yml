### YamlMime:ManagedReference
items:
- uid: Discord.Commands.CommandAttribute
  commentId: T:Discord.Commands.CommandAttribute
  id: CommandAttribute
  parent: Discord.Commands
  children:
  - Discord.Commands.CommandAttribute.#ctor
  - Discord.Commands.CommandAttribute.#ctor(System.String)
  - Discord.Commands.CommandAttribute.#ctor(System.String,System.Boolean)
  - Discord.Commands.CommandAttribute.IgnoreExtraArgs
  - Discord.Commands.CommandAttribute.RunMode
  - Discord.Commands.CommandAttribute.Text
  langs:
  - csharp
  - vb
  name: CommandAttribute
  nameWithType: CommandAttribute
  fullName: Discord.Commands.CommandAttribute
  type: Class
  source:
    remote:
      path: src/Discord.Net.Commands/Attributes/CommandAttribute.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: CommandAttribute
    path: ../src/Discord.Net.Commands/Attributes/CommandAttribute.cs
    startLine: 7
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nMarks the execution information for a command.\n"
  example: []
  syntax:
    content: >-
      [AttributeUsage(AttributeTargets.Method, AllowMultiple = false, Inherited = true)]

      public class CommandAttribute : Attribute
    content.vb: >-
      <AttributeUsage(AttributeTargets.Method, AllowMultiple:=False, Inherited:=True)>

      Public Class CommandAttribute
          Inherits Attribute
  inheritance:
  - System.Object
  - System.Attribute
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.AttributeUsageAttribute
    ctor: System.AttributeUsageAttribute.#ctor(System.AttributeTargets)
    arguments:
    - type: System.AttributeTargets
      value: 64
    namedArguments:
    - name: AllowMultiple
      type: System.Boolean
      value: false
    - name: Inherited
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Commands.CommandAttribute.Text
  commentId: P:Discord.Commands.CommandAttribute.Text
  id: Text
  parent: Discord.Commands.CommandAttribute
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: CommandAttribute.Text
  fullName: Discord.Commands.CommandAttribute.Text
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Attributes/CommandAttribute.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Text
    path: ../src/Discord.Net.Commands/Attributes/CommandAttribute.cs
    startLine: 13
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nGets the text that has been set to be recognized as a command.\n"
  example: []
  syntax:
    content: public string Text { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Text As String
  overload: Discord.Commands.CommandAttribute.Text*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.CommandAttribute.RunMode
  commentId: P:Discord.Commands.CommandAttribute.RunMode
  id: RunMode
  parent: Discord.Commands.CommandAttribute
  langs:
  - csharp
  - vb
  name: RunMode
  nameWithType: CommandAttribute.RunMode
  fullName: Discord.Commands.CommandAttribute.RunMode
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Attributes/CommandAttribute.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RunMode
    path: ../src/Discord.Net.Commands/Attributes/CommandAttribute.cs
    startLine: 17
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nSpecifies the <xref href=\"Discord.Commands.CommandAttribute.RunMode\" data-throw-if-not-resolved=\"false\"></xref> of the command. This affects how the command is executed.\n"
  example: []
  syntax:
    content: public RunMode RunMode { get; set; }
    parameters: []
    return:
      type: Discord.Commands.RunMode
    content.vb: Public Property RunMode As RunMode
  overload: Discord.Commands.CommandAttribute.RunMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.CommandAttribute.IgnoreExtraArgs
  commentId: P:Discord.Commands.CommandAttribute.IgnoreExtraArgs
  id: IgnoreExtraArgs
  parent: Discord.Commands.CommandAttribute
  langs:
  - csharp
  - vb
  name: IgnoreExtraArgs
  nameWithType: CommandAttribute.IgnoreExtraArgs
  fullName: Discord.Commands.CommandAttribute.IgnoreExtraArgs
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Attributes/CommandAttribute.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IgnoreExtraArgs
    path: ../src/Discord.Net.Commands/Attributes/CommandAttribute.cs
    startLine: 18
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  syntax:
    content: public bool? IgnoreExtraArgs { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public ReadOnly Property IgnoreExtraArgs As Boolean?
  overload: Discord.Commands.CommandAttribute.IgnoreExtraArgs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.CommandAttribute.#ctor
  commentId: M:Discord.Commands.CommandAttribute.#ctor
  id: '#ctor'
  parent: Discord.Commands.CommandAttribute
  langs:
  - csharp
  - vb
  name: CommandAttribute()
  nameWithType: CommandAttribute.CommandAttribute()
  fullName: Discord.Commands.CommandAttribute.CommandAttribute()
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Commands/Attributes/CommandAttribute.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Commands/Attributes/CommandAttribute.cs
    startLine: 21
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  example: []
  syntax:
    content: public CommandAttribute()
    content.vb: Public Sub New
  overload: Discord.Commands.CommandAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.CommandAttribute.#ctor(System.String)
  commentId: M:Discord.Commands.CommandAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Discord.Commands.CommandAttribute
  langs:
  - csharp
  - vb
  name: CommandAttribute(String)
  nameWithType: CommandAttribute.CommandAttribute(String)
  fullName: Discord.Commands.CommandAttribute.CommandAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Commands/Attributes/CommandAttribute.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Commands/Attributes/CommandAttribute.cs
    startLine: 30
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nInitializes a new <xref href=\"Discord.Commands.CommandAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute with the specified name.\n"
  example: []
  syntax:
    content: public CommandAttribute(string text)
    parameters:
    - id: text
      type: System.String
      description: The name of the command.
    content.vb: Public Sub New(text As String)
  overload: Discord.Commands.CommandAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.CommandAttribute.#ctor(System.String,System.Boolean)
  commentId: M:Discord.Commands.CommandAttribute.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: Discord.Commands.CommandAttribute
  langs:
  - csharp
  - vb
  name: CommandAttribute(String, Boolean)
  nameWithType: CommandAttribute.CommandAttribute(String, Boolean)
  fullName: Discord.Commands.CommandAttribute.CommandAttribute(System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Commands/Attributes/CommandAttribute.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Commands/Attributes/CommandAttribute.cs
    startLine: 34
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  syntax:
    content: public CommandAttribute(string text, bool ignoreExtraArgs)
    parameters:
    - id: text
      type: System.String
    - id: ignoreExtraArgs
      type: System.Boolean
    content.vb: Public Sub New(text As String, ignoreExtraArgs As Boolean)
  overload: Discord.Commands.CommandAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Discord.Commands
  commentId: N:Discord.Commands
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Attribute
  commentId: T:System.Attribute
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System.Attribute.Equals(System.Object)
  commentId: M:System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: true
  name: Equals(Object)
  nameWithType: Attribute.Equals(Object)
  fullName: System.Attribute.Equals(System.Object)
  spec.csharp:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    nameWithType: Attribute.Equals
    fullName: System.Attribute.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.Equals(System.Object)
    name: Equals
    nameWithType: Attribute.Equals
    fullName: System.Attribute.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Attribute.GetHashCode
  commentId: M:System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: true
  name: GetHashCode()
  nameWithType: Attribute.GetHashCode()
  fullName: System.Attribute.GetHashCode()
  spec.csharp:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    nameWithType: Attribute.GetHashCode
    fullName: System.Attribute.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Attribute.GetHashCode
    name: GetHashCode
    nameWithType: Attribute.GetHashCode
    fullName: System.Attribute.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Commands.CommandAttribute.Text*
  commentId: Overload:Discord.Commands.CommandAttribute.Text
  name: Text
  nameWithType: CommandAttribute.Text
  fullName: Discord.Commands.CommandAttribute.Text
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Commands.CommandAttribute.RunMode
  commentId: P:Discord.Commands.CommandAttribute.RunMode
  isExternal: true
- uid: Discord.Commands.CommandAttribute.RunMode*
  commentId: Overload:Discord.Commands.CommandAttribute.RunMode
  name: RunMode
  nameWithType: CommandAttribute.RunMode
  fullName: Discord.Commands.CommandAttribute.RunMode
- uid: Discord.Commands.RunMode
  commentId: T:Discord.Commands.RunMode
  parent: Discord.Commands
  name: RunMode
  nameWithType: RunMode
  fullName: Discord.Commands.RunMode
- uid: Discord.Commands.CommandAttribute.IgnoreExtraArgs*
  commentId: Overload:Discord.Commands.CommandAttribute.IgnoreExtraArgs
  name: IgnoreExtraArgs
  nameWithType: CommandAttribute.IgnoreExtraArgs
  fullName: Discord.Commands.CommandAttribute.IgnoreExtraArgs
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Commands.CommandAttribute.#ctor*
  commentId: Overload:Discord.Commands.CommandAttribute.#ctor
  name: CommandAttribute
  nameWithType: CommandAttribute.CommandAttribute
  fullName: Discord.Commands.CommandAttribute.CommandAttribute
- uid: Discord.Commands.CommandAttribute
  commentId: T:Discord.Commands.CommandAttribute
  name: CommandAttribute
  nameWithType: CommandAttribute
  fullName: Discord.Commands.CommandAttribute
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
