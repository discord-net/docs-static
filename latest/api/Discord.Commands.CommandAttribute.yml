### YamlMime:ManagedReference
items:
- uid: Discord.Commands.CommandAttribute
  commentId: T:Discord.Commands.CommandAttribute
  id: CommandAttribute
  parent: Discord.Commands
  children:
  - Discord.Commands.CommandAttribute.#ctor
  - Discord.Commands.CommandAttribute.#ctor(System.String)
  - Discord.Commands.CommandAttribute.#ctor(System.String,System.Boolean)
  - Discord.Commands.CommandAttribute.IgnoreExtraArgs
  - Discord.Commands.CommandAttribute.RunMode
  - Discord.Commands.CommandAttribute.Text
  langs:
  - csharp
  - vb
  name: CommandAttribute
  nameWithType: CommandAttribute
  fullName: Discord.Commands.CommandAttribute
  type: Class
  source:
    remote:
      path: src/Discord.Net.Commands/Attributes/CommandAttribute.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: CommandAttribute
    path: ../src/Discord.Net.Commands/Attributes/CommandAttribute.cs
    startLine: 7
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nMarks the execution information for a command.\n"
  example: []
  syntax:
    content: 'public class CommandAttribute : Attribute'
    content.vb: >-
      Public Class CommandAttribute
          Inherits Attribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Commands.CommandAttribute.Text
  commentId: P:Discord.Commands.CommandAttribute.Text
  id: Text
  parent: Discord.Commands.CommandAttribute
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: CommandAttribute.Text
  fullName: Discord.Commands.CommandAttribute.Text
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Attributes/CommandAttribute.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Text
    path: ../src/Discord.Net.Commands/Attributes/CommandAttribute.cs
    startLine: 13
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nGets the text that has been set to be recognized as a command.\n"
  example: []
  syntax:
    content: public string Text { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Text As String
  overload: Discord.Commands.CommandAttribute.Text*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.CommandAttribute.RunMode
  commentId: P:Discord.Commands.CommandAttribute.RunMode
  id: RunMode
  parent: Discord.Commands.CommandAttribute
  langs:
  - csharp
  - vb
  name: RunMode
  nameWithType: CommandAttribute.RunMode
  fullName: Discord.Commands.CommandAttribute.RunMode
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Attributes/CommandAttribute.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: RunMode
    path: ../src/Discord.Net.Commands/Attributes/CommandAttribute.cs
    startLine: 17
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nSpecifies the <xref href=\"Discord.Commands.CommandAttribute.RunMode\" data-throw-if-not-resolved=\"false\"></xref> of the command. This affects how the command is executed.\n"
  example: []
  syntax:
    content: public RunMode RunMode { get; set; }
    parameters: []
    return:
      type: Discord.Commands.RunMode
    content.vb: Public Property RunMode As RunMode
  overload: Discord.Commands.CommandAttribute.RunMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.CommandAttribute.IgnoreExtraArgs
  commentId: P:Discord.Commands.CommandAttribute.IgnoreExtraArgs
  id: IgnoreExtraArgs
  parent: Discord.Commands.CommandAttribute
  langs:
  - csharp
  - vb
  name: IgnoreExtraArgs
  nameWithType: CommandAttribute.IgnoreExtraArgs
  fullName: Discord.Commands.CommandAttribute.IgnoreExtraArgs
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Attributes/CommandAttribute.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IgnoreExtraArgs
    path: ../src/Discord.Net.Commands/Attributes/CommandAttribute.cs
    startLine: 18
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  syntax:
    content: public bool? IgnoreExtraArgs { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public ReadOnly Property IgnoreExtraArgs As Boolean?
  overload: Discord.Commands.CommandAttribute.IgnoreExtraArgs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.CommandAttribute.#ctor
  commentId: M:Discord.Commands.CommandAttribute.#ctor
  id: '#ctor'
  parent: Discord.Commands.CommandAttribute
  langs:
  - csharp
  - vb
  name: CommandAttribute()
  nameWithType: CommandAttribute.CommandAttribute()
  fullName: Discord.Commands.CommandAttribute.CommandAttribute()
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Commands/Attributes/CommandAttribute.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Commands/Attributes/CommandAttribute.cs
    startLine: 21
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  example: []
  syntax:
    content: public CommandAttribute()
    content.vb: Public Sub New
  overload: Discord.Commands.CommandAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.CommandAttribute.#ctor(System.String)
  commentId: M:Discord.Commands.CommandAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Discord.Commands.CommandAttribute
  langs:
  - csharp
  - vb
  name: CommandAttribute(String)
  nameWithType: CommandAttribute.CommandAttribute(String)
  fullName: Discord.Commands.CommandAttribute.CommandAttribute(System.String)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Commands/Attributes/CommandAttribute.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Commands/Attributes/CommandAttribute.cs
    startLine: 30
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nInitializes a new <xref href=\"Discord.Commands.CommandAttribute\" data-throw-if-not-resolved=\"false\"></xref> attribute with the specified name.\n"
  example: []
  syntax:
    content: public CommandAttribute(string text)
    parameters:
    - id: text
      type: System.String
      description: The name of the command.
    content.vb: Public Sub New(text As String)
  overload: Discord.Commands.CommandAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.CommandAttribute.#ctor(System.String,System.Boolean)
  commentId: M:Discord.Commands.CommandAttribute.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: Discord.Commands.CommandAttribute
  langs:
  - csharp
  - vb
  name: CommandAttribute(String, Boolean)
  nameWithType: CommandAttribute.CommandAttribute(String, Boolean)
  fullName: Discord.Commands.CommandAttribute.CommandAttribute(System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Commands/Attributes/CommandAttribute.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Commands/Attributes/CommandAttribute.cs
    startLine: 34
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  syntax:
    content: public CommandAttribute(string text, bool ignoreExtraArgs)
    parameters:
    - id: text
      type: System.String
    - id: ignoreExtraArgs
      type: System.Boolean
    content.vb: Public Sub New(text As String, ignoreExtraArgs As Boolean)
  overload: Discord.Commands.CommandAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Discord.Commands
  commentId: N:Discord.Commands
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Commands.CommandAttribute.Text*
  commentId: Overload:Discord.Commands.CommandAttribute.Text
  name: Text
  nameWithType: CommandAttribute.Text
  fullName: Discord.Commands.CommandAttribute.Text
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Commands.CommandAttribute.RunMode
  commentId: P:Discord.Commands.CommandAttribute.RunMode
  isExternal: true
- uid: Discord.Commands.CommandAttribute.RunMode*
  commentId: Overload:Discord.Commands.CommandAttribute.RunMode
  name: RunMode
  nameWithType: CommandAttribute.RunMode
  fullName: Discord.Commands.CommandAttribute.RunMode
- uid: Discord.Commands.RunMode
  commentId: T:Discord.Commands.RunMode
  parent: Discord.Commands
  name: RunMode
  nameWithType: RunMode
  fullName: Discord.Commands.RunMode
- uid: Discord.Commands.CommandAttribute.IgnoreExtraArgs*
  commentId: Overload:Discord.Commands.CommandAttribute.IgnoreExtraArgs
  name: IgnoreExtraArgs
  nameWithType: CommandAttribute.IgnoreExtraArgs
  fullName: Discord.Commands.CommandAttribute.IgnoreExtraArgs
- uid: System.Nullable{System.Boolean}
  commentId: '!:System.Nullable{System.Boolean}'
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Commands.CommandAttribute.#ctor*
  commentId: Overload:Discord.Commands.CommandAttribute.#ctor
  name: CommandAttribute
  nameWithType: CommandAttribute.CommandAttribute
  fullName: Discord.Commands.CommandAttribute.CommandAttribute
- uid: Discord.Commands.CommandAttribute
  commentId: T:Discord.Commands.CommandAttribute
  name: CommandAttribute
  nameWithType: CommandAttribute
  fullName: Discord.Commands.CommandAttribute
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
