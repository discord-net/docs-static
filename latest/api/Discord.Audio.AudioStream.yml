### YamlMime:ManagedReference
items:
- uid: Discord.Audio.AudioStream
  commentId: T:Discord.Audio.AudioStream
  id: AudioStream
  parent: Discord.Audio
  children:
  - Discord.Audio.AudioStream.CanRead
  - Discord.Audio.AudioStream.CanSeek
  - Discord.Audio.AudioStream.CanWrite
  - Discord.Audio.AudioStream.Clear
  - Discord.Audio.AudioStream.ClearAsync(CancellationToken)
  - Discord.Audio.AudioStream.Flush
  - Discord.Audio.AudioStream.Length
  - Discord.Audio.AudioStream.Position
  - Discord.Audio.AudioStream.Read(System.Byte[],System.Int32,System.Int32)
  - Discord.Audio.AudioStream.Seek(System.Int64,SeekOrigin)
  - Discord.Audio.AudioStream.SetLength(System.Int64)
  - Discord.Audio.AudioStream.Write(System.Byte[],System.Int32,System.Int32)
  - Discord.Audio.AudioStream.WriteHeader(System.UInt16,System.UInt32,System.Boolean)
  langs:
  - csharp
  - vb
  name: AudioStream
  nameWithType: AudioStream
  fullName: Discord.Audio.AudioStream
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioStream.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: AudioStream
    path: ../src/Discord.Net.Core/Audio/AudioStream.cs
    startLine: 7
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: 'public abstract class AudioStream : Stream'
    content.vb: >-
      Public MustInherit Class AudioStream
          Inherits Stream
  inheritance:
  - System.Object
  derivedClasses:
  - Discord.Audio.AudioInStream
  - Discord.Audio.AudioOutStream
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Discord.Audio.AudioStream.CanRead
  commentId: P:Discord.Audio.AudioStream.CanRead
  id: CanRead
  parent: Discord.Audio.AudioStream
  langs:
  - csharp
  - vb
  name: CanRead
  nameWithType: AudioStream.CanRead
  fullName: Discord.Audio.AudioStream.CanRead
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioStream.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: CanRead
    path: ../src/Discord.Net.Core/Audio/AudioStream.cs
    startLine: 9
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: public override bool CanRead { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanRead As Boolean
  overload: Discord.Audio.AudioStream.CanRead*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.Audio.AudioStream.CanSeek
  commentId: P:Discord.Audio.AudioStream.CanSeek
  id: CanSeek
  parent: Discord.Audio.AudioStream
  langs:
  - csharp
  - vb
  name: CanSeek
  nameWithType: AudioStream.CanSeek
  fullName: Discord.Audio.AudioStream.CanSeek
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioStream.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: CanSeek
    path: ../src/Discord.Net.Core/Audio/AudioStream.cs
    startLine: 10
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: public override bool CanSeek { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean
  overload: Discord.Audio.AudioStream.CanSeek*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.Audio.AudioStream.CanWrite
  commentId: P:Discord.Audio.AudioStream.CanWrite
  id: CanWrite
  parent: Discord.Audio.AudioStream
  langs:
  - csharp
  - vb
  name: CanWrite
  nameWithType: AudioStream.CanWrite
  fullName: Discord.Audio.AudioStream.CanWrite
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioStream.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: CanWrite
    path: ../src/Discord.Net.Core/Audio/AudioStream.cs
    startLine: 11
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: public override bool CanWrite { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean
  overload: Discord.Audio.AudioStream.CanWrite*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.Audio.AudioStream.WriteHeader(System.UInt16,System.UInt32,System.Boolean)
  commentId: M:Discord.Audio.AudioStream.WriteHeader(System.UInt16,System.UInt32,System.Boolean)
  id: WriteHeader(System.UInt16,System.UInt32,System.Boolean)
  parent: Discord.Audio.AudioStream
  langs:
  - csharp
  - vb
  name: WriteHeader(UInt16, UInt32, Boolean)
  nameWithType: AudioStream.WriteHeader(UInt16, UInt32, Boolean)
  fullName: Discord.Audio.AudioStream.WriteHeader(System.UInt16, System.UInt32, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioStream.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: WriteHeader
    path: ../src/Discord.Net.Core/Audio/AudioStream.cs
    startLine: 14
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  example: []
  syntax:
    content: public virtual void WriteHeader(ushort seq, uint timestamp, bool missed)
    parameters:
    - id: seq
      type: System.UInt16
    - id: timestamp
      type: System.UInt32
    - id: missed
      type: System.Boolean
    content.vb: Public Overridable Sub WriteHeader(seq As UShort, timestamp As UInteger, missed As Boolean)
  overload: Discord.Audio.AudioStream.WriteHeader*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Discord.Audio.AudioStream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:Discord.Audio.AudioStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: Discord.Audio.AudioStream
  langs:
  - csharp
  - vb
  name: Write(Byte[], Int32, Int32)
  nameWithType: AudioStream.Write(Byte[], Int32, Int32)
  fullName: Discord.Audio.AudioStream.Write(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioStream.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Write
    path: ../src/Discord.Net.Core/Audio/AudioStream.cs
    startLine: 16
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: public override void Write(byte[] buffer, int offset, int count)
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    content.vb: Public Overrides Sub Write(buffer As Byte(), offset As Integer, count As Integer)
  overload: Discord.Audio.AudioStream.Write*
  nameWithType.vb: AudioStream.Write(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Discord.Audio.AudioStream.Write(System.Byte(), System.Int32, System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
- uid: Discord.Audio.AudioStream.Flush
  commentId: M:Discord.Audio.AudioStream.Flush
  id: Flush
  parent: Discord.Audio.AudioStream
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: AudioStream.Flush()
  fullName: Discord.Audio.AudioStream.Flush()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioStream.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Flush
    path: ../src/Discord.Net.Core/Audio/AudioStream.cs
    startLine: 20
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: public override void Flush()
    content.vb: Public Overrides Sub Flush
  overload: Discord.Audio.AudioStream.Flush*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Discord.Audio.AudioStream.Clear
  commentId: M:Discord.Audio.AudioStream.Clear
  id: Clear
  parent: Discord.Audio.AudioStream
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: AudioStream.Clear()
  fullName: Discord.Audio.AudioStream.Clear()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioStream.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Clear
    path: ../src/Discord.Net.Core/Audio/AudioStream.cs
    startLine: 24
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Discord.Audio.AudioStream.Clear*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Audio.AudioStream.ClearAsync(CancellationToken)
  commentId: M:Discord.Audio.AudioStream.ClearAsync(CancellationToken)
  id: ClearAsync(CancellationToken)
  parent: Discord.Audio.AudioStream
  langs:
  - csharp
  - vb
  name: ClearAsync(CancellationToken)
  nameWithType: AudioStream.ClearAsync(CancellationToken)
  fullName: Discord.Audio.AudioStream.ClearAsync(CancellationToken)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioStream.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ClearAsync
    path: ../src/Discord.Net.Core/Audio/AudioStream.cs
    startLine: 29
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  syntax:
    content: public virtual Task ClearAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: CancellationToken
    return:
      type: Task
    content.vb: Public Overridable Function ClearAsync(cancellationToken As CancellationToken) As Task
  overload: Discord.Audio.AudioStream.ClearAsync*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Discord.Audio.AudioStream.Length
  commentId: P:Discord.Audio.AudioStream.Length
  id: Length
  parent: Discord.Audio.AudioStream
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: AudioStream.Length
  fullName: Discord.Audio.AudioStream.Length
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioStream.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Length
    path: ../src/Discord.Net.Core/Audio/AudioStream.cs
    startLine: 33
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  example: []
  syntax:
    content: public override long Length { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Overrides ReadOnly Property Length As Long
  overload: Discord.Audio.AudioStream.Length*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Discord.Audio.AudioStream.Position
  commentId: P:Discord.Audio.AudioStream.Position
  id: Position
  parent: Discord.Audio.AudioStream
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: AudioStream.Position
  fullName: Discord.Audio.AudioStream.Position
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioStream.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Position
    path: ../src/Discord.Net.Core/Audio/AudioStream.cs
    startLine: 38
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  example: []
  syntax:
    content: public override long Position { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Overrides Property Position As Long
  overload: Discord.Audio.AudioStream.Position*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Discord.Audio.AudioStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:Discord.Audio.AudioStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: Discord.Audio.AudioStream
  langs:
  - csharp
  - vb
  name: Read(Byte[], Int32, Int32)
  nameWithType: AudioStream.Read(Byte[], Int32, Int32)
  fullName: Discord.Audio.AudioStream.Read(System.Byte[], System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioStream.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Read
    path: ../src/Discord.Net.Core/Audio/AudioStream.cs
    startLine: 46
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  example: []
  syntax:
    content: public override int Read(byte[] buffer, int offset, int count)
    parameters:
    - id: buffer
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Overrides Function Read(buffer As Byte(), offset As Integer, count As Integer) As Integer
  overload: Discord.Audio.AudioStream.Read*
  nameWithType.vb: AudioStream.Read(Byte(), Int32, Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Discord.Audio.AudioStream.Read(System.Byte(), System.Int32, System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
- uid: Discord.Audio.AudioStream.SetLength(System.Int64)
  commentId: M:Discord.Audio.AudioStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: Discord.Audio.AudioStream
  langs:
  - csharp
  - vb
  name: SetLength(Int64)
  nameWithType: AudioStream.SetLength(Int64)
  fullName: Discord.Audio.AudioStream.SetLength(System.Int64)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioStream.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: SetLength
    path: ../src/Discord.Net.Core/Audio/AudioStream.cs
    startLine: 50
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  example: []
  syntax:
    content: public override void SetLength(long value)
    parameters:
    - id: value
      type: System.Int64
    content.vb: Public Overrides Sub SetLength(value As Long)
  overload: Discord.Audio.AudioStream.SetLength*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Discord.Audio.AudioStream.Seek(System.Int64,SeekOrigin)
  commentId: M:Discord.Audio.AudioStream.Seek(System.Int64,SeekOrigin)
  id: Seek(System.Int64,SeekOrigin)
  parent: Discord.Audio.AudioStream
  langs:
  - csharp
  - vb
  name: Seek(Int64, SeekOrigin)
  nameWithType: AudioStream.Seek(Int64, SeekOrigin)
  fullName: Discord.Audio.AudioStream.Seek(System.Int64, SeekOrigin)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Audio/AudioStream.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Seek
    path: ../src/Discord.Net.Core/Audio/AudioStream.cs
    startLine: 54
  assemblies:
  - Discord.Net.Core
  namespace: Discord.Audio
  example: []
  syntax:
    content: public override long Seek(long offset, SeekOrigin origin)
    parameters:
    - id: offset
      type: System.Int64
    - id: origin
      type: SeekOrigin
    return:
      type: System.Int64
    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long
  overload: Discord.Audio.AudioStream.Seek*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Discord.Audio
  commentId: N:Discord.Audio
  name: Discord.Audio
  nameWithType: Discord.Audio
  fullName: Discord.Audio
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Audio.AudioStream.CanRead*
  commentId: Overload:Discord.Audio.AudioStream.CanRead
  name: CanRead
  nameWithType: AudioStream.CanRead
  fullName: Discord.Audio.AudioStream.CanRead
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.Audio.AudioStream.CanSeek*
  commentId: Overload:Discord.Audio.AudioStream.CanSeek
  name: CanSeek
  nameWithType: AudioStream.CanSeek
  fullName: Discord.Audio.AudioStream.CanSeek
- uid: Discord.Audio.AudioStream.CanWrite*
  commentId: Overload:Discord.Audio.AudioStream.CanWrite
  name: CanWrite
  nameWithType: AudioStream.CanWrite
  fullName: Discord.Audio.AudioStream.CanWrite
- uid: Discord.Audio.AudioStream.WriteHeader*
  commentId: Overload:Discord.Audio.AudioStream.WriteHeader
  name: WriteHeader
  nameWithType: AudioStream.WriteHeader
  fullName: Discord.Audio.AudioStream.WriteHeader
- uid: System.UInt16
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: System.UInt32
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: Discord.Audio.AudioStream.Write*
  commentId: Overload:Discord.Audio.AudioStream.Write
  name: Write
  nameWithType: AudioStream.Write
  fullName: Discord.Audio.AudioStream.Write
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Discord.Audio.AudioStream.Flush*
  commentId: Overload:Discord.Audio.AudioStream.Flush
  name: Flush
  nameWithType: AudioStream.Flush
  fullName: Discord.Audio.AudioStream.Flush
- uid: Discord.Audio.AudioStream.Clear*
  commentId: Overload:Discord.Audio.AudioStream.Clear
  name: Clear
  nameWithType: AudioStream.Clear
  fullName: Discord.Audio.AudioStream.Clear
- uid: Discord.Audio.AudioStream.ClearAsync*
  commentId: Overload:Discord.Audio.AudioStream.ClearAsync
  name: ClearAsync
  nameWithType: AudioStream.ClearAsync
  fullName: Discord.Audio.AudioStream.ClearAsync
- uid: CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: CancellationToken
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Discord.Audio.AudioStream.Length*
  commentId: Overload:Discord.Audio.AudioStream.Length
  name: Length
  nameWithType: AudioStream.Length
  fullName: Discord.Audio.AudioStream.Length
- uid: System.Int64
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Discord.Audio.AudioStream.Position*
  commentId: Overload:Discord.Audio.AudioStream.Position
  name: Position
  nameWithType: AudioStream.Position
  fullName: Discord.Audio.AudioStream.Position
- uid: Discord.Audio.AudioStream.Read*
  commentId: Overload:Discord.Audio.AudioStream.Read
  name: Read
  nameWithType: AudioStream.Read
  fullName: Discord.Audio.AudioStream.Read
- uid: Discord.Audio.AudioStream.SetLength*
  commentId: Overload:Discord.Audio.AudioStream.SetLength
  name: SetLength
  nameWithType: AudioStream.SetLength
  fullName: Discord.Audio.AudioStream.SetLength
- uid: Discord.Audio.AudioStream.Seek*
  commentId: Overload:Discord.Audio.AudioStream.Seek
  name: Seek
  nameWithType: AudioStream.Seek
  fullName: Discord.Audio.AudioStream.Seek
- uid: SeekOrigin
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: SeekOrigin
