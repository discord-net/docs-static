### YamlMime:ManagedReference
items:
- uid: Discord.Commands.CommandException
  commentId: T:Discord.Commands.CommandException
  id: CommandException
  parent: Discord.Commands
  children:
  - Discord.Commands.CommandException.#ctor(Discord.Commands.CommandInfo,Discord.Commands.ICommandContext,System.Exception)
  - Discord.Commands.CommandException.Command
  - Discord.Commands.CommandException.Context
  langs:
  - csharp
  - vb
  name: CommandException
  nameWithType: CommandException
  fullName: Discord.Commands.CommandException
  type: Class
  source:
    remote:
      path: src/Discord.Net.Commands/CommandException.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: CommandException
    path: ../src/Discord.Net.Commands/CommandException.cs
    startLine: 7
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nThe exception that is thrown if another exception occurs during a command execution.\n"
  example: []
  syntax:
    content: 'public class CommandException : Exception'
    content.vb: >-
      Public Class CommandException
          Inherits Exception
  inheritance:
  - System.Object
  - System.Exception
  inheritedMembers:
  - System.Exception.GetBaseException
  - System.Exception.ToString
  - System.Exception.Data
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Commands.CommandException.Command
  commentId: P:Discord.Commands.CommandException.Command
  id: Command
  parent: Discord.Commands.CommandException
  langs:
  - csharp
  - vb
  name: Command
  nameWithType: CommandException.Command
  fullName: Discord.Commands.CommandException.Command
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/CommandException.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Command
    path: ../src/Discord.Net.Commands/CommandException.cs
    startLine: 10
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: 'Gets the command that caused the exception. '
  example: []
  syntax:
    content: public CommandInfo Command { get; }
    parameters: []
    return:
      type: Discord.Commands.CommandInfo
    content.vb: Public ReadOnly Property Command As CommandInfo
  overload: Discord.Commands.CommandException.Command*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.CommandException.Context
  commentId: P:Discord.Commands.CommandException.Context
  id: Context
  parent: Discord.Commands.CommandException
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: CommandException.Context
  fullName: Discord.Commands.CommandException.Context
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/CommandException.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Context
    path: ../src/Discord.Net.Commands/CommandException.cs
    startLine: 12
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: 'Gets the command context of the exception. '
  example: []
  syntax:
    content: public ICommandContext Context { get; }
    parameters: []
    return:
      type: Discord.Commands.ICommandContext
    content.vb: Public ReadOnly Property Context As ICommandContext
  overload: Discord.Commands.CommandException.Context*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.CommandException.#ctor(Discord.Commands.CommandInfo,Discord.Commands.ICommandContext,System.Exception)
  commentId: M:Discord.Commands.CommandException.#ctor(Discord.Commands.CommandInfo,Discord.Commands.ICommandContext,System.Exception)
  id: '#ctor(Discord.Commands.CommandInfo,Discord.Commands.ICommandContext,System.Exception)'
  parent: Discord.Commands.CommandException
  langs:
  - csharp
  - vb
  name: CommandException(CommandInfo, ICommandContext, Exception)
  nameWithType: CommandException.CommandException(CommandInfo, ICommandContext, Exception)
  fullName: Discord.Commands.CommandException.CommandException(Discord.Commands.CommandInfo, Discord.Commands.ICommandContext, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/Discord.Net.Commands/CommandException.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: .ctor
    path: ../src/Discord.Net.Commands/CommandException.cs
    startLine: 22
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nInitializes a new instance of the <xref href=\"Discord.Commands.CommandException\" data-throw-if-not-resolved=\"false\"></xref> class using a\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">command</code> information, a <code data-dev-comment-type=\"paramref\" class=\"paramref\">command</code> context, and the exception that\ninterrupted the execution.\n"
  example: []
  syntax:
    content: public CommandException(CommandInfo command, ICommandContext context, Exception ex)
    parameters:
    - id: command
      type: Discord.Commands.CommandInfo
      description: The command information.
    - id: context
      type: Discord.Commands.ICommandContext
      description: The context of the command.
    - id: ex
      type: System.Exception
      description: The exception that interrupted the command execution.
    content.vb: Public Sub New(command As CommandInfo, context As ICommandContext, ex As Exception)
  overload: Discord.Commands.CommandException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Discord.Commands
  commentId: N:Discord.Commands
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Exception.GetBaseException
  commentId: M:System.Exception.GetBaseException
  parent: System.Exception
  isExternal: true
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: System.Exception.GetBaseException()
  spec.csharp:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.GetBaseException
    name: GetBaseException
    nameWithType: Exception.GetBaseException
    fullName: System.Exception.GetBaseException
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.ToString
  commentId: M:System.Exception.ToString
  parent: System.Exception
  isExternal: true
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: System.Exception.ToString()
  spec.csharp:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Exception.ToString
    name: ToString
    nameWithType: Exception.ToString
    fullName: System.Exception.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception.Data
  commentId: P:System.Exception.Data
  parent: System.Exception
  isExternal: true
  name: Data
  nameWithType: Exception.Data
  fullName: System.Exception.Data
- uid: System.Exception.HelpLink
  commentId: P:System.Exception.HelpLink
  parent: System.Exception
  isExternal: true
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: System.Exception.HelpLink
- uid: System.Exception.HResult
  commentId: P:System.Exception.HResult
  parent: System.Exception
  isExternal: true
  name: HResult
  nameWithType: Exception.HResult
  fullName: System.Exception.HResult
- uid: System.Exception.InnerException
  commentId: P:System.Exception.InnerException
  parent: System.Exception
  isExternal: true
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: System.Exception.InnerException
- uid: System.Exception.Message
  commentId: P:System.Exception.Message
  parent: System.Exception
  isExternal: true
  name: Message
  nameWithType: Exception.Message
  fullName: System.Exception.Message
- uid: System.Exception.Source
  commentId: P:System.Exception.Source
  parent: System.Exception
  isExternal: true
  name: Source
  nameWithType: Exception.Source
  fullName: System.Exception.Source
- uid: System.Exception.StackTrace
  commentId: P:System.Exception.StackTrace
  parent: System.Exception
  isExternal: true
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: System.Exception.StackTrace
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Commands.CommandException.Command*
  commentId: Overload:Discord.Commands.CommandException.Command
  name: Command
  nameWithType: CommandException.Command
  fullName: Discord.Commands.CommandException.Command
- uid: Discord.Commands.CommandInfo
  commentId: T:Discord.Commands.CommandInfo
  parent: Discord.Commands
  name: CommandInfo
  nameWithType: CommandInfo
  fullName: Discord.Commands.CommandInfo
- uid: Discord.Commands.CommandException.Context*
  commentId: Overload:Discord.Commands.CommandException.Context
  name: Context
  nameWithType: CommandException.Context
  fullName: Discord.Commands.CommandException.Context
- uid: Discord.Commands.ICommandContext
  commentId: T:Discord.Commands.ICommandContext
  parent: Discord.Commands
  name: ICommandContext
  nameWithType: ICommandContext
  fullName: Discord.Commands.ICommandContext
- uid: Discord.Commands.CommandException
  commentId: T:Discord.Commands.CommandException
  name: CommandException
  nameWithType: CommandException
  fullName: Discord.Commands.CommandException
- uid: Discord.Commands.CommandException.#ctor*
  commentId: Overload:Discord.Commands.CommandException.#ctor
  name: CommandException
  nameWithType: CommandException.CommandException
  fullName: Discord.Commands.CommandException.CommandException
