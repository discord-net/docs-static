### YamlMime:ManagedReference
items:
- uid: Discord.CDN
  commentId: T:Discord.CDN
  id: CDN
  parent: Discord
  children:
  - Discord.CDN.GetApplicationIconUrl(System.UInt64,System.String)
  - Discord.CDN.GetChannelIconUrl(System.UInt64,System.String)
  - Discord.CDN.GetDefaultUserAvatarUrl(System.UInt16)
  - Discord.CDN.GetEmojiUrl(System.UInt64,System.Boolean)
  - Discord.CDN.GetGuildBannerUrl(System.UInt64,System.String,System.Nullable{System.UInt16})
  - Discord.CDN.GetGuildIconUrl(System.UInt64,System.String)
  - Discord.CDN.GetGuildSplashUrl(System.UInt64,System.String)
  - Discord.CDN.GetRichAssetUrl(System.UInt64,System.String,System.UInt16,Discord.ImageFormat)
  - Discord.CDN.GetSpotifyAlbumArtUrl(System.String)
  - Discord.CDN.GetSpotifyDirectUrl(System.String)
  - Discord.CDN.GetUserAvatarUrl(System.UInt64,System.String,System.UInt16,Discord.ImageFormat)
  langs:
  - csharp
  - vb
  name: CDN
  nameWithType: CDN
  fullName: Discord.CDN
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/CDN.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: CDN
    path: ../src/Discord.Net.Core/CDN.cs
    startLine: 7
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nRepresents a class containing the strings related to various Content Delivery Networks (CDNs).\n"
  example: []
  syntax:
    content: public static class CDN
    content.vb: Public Module CDN
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Discord.CDN.GetApplicationIconUrl(System.UInt64,System.String)
  commentId: M:Discord.CDN.GetApplicationIconUrl(System.UInt64,System.String)
  id: GetApplicationIconUrl(System.UInt64,System.String)
  parent: Discord.CDN
  langs:
  - csharp
  - vb
  name: GetApplicationIconUrl(UInt64, String)
  nameWithType: CDN.GetApplicationIconUrl(UInt64, String)
  fullName: Discord.CDN.GetApplicationIconUrl(System.UInt64, System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/CDN.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetApplicationIconUrl
    path: ../src/Discord.Net.Core/CDN.cs
    startLine: 17
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns an application icon URL.\n"
  example: []
  syntax:
    content: public static string GetApplicationIconUrl(ulong appId, string iconId)
    parameters:
    - id: appId
      type: System.UInt64
      description: The application identifier.
    - id: iconId
      type: System.String
      description: The icon identifier.
    return:
      type: System.String
      description: "\nA URL pointing to the application&apos;s icon.\n"
    content.vb: Public Shared Function GetApplicationIconUrl(appId As ULong, iconId As String) As String
  overload: Discord.CDN.GetApplicationIconUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.CDN.GetUserAvatarUrl(System.UInt64,System.String,System.UInt16,Discord.ImageFormat)
  commentId: M:Discord.CDN.GetUserAvatarUrl(System.UInt64,System.String,System.UInt16,Discord.ImageFormat)
  id: GetUserAvatarUrl(System.UInt64,System.String,System.UInt16,Discord.ImageFormat)
  parent: Discord.CDN
  langs:
  - csharp
  - vb
  name: GetUserAvatarUrl(UInt64, String, UInt16, ImageFormat)
  nameWithType: CDN.GetUserAvatarUrl(UInt64, String, UInt16, ImageFormat)
  fullName: Discord.CDN.GetUserAvatarUrl(System.UInt64, System.String, System.UInt16, Discord.ImageFormat)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/CDN.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetUserAvatarUrl
    path: ../src/Discord.Net.Core/CDN.cs
    startLine: 30
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns a user avatar URL.\n"
  example: []
  syntax:
    content: public static string GetUserAvatarUrl(ulong userId, string avatarId, ushort size, ImageFormat format)
    parameters:
    - id: userId
      type: System.UInt64
      description: The user snowflake identifier.
    - id: avatarId
      type: System.String
      description: The avatar identifier.
    - id: size
      type: System.UInt16
      description: The size of the image to return in horizontal pixels. This can be any power of two between 16 and 2048.
    - id: format
      type: Discord.ImageFormat
      description: The format to return.
    return:
      type: System.String
      description: "\nA URL pointing to the user&apos;s avatar in the specified size.\n"
    content.vb: Public Shared Function GetUserAvatarUrl(userId As ULong, avatarId As String, size As UShort, format As ImageFormat) As String
  overload: Discord.CDN.GetUserAvatarUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.CDN.GetDefaultUserAvatarUrl(System.UInt16)
  commentId: M:Discord.CDN.GetDefaultUserAvatarUrl(System.UInt16)
  id: GetDefaultUserAvatarUrl(System.UInt16)
  parent: Discord.CDN
  langs:
  - csharp
  - vb
  name: GetDefaultUserAvatarUrl(UInt16)
  nameWithType: CDN.GetDefaultUserAvatarUrl(UInt16)
  fullName: Discord.CDN.GetDefaultUserAvatarUrl(System.UInt16)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/CDN.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetDefaultUserAvatarUrl
    path: ../src/Discord.Net.Core/CDN.cs
    startLine: 44
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the default user avatar URL.\n"
  example: []
  syntax:
    content: public static string GetDefaultUserAvatarUrl(ushort discriminator)
    parameters:
    - id: discriminator
      type: System.UInt16
      description: The discriminator value of a user.
    return:
      type: System.String
      description: "\nA URL pointing to the user&apos;s default avatar when one isn&apos;t set.\n"
    content.vb: Public Shared Function GetDefaultUserAvatarUrl(discriminator As UShort) As String
  overload: Discord.CDN.GetDefaultUserAvatarUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.CDN.GetGuildIconUrl(System.UInt64,System.String)
  commentId: M:Discord.CDN.GetGuildIconUrl(System.UInt64,System.String)
  id: GetGuildIconUrl(System.UInt64,System.String)
  parent: Discord.CDN
  langs:
  - csharp
  - vb
  name: GetGuildIconUrl(UInt64, String)
  nameWithType: CDN.GetGuildIconUrl(UInt64, String)
  fullName: Discord.CDN.GetGuildIconUrl(System.UInt64, System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/CDN.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetGuildIconUrl
    path: ../src/Discord.Net.Core/CDN.cs
    startLine: 56
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns an icon URL.\n"
  example: []
  syntax:
    content: public static string GetGuildIconUrl(ulong guildId, string iconId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The guild snowflake identifier.
    - id: iconId
      type: System.String
      description: The icon identifier.
    return:
      type: System.String
      description: "\nA URL pointing to the guild&apos;s icon.\n"
    content.vb: Public Shared Function GetGuildIconUrl(guildId As ULong, iconId As String) As String
  overload: Discord.CDN.GetGuildIconUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.CDN.GetGuildSplashUrl(System.UInt64,System.String)
  commentId: M:Discord.CDN.GetGuildSplashUrl(System.UInt64,System.String)
  id: GetGuildSplashUrl(System.UInt64,System.String)
  parent: Discord.CDN
  langs:
  - csharp
  - vb
  name: GetGuildSplashUrl(UInt64, String)
  nameWithType: CDN.GetGuildSplashUrl(UInt64, String)
  fullName: Discord.CDN.GetGuildSplashUrl(System.UInt64, System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/CDN.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetGuildSplashUrl
    path: ../src/Discord.Net.Core/CDN.cs
    startLine: 66
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns a guild splash URL.\n"
  example: []
  syntax:
    content: public static string GetGuildSplashUrl(ulong guildId, string splashId)
    parameters:
    - id: guildId
      type: System.UInt64
      description: The guild snowflake identifier.
    - id: splashId
      type: System.String
      description: The splash icon identifier.
    return:
      type: System.String
      description: "\nA URL pointing to the guild&apos;s icon.\n"
    content.vb: Public Shared Function GetGuildSplashUrl(guildId As ULong, splashId As String) As String
  overload: Discord.CDN.GetGuildSplashUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.CDN.GetChannelIconUrl(System.UInt64,System.String)
  commentId: M:Discord.CDN.GetChannelIconUrl(System.UInt64,System.String)
  id: GetChannelIconUrl(System.UInt64,System.String)
  parent: Discord.CDN
  langs:
  - csharp
  - vb
  name: GetChannelIconUrl(UInt64, String)
  nameWithType: CDN.GetChannelIconUrl(UInt64, String)
  fullName: Discord.CDN.GetChannelIconUrl(System.UInt64, System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/CDN.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetChannelIconUrl
    path: ../src/Discord.Net.Core/CDN.cs
    startLine: 76
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns a channel icon URL.\n"
  example: []
  syntax:
    content: public static string GetChannelIconUrl(ulong channelId, string iconId)
    parameters:
    - id: channelId
      type: System.UInt64
      description: The channel snowflake identifier.
    - id: iconId
      type: System.String
      description: The icon identifier.
    return:
      type: System.String
      description: "\nA URL pointing to the channel&apos;s icon.\n"
    content.vb: Public Shared Function GetChannelIconUrl(channelId As ULong, iconId As String) As String
  overload: Discord.CDN.GetChannelIconUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.CDN.GetGuildBannerUrl(System.UInt64,System.String,System.Nullable{System.UInt16})
  commentId: M:Discord.CDN.GetGuildBannerUrl(System.UInt64,System.String,System.Nullable{System.UInt16})
  id: GetGuildBannerUrl(System.UInt64,System.String,System.Nullable{System.UInt16})
  parent: Discord.CDN
  langs:
  - csharp
  - vb
  name: GetGuildBannerUrl(UInt64, String, Nullable<UInt16>)
  nameWithType: CDN.GetGuildBannerUrl(UInt64, String, Nullable<UInt16>)
  fullName: Discord.CDN.GetGuildBannerUrl(System.UInt64, System.String, System.Nullable<System.UInt16>)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/CDN.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetGuildBannerUrl
    path: ../src/Discord.Net.Core/CDN.cs
    startLine: 88
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns a guild banner URL.\n"
  example: []
  syntax:
    content: public static string GetGuildBannerUrl(ulong guildId, string bannerId, ushort? size = default(ushort? ))
    parameters:
    - id: guildId
      type: System.UInt64
      description: The guild snowflake identifier.
    - id: bannerId
      type: System.String
      description: The banner image identifier.
    - id: size
      type: System.Nullable{System.UInt16}
      description: The size of the image to return in horizontal pixels. This can be any power of two between 16 and 2048 inclusive.
    return:
      type: System.String
      description: "\nA URL pointing to the guild&apos;s banner image.\n"
    content.vb: Public Shared Function GetGuildBannerUrl(guildId As ULong, bannerId As String, size As UShort? = Nothing) As String
  overload: Discord.CDN.GetGuildBannerUrl*
  nameWithType.vb: CDN.GetGuildBannerUrl(UInt64, String, Nullable(Of UInt16))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.CDN.GetGuildBannerUrl(System.UInt64, System.String, System.Nullable(Of System.UInt16))
  name.vb: GetGuildBannerUrl(UInt64, String, Nullable(Of UInt16))
- uid: Discord.CDN.GetEmojiUrl(System.UInt64,System.Boolean)
  commentId: M:Discord.CDN.GetEmojiUrl(System.UInt64,System.Boolean)
  id: GetEmojiUrl(System.UInt64,System.Boolean)
  parent: Discord.CDN
  langs:
  - csharp
  - vb
  name: GetEmojiUrl(UInt64, Boolean)
  nameWithType: CDN.GetEmojiUrl(UInt64, Boolean)
  fullName: Discord.CDN.GetEmojiUrl(System.UInt64, System.Boolean)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/CDN.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetEmojiUrl
    path: ../src/Discord.Net.Core/CDN.cs
    startLine: 102
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns an emoji URL.\n"
  example: []
  syntax:
    content: public static string GetEmojiUrl(ulong emojiId, bool animated)
    parameters:
    - id: emojiId
      type: System.UInt64
      description: The emoji snowflake identifier.
    - id: animated
      type: System.Boolean
      description: Whether this emoji is animated.
    return:
      type: System.String
      description: "\nA URL pointing to the custom emote.\n"
    content.vb: Public Shared Function GetEmojiUrl(emojiId As ULong, animated As Boolean) As String
  overload: Discord.CDN.GetEmojiUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.CDN.GetRichAssetUrl(System.UInt64,System.String,System.UInt16,Discord.ImageFormat)
  commentId: M:Discord.CDN.GetRichAssetUrl(System.UInt64,System.String,System.UInt16,Discord.ImageFormat)
  id: GetRichAssetUrl(System.UInt64,System.String,System.UInt16,Discord.ImageFormat)
  parent: Discord.CDN
  langs:
  - csharp
  - vb
  name: GetRichAssetUrl(UInt64, String, UInt16, ImageFormat)
  nameWithType: CDN.GetRichAssetUrl(UInt64, String, UInt16, ImageFormat)
  fullName: Discord.CDN.GetRichAssetUrl(System.UInt64, System.String, System.UInt16, Discord.ImageFormat)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/CDN.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetRichAssetUrl
    path: ../src/Discord.Net.Core/CDN.cs
    startLine: 115
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns a Rich Presence asset URL.\n"
  example: []
  syntax:
    content: public static string GetRichAssetUrl(ulong appId, string assetId, ushort size, ImageFormat format)
    parameters:
    - id: appId
      type: System.UInt64
      description: The application identifier.
    - id: assetId
      type: System.String
      description: The asset identifier.
    - id: size
      type: System.UInt16
      description: The size of the image to return in. This can be any power of two between 16 and 2048.
    - id: format
      type: Discord.ImageFormat
      description: The format to return.
    return:
      type: System.String
      description: "\nA URL pointing to the asset image in the specified size.\n"
    content.vb: Public Shared Function GetRichAssetUrl(appId As ULong, assetId As String, size As UShort, format As ImageFormat) As String
  overload: Discord.CDN.GetRichAssetUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.CDN.GetSpotifyAlbumArtUrl(System.String)
  commentId: M:Discord.CDN.GetSpotifyAlbumArtUrl(System.String)
  id: GetSpotifyAlbumArtUrl(System.String)
  parent: Discord.CDN
  langs:
  - csharp
  - vb
  name: GetSpotifyAlbumArtUrl(String)
  nameWithType: CDN.GetSpotifyAlbumArtUrl(String)
  fullName: Discord.CDN.GetSpotifyAlbumArtUrl(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/CDN.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetSpotifyAlbumArtUrl
    path: ../src/Discord.Net.Core/CDN.cs
    startLine: 128
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns a Spotify album URL.\n"
  example: []
  syntax:
    content: public static string GetSpotifyAlbumArtUrl(string albumArtId)
    parameters:
    - id: albumArtId
      type: System.String
      description: The identifier for the album art (e.g. 6be8f4c8614ecf4f1dd3ebba8d8692d8ce4951ac).
    return:
      type: System.String
      description: "\nA URL pointing to the Spotify album art.\n"
    content.vb: Public Shared Function GetSpotifyAlbumArtUrl(albumArtId As String) As String
  overload: Discord.CDN.GetSpotifyAlbumArtUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.CDN.GetSpotifyDirectUrl(System.String)
  commentId: M:Discord.CDN.GetSpotifyDirectUrl(System.String)
  id: GetSpotifyDirectUrl(System.String)
  parent: Discord.CDN
  langs:
  - csharp
  - vb
  name: GetSpotifyDirectUrl(String)
  nameWithType: CDN.GetSpotifyDirectUrl(String)
  fullName: Discord.CDN.GetSpotifyDirectUrl(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/CDN.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetSpotifyDirectUrl
    path: ../src/Discord.Net.Core/CDN.cs
    startLine: 137
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns a Spotify direct URL for a track.\n"
  example: []
  syntax:
    content: public static string GetSpotifyDirectUrl(string trackId)
    parameters:
    - id: trackId
      type: System.String
      description: The identifier for the track (e.g. 4uLU6hMCjMI75M1A2tKUQC).
    return:
      type: System.String
      description: "\nA URL pointing to the Spotify track.\n"
    content.vb: Public Shared Function GetSpotifyDirectUrl(trackId As String) As String
  overload: Discord.CDN.GetSpotifyDirectUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.CDN.GetApplicationIconUrl*
  commentId: Overload:Discord.CDN.GetApplicationIconUrl
  name: GetApplicationIconUrl
  nameWithType: CDN.GetApplicationIconUrl
  fullName: Discord.CDN.GetApplicationIconUrl
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.CDN.GetUserAvatarUrl*
  commentId: Overload:Discord.CDN.GetUserAvatarUrl
  name: GetUserAvatarUrl
  nameWithType: CDN.GetUserAvatarUrl
  fullName: Discord.CDN.GetUserAvatarUrl
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Discord.ImageFormat
  commentId: T:Discord.ImageFormat
  parent: Discord
  name: ImageFormat
  nameWithType: ImageFormat
  fullName: Discord.ImageFormat
- uid: Discord.CDN.GetDefaultUserAvatarUrl*
  commentId: Overload:Discord.CDN.GetDefaultUserAvatarUrl
  name: GetDefaultUserAvatarUrl
  nameWithType: CDN.GetDefaultUserAvatarUrl
  fullName: Discord.CDN.GetDefaultUserAvatarUrl
- uid: Discord.CDN.GetGuildIconUrl*
  commentId: Overload:Discord.CDN.GetGuildIconUrl
  name: GetGuildIconUrl
  nameWithType: CDN.GetGuildIconUrl
  fullName: Discord.CDN.GetGuildIconUrl
- uid: Discord.CDN.GetGuildSplashUrl*
  commentId: Overload:Discord.CDN.GetGuildSplashUrl
  name: GetGuildSplashUrl
  nameWithType: CDN.GetGuildSplashUrl
  fullName: Discord.CDN.GetGuildSplashUrl
- uid: Discord.CDN.GetChannelIconUrl*
  commentId: Overload:Discord.CDN.GetChannelIconUrl
  name: GetChannelIconUrl
  nameWithType: CDN.GetChannelIconUrl
  fullName: Discord.CDN.GetChannelIconUrl
- uid: Discord.CDN.GetGuildBannerUrl*
  commentId: Overload:Discord.CDN.GetGuildBannerUrl
  name: GetGuildBannerUrl
  nameWithType: CDN.GetGuildBannerUrl
  fullName: Discord.CDN.GetGuildBannerUrl
- uid: System.Nullable{System.UInt16}
  commentId: T:System.Nullable{System.UInt16}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UInt16>
  nameWithType: Nullable<UInt16>
  fullName: System.Nullable<System.UInt16>
  nameWithType.vb: Nullable(Of UInt16)
  fullName.vb: System.Nullable(Of System.UInt16)
  name.vb: Nullable(Of UInt16)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.CDN.GetEmojiUrl*
  commentId: Overload:Discord.CDN.GetEmojiUrl
  name: GetEmojiUrl
  nameWithType: CDN.GetEmojiUrl
  fullName: Discord.CDN.GetEmojiUrl
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.CDN.GetRichAssetUrl*
  commentId: Overload:Discord.CDN.GetRichAssetUrl
  name: GetRichAssetUrl
  nameWithType: CDN.GetRichAssetUrl
  fullName: Discord.CDN.GetRichAssetUrl
- uid: Discord.CDN.GetSpotifyAlbumArtUrl*
  commentId: Overload:Discord.CDN.GetSpotifyAlbumArtUrl
  name: GetSpotifyAlbumArtUrl
  nameWithType: CDN.GetSpotifyAlbumArtUrl
  fullName: Discord.CDN.GetSpotifyAlbumArtUrl
- uid: Discord.CDN.GetSpotifyDirectUrl*
  commentId: Overload:Discord.CDN.GetSpotifyDirectUrl
  name: GetSpotifyDirectUrl
  nameWithType: CDN.GetSpotifyDirectUrl
  fullName: Discord.CDN.GetSpotifyDirectUrl
