### YamlMime:ManagedReference
items:
- uid: Discord.EmbedBuilderExtensions
  commentId: T:Discord.EmbedBuilderExtensions
  id: EmbedBuilderExtensions
  parent: Discord
  children:
  - Discord.EmbedBuilderExtensions.ToEmbedBuilder(Discord.IEmbed)
  - Discord.EmbedBuilderExtensions.WithAuthor(Discord.EmbedBuilder,Discord.IUser)
  - Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Byte,System.Byte,System.Byte)
  - Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Int32,System.Int32,System.Int32)
  - Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Single,System.Single,System.Single)
  - Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.UInt32)
  - Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder,Discord.EmbedFieldBuilder[])
  - Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder,System.Collections.Generic.IEnumerable{Discord.EmbedFieldBuilder})
  langs:
  - csharp
  - vb
  name: EmbedBuilderExtensions
  nameWithType: EmbedBuilderExtensions
  fullName: Discord.EmbedBuilderExtensions
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Extensions/EmbedBuilderExtensions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: EmbedBuilderExtensions
    path: ../src/Discord.Net.Core/Extensions/EmbedBuilderExtensions.cs
    startLine: 7
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'An extension class for building an embed. '
  example: []
  syntax:
    content: public static class EmbedBuilderExtensions
    content.vb: Public Module EmbedBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.UInt32)
  commentId: M:Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.UInt32)
  id: WithColor(Discord.EmbedBuilder,System.UInt32)
  isExtensionMethod: true
  parent: Discord.EmbedBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithColor(EmbedBuilder, UInt32)
  nameWithType: EmbedBuilderExtensions.WithColor(EmbedBuilder, UInt32)
  fullName: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder, System.UInt32)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Extensions/EmbedBuilderExtensions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithColor
    path: ../src/Discord.Net.Core/Extensions/EmbedBuilderExtensions.cs
    startLine: 10
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Adds embed color based on the provided raw value. '
  example: []
  syntax:
    content: public static EmbedBuilder WithColor(this EmbedBuilder builder, uint rawValue)
    parameters:
    - id: builder
      type: Discord.EmbedBuilder
    - id: rawValue
      type: System.UInt32
    return:
      type: Discord.EmbedBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithColor(builder As EmbedBuilder, rawValue As UInteger) As EmbedBuilder
  overload: Discord.EmbedBuilderExtensions.WithColor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Byte,System.Byte,System.Byte)
  commentId: M:Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Byte,System.Byte,System.Byte)
  id: WithColor(Discord.EmbedBuilder,System.Byte,System.Byte,System.Byte)
  isExtensionMethod: true
  parent: Discord.EmbedBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithColor(EmbedBuilder, Byte, Byte, Byte)
  nameWithType: EmbedBuilderExtensions.WithColor(EmbedBuilder, Byte, Byte, Byte)
  fullName: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder, System.Byte, System.Byte, System.Byte)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Extensions/EmbedBuilderExtensions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithColor
    path: ../src/Discord.Net.Core/Extensions/EmbedBuilderExtensions.cs
    startLine: 14
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Adds embed color based on the provided RGB <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> value. '
  example: []
  syntax:
    content: public static EmbedBuilder WithColor(this EmbedBuilder builder, byte r, byte g, byte b)
    parameters:
    - id: builder
      type: Discord.EmbedBuilder
    - id: r
      type: System.Byte
    - id: g
      type: System.Byte
    - id: b
      type: System.Byte
    return:
      type: Discord.EmbedBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithColor(builder As EmbedBuilder, r As Byte, g As Byte, b As Byte) As EmbedBuilder
  overload: Discord.EmbedBuilderExtensions.WithColor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Int32,System.Int32,System.Int32)
  commentId: M:Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Int32,System.Int32,System.Int32)
  id: WithColor(Discord.EmbedBuilder,System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: Discord.EmbedBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithColor(EmbedBuilder, Int32, Int32, Int32)
  nameWithType: EmbedBuilderExtensions.WithColor(EmbedBuilder, Int32, Int32, Int32)
  fullName: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Extensions/EmbedBuilderExtensions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithColor
    path: ../src/Discord.Net.Core/Extensions/EmbedBuilderExtensions.cs
    startLine: 19
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Adds embed color based on the provided RGB <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> value. '
  example: []
  syntax:
    content: public static EmbedBuilder WithColor(this EmbedBuilder builder, int r, int g, int b)
    parameters:
    - id: builder
      type: Discord.EmbedBuilder
    - id: r
      type: System.Int32
    - id: g
      type: System.Int32
    - id: b
      type: System.Int32
    return:
      type: Discord.EmbedBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithColor(builder As EmbedBuilder, r As Integer, g As Integer, b As Integer) As EmbedBuilder
  overload: Discord.EmbedBuilderExtensions.WithColor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The argument value is not between 0 to 255.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Single,System.Single,System.Single)
  commentId: M:Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder,System.Single,System.Single,System.Single)
  id: WithColor(Discord.EmbedBuilder,System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: Discord.EmbedBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithColor(EmbedBuilder, Single, Single, Single)
  nameWithType: EmbedBuilderExtensions.WithColor(EmbedBuilder, Single, Single, Single)
  fullName: Discord.EmbedBuilderExtensions.WithColor(Discord.EmbedBuilder, System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Extensions/EmbedBuilderExtensions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithColor
    path: ../src/Discord.Net.Core/Extensions/EmbedBuilderExtensions.cs
    startLine: 24
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Adds embed color based on the provided RGB <xref href="System.Single" data-throw-if-not-resolved="false"></xref> value. '
  example: []
  syntax:
    content: public static EmbedBuilder WithColor(this EmbedBuilder builder, float r, float g, float b)
    parameters:
    - id: builder
      type: Discord.EmbedBuilder
    - id: r
      type: System.Single
    - id: g
      type: System.Single
    - id: b
      type: System.Single
    return:
      type: Discord.EmbedBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithColor(builder As EmbedBuilder, r As Single, g As Single, b As Single) As EmbedBuilder
  overload: Discord.EmbedBuilderExtensions.WithColor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The argument value is not between 0 to 1.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.EmbedBuilderExtensions.WithAuthor(Discord.EmbedBuilder,Discord.IUser)
  commentId: M:Discord.EmbedBuilderExtensions.WithAuthor(Discord.EmbedBuilder,Discord.IUser)
  id: WithAuthor(Discord.EmbedBuilder,Discord.IUser)
  isExtensionMethod: true
  parent: Discord.EmbedBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithAuthor(EmbedBuilder, IUser)
  nameWithType: EmbedBuilderExtensions.WithAuthor(EmbedBuilder, IUser)
  fullName: Discord.EmbedBuilderExtensions.WithAuthor(Discord.EmbedBuilder, Discord.IUser)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Extensions/EmbedBuilderExtensions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithAuthor
    path: ../src/Discord.Net.Core/Extensions/EmbedBuilderExtensions.cs
    startLine: 28
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Fills the embed author field with the provided user&apos;s full username and avatar URL. '
  example: []
  syntax:
    content: public static EmbedBuilder WithAuthor(this EmbedBuilder builder, IUser user)
    parameters:
    - id: builder
      type: Discord.EmbedBuilder
    - id: user
      type: Discord.IUser
    return:
      type: Discord.EmbedBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithAuthor(builder As EmbedBuilder, user As IUser) As EmbedBuilder
  overload: Discord.EmbedBuilderExtensions.WithAuthor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.EmbedBuilderExtensions.ToEmbedBuilder(Discord.IEmbed)
  commentId: M:Discord.EmbedBuilderExtensions.ToEmbedBuilder(Discord.IEmbed)
  id: ToEmbedBuilder(Discord.IEmbed)
  isExtensionMethod: true
  parent: Discord.EmbedBuilderExtensions
  langs:
  - csharp
  - vb
  name: ToEmbedBuilder(IEmbed)
  nameWithType: EmbedBuilderExtensions.ToEmbedBuilder(IEmbed)
  fullName: Discord.EmbedBuilderExtensions.ToEmbedBuilder(Discord.IEmbed)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Extensions/EmbedBuilderExtensions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ToEmbedBuilder
    path: ../src/Discord.Net.Core/Extensions/EmbedBuilderExtensions.cs
    startLine: 33
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Converts a <xref href="Discord.EmbedType.Rich" data-throw-if-not-resolved="false"></xref> <xref href="Discord.IEmbed" data-throw-if-not-resolved="false"></xref> object to a <xref href="Discord.EmbedBuilder" data-throw-if-not-resolved="false"></xref>. '
  example: []
  syntax:
    content: public static EmbedBuilder ToEmbedBuilder(this IEmbed embed)
    parameters:
    - id: embed
      type: Discord.IEmbed
    return:
      type: Discord.EmbedBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToEmbedBuilder(embed As IEmbed) As EmbedBuilder
  overload: Discord.EmbedBuilderExtensions.ToEmbedBuilder*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The embed type is not <xref href="Discord.EmbedType.Rich" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder,System.Collections.Generic.IEnumerable{Discord.EmbedFieldBuilder})
  commentId: M:Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder,System.Collections.Generic.IEnumerable{Discord.EmbedFieldBuilder})
  id: WithFields(Discord.EmbedBuilder,System.Collections.Generic.IEnumerable{Discord.EmbedFieldBuilder})
  isExtensionMethod: true
  parent: Discord.EmbedBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithFields(EmbedBuilder, IEnumerable<EmbedFieldBuilder>)
  nameWithType: EmbedBuilderExtensions.WithFields(EmbedBuilder, IEnumerable<EmbedFieldBuilder>)
  fullName: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder, System.Collections.Generic.IEnumerable<Discord.EmbedFieldBuilder>)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Extensions/EmbedBuilderExtensions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithFields
    path: ../src/Discord.Net.Core/Extensions/EmbedBuilderExtensions.cs
    startLine: 70
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nAdds the specified fields into this <xref href=\"Discord.EmbedBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static EmbedBuilder WithFields(this EmbedBuilder builder, IEnumerable<EmbedFieldBuilder> fields)
    parameters:
    - id: builder
      type: Discord.EmbedBuilder
    - id: fields
      type: System.Collections.Generic.IEnumerable{Discord.EmbedFieldBuilder}
    return:
      type: Discord.EmbedBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithFields(builder As EmbedBuilder, fields As IEnumerable(Of EmbedFieldBuilder)) As EmbedBuilder
  overload: Discord.EmbedBuilderExtensions.WithFields*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Field count exceeds <xref href="Discord.EmbedBuilder.MaxFieldCount" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: EmbedBuilderExtensions.WithFields(EmbedBuilder, IEnumerable(Of EmbedFieldBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder, System.Collections.Generic.IEnumerable(Of Discord.EmbedFieldBuilder))
  name.vb: WithFields(EmbedBuilder, IEnumerable(Of EmbedFieldBuilder))
- uid: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder,Discord.EmbedFieldBuilder[])
  commentId: M:Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder,Discord.EmbedFieldBuilder[])
  id: WithFields(Discord.EmbedBuilder,Discord.EmbedFieldBuilder[])
  isExtensionMethod: true
  parent: Discord.EmbedBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithFields(EmbedBuilder, EmbedFieldBuilder[])
  nameWithType: EmbedBuilderExtensions.WithFields(EmbedBuilder, EmbedFieldBuilder[])
  fullName: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder, Discord.EmbedFieldBuilder[])
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Extensions/EmbedBuilderExtensions.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithFields
    path: ../src/Discord.Net.Core/Extensions/EmbedBuilderExtensions.cs
    startLine: 80
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nAdds the specified fields into this <xref href=\"Discord.EmbedBuilder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static EmbedBuilder WithFields(this EmbedBuilder builder, params EmbedFieldBuilder[] fields)
    parameters:
    - id: builder
      type: Discord.EmbedBuilder
    - id: fields
      type: Discord.EmbedFieldBuilder[]
    return:
      type: Discord.EmbedBuilder
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithFields(builder As EmbedBuilder, ParamArray fields As EmbedFieldBuilder()) As EmbedBuilder
  overload: Discord.EmbedBuilderExtensions.WithFields*
  nameWithType.vb: EmbedBuilderExtensions.WithFields(EmbedBuilder, EmbedFieldBuilder())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.EmbedBuilderExtensions.WithFields(Discord.EmbedBuilder, Discord.EmbedFieldBuilder())
  name.vb: WithFields(EmbedBuilder, EmbedFieldBuilder())
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.EmbedBuilderExtensions.WithColor*
  commentId: Overload:Discord.EmbedBuilderExtensions.WithColor
  name: WithColor
  nameWithType: EmbedBuilderExtensions.WithColor
  fullName: Discord.EmbedBuilderExtensions.WithColor
- uid: Discord.EmbedBuilder
  commentId: T:Discord.EmbedBuilder
  parent: Discord
  name: EmbedBuilder
  nameWithType: EmbedBuilder
  fullName: Discord.EmbedBuilder
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Discord.EmbedBuilderExtensions.WithAuthor*
  commentId: Overload:Discord.EmbedBuilderExtensions.WithAuthor
  name: WithAuthor
  nameWithType: EmbedBuilderExtensions.WithAuthor
  fullName: Discord.EmbedBuilderExtensions.WithAuthor
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord.EmbedType.Rich
  commentId: F:Discord.EmbedType.Rich
  isExternal: true
- uid: Discord.IEmbed
  commentId: T:Discord.IEmbed
  parent: Discord
  name: IEmbed
  nameWithType: IEmbed
  fullName: Discord.IEmbed
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: Discord.EmbedBuilderExtensions.ToEmbedBuilder*
  commentId: Overload:Discord.EmbedBuilderExtensions.ToEmbedBuilder
  name: ToEmbedBuilder
  nameWithType: EmbedBuilderExtensions.ToEmbedBuilder
  fullName: Discord.EmbedBuilderExtensions.ToEmbedBuilder
- uid: Discord.EmbedBuilder.MaxFieldCount
  commentId: F:Discord.EmbedBuilder.MaxFieldCount
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Discord.EmbedBuilderExtensions.WithFields*
  commentId: Overload:Discord.EmbedBuilderExtensions.WithFields
  name: WithFields
  nameWithType: EmbedBuilderExtensions.WithFields
  fullName: Discord.EmbedBuilderExtensions.WithFields
- uid: System.Collections.Generic.IEnumerable{Discord.EmbedFieldBuilder}
  commentId: T:System.Collections.Generic.IEnumerable{Discord.EmbedFieldBuilder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<EmbedFieldBuilder>
  nameWithType: IEnumerable<EmbedFieldBuilder>
  fullName: System.Collections.Generic.IEnumerable<Discord.EmbedFieldBuilder>
  nameWithType.vb: IEnumerable(Of EmbedFieldBuilder)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Discord.EmbedFieldBuilder)
  name.vb: IEnumerable(Of EmbedFieldBuilder)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.EmbedFieldBuilder
    name: EmbedFieldBuilder
    nameWithType: EmbedFieldBuilder
    fullName: Discord.EmbedFieldBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.EmbedFieldBuilder
    name: EmbedFieldBuilder
    nameWithType: EmbedFieldBuilder
    fullName: Discord.EmbedFieldBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Discord.EmbedFieldBuilder[]
  isExternal: true
  name: EmbedFieldBuilder[]
  nameWithType: EmbedFieldBuilder[]
  fullName: Discord.EmbedFieldBuilder[]
  nameWithType.vb: EmbedFieldBuilder()
  fullName.vb: Discord.EmbedFieldBuilder()
  name.vb: EmbedFieldBuilder()
  spec.csharp:
  - uid: Discord.EmbedFieldBuilder
    name: EmbedFieldBuilder
    nameWithType: EmbedFieldBuilder
    fullName: Discord.EmbedFieldBuilder
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Discord.EmbedFieldBuilder
    name: EmbedFieldBuilder
    nameWithType: EmbedFieldBuilder
    fullName: Discord.EmbedFieldBuilder
  - name: ()
    nameWithType: ()
    fullName: ()
