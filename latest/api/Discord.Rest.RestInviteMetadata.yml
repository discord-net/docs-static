### YamlMime:ManagedReference
items:
- uid: Discord.Rest.RestInviteMetadata
  commentId: T:Discord.Rest.RestInviteMetadata
  id: RestInviteMetadata
  parent: Discord.Rest
  children:
  - Discord.Rest.RestInviteMetadata.CreatedAt
  - Discord.Rest.RestInviteMetadata.Discord#IInviteMetadata#Inviter
  - Discord.Rest.RestInviteMetadata.Inviter
  - Discord.Rest.RestInviteMetadata.IsRevoked
  - Discord.Rest.RestInviteMetadata.IsTemporary
  - Discord.Rest.RestInviteMetadata.MaxAge
  - Discord.Rest.RestInviteMetadata.MaxUses
  - Discord.Rest.RestInviteMetadata.Uses
  langs:
  - csharp
  - vb
  name: RestInviteMetadata
  nameWithType: RestInviteMetadata
  fullName: Discord.Rest.RestInviteMetadata
  type: Class
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInviteMetadata.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RestInviteMetadata
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInviteMetadata.cs
    startLine: 6
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: 'Represents additional information regarding the REST-based invite object. '
  example: []
  syntax:
    content: 'public class RestInviteMetadata : RestInvite, IEntity<string>, IUpdateable, IInviteMetadata, IInvite, IEntity<string>, IDeletable'
    content.vb: >-
      Public Class RestInviteMetadata
          Inherits RestInvite
          Implements IEntity(Of String), IUpdateable, IInviteMetadata, IInvite, IEntity(Of String), IDeletable
  inheritance:
  - System.Object
  - Discord.Rest.RestEntity{System.String}
  - Discord.Rest.RestInvite
  implements:
  - Discord.IEntity{System.String}
  - Discord.IUpdateable
  - Discord.IInviteMetadata
  - Discord.IInvite
  - Discord.IEntity{System.String}
  - Discord.IDeletable
  inheritedMembers:
  - Discord.Rest.RestInvite.ChannelType
  - Discord.Rest.RestInvite.ChannelName
  - Discord.Rest.RestInvite.GuildName
  - Discord.Rest.RestInvite.PresenceCount
  - Discord.Rest.RestInvite.MemberCount
  - Discord.Rest.RestInvite.ChannelId
  - Discord.Rest.RestInvite.GuildId
  - Discord.Rest.RestInvite.Code
  - Discord.Rest.RestInvite.Url
  - Discord.Rest.RestInvite.UpdateAsync(Discord.RequestOptions)
  - Discord.Rest.RestInvite.DeleteAsync(Discord.RequestOptions)
  - Discord.Rest.RestInvite.ToString
  - Discord.Rest.RestInvite.Discord#IInvite#Guild
  - Discord.Rest.RestInvite.Discord#IInvite#Channel
  - Discord.Rest.RestEntity{System.String}.Id
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Rest.RestInviteMetadata.IsRevoked
  commentId: P:Discord.Rest.RestInviteMetadata.IsRevoked
  id: IsRevoked
  parent: Discord.Rest.RestInviteMetadata
  langs:
  - csharp
  - vb
  name: IsRevoked
  nameWithType: RestInviteMetadata.IsRevoked
  fullName: Discord.Rest.RestInviteMetadata.IsRevoked
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInviteMetadata.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsRevoked
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInviteMetadata.cs
    startLine: 11
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public bool IsRevoked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRevoked As Boolean
  overload: Discord.Rest.RestInviteMetadata.IsRevoked*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestInviteMetadata.IsTemporary
  commentId: P:Discord.Rest.RestInviteMetadata.IsTemporary
  id: IsTemporary
  parent: Discord.Rest.RestInviteMetadata
  langs:
  - csharp
  - vb
  name: IsTemporary
  nameWithType: RestInviteMetadata.IsTemporary
  fullName: Discord.Rest.RestInviteMetadata.IsTemporary
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInviteMetadata.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsTemporary
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInviteMetadata.cs
    startLine: 13
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public bool IsTemporary { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTemporary As Boolean
  overload: Discord.Rest.RestInviteMetadata.IsTemporary*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestInviteMetadata.MaxAge
  commentId: P:Discord.Rest.RestInviteMetadata.MaxAge
  id: MaxAge
  parent: Discord.Rest.RestInviteMetadata
  langs:
  - csharp
  - vb
  name: MaxAge
  nameWithType: RestInviteMetadata.MaxAge
  fullName: Discord.Rest.RestInviteMetadata.MaxAge
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInviteMetadata.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MaxAge
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInviteMetadata.cs
    startLine: 15
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public int? MaxAge { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public ReadOnly Property MaxAge As Integer?
  overload: Discord.Rest.RestInviteMetadata.MaxAge*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestInviteMetadata.MaxUses
  commentId: P:Discord.Rest.RestInviteMetadata.MaxUses
  id: MaxUses
  parent: Discord.Rest.RestInviteMetadata
  langs:
  - csharp
  - vb
  name: MaxUses
  nameWithType: RestInviteMetadata.MaxUses
  fullName: Discord.Rest.RestInviteMetadata.MaxUses
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInviteMetadata.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MaxUses
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInviteMetadata.cs
    startLine: 17
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public int? MaxUses { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public ReadOnly Property MaxUses As Integer?
  overload: Discord.Rest.RestInviteMetadata.MaxUses*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestInviteMetadata.Uses
  commentId: P:Discord.Rest.RestInviteMetadata.Uses
  id: Uses
  parent: Discord.Rest.RestInviteMetadata
  langs:
  - csharp
  - vb
  name: Uses
  nameWithType: RestInviteMetadata.Uses
  fullName: Discord.Rest.RestInviteMetadata.Uses
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInviteMetadata.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Uses
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInviteMetadata.cs
    startLine: 19
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public int? Uses { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public ReadOnly Property Uses As Integer?
  overload: Discord.Rest.RestInviteMetadata.Uses*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestInviteMetadata.Inviter
  commentId: P:Discord.Rest.RestInviteMetadata.Inviter
  id: Inviter
  parent: Discord.Rest.RestInviteMetadata
  langs:
  - csharp
  - vb
  name: Inviter
  nameWithType: RestInviteMetadata.Inviter
  fullName: Discord.Rest.RestInviteMetadata.Inviter
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInviteMetadata.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Inviter
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInviteMetadata.cs
    startLine: 23
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the user that created this invite.\n"
  example: []
  syntax:
    content: public RestUser Inviter { get; }
    parameters: []
    return:
      type: Discord.Rest.RestUser
    content.vb: Public ReadOnly Property Inviter As RestUser
  overload: Discord.Rest.RestInviteMetadata.Inviter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestInviteMetadata.CreatedAt
  commentId: P:Discord.Rest.RestInviteMetadata.CreatedAt
  id: CreatedAt
  parent: Discord.Rest.RestInviteMetadata
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: RestInviteMetadata.CreatedAt
  fullName: Discord.Rest.RestInviteMetadata.CreatedAt
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInviteMetadata.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: CreatedAt
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInviteMetadata.cs
    startLine: 26
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  example: []
  syntax:
    content: public DateTimeOffset? CreatedAt { get; }
    parameters: []
    return:
      type: System.Nullable{DateTimeOffset}
    content.vb: Public ReadOnly Property CreatedAt As DateTimeOffset?
  overload: Discord.Rest.RestInviteMetadata.CreatedAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestInviteMetadata.Discord#IInviteMetadata#Inviter
  commentId: P:Discord.Rest.RestInviteMetadata.Discord#IInviteMetadata#Inviter
  id: Discord#IInviteMetadata#Inviter
  isEii: true
  parent: Discord.Rest.RestInviteMetadata
  langs:
  - csharp
  - vb
  name: IInviteMetadata.Inviter
  nameWithType: RestInviteMetadata.IInviteMetadata.Inviter
  fullName: Discord.Rest.RestInviteMetadata.Discord.IInviteMetadata.Inviter
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Invites/RestInviteMetadata.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Discord.IInviteMetadata.Inviter
    path: ../src/Discord.Net.Rest/Entities/Invites/RestInviteMetadata.cs
    startLine: 51
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the user that created this invite.\n"
  example: []
  syntax:
    content: IUser IInviteMetadata.Inviter { get; }
    parameters: []
    return:
      type: Discord.IUser
      description: "\nA user that created this invite.\n"
    content.vb: ReadOnly WriteOnly Property Discord.IInviteMetadata.Inviter As IUser Implements IInviteMetadata.Inviter
  overload: Discord.Rest.RestInviteMetadata.Discord#IInviteMetadata#Inviter*
  implements:
  - Discord.IInviteMetadata.Inviter
  nameWithType.vb: RestInviteMetadata.Discord.IInviteMetadata.Inviter
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Discord.IInviteMetadata.Inviter
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Rest.RestEntity{System.String}
  commentId: T:Discord.Rest.RestEntity{System.String}
  parent: Discord.Rest
  definition: Discord.Rest.RestEntity`1
  name: RestEntity<String>
  nameWithType: RestEntity<String>
  fullName: Discord.Rest.RestEntity<System.String>
  nameWithType.vb: RestEntity(Of String)
  fullName.vb: Discord.Rest.RestEntity(Of System.String)
  name.vb: RestEntity(Of String)
  spec.csharp:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestInvite
  commentId: T:Discord.Rest.RestInvite
  parent: Discord.Rest
  name: RestInvite
  nameWithType: RestInvite
  fullName: Discord.Rest.RestInvite
- uid: Discord.IEntity{System.String}
  commentId: T:Discord.IEntity{System.String}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<String>
  nameWithType: IEntity<String>
  fullName: Discord.IEntity<System.String>
  nameWithType.vb: IEntity(Of String)
  fullName.vb: Discord.IEntity(Of System.String)
  name.vb: IEntity(Of String)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IUpdateable
  commentId: T:Discord.IUpdateable
  parent: Discord
  name: IUpdateable
  nameWithType: IUpdateable
  fullName: Discord.IUpdateable
- uid: Discord.IInviteMetadata
  commentId: T:Discord.IInviteMetadata
  parent: Discord
  name: IInviteMetadata
  nameWithType: IInviteMetadata
  fullName: Discord.IInviteMetadata
- uid: Discord.IInvite
  commentId: T:Discord.IInvite
  parent: Discord
  name: IInvite
  nameWithType: IInvite
  fullName: Discord.IInvite
- uid: Discord.IDeletable
  commentId: T:Discord.IDeletable
  parent: Discord
  name: IDeletable
  nameWithType: IDeletable
  fullName: Discord.IDeletable
- uid: Discord.Rest.RestInvite.ChannelType
  commentId: P:Discord.Rest.RestInvite.ChannelType
  parent: Discord.Rest.RestInvite
  name: ChannelType
  nameWithType: RestInvite.ChannelType
  fullName: Discord.Rest.RestInvite.ChannelType
- uid: Discord.Rest.RestInvite.ChannelName
  commentId: P:Discord.Rest.RestInvite.ChannelName
  parent: Discord.Rest.RestInvite
  name: ChannelName
  nameWithType: RestInvite.ChannelName
  fullName: Discord.Rest.RestInvite.ChannelName
- uid: Discord.Rest.RestInvite.GuildName
  commentId: P:Discord.Rest.RestInvite.GuildName
  parent: Discord.Rest.RestInvite
  name: GuildName
  nameWithType: RestInvite.GuildName
  fullName: Discord.Rest.RestInvite.GuildName
- uid: Discord.Rest.RestInvite.PresenceCount
  commentId: P:Discord.Rest.RestInvite.PresenceCount
  parent: Discord.Rest.RestInvite
  name: PresenceCount
  nameWithType: RestInvite.PresenceCount
  fullName: Discord.Rest.RestInvite.PresenceCount
- uid: Discord.Rest.RestInvite.MemberCount
  commentId: P:Discord.Rest.RestInvite.MemberCount
  parent: Discord.Rest.RestInvite
  name: MemberCount
  nameWithType: RestInvite.MemberCount
  fullName: Discord.Rest.RestInvite.MemberCount
- uid: Discord.Rest.RestInvite.ChannelId
  commentId: P:Discord.Rest.RestInvite.ChannelId
  parent: Discord.Rest.RestInvite
  name: ChannelId
  nameWithType: RestInvite.ChannelId
  fullName: Discord.Rest.RestInvite.ChannelId
- uid: Discord.Rest.RestInvite.GuildId
  commentId: P:Discord.Rest.RestInvite.GuildId
  parent: Discord.Rest.RestInvite
  name: GuildId
  nameWithType: RestInvite.GuildId
  fullName: Discord.Rest.RestInvite.GuildId
- uid: Discord.Rest.RestInvite.Code
  commentId: P:Discord.Rest.RestInvite.Code
  parent: Discord.Rest.RestInvite
  name: Code
  nameWithType: RestInvite.Code
  fullName: Discord.Rest.RestInvite.Code
- uid: Discord.Rest.RestInvite.Url
  commentId: P:Discord.Rest.RestInvite.Url
  parent: Discord.Rest.RestInvite
  name: Url
  nameWithType: RestInvite.Url
  fullName: Discord.Rest.RestInvite.Url
- uid: Discord.Rest.RestInvite.UpdateAsync(Discord.RequestOptions)
  commentId: M:Discord.Rest.RestInvite.UpdateAsync(Discord.RequestOptions)
  parent: Discord.Rest.RestInvite
  name: UpdateAsync(RequestOptions)
  nameWithType: RestInvite.UpdateAsync(RequestOptions)
  fullName: Discord.Rest.RestInvite.UpdateAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Rest.RestInvite.UpdateAsync(Discord.RequestOptions)
    name: UpdateAsync
    nameWithType: RestInvite.UpdateAsync
    fullName: Discord.Rest.RestInvite.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestInvite.UpdateAsync(Discord.RequestOptions)
    name: UpdateAsync
    nameWithType: RestInvite.UpdateAsync
    fullName: Discord.Rest.RestInvite.UpdateAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestInvite.DeleteAsync(Discord.RequestOptions)
  commentId: M:Discord.Rest.RestInvite.DeleteAsync(Discord.RequestOptions)
  parent: Discord.Rest.RestInvite
  name: DeleteAsync(RequestOptions)
  nameWithType: RestInvite.DeleteAsync(RequestOptions)
  fullName: Discord.Rest.RestInvite.DeleteAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.Rest.RestInvite.DeleteAsync(Discord.RequestOptions)
    name: DeleteAsync
    nameWithType: RestInvite.DeleteAsync
    fullName: Discord.Rest.RestInvite.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestInvite.DeleteAsync(Discord.RequestOptions)
    name: DeleteAsync
    nameWithType: RestInvite.DeleteAsync
    fullName: Discord.Rest.RestInvite.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestInvite.ToString
  commentId: M:Discord.Rest.RestInvite.ToString
  parent: Discord.Rest.RestInvite
  name: ToString()
  nameWithType: RestInvite.ToString()
  fullName: Discord.Rest.RestInvite.ToString()
  spec.csharp:
  - uid: Discord.Rest.RestInvite.ToString
    name: ToString
    nameWithType: RestInvite.ToString
    fullName: Discord.Rest.RestInvite.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Rest.RestInvite.ToString
    name: ToString
    nameWithType: RestInvite.ToString
    fullName: Discord.Rest.RestInvite.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestInvite.Discord#IInvite#Guild
  commentId: P:Discord.Rest.RestInvite.Discord#IInvite#Guild
  parent: Discord.Rest.RestInvite
  name: IInvite.Guild
  nameWithType: RestInvite.IInvite.Guild
  fullName: Discord.Rest.RestInvite.Discord.IInvite.Guild
  nameWithType.vb: RestInvite.Discord.IInvite.Guild
  name.vb: Discord.IInvite.Guild
- uid: Discord.Rest.RestInvite.Discord#IInvite#Channel
  commentId: P:Discord.Rest.RestInvite.Discord#IInvite#Channel
  parent: Discord.Rest.RestInvite
  name: IInvite.Channel
  nameWithType: RestInvite.IInvite.Channel
  fullName: Discord.Rest.RestInvite.Discord.IInvite.Channel
  nameWithType.vb: RestInvite.Discord.IInvite.Channel
  name.vb: Discord.IInvite.Channel
- uid: Discord.Rest.RestEntity{System.String}.Id
  commentId: P:Discord.Rest.RestEntity{System.String}.Id
  parent: Discord.Rest.RestEntity{System.String}
  definition: Discord.Rest.RestEntity`1.Id
  name: Id
  nameWithType: RestEntity<String>.Id
  fullName: Discord.Rest.RestEntity<System.String>.Id
  nameWithType.vb: RestEntity(Of String).Id
  fullName.vb: Discord.Rest.RestEntity(Of System.String).Id
- uid: Discord.Rest.RestEntity`1
  commentId: T:Discord.Rest.RestEntity`1
  name: RestEntity<T>
  nameWithType: RestEntity<T>
  fullName: Discord.Rest.RestEntity<T>
  nameWithType.vb: RestEntity(Of T)
  fullName.vb: Discord.Rest.RestEntity(Of T)
  name.vb: RestEntity(Of T)
  spec.csharp:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Rest.RestEntity`1
    name: RestEntity
    nameWithType: RestEntity
    fullName: Discord.Rest.RestEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Rest.RestEntity`1.Id
  commentId: P:Discord.Rest.RestEntity`1.Id
  name: Id
  nameWithType: RestEntity<T>.Id
  fullName: Discord.Rest.RestEntity<T>.Id
  nameWithType.vb: RestEntity(Of T).Id
  fullName.vb: Discord.Rest.RestEntity(Of T).Id
- uid: Discord.Rest.RestInviteMetadata.IsRevoked*
  commentId: Overload:Discord.Rest.RestInviteMetadata.IsRevoked
  name: IsRevoked
  nameWithType: RestInviteMetadata.IsRevoked
  fullName: Discord.Rest.RestInviteMetadata.IsRevoked
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.Rest.RestInviteMetadata.IsTemporary*
  commentId: Overload:Discord.Rest.RestInviteMetadata.IsTemporary
  name: IsTemporary
  nameWithType: RestInviteMetadata.IsTemporary
  fullName: Discord.Rest.RestInviteMetadata.IsTemporary
- uid: Discord.Rest.RestInviteMetadata.MaxAge*
  commentId: Overload:Discord.Rest.RestInviteMetadata.MaxAge
  name: MaxAge
  nameWithType: RestInviteMetadata.MaxAge
  fullName: Discord.Rest.RestInviteMetadata.MaxAge
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestInviteMetadata.MaxUses*
  commentId: Overload:Discord.Rest.RestInviteMetadata.MaxUses
  name: MaxUses
  nameWithType: RestInviteMetadata.MaxUses
  fullName: Discord.Rest.RestInviteMetadata.MaxUses
- uid: Discord.Rest.RestInviteMetadata.Uses*
  commentId: Overload:Discord.Rest.RestInviteMetadata.Uses
  name: Uses
  nameWithType: RestInviteMetadata.Uses
  fullName: Discord.Rest.RestInviteMetadata.Uses
- uid: Discord.Rest.RestInviteMetadata.Inviter*
  commentId: Overload:Discord.Rest.RestInviteMetadata.Inviter
  name: Inviter
  nameWithType: RestInviteMetadata.Inviter
  fullName: Discord.Rest.RestInviteMetadata.Inviter
- uid: Discord.Rest.RestUser
  commentId: T:Discord.Rest.RestUser
  parent: Discord.Rest
  name: RestUser
  nameWithType: RestUser
  fullName: Discord.Rest.RestUser
- uid: Discord.Rest.RestInviteMetadata.CreatedAt*
  commentId: Overload:Discord.Rest.RestInviteMetadata.CreatedAt
  name: CreatedAt
  nameWithType: RestInviteMetadata.CreatedAt
  fullName: Discord.Rest.RestInviteMetadata.CreatedAt
- uid: System.Nullable{DateTimeOffset}
  commentId: '!:System.Nullable{DateTimeOffset}'
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Rest.RestInviteMetadata.Discord#IInviteMetadata#Inviter*
  commentId: Overload:Discord.Rest.RestInviteMetadata.Discord#IInviteMetadata#Inviter
  name: IInviteMetadata.Inviter
  nameWithType: RestInviteMetadata.IInviteMetadata.Inviter
  fullName: Discord.Rest.RestInviteMetadata.Discord.IInviteMetadata.Inviter
  nameWithType.vb: RestInviteMetadata.Discord.IInviteMetadata.Inviter
  name.vb: Discord.IInviteMetadata.Inviter
- uid: Discord.IInviteMetadata.Inviter
  commentId: P:Discord.IInviteMetadata.Inviter
  parent: Discord.IInviteMetadata
  name: Inviter
  nameWithType: IInviteMetadata.Inviter
  fullName: Discord.IInviteMetadata.Inviter
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
