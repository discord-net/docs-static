### YamlMime:ManagedReference
items:
- uid: Discord.IPresence
  commentId: T:Discord.IPresence
  id: IPresence
  parent: Discord
  children:
  - Discord.IPresence.ActiveClients
  - Discord.IPresence.Activity
  - Discord.IPresence.Status
  langs:
  - csharp
  - vb
  name: IPresence
  nameWithType: IPresence
  fullName: Discord.IPresence
  type: Interface
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/IPresence.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IPresence
    path: ../src/Discord.Net.Core/Entities/Users/IPresence.cs
    startLine: 7
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nRepresents the user&apos;s presence status. This may include their online status and their activity.\n"
  example: []
  syntax:
    content: public interface IPresence
    content.vb: Public Interface IPresence
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Discord.IPresence.Activity
  commentId: P:Discord.IPresence.Activity
  id: Activity
  parent: Discord.IPresence
  langs:
  - csharp
  - vb
  name: Activity
  nameWithType: IPresence.Activity
  fullName: Discord.IPresence.Activity
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/IPresence.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Activity
    path: ../src/Discord.Net.Core/Entities/Users/IPresence.cs
    startLine: 12
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the activity this user is currently doing.\n"
  example: []
  syntax:
    content: IActivity Activity { get; }
    parameters: []
    return:
      type: Discord.IActivity
    content.vb: ReadOnly Property Activity As IActivity
  overload: Discord.IPresence.Activity*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IPresence.Status
  commentId: P:Discord.IPresence.Status
  id: Status
  parent: Discord.IPresence
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: IPresence.Status
  fullName: Discord.IPresence.Status
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/IPresence.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Status
    path: ../src/Discord.Net.Core/Entities/Users/IPresence.cs
    startLine: 16
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the current status of this user.\n"
  example: []
  syntax:
    content: UserStatus Status { get; }
    parameters: []
    return:
      type: Discord.UserStatus
    content.vb: ReadOnly Property Status As UserStatus
  overload: Discord.IPresence.Status*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IPresence.ActiveClients
  commentId: P:Discord.IPresence.ActiveClients
  id: ActiveClients
  parent: Discord.IPresence
  langs:
  - csharp
  - vb
  name: ActiveClients
  nameWithType: IPresence.ActiveClients
  fullName: Discord.IPresence.ActiveClients
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Users/IPresence.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ActiveClients
    path: ../src/Discord.Net.Core/Entities/Users/IPresence.cs
    startLine: 20
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the set of clients where this user is currently active.\n"
  example: []
  syntax:
    content: IImmutableSet<ClientType> ActiveClients { get; }
    parameters: []
    return:
      type: IImmutableSet{Discord.ClientType}
    content.vb: ReadOnly Property ActiveClients As IImmutableSet(Of ClientType)
  overload: Discord.IPresence.ActiveClients*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.IPresence.Activity*
  commentId: Overload:Discord.IPresence.Activity
  name: Activity
  nameWithType: IPresence.Activity
  fullName: Discord.IPresence.Activity
- uid: Discord.IActivity
  commentId: T:Discord.IActivity
  parent: Discord
  name: IActivity
  nameWithType: IActivity
  fullName: Discord.IActivity
- uid: Discord.IPresence.Status*
  commentId: Overload:Discord.IPresence.Status
  name: Status
  nameWithType: IPresence.Status
  fullName: Discord.IPresence.Status
- uid: Discord.UserStatus
  commentId: T:Discord.UserStatus
  parent: Discord
  name: UserStatus
  nameWithType: UserStatus
  fullName: Discord.UserStatus
- uid: Discord.IPresence.ActiveClients*
  commentId: Overload:Discord.IPresence.ActiveClients
  name: ActiveClients
  nameWithType: IPresence.ActiveClients
  fullName: Discord.IPresence.ActiveClients
- uid: IImmutableSet{Discord.ClientType}
  commentId: '!:IImmutableSet{Discord.ClientType}'
  definition: IImmutableSet`1
  name: IImmutableSet<ClientType>
  nameWithType: IImmutableSet<ClientType>
  fullName: IImmutableSet<Discord.ClientType>
  nameWithType.vb: IImmutableSet(Of ClientType)
  fullName.vb: IImmutableSet(Of Discord.ClientType)
  name.vb: IImmutableSet(Of ClientType)
  spec.csharp:
  - uid: IImmutableSet`1
    name: IImmutableSet
    nameWithType: IImmutableSet
    fullName: IImmutableSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.ClientType
    name: ClientType
    nameWithType: ClientType
    fullName: Discord.ClientType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IImmutableSet`1
    name: IImmutableSet
    nameWithType: IImmutableSet
    fullName: IImmutableSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.ClientType
    name: ClientType
    nameWithType: ClientType
    fullName: Discord.ClientType
  - name: )
    nameWithType: )
    fullName: )
- uid: IImmutableSet`1
  isExternal: true
  name: IImmutableSet<>
  nameWithType: IImmutableSet<>
  fullName: IImmutableSet<>
  nameWithType.vb: IImmutableSet(Of )
  fullName.vb: IImmutableSet(Of )
  name.vb: IImmutableSet(Of )
  spec.csharp:
  - uid: IImmutableSet`1
    name: IImmutableSet
    nameWithType: IImmutableSet
    fullName: IImmutableSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IImmutableSet`1
    name: IImmutableSet
    nameWithType: IImmutableSet
    fullName: IImmutableSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
