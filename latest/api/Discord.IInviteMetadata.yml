### YamlMime:ManagedReference
items:
- uid: Discord.IInviteMetadata
  commentId: T:Discord.IInviteMetadata
  id: IInviteMetadata
  parent: Discord
  children:
  - Discord.IInviteMetadata.CreatedAt
  - Discord.IInviteMetadata.Inviter
  - Discord.IInviteMetadata.IsRevoked
  - Discord.IInviteMetadata.IsTemporary
  - Discord.IInviteMetadata.MaxAge
  - Discord.IInviteMetadata.MaxUses
  - Discord.IInviteMetadata.Uses
  langs:
  - csharp
  - vb
  name: IInviteMetadata
  nameWithType: IInviteMetadata
  fullName: Discord.IInviteMetadata
  type: Interface
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInviteMetadata.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IInviteMetadata
    path: ../src/Discord.Net.Core/Entities/Invites/IInviteMetadata.cs
    startLine: 7
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nRepresents additional information regarding the generic invite object.\n"
  example: []
  syntax:
    content: 'public interface IInviteMetadata : IInvite, IEntity<string>, IDeletable'
    content.vb: >-
      Public Interface IInviteMetadata
          Inherits IInvite
  inheritedMembers:
  - Discord.IInvite.Code
  - Discord.IInvite.Url
  - Discord.IInvite.Channel
  - Discord.IInvite.ChannelType
  - Discord.IInvite.ChannelId
  - Discord.IInvite.ChannelName
  - Discord.IInvite.Guild
  - Discord.IInvite.GuildId
  - Discord.IInvite.GuildName
  - Discord.IInvite.PresenceCount
  - Discord.IInvite.MemberCount
  - Discord.IEntity{System.String}.Id
  - Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Discord.IInviteMetadata.Inviter
  commentId: P:Discord.IInviteMetadata.Inviter
  id: Inviter
  parent: Discord.IInviteMetadata
  langs:
  - csharp
  - vb
  name: Inviter
  nameWithType: IInviteMetadata.Inviter
  fullName: Discord.IInviteMetadata.Inviter
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInviteMetadata.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Inviter
    path: ../src/Discord.Net.Core/Entities/Invites/IInviteMetadata.cs
    startLine: 15
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the user that created this invite.\n"
  example: []
  syntax:
    content: IUser Inviter { get; }
    parameters: []
    return:
      type: Discord.IUser
      description: "\nA user that created this invite.\n"
    content.vb: ReadOnly Property Inviter As IUser
  overload: Discord.IInviteMetadata.Inviter*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IInviteMetadata.IsRevoked
  commentId: P:Discord.IInviteMetadata.IsRevoked
  id: IsRevoked
  parent: Discord.IInviteMetadata
  langs:
  - csharp
  - vb
  name: IsRevoked
  nameWithType: IInviteMetadata.IsRevoked
  fullName: Discord.IInviteMetadata.IsRevoked
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInviteMetadata.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsRevoked
    path: ../src/Discord.Net.Core/Entities/Invites/IInviteMetadata.cs
    startLine: 22
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets a value that indicates whether the invite has been revoked.\n"
  example: []
  syntax:
    content: bool IsRevoked { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this invite was revoked; otherwise <code>false</code>.\n"
    content.vb: ReadOnly Property IsRevoked As Boolean
  overload: Discord.IInviteMetadata.IsRevoked*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IInviteMetadata.IsTemporary
  commentId: P:Discord.IInviteMetadata.IsTemporary
  id: IsTemporary
  parent: Discord.IInviteMetadata
  langs:
  - csharp
  - vb
  name: IsTemporary
  nameWithType: IInviteMetadata.IsTemporary
  fullName: Discord.IInviteMetadata.IsTemporary
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInviteMetadata.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsTemporary
    path: ../src/Discord.Net.Core/Entities/Invites/IInviteMetadata.cs
    startLine: 30
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets a value that indicates whether the invite is a temporary one.\n"
  example: []
  syntax:
    content: bool IsTemporary { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if users accepting this invite will be removed from the guild when they log off; otherwise \n<code>false</code>.\n"
    content.vb: ReadOnly Property IsTemporary As Boolean
  overload: Discord.IInviteMetadata.IsTemporary*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IInviteMetadata.MaxAge
  commentId: P:Discord.IInviteMetadata.MaxAge
  id: MaxAge
  parent: Discord.IInviteMetadata
  langs:
  - csharp
  - vb
  name: MaxAge
  nameWithType: IInviteMetadata.MaxAge
  fullName: Discord.IInviteMetadata.MaxAge
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInviteMetadata.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MaxAge
    path: ../src/Discord.Net.Core/Entities/Invites/IInviteMetadata.cs
    startLine: 38
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the time (in seconds) until the invite expires.\n"
  example: []
  syntax:
    content: int? MaxAge { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn <see cref=\"!:System.Int32\"></see> representing the time in seconds until this invite expires; <code>null</code> if this\ninvite never expires.\n"
    content.vb: ReadOnly Property MaxAge As Integer?
  overload: Discord.IInviteMetadata.MaxAge*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IInviteMetadata.MaxUses
  commentId: P:Discord.IInviteMetadata.MaxUses
  id: MaxUses
  parent: Discord.IInviteMetadata
  langs:
  - csharp
  - vb
  name: MaxUses
  nameWithType: IInviteMetadata.MaxUses
  fullName: Discord.IInviteMetadata.MaxUses
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInviteMetadata.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MaxUses
    path: ../src/Discord.Net.Core/Entities/Invites/IInviteMetadata.cs
    startLine: 46
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the max number of uses this invite may have.\n"
  example: []
  syntax:
    content: int? MaxUses { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn <see cref=\"!:System.Int32\"></see> representing the number of uses this invite may be accepted until it is removed\nfrom the guild; <code>null</code> if none is set.\n"
    content.vb: ReadOnly Property MaxUses As Integer?
  overload: Discord.IInviteMetadata.MaxUses*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IInviteMetadata.Uses
  commentId: P:Discord.IInviteMetadata.Uses
  id: Uses
  parent: Discord.IInviteMetadata
  langs:
  - csharp
  - vb
  name: Uses
  nameWithType: IInviteMetadata.Uses
  fullName: Discord.IInviteMetadata.Uses
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInviteMetadata.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Uses
    path: ../src/Discord.Net.Core/Entities/Invites/IInviteMetadata.cs
    startLine: 53
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the number of times this invite has been used.\n"
  example: []
  syntax:
    content: int? Uses { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nAn <see cref=\"!:System.Int32\"></see> representing the number of times this invite has been used.\n"
    content.vb: ReadOnly Property Uses As Integer?
  overload: Discord.IInviteMetadata.Uses*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IInviteMetadata.CreatedAt
  commentId: P:Discord.IInviteMetadata.CreatedAt
  id: CreatedAt
  parent: Discord.IInviteMetadata
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: IInviteMetadata.CreatedAt
  fullName: Discord.IInviteMetadata.CreatedAt
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Invites/IInviteMetadata.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: CreatedAt
    path: ../src/Discord.Net.Core/Entities/Invites/IInviteMetadata.cs
    startLine: 60
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets when this invite was created.\n"
  example: []
  syntax:
    content: DateTimeOffset? CreatedAt { get; }
    parameters: []
    return:
      type: System.Nullable{DateTimeOffset}
      description: "\nA <see cref=\"!:DateTimeOffset\"></see> representing the time of which the invite was first created.\n"
    content.vb: ReadOnly Property CreatedAt As DateTimeOffset?
  overload: Discord.IInviteMetadata.CreatedAt*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.IInvite.Code
  commentId: P:Discord.IInvite.Code
  parent: Discord.IInvite
  name: Code
  nameWithType: IInvite.Code
  fullName: Discord.IInvite.Code
- uid: Discord.IInvite.Url
  commentId: P:Discord.IInvite.Url
  parent: Discord.IInvite
  name: Url
  nameWithType: IInvite.Url
  fullName: Discord.IInvite.Url
- uid: Discord.IInvite.Channel
  commentId: P:Discord.IInvite.Channel
  parent: Discord.IInvite
  name: Channel
  nameWithType: IInvite.Channel
  fullName: Discord.IInvite.Channel
- uid: Discord.IInvite.ChannelType
  commentId: P:Discord.IInvite.ChannelType
  parent: Discord.IInvite
  name: ChannelType
  nameWithType: IInvite.ChannelType
  fullName: Discord.IInvite.ChannelType
- uid: Discord.IInvite.ChannelId
  commentId: P:Discord.IInvite.ChannelId
  parent: Discord.IInvite
  name: ChannelId
  nameWithType: IInvite.ChannelId
  fullName: Discord.IInvite.ChannelId
- uid: Discord.IInvite.ChannelName
  commentId: P:Discord.IInvite.ChannelName
  parent: Discord.IInvite
  name: ChannelName
  nameWithType: IInvite.ChannelName
  fullName: Discord.IInvite.ChannelName
- uid: Discord.IInvite.Guild
  commentId: P:Discord.IInvite.Guild
  parent: Discord.IInvite
  name: Guild
  nameWithType: IInvite.Guild
  fullName: Discord.IInvite.Guild
- uid: Discord.IInvite.GuildId
  commentId: P:Discord.IInvite.GuildId
  parent: Discord.IInvite
  name: GuildId
  nameWithType: IInvite.GuildId
  fullName: Discord.IInvite.GuildId
- uid: Discord.IInvite.GuildName
  commentId: P:Discord.IInvite.GuildName
  parent: Discord.IInvite
  name: GuildName
  nameWithType: IInvite.GuildName
  fullName: Discord.IInvite.GuildName
- uid: Discord.IInvite.PresenceCount
  commentId: P:Discord.IInvite.PresenceCount
  parent: Discord.IInvite
  name: PresenceCount
  nameWithType: IInvite.PresenceCount
  fullName: Discord.IInvite.PresenceCount
- uid: Discord.IInvite.MemberCount
  commentId: P:Discord.IInvite.MemberCount
  parent: Discord.IInvite
  name: MemberCount
  nameWithType: IInvite.MemberCount
  fullName: Discord.IInvite.MemberCount
- uid: Discord.IEntity{System.String}.Id
  commentId: P:Discord.IEntity{System.String}.Id
  parent: Discord.IEntity{System.String}
  definition: Discord.IEntity`1.Id
  name: Id
  nameWithType: IEntity<String>.Id
  fullName: Discord.IEntity<System.String>.Id
  nameWithType.vb: IEntity(Of String).Id
  fullName.vb: Discord.IEntity(Of System.String).Id
- uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  commentId: M:Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  parent: Discord.IDeletable
  name: DeleteAsync(RequestOptions)
  nameWithType: IDeletable.DeleteAsync(RequestOptions)
  fullName: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
    name: DeleteAsync
    nameWithType: IDeletable.DeleteAsync
    fullName: Discord.IDeletable.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
    name: DeleteAsync
    nameWithType: IDeletable.DeleteAsync
    fullName: Discord.IDeletable.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IInvite
  commentId: T:Discord.IInvite
  parent: Discord
  name: IInvite
  nameWithType: IInvite
  fullName: Discord.IInvite
- uid: Discord.IEntity`1.Id
  commentId: P:Discord.IEntity`1.Id
  name: Id
  nameWithType: IEntity<TId>.Id
  fullName: Discord.IEntity<TId>.Id
  nameWithType.vb: IEntity(Of TId).Id
  fullName.vb: Discord.IEntity(Of TId).Id
- uid: Discord.IEntity{System.String}
  commentId: T:Discord.IEntity{System.String}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<String>
  nameWithType: IEntity<String>
  fullName: Discord.IEntity<System.String>
  nameWithType.vb: IEntity(Of String)
  fullName.vb: Discord.IEntity(Of System.String)
  name.vb: IEntity(Of String)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IDeletable
  commentId: T:Discord.IDeletable
  parent: Discord
  name: IDeletable
  nameWithType: IDeletable
  fullName: Discord.IDeletable
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IInviteMetadata.Inviter*
  commentId: Overload:Discord.IInviteMetadata.Inviter
  name: Inviter
  nameWithType: IInviteMetadata.Inviter
  fullName: Discord.IInviteMetadata.Inviter
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord.IInviteMetadata.IsRevoked*
  commentId: Overload:Discord.IInviteMetadata.IsRevoked
  name: IsRevoked
  nameWithType: IInviteMetadata.IsRevoked
  fullName: Discord.IInviteMetadata.IsRevoked
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.IInviteMetadata.IsTemporary*
  commentId: Overload:Discord.IInviteMetadata.IsTemporary
  name: IsTemporary
  nameWithType: IInviteMetadata.IsTemporary
  fullName: Discord.IInviteMetadata.IsTemporary
- uid: Discord.IInviteMetadata.MaxAge*
  commentId: Overload:Discord.IInviteMetadata.MaxAge
  name: MaxAge
  nameWithType: IInviteMetadata.MaxAge
  fullName: Discord.IInviteMetadata.MaxAge
- uid: System.Nullable{System.Int32}
  commentId: '!:System.Nullable{System.Int32}'
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IInviteMetadata.MaxUses*
  commentId: Overload:Discord.IInviteMetadata.MaxUses
  name: MaxUses
  nameWithType: IInviteMetadata.MaxUses
  fullName: Discord.IInviteMetadata.MaxUses
- uid: Discord.IInviteMetadata.Uses*
  commentId: Overload:Discord.IInviteMetadata.Uses
  name: Uses
  nameWithType: IInviteMetadata.Uses
  fullName: Discord.IInviteMetadata.Uses
- uid: Discord.IInviteMetadata.CreatedAt*
  commentId: Overload:Discord.IInviteMetadata.CreatedAt
  name: CreatedAt
  nameWithType: IInviteMetadata.CreatedAt
  fullName: Discord.IInviteMetadata.CreatedAt
- uid: System.Nullable{DateTimeOffset}
  commentId: '!:System.Nullable{DateTimeOffset}'
  definition: System.Nullable`1
  name: Nullable<DateTimeOffset>
  nameWithType: Nullable<DateTimeOffset>
  fullName: System.Nullable<DateTimeOffset>
  nameWithType.vb: Nullable(Of DateTimeOffset)
  fullName.vb: System.Nullable(Of DateTimeOffset)
  name.vb: Nullable(Of DateTimeOffset)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
