### YamlMime:ManagedReference
items:
- uid: Discord.Rest.EmoteCreateAuditLogData
  commentId: T:Discord.Rest.EmoteCreateAuditLogData
  id: EmoteCreateAuditLogData
  parent: Discord.Rest
  children:
  - Discord.Rest.EmoteCreateAuditLogData.EmoteId
  - Discord.Rest.EmoteCreateAuditLogData.Name
  langs:
  - csharp
  - vb
  name: EmoteCreateAuditLogData
  nameWithType: EmoteCreateAuditLogData
  fullName: Discord.Rest.EmoteCreateAuditLogData
  type: Class
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/EmoteCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: EmoteCreateAuditLogData
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/EmoteCreateAuditLogData.cs
    startLine: 10
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nContains a piece of audit log data related to an emoji creation.\n"
  example: []
  syntax:
    content: 'public class EmoteCreateAuditLogData : object, IAuditLogData'
    content.vb: >-
      Public Class EmoteCreateAuditLogData
          Inherits Object
          Implements IAuditLogData
  inheritance:
  - System.Object
  implements:
  - Discord.IAuditLogData
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Rest.EmoteCreateAuditLogData.EmoteId
  commentId: P:Discord.Rest.EmoteCreateAuditLogData.EmoteId
  id: EmoteId
  parent: Discord.Rest.EmoteCreateAuditLogData
  langs:
  - csharp
  - vb
  name: EmoteId
  nameWithType: EmoteCreateAuditLogData.EmoteId
  fullName: Discord.Rest.EmoteCreateAuditLogData.EmoteId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/EmoteCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: EmoteId
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/EmoteCreateAuditLogData.cs
    startLine: 32
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the snowflake ID of the created emoji.\n"
  example: []
  syntax:
    content: public ulong EmoteId { get; }
    parameters: []
    return:
      type: System.UInt64
      description: "\nA <see cref=\"!:System.UInt64\"></see> representing the snowflake identifier for the created emoji.\n"
    content.vb: Public ReadOnly Property EmoteId As ULong
  overload: Discord.Rest.EmoteCreateAuditLogData.EmoteId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.EmoteCreateAuditLogData.Name
  commentId: P:Discord.Rest.EmoteCreateAuditLogData.Name
  id: Name
  parent: Discord.Rest.EmoteCreateAuditLogData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: EmoteCreateAuditLogData.Name
  fullName: Discord.Rest.EmoteCreateAuditLogData.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/EmoteCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/EmoteCreateAuditLogData.cs
    startLine: 39
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the name of the created emoji.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the name of the created emoji.\n"
    content.vb: Public ReadOnly Property Name As String
  overload: Discord.Rest.EmoteCreateAuditLogData.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.IAuditLogData
  commentId: T:Discord.IAuditLogData
  parent: Discord
  name: IAuditLogData
  nameWithType: IAuditLogData
  fullName: Discord.IAuditLogData
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Rest.EmoteCreateAuditLogData.EmoteId*
  commentId: Overload:Discord.Rest.EmoteCreateAuditLogData.EmoteId
  name: EmoteId
  nameWithType: EmoteCreateAuditLogData.EmoteId
  fullName: Discord.Rest.EmoteCreateAuditLogData.EmoteId
- uid: System.UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.Rest.EmoteCreateAuditLogData.Name*
  commentId: Overload:Discord.Rest.EmoteCreateAuditLogData.Name
  name: Name
  nameWithType: EmoteCreateAuditLogData.Name
  fullName: Discord.Rest.EmoteCreateAuditLogData.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
