### YamlMime:ManagedReference
items:
- uid: Discord.IWebhook
  commentId: T:Discord.IWebhook
  id: IWebhook
  parent: Discord
  children:
  - Discord.IWebhook.AvatarId
  - Discord.IWebhook.Channel
  - Discord.IWebhook.ChannelId
  - Discord.IWebhook.Creator
  - Discord.IWebhook.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  - Discord.IWebhook.Guild
  - Discord.IWebhook.GuildId
  - Discord.IWebhook.ModifyAsync(System.Action{Discord.WebhookProperties},Discord.RequestOptions)
  - Discord.IWebhook.Name
  - Discord.IWebhook.Token
  langs:
  - csharp
  - vb
  name: IWebhook
  nameWithType: IWebhook
  fullName: Discord.IWebhook
  type: Interface
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IWebhook
    path: ../src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
    startLine: 8
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nRepresents a webhook object on Discord.\n"
  example: []
  syntax:
    content: 'public interface IWebhook : IDeletable, ISnowflakeEntity, IEntity<ulong>'
    content.vb: >-
      Public Interface IWebhook
          Inherits IDeletable, ISnowflakeEntity
  inheritedMembers:
  - Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  - Discord.ISnowflakeEntity.CreatedAt
  - Discord.IEntity{System.UInt64}.Id
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Discord.IWebhook.Token
  commentId: P:Discord.IWebhook.Token
  id: Token
  parent: Discord.IWebhook
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: IWebhook.Token
  fullName: Discord.IWebhook.Token
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Token
    path: ../src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
    startLine: 13
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the token of this webhook.\n"
  example: []
  syntax:
    content: string Token { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Token As String
  overload: Discord.IWebhook.Token*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IWebhook.Name
  commentId: P:Discord.IWebhook.Name
  id: Name
  parent: Discord.IWebhook
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IWebhook.Name
  fullName: Discord.IWebhook.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
    startLine: 18
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the default name of this webhook.\n"
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Discord.IWebhook.Name*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IWebhook.AvatarId
  commentId: P:Discord.IWebhook.AvatarId
  id: AvatarId
  parent: Discord.IWebhook
  langs:
  - csharp
  - vb
  name: AvatarId
  nameWithType: IWebhook.AvatarId
  fullName: Discord.IWebhook.AvatarId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AvatarId
    path: ../src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
    startLine: 22
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the ID of this webhook&apos;s default avatar.\n"
  example: []
  syntax:
    content: string AvatarId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property AvatarId As String
  overload: Discord.IWebhook.AvatarId*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IWebhook.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  commentId: M:Discord.IWebhook.GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  id: GetAvatarUrl(Discord.ImageFormat,System.UInt16)
  parent: Discord.IWebhook
  langs:
  - csharp
  - vb
  name: GetAvatarUrl(ImageFormat, UInt16)
  nameWithType: IWebhook.GetAvatarUrl(ImageFormat, UInt16)
  fullName: Discord.IWebhook.GetAvatarUrl(Discord.ImageFormat, System.UInt16)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GetAvatarUrl
    path: ../src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
    startLine: 26
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the URL to this webhook&apos;s default avatar.\n"
  example: []
  syntax:
    content: string GetAvatarUrl(ImageFormat format = ImageFormat.Auto, ushort size = 128)
    parameters:
    - id: format
      type: Discord.ImageFormat
    - id: size
      type: System.UInt16
    return:
      type: System.String
    content.vb: Function GetAvatarUrl(format As ImageFormat = ImageFormat.Auto, size As UShort = 128) As String
  overload: Discord.IWebhook.GetAvatarUrl*
- uid: Discord.IWebhook.Channel
  commentId: P:Discord.IWebhook.Channel
  id: Channel
  parent: Discord.IWebhook
  langs:
  - csharp
  - vb
  name: Channel
  nameWithType: IWebhook.Channel
  fullName: Discord.IWebhook.Channel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Channel
    path: ../src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
    startLine: 31
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the channel for this webhook.\n"
  example: []
  syntax:
    content: ITextChannel Channel { get; }
    parameters: []
    return:
      type: Discord.ITextChannel
    content.vb: ReadOnly Property Channel As ITextChannel
  overload: Discord.IWebhook.Channel*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IWebhook.ChannelId
  commentId: P:Discord.IWebhook.ChannelId
  id: ChannelId
  parent: Discord.IWebhook
  langs:
  - csharp
  - vb
  name: ChannelId
  nameWithType: IWebhook.ChannelId
  fullName: Discord.IWebhook.ChannelId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelId
    path: ../src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
    startLine: 35
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the ID of the channel for this webhook.\n"
  example: []
  syntax:
    content: ulong ChannelId { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: ReadOnly Property ChannelId As ULong
  overload: Discord.IWebhook.ChannelId*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IWebhook.Guild
  commentId: P:Discord.IWebhook.Guild
  id: Guild
  parent: Discord.IWebhook
  langs:
  - csharp
  - vb
  name: Guild
  nameWithType: IWebhook.Guild
  fullName: Discord.IWebhook.Guild
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Guild
    path: ../src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
    startLine: 40
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the guild owning this webhook.\n"
  example: []
  syntax:
    content: IGuild Guild { get; }
    parameters: []
    return:
      type: Discord.IGuild
    content.vb: ReadOnly Property Guild As IGuild
  overload: Discord.IWebhook.Guild*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IWebhook.GuildId
  commentId: P:Discord.IWebhook.GuildId
  id: GuildId
  parent: Discord.IWebhook
  langs:
  - csharp
  - vb
  name: GuildId
  nameWithType: IWebhook.GuildId
  fullName: Discord.IWebhook.GuildId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: GuildId
    path: ../src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
    startLine: 44
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the ID of the guild owning this webhook.\n"
  example: []
  syntax:
    content: ulong? GuildId { get; }
    parameters: []
    return:
      type: System.Nullable{System.UInt64}
    content.vb: ReadOnly Property GuildId As ULong?
  overload: Discord.IWebhook.GuildId*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IWebhook.Creator
  commentId: P:Discord.IWebhook.Creator
  id: Creator
  parent: Discord.IWebhook
  langs:
  - csharp
  - vb
  name: Creator
  nameWithType: IWebhook.Creator
  fullName: Discord.IWebhook.Creator
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Creator
    path: ../src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
    startLine: 49
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the user that created this webhook.\n"
  example: []
  syntax:
    content: IUser Creator { get; }
    parameters: []
    return:
      type: Discord.IUser
    content.vb: ReadOnly Property Creator As IUser
  overload: Discord.IWebhook.Creator*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Discord.IWebhook.ModifyAsync(System.Action{Discord.WebhookProperties},Discord.RequestOptions)
  commentId: M:Discord.IWebhook.ModifyAsync(System.Action{Discord.WebhookProperties},Discord.RequestOptions)
  id: ModifyAsync(System.Action{Discord.WebhookProperties},Discord.RequestOptions)
  parent: Discord.IWebhook
  langs:
  - csharp
  - vb
  name: ModifyAsync(Action<WebhookProperties>, RequestOptions)
  nameWithType: IWebhook.ModifyAsync(Action<WebhookProperties>, RequestOptions)
  fullName: Discord.IWebhook.ModifyAsync(System.Action<Discord.WebhookProperties>, Discord.RequestOptions)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ModifyAsync
    path: ../src/Discord.Net.Core/Entities/Webhooks/IWebhook.cs
    startLine: 54
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nModifies this webhook.\n"
  example: []
  syntax:
    content: Task ModifyAsync(Action<WebhookProperties> func, RequestOptions options = null)
    parameters:
    - id: func
      type: System.Action{Discord.WebhookProperties}
    - id: options
      type: Discord.RequestOptions
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ModifyAsync(func As Action(Of WebhookProperties), options As RequestOptions = Nothing) As Task
  overload: Discord.IWebhook.ModifyAsync*
  nameWithType.vb: IWebhook.ModifyAsync(Action(Of WebhookProperties), RequestOptions)
  fullName.vb: Discord.IWebhook.ModifyAsync(System.Action(Of Discord.WebhookProperties), Discord.RequestOptions)
  name.vb: ModifyAsync(Action(Of WebhookProperties), RequestOptions)
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  commentId: M:Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  parent: Discord.IDeletable
  name: DeleteAsync(RequestOptions)
  nameWithType: IDeletable.DeleteAsync(RequestOptions)
  fullName: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
  spec.csharp:
  - uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
    name: DeleteAsync
    nameWithType: IDeletable.DeleteAsync
    fullName: Discord.IDeletable.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.IDeletable.DeleteAsync(Discord.RequestOptions)
    name: DeleteAsync
    nameWithType: IDeletable.DeleteAsync
    fullName: Discord.IDeletable.DeleteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Discord.RequestOptions
    name: RequestOptions
    nameWithType: RequestOptions
    fullName: Discord.RequestOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.ISnowflakeEntity.CreatedAt
  commentId: P:Discord.ISnowflakeEntity.CreatedAt
  parent: Discord.ISnowflakeEntity
  name: CreatedAt
  nameWithType: ISnowflakeEntity.CreatedAt
  fullName: Discord.ISnowflakeEntity.CreatedAt
- uid: Discord.IEntity{System.UInt64}.Id
  commentId: P:Discord.IEntity{System.UInt64}.Id
  parent: Discord.IEntity{System.UInt64}
  definition: Discord.IEntity`1.Id
  name: Id
  nameWithType: IEntity<UInt64>.Id
  fullName: Discord.IEntity<System.UInt64>.Id
  nameWithType.vb: IEntity(Of UInt64).Id
  fullName.vb: Discord.IEntity(Of System.UInt64).Id
- uid: Discord.IDeletable
  commentId: T:Discord.IDeletable
  parent: Discord
  name: IDeletable
  nameWithType: IDeletable
  fullName: Discord.IDeletable
- uid: Discord.ISnowflakeEntity
  commentId: T:Discord.ISnowflakeEntity
  parent: Discord
  name: ISnowflakeEntity
  nameWithType: ISnowflakeEntity
  fullName: Discord.ISnowflakeEntity
- uid: Discord.IEntity`1.Id
  commentId: P:Discord.IEntity`1.Id
  name: Id
  nameWithType: IEntity<TId>.Id
  fullName: Discord.IEntity<TId>.Id
  nameWithType.vb: IEntity(Of TId).Id
  fullName.vb: Discord.IEntity(Of TId).Id
- uid: Discord.IEntity{System.UInt64}
  commentId: T:Discord.IEntity{System.UInt64}
  parent: Discord
  definition: Discord.IEntity`1
  name: IEntity<UInt64>
  nameWithType: IEntity<UInt64>
  fullName: Discord.IEntity<System.UInt64>
  nameWithType.vb: IEntity(Of UInt64)
  fullName.vb: Discord.IEntity(Of System.UInt64)
  name.vb: IEntity(Of UInt64)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IEntity`1
  commentId: T:Discord.IEntity`1
  name: IEntity<TId>
  nameWithType: IEntity<TId>
  fullName: Discord.IEntity<TId>
  nameWithType.vb: IEntity(Of TId)
  fullName.vb: Discord.IEntity(Of TId)
  name.vb: IEntity(Of TId)
  spec.csharp:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Discord.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TId
    nameWithType: TId
    fullName: TId
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IWebhook.Token*
  commentId: Overload:Discord.IWebhook.Token
  name: Token
  nameWithType: IWebhook.Token
  fullName: Discord.IWebhook.Token
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.IWebhook.Name*
  commentId: Overload:Discord.IWebhook.Name
  name: Name
  nameWithType: IWebhook.Name
  fullName: Discord.IWebhook.Name
- uid: Discord.IWebhook.AvatarId*
  commentId: Overload:Discord.IWebhook.AvatarId
  name: AvatarId
  nameWithType: IWebhook.AvatarId
  fullName: Discord.IWebhook.AvatarId
- uid: Discord.IWebhook.GetAvatarUrl*
  commentId: Overload:Discord.IWebhook.GetAvatarUrl
  name: GetAvatarUrl
  nameWithType: IWebhook.GetAvatarUrl
  fullName: Discord.IWebhook.GetAvatarUrl
- uid: Discord.ImageFormat
  commentId: T:Discord.ImageFormat
  parent: Discord
  name: ImageFormat
  nameWithType: ImageFormat
  fullName: Discord.ImageFormat
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Discord.IWebhook.Channel*
  commentId: Overload:Discord.IWebhook.Channel
  name: Channel
  nameWithType: IWebhook.Channel
  fullName: Discord.IWebhook.Channel
- uid: Discord.ITextChannel
  commentId: T:Discord.ITextChannel
  parent: Discord
  name: ITextChannel
  nameWithType: ITextChannel
  fullName: Discord.ITextChannel
- uid: Discord.IWebhook.ChannelId*
  commentId: Overload:Discord.IWebhook.ChannelId
  name: ChannelId
  nameWithType: IWebhook.ChannelId
  fullName: Discord.IWebhook.ChannelId
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.IWebhook.Guild*
  commentId: Overload:Discord.IWebhook.Guild
  name: Guild
  nameWithType: IWebhook.Guild
  fullName: Discord.IWebhook.Guild
- uid: Discord.IGuild
  commentId: T:Discord.IGuild
  parent: Discord
  name: IGuild
  nameWithType: IGuild
  fullName: Discord.IGuild
- uid: Discord.IWebhook.GuildId*
  commentId: Overload:Discord.IWebhook.GuildId
  name: GuildId
  nameWithType: IWebhook.GuildId
  fullName: Discord.IWebhook.GuildId
- uid: System.Nullable{System.UInt64}
  commentId: T:System.Nullable{System.UInt64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<UInt64>
  nameWithType: Nullable<UInt64>
  fullName: System.Nullable<System.UInt64>
  nameWithType.vb: Nullable(Of UInt64)
  fullName.vb: System.Nullable(Of System.UInt64)
  name.vb: Nullable(Of UInt64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    nameWithType: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IWebhook.Creator*
  commentId: Overload:Discord.IWebhook.Creator
  name: Creator
  nameWithType: IWebhook.Creator
  fullName: Discord.IWebhook.Creator
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
- uid: Discord.IWebhook.ModifyAsync*
  commentId: Overload:Discord.IWebhook.ModifyAsync
  name: ModifyAsync
  nameWithType: IWebhook.ModifyAsync
  fullName: Discord.IWebhook.ModifyAsync
- uid: System.Action{Discord.WebhookProperties}
  commentId: T:System.Action{Discord.WebhookProperties}
  parent: System
  definition: System.Action`1
  name: Action<WebhookProperties>
  nameWithType: Action<WebhookProperties>
  fullName: System.Action<Discord.WebhookProperties>
  nameWithType.vb: Action(Of WebhookProperties)
  fullName.vb: System.Action(Of Discord.WebhookProperties)
  name.vb: Action(Of WebhookProperties)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.WebhookProperties
    name: WebhookProperties
    nameWithType: WebhookProperties
    fullName: Discord.WebhookProperties
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.WebhookProperties
    name: WebhookProperties
    nameWithType: WebhookProperties
    fullName: Discord.WebhookProperties
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.RequestOptions
  commentId: T:Discord.RequestOptions
  parent: Discord
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: Discord.RequestOptions
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
