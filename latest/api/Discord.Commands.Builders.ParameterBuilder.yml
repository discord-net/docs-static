### YamlMime:ManagedReference
items:
- uid: Discord.Commands.Builders.ParameterBuilder
  commentId: T:Discord.Commands.Builders.ParameterBuilder
  id: ParameterBuilder
  parent: Discord.Commands.Builders
  children:
  - Discord.Commands.Builders.ParameterBuilder.AddAttributes(Attribute[])
  - Discord.Commands.Builders.ParameterBuilder.AddPrecondition(Discord.Commands.ParameterPreconditionAttribute)
  - Discord.Commands.Builders.ParameterBuilder.Attributes
  - Discord.Commands.Builders.ParameterBuilder.Command
  - Discord.Commands.Builders.ParameterBuilder.DefaultValue
  - Discord.Commands.Builders.ParameterBuilder.IsMultiple
  - Discord.Commands.Builders.ParameterBuilder.IsOptional
  - Discord.Commands.Builders.ParameterBuilder.IsRemainder
  - Discord.Commands.Builders.ParameterBuilder.Name
  - Discord.Commands.Builders.ParameterBuilder.ParameterType
  - Discord.Commands.Builders.ParameterBuilder.Preconditions
  - Discord.Commands.Builders.ParameterBuilder.Summary
  - Discord.Commands.Builders.ParameterBuilder.TypeReader
  - Discord.Commands.Builders.ParameterBuilder.WithDefault(System.Object)
  - Discord.Commands.Builders.ParameterBuilder.WithIsMultiple(System.Boolean)
  - Discord.Commands.Builders.ParameterBuilder.WithIsOptional(System.Boolean)
  - Discord.Commands.Builders.ParameterBuilder.WithIsRemainder(System.Boolean)
  - Discord.Commands.Builders.ParameterBuilder.WithSummary(System.String)
  langs:
  - csharp
  - vb
  name: ParameterBuilder
  nameWithType: ParameterBuilder
  fullName: Discord.Commands.Builders.ParameterBuilder
  type: Class
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ParameterBuilder
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 8
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: 'public class ParameterBuilder : object'
    content.vb: >-
      Public Class ParameterBuilder
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Commands.Builders.ParameterBuilder.Command
  commentId: P:Discord.Commands.Builders.ParameterBuilder.Command
  id: Command
  parent: Discord.Commands.Builders.ParameterBuilder
  langs:
  - csharp
  - vb
  name: Command
  nameWithType: ParameterBuilder.Command
  fullName: Discord.Commands.Builders.ParameterBuilder.Command
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Command
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 13
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public CommandBuilder Command { get; }
    parameters: []
    return:
      type: Discord.Commands.Builders.CommandBuilder
    content.vb: Public ReadOnly Property Command As CommandBuilder
  overload: Discord.Commands.Builders.ParameterBuilder.Command*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.Builders.ParameterBuilder.Name
  commentId: P:Discord.Commands.Builders.ParameterBuilder.Name
  id: Name
  parent: Discord.Commands.Builders.ParameterBuilder
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ParameterBuilder.Name
  fullName: Discord.Commands.Builders.ParameterBuilder.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 14
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: Discord.Commands.Builders.ParameterBuilder.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.Builders.ParameterBuilder.ParameterType
  commentId: P:Discord.Commands.Builders.ParameterBuilder.ParameterType
  id: ParameterType
  parent: Discord.Commands.Builders.ParameterBuilder
  langs:
  - csharp
  - vb
  name: ParameterType
  nameWithType: ParameterBuilder.ParameterType
  fullName: Discord.Commands.Builders.ParameterBuilder.ParameterType
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: ParameterType
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 15
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public Type ParameterType { get; }
    parameters: []
    return:
      type: Type
    content.vb: Public ReadOnly Property ParameterType As Type
  overload: Discord.Commands.Builders.ParameterBuilder.ParameterType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.Builders.ParameterBuilder.TypeReader
  commentId: P:Discord.Commands.Builders.ParameterBuilder.TypeReader
  id: TypeReader
  parent: Discord.Commands.Builders.ParameterBuilder
  langs:
  - csharp
  - vb
  name: TypeReader
  nameWithType: ParameterBuilder.TypeReader
  fullName: Discord.Commands.Builders.ParameterBuilder.TypeReader
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: TypeReader
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 17
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public TypeReader TypeReader { get; set; }
    parameters: []
    return:
      type: Discord.Commands.TypeReader
    content.vb: Public Property TypeReader As TypeReader
  overload: Discord.Commands.Builders.ParameterBuilder.TypeReader*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ParameterBuilder.IsOptional
  commentId: P:Discord.Commands.Builders.ParameterBuilder.IsOptional
  id: IsOptional
  parent: Discord.Commands.Builders.ParameterBuilder
  langs:
  - csharp
  - vb
  name: IsOptional
  nameWithType: ParameterBuilder.IsOptional
  fullName: Discord.Commands.Builders.ParameterBuilder.IsOptional
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IsOptional
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 18
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public bool IsOptional { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsOptional As Boolean
  overload: Discord.Commands.Builders.ParameterBuilder.IsOptional*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ParameterBuilder.IsRemainder
  commentId: P:Discord.Commands.Builders.ParameterBuilder.IsRemainder
  id: IsRemainder
  parent: Discord.Commands.Builders.ParameterBuilder
  langs:
  - csharp
  - vb
  name: IsRemainder
  nameWithType: ParameterBuilder.IsRemainder
  fullName: Discord.Commands.Builders.ParameterBuilder.IsRemainder
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IsRemainder
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 19
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public bool IsRemainder { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsRemainder As Boolean
  overload: Discord.Commands.Builders.ParameterBuilder.IsRemainder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ParameterBuilder.IsMultiple
  commentId: P:Discord.Commands.Builders.ParameterBuilder.IsMultiple
  id: IsMultiple
  parent: Discord.Commands.Builders.ParameterBuilder
  langs:
  - csharp
  - vb
  name: IsMultiple
  nameWithType: ParameterBuilder.IsMultiple
  fullName: Discord.Commands.Builders.ParameterBuilder.IsMultiple
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IsMultiple
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 20
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public bool IsMultiple { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsMultiple As Boolean
  overload: Discord.Commands.Builders.ParameterBuilder.IsMultiple*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ParameterBuilder.DefaultValue
  commentId: P:Discord.Commands.Builders.ParameterBuilder.DefaultValue
  id: DefaultValue
  parent: Discord.Commands.Builders.ParameterBuilder
  langs:
  - csharp
  - vb
  name: DefaultValue
  nameWithType: ParameterBuilder.DefaultValue
  fullName: Discord.Commands.Builders.ParameterBuilder.DefaultValue
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: DefaultValue
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 21
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public object DefaultValue { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property DefaultValue As Object
  overload: Discord.Commands.Builders.ParameterBuilder.DefaultValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ParameterBuilder.Summary
  commentId: P:Discord.Commands.Builders.ParameterBuilder.Summary
  id: Summary
  parent: Discord.Commands.Builders.ParameterBuilder
  langs:
  - csharp
  - vb
  name: Summary
  nameWithType: ParameterBuilder.Summary
  fullName: Discord.Commands.Builders.ParameterBuilder.Summary
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Summary
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 22
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public string Summary { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Summary As String
  overload: Discord.Commands.Builders.ParameterBuilder.Summary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ParameterBuilder.Preconditions
  commentId: P:Discord.Commands.Builders.ParameterBuilder.Preconditions
  id: Preconditions
  parent: Discord.Commands.Builders.ParameterBuilder
  langs:
  - csharp
  - vb
  name: Preconditions
  nameWithType: ParameterBuilder.Preconditions
  fullName: Discord.Commands.Builders.ParameterBuilder.Preconditions
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Preconditions
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 24
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public IReadOnlyList<ParameterPreconditionAttribute> Preconditions { get; }
    parameters: []
    return:
      type: IReadOnlyList{Discord.Commands.ParameterPreconditionAttribute}
    content.vb: Public ReadOnly Property Preconditions As IReadOnlyList(Of ParameterPreconditionAttribute)
  overload: Discord.Commands.Builders.ParameterBuilder.Preconditions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.Builders.ParameterBuilder.Attributes
  commentId: P:Discord.Commands.Builders.ParameterBuilder.Attributes
  id: Attributes
  parent: Discord.Commands.Builders.ParameterBuilder
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: ParameterBuilder.Attributes
  fullName: Discord.Commands.Builders.ParameterBuilder.Attributes
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Attributes
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 25
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public IReadOnlyList<Attribute> Attributes { get; }
    parameters: []
    return:
      type: IReadOnlyList{Attribute}
    content.vb: Public ReadOnly Property Attributes As IReadOnlyList(Of Attribute)
  overload: Discord.Commands.Builders.ParameterBuilder.Attributes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.Builders.ParameterBuilder.WithSummary(System.String)
  commentId: M:Discord.Commands.Builders.ParameterBuilder.WithSummary(System.String)
  id: WithSummary(System.String)
  parent: Discord.Commands.Builders.ParameterBuilder
  langs:
  - csharp
  - vb
  name: WithSummary(String)
  nameWithType: ParameterBuilder.WithSummary(String)
  fullName: Discord.Commands.Builders.ParameterBuilder.WithSummary(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: WithSummary
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 90
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public ParameterBuilder WithSummary(string summary)
    parameters:
    - id: summary
      type: System.String
    return:
      type: Discord.Commands.Builders.ParameterBuilder
    content.vb: Public Function WithSummary(summary As String) As ParameterBuilder
  overload: Discord.Commands.Builders.ParameterBuilder.WithSummary*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ParameterBuilder.WithDefault(System.Object)
  commentId: M:Discord.Commands.Builders.ParameterBuilder.WithDefault(System.Object)
  id: WithDefault(System.Object)
  parent: Discord.Commands.Builders.ParameterBuilder
  langs:
  - csharp
  - vb
  name: WithDefault(Object)
  nameWithType: ParameterBuilder.WithDefault(Object)
  fullName: Discord.Commands.Builders.ParameterBuilder.WithDefault(System.Object)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: WithDefault
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 95
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public ParameterBuilder WithDefault(object defaultValue)
    parameters:
    - id: defaultValue
      type: System.Object
    return:
      type: Discord.Commands.Builders.ParameterBuilder
    content.vb: Public Function WithDefault(defaultValue As Object) As ParameterBuilder
  overload: Discord.Commands.Builders.ParameterBuilder.WithDefault*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ParameterBuilder.WithIsOptional(System.Boolean)
  commentId: M:Discord.Commands.Builders.ParameterBuilder.WithIsOptional(System.Boolean)
  id: WithIsOptional(System.Boolean)
  parent: Discord.Commands.Builders.ParameterBuilder
  langs:
  - csharp
  - vb
  name: WithIsOptional(Boolean)
  nameWithType: ParameterBuilder.WithIsOptional(Boolean)
  fullName: Discord.Commands.Builders.ParameterBuilder.WithIsOptional(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: WithIsOptional
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 100
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public ParameterBuilder WithIsOptional(bool isOptional)
    parameters:
    - id: isOptional
      type: System.Boolean
    return:
      type: Discord.Commands.Builders.ParameterBuilder
    content.vb: Public Function WithIsOptional(isOptional As Boolean) As ParameterBuilder
  overload: Discord.Commands.Builders.ParameterBuilder.WithIsOptional*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ParameterBuilder.WithIsRemainder(System.Boolean)
  commentId: M:Discord.Commands.Builders.ParameterBuilder.WithIsRemainder(System.Boolean)
  id: WithIsRemainder(System.Boolean)
  parent: Discord.Commands.Builders.ParameterBuilder
  langs:
  - csharp
  - vb
  name: WithIsRemainder(Boolean)
  nameWithType: ParameterBuilder.WithIsRemainder(Boolean)
  fullName: Discord.Commands.Builders.ParameterBuilder.WithIsRemainder(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: WithIsRemainder
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 105
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public ParameterBuilder WithIsRemainder(bool isRemainder)
    parameters:
    - id: isRemainder
      type: System.Boolean
    return:
      type: Discord.Commands.Builders.ParameterBuilder
    content.vb: Public Function WithIsRemainder(isRemainder As Boolean) As ParameterBuilder
  overload: Discord.Commands.Builders.ParameterBuilder.WithIsRemainder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ParameterBuilder.WithIsMultiple(System.Boolean)
  commentId: M:Discord.Commands.Builders.ParameterBuilder.WithIsMultiple(System.Boolean)
  id: WithIsMultiple(System.Boolean)
  parent: Discord.Commands.Builders.ParameterBuilder
  langs:
  - csharp
  - vb
  name: WithIsMultiple(Boolean)
  nameWithType: ParameterBuilder.WithIsMultiple(Boolean)
  fullName: Discord.Commands.Builders.ParameterBuilder.WithIsMultiple(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: WithIsMultiple
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 110
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public ParameterBuilder WithIsMultiple(bool isMultiple)
    parameters:
    - id: isMultiple
      type: System.Boolean
    return:
      type: Discord.Commands.Builders.ParameterBuilder
    content.vb: Public Function WithIsMultiple(isMultiple As Boolean) As ParameterBuilder
  overload: Discord.Commands.Builders.ParameterBuilder.WithIsMultiple*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.ParameterBuilder.AddAttributes(Attribute[])
  commentId: M:Discord.Commands.Builders.ParameterBuilder.AddAttributes(Attribute[])
  id: AddAttributes(Attribute[])
  parent: Discord.Commands.Builders.ParameterBuilder
  langs:
  - csharp
  - vb
  name: AddAttributes(Attribute[])
  nameWithType: ParameterBuilder.AddAttributes(Attribute[])
  fullName: Discord.Commands.Builders.ParameterBuilder.AddAttributes(Attribute[])
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: AddAttributes
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 116
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public ParameterBuilder AddAttributes(params Attribute[] attributes)
    parameters:
    - id: attributes
      type: Attribute[]
    return:
      type: Discord.Commands.Builders.ParameterBuilder
    content.vb: Public Function AddAttributes(ParamArray attributes As Attribute()) As ParameterBuilder
  overload: Discord.Commands.Builders.ParameterBuilder.AddAttributes*
  nameWithType.vb: ParameterBuilder.AddAttributes(Attribute())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Commands.Builders.ParameterBuilder.AddAttributes(Attribute())
  name.vb: AddAttributes(Attribute())
- uid: Discord.Commands.Builders.ParameterBuilder.AddPrecondition(Discord.Commands.ParameterPreconditionAttribute)
  commentId: M:Discord.Commands.Builders.ParameterBuilder.AddPrecondition(Discord.Commands.ParameterPreconditionAttribute)
  id: AddPrecondition(Discord.Commands.ParameterPreconditionAttribute)
  parent: Discord.Commands.Builders.ParameterBuilder
  langs:
  - csharp
  - vb
  name: AddPrecondition(ParameterPreconditionAttribute)
  nameWithType: ParameterBuilder.AddPrecondition(ParameterPreconditionAttribute)
  fullName: Discord.Commands.Builders.ParameterBuilder.AddPrecondition(Discord.Commands.ParameterPreconditionAttribute)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/ParameterBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: AddPrecondition
    path: ../src/Discord.Net.Commands/Builders/ParameterBuilder.cs
    startLine: 121
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public ParameterBuilder AddPrecondition(ParameterPreconditionAttribute precondition)
    parameters:
    - id: precondition
      type: Discord.Commands.ParameterPreconditionAttribute
    return:
      type: Discord.Commands.Builders.ParameterBuilder
    content.vb: Public Function AddPrecondition(precondition As ParameterPreconditionAttribute) As ParameterBuilder
  overload: Discord.Commands.Builders.ParameterBuilder.AddPrecondition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Discord.Commands.Builders
  commentId: N:Discord.Commands.Builders
  name: Discord.Commands.Builders
  nameWithType: Discord.Commands.Builders
  fullName: Discord.Commands.Builders
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Commands.Builders.ParameterBuilder.Command*
  commentId: Overload:Discord.Commands.Builders.ParameterBuilder.Command
  name: Command
  nameWithType: ParameterBuilder.Command
  fullName: Discord.Commands.Builders.ParameterBuilder.Command
- uid: Discord.Commands.Builders.CommandBuilder
  commentId: T:Discord.Commands.Builders.CommandBuilder
  parent: Discord.Commands.Builders
  name: CommandBuilder
  nameWithType: CommandBuilder
  fullName: Discord.Commands.Builders.CommandBuilder
- uid: Discord.Commands.Builders.ParameterBuilder.Name*
  commentId: Overload:Discord.Commands.Builders.ParameterBuilder.Name
  name: Name
  nameWithType: ParameterBuilder.Name
  fullName: Discord.Commands.Builders.ParameterBuilder.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Commands.Builders.ParameterBuilder.ParameterType*
  commentId: Overload:Discord.Commands.Builders.ParameterBuilder.ParameterType
  name: ParameterType
  nameWithType: ParameterBuilder.ParameterType
  fullName: Discord.Commands.Builders.ParameterBuilder.ParameterType
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: Discord.Commands.Builders.ParameterBuilder.TypeReader*
  commentId: Overload:Discord.Commands.Builders.ParameterBuilder.TypeReader
  name: TypeReader
  nameWithType: ParameterBuilder.TypeReader
  fullName: Discord.Commands.Builders.ParameterBuilder.TypeReader
- uid: Discord.Commands.TypeReader
  commentId: T:Discord.Commands.TypeReader
  parent: Discord.Commands
  name: TypeReader
  nameWithType: TypeReader
  fullName: Discord.Commands.TypeReader
- uid: Discord.Commands
  commentId: N:Discord.Commands
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
- uid: Discord.Commands.Builders.ParameterBuilder.IsOptional*
  commentId: Overload:Discord.Commands.Builders.ParameterBuilder.IsOptional
  name: IsOptional
  nameWithType: ParameterBuilder.IsOptional
  fullName: Discord.Commands.Builders.ParameterBuilder.IsOptional
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.Commands.Builders.ParameterBuilder.IsRemainder*
  commentId: Overload:Discord.Commands.Builders.ParameterBuilder.IsRemainder
  name: IsRemainder
  nameWithType: ParameterBuilder.IsRemainder
  fullName: Discord.Commands.Builders.ParameterBuilder.IsRemainder
- uid: Discord.Commands.Builders.ParameterBuilder.IsMultiple*
  commentId: Overload:Discord.Commands.Builders.ParameterBuilder.IsMultiple
  name: IsMultiple
  nameWithType: ParameterBuilder.IsMultiple
  fullName: Discord.Commands.Builders.ParameterBuilder.IsMultiple
- uid: Discord.Commands.Builders.ParameterBuilder.DefaultValue*
  commentId: Overload:Discord.Commands.Builders.ParameterBuilder.DefaultValue
  name: DefaultValue
  nameWithType: ParameterBuilder.DefaultValue
  fullName: Discord.Commands.Builders.ParameterBuilder.DefaultValue
- uid: Discord.Commands.Builders.ParameterBuilder.Summary*
  commentId: Overload:Discord.Commands.Builders.ParameterBuilder.Summary
  name: Summary
  nameWithType: ParameterBuilder.Summary
  fullName: Discord.Commands.Builders.ParameterBuilder.Summary
- uid: Discord.Commands.Builders.ParameterBuilder.Preconditions*
  commentId: Overload:Discord.Commands.Builders.ParameterBuilder.Preconditions
  name: Preconditions
  nameWithType: ParameterBuilder.Preconditions
  fullName: Discord.Commands.Builders.ParameterBuilder.Preconditions
- uid: IReadOnlyList{Discord.Commands.ParameterPreconditionAttribute}
  commentId: '!:IReadOnlyList{Discord.Commands.ParameterPreconditionAttribute}'
  definition: IReadOnlyList`1
  name: IReadOnlyList<ParameterPreconditionAttribute>
  nameWithType: IReadOnlyList<ParameterPreconditionAttribute>
  fullName: IReadOnlyList<Discord.Commands.ParameterPreconditionAttribute>
  nameWithType.vb: IReadOnlyList(Of ParameterPreconditionAttribute)
  fullName.vb: IReadOnlyList(Of Discord.Commands.ParameterPreconditionAttribute)
  name.vb: IReadOnlyList(Of ParameterPreconditionAttribute)
  spec.csharp:
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Commands.ParameterPreconditionAttribute
    name: ParameterPreconditionAttribute
    nameWithType: ParameterPreconditionAttribute
    fullName: Discord.Commands.ParameterPreconditionAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Commands.ParameterPreconditionAttribute
    name: ParameterPreconditionAttribute
    nameWithType: ParameterPreconditionAttribute
    fullName: Discord.Commands.ParameterPreconditionAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<>
  nameWithType: IReadOnlyList<>
  fullName: IReadOnlyList<>
  nameWithType.vb: IReadOnlyList(Of )
  fullName.vb: IReadOnlyList(Of )
  name.vb: IReadOnlyList(Of )
  spec.csharp:
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Commands.Builders.ParameterBuilder.Attributes*
  commentId: Overload:Discord.Commands.Builders.ParameterBuilder.Attributes
  name: Attributes
  nameWithType: ParameterBuilder.Attributes
  fullName: Discord.Commands.Builders.ParameterBuilder.Attributes
- uid: IReadOnlyList{Attribute}
  commentId: '!:IReadOnlyList{Attribute}'
  definition: IReadOnlyList`1
  name: IReadOnlyList<Attribute>
  nameWithType: IReadOnlyList<Attribute>
  fullName: IReadOnlyList<Attribute>
  nameWithType.vb: IReadOnlyList(Of Attribute)
  fullName.vb: IReadOnlyList(Of Attribute)
  name.vb: IReadOnlyList(Of Attribute)
  spec.csharp:
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Commands.Builders.ParameterBuilder.WithSummary*
  commentId: Overload:Discord.Commands.Builders.ParameterBuilder.WithSummary
  name: WithSummary
  nameWithType: ParameterBuilder.WithSummary
  fullName: Discord.Commands.Builders.ParameterBuilder.WithSummary
- uid: Discord.Commands.Builders.ParameterBuilder
  commentId: T:Discord.Commands.Builders.ParameterBuilder
  parent: Discord.Commands.Builders
  name: ParameterBuilder
  nameWithType: ParameterBuilder
  fullName: Discord.Commands.Builders.ParameterBuilder
- uid: Discord.Commands.Builders.ParameterBuilder.WithDefault*
  commentId: Overload:Discord.Commands.Builders.ParameterBuilder.WithDefault
  name: WithDefault
  nameWithType: ParameterBuilder.WithDefault
  fullName: Discord.Commands.Builders.ParameterBuilder.WithDefault
- uid: Discord.Commands.Builders.ParameterBuilder.WithIsOptional*
  commentId: Overload:Discord.Commands.Builders.ParameterBuilder.WithIsOptional
  name: WithIsOptional
  nameWithType: ParameterBuilder.WithIsOptional
  fullName: Discord.Commands.Builders.ParameterBuilder.WithIsOptional
- uid: Discord.Commands.Builders.ParameterBuilder.WithIsRemainder*
  commentId: Overload:Discord.Commands.Builders.ParameterBuilder.WithIsRemainder
  name: WithIsRemainder
  nameWithType: ParameterBuilder.WithIsRemainder
  fullName: Discord.Commands.Builders.ParameterBuilder.WithIsRemainder
- uid: Discord.Commands.Builders.ParameterBuilder.WithIsMultiple*
  commentId: Overload:Discord.Commands.Builders.ParameterBuilder.WithIsMultiple
  name: WithIsMultiple
  nameWithType: ParameterBuilder.WithIsMultiple
  fullName: Discord.Commands.Builders.ParameterBuilder.WithIsMultiple
- uid: Discord.Commands.Builders.ParameterBuilder.AddAttributes*
  commentId: Overload:Discord.Commands.Builders.ParameterBuilder.AddAttributes
  name: AddAttributes
  nameWithType: ParameterBuilder.AddAttributes
  fullName: Discord.Commands.Builders.ParameterBuilder.AddAttributes
- uid: Attribute[]
  isExternal: true
  name: Attribute[]
  nameWithType: Attribute[]
  fullName: Attribute[]
  nameWithType.vb: Attribute()
  fullName.vb: Attribute()
  name.vb: Attribute()
  spec.csharp:
  - uid: Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Discord.Commands.Builders.ParameterBuilder.AddPrecondition*
  commentId: Overload:Discord.Commands.Builders.ParameterBuilder.AddPrecondition
  name: AddPrecondition
  nameWithType: ParameterBuilder.AddPrecondition
  fullName: Discord.Commands.Builders.ParameterBuilder.AddPrecondition
- uid: Discord.Commands.ParameterPreconditionAttribute
  commentId: T:Discord.Commands.ParameterPreconditionAttribute
  parent: Discord.Commands
  name: ParameterPreconditionAttribute
  nameWithType: ParameterPreconditionAttribute
  fullName: Discord.Commands.ParameterPreconditionAttribute
