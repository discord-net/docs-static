### YamlMime:ManagedReference
items:
- uid: Discord.TextChannelProperties
  commentId: T:Discord.TextChannelProperties
  id: TextChannelProperties
  parent: Discord
  children:
  - Discord.TextChannelProperties.IsNsfw
  - Discord.TextChannelProperties.SlowModeInterval
  - Discord.TextChannelProperties.Topic
  langs:
  - csharp
  - vb
  name: TextChannelProperties
  nameWithType: TextChannelProperties
  fullName: Discord.TextChannelProperties
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Channels/TextChannelProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: TextChannelProperties
    path: ../src/Discord.Net.Core/Entities/Channels/TextChannelProperties.cs
    startLine: 8
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nProvides properties that are used to modify an <xref href=\"Discord.ITextChannel\" data-throw-if-not-resolved=\"false\"></xref> with the specified changes.\n"
  example: []
  syntax:
    content: 'public class TextChannelProperties : GuildChannelProperties'
    content.vb: >-
      Public Class TextChannelProperties
          Inherits GuildChannelProperties
  inheritance:
  - System.Object
  - Discord.GuildChannelProperties
  inheritedMembers:
  - Discord.GuildChannelProperties.Name
  - Discord.GuildChannelProperties.Position
  - Discord.GuildChannelProperties.CategoryId
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.TextChannelProperties.Topic
  commentId: P:Discord.TextChannelProperties.Topic
  id: Topic
  parent: Discord.TextChannelProperties
  langs:
  - csharp
  - vb
  name: Topic
  nameWithType: TextChannelProperties.Topic
  fullName: Discord.TextChannelProperties.Topic
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Channels/TextChannelProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Topic
    path: ../src/Discord.Net.Core/Entities/Channels/TextChannelProperties.cs
    startLine: 17
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the topic of the channel.\n"
  remarks: "\nSetting this value to any string other than <code>null</code> or <see cref=\"!:string.Empty\"></see> will set the\nchannel topic or description to the desired value.\n"
  example: []
  syntax:
    content: public Optional<string> Topic { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.String}
    content.vb: 'Public Property Topic As '
  overload: Discord.TextChannelProperties.Topic*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.TextChannelProperties.IsNsfw
  commentId: P:Discord.TextChannelProperties.IsNsfw
  id: IsNsfw
  parent: Discord.TextChannelProperties
  langs:
  - csharp
  - vb
  name: IsNsfw
  nameWithType: TextChannelProperties.IsNsfw
  fullName: Discord.TextChannelProperties.IsNsfw
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Channels/TextChannelProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IsNsfw
    path: ../src/Discord.Net.Core/Entities/Channels/TextChannelProperties.cs
    startLine: 26
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets whether this channel should be flagged as NSFW.\n"
  remarks: "\nSetting this value to <code>true</code> will mark the channel as NSFW (Not Safe For Work) and will prompt the\nuser about its possibly mature nature before they may view the channel; setting this value to <code>false</code> will\nremove the NSFW indicator.\n"
  example: []
  syntax:
    content: public Optional<bool> IsNsfw { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Boolean}
    content.vb: 'Public Property IsNsfw As '
  overload: Discord.TextChannelProperties.IsNsfw*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.TextChannelProperties.SlowModeInterval
  commentId: P:Discord.TextChannelProperties.SlowModeInterval
  id: SlowModeInterval
  parent: Discord.TextChannelProperties
  langs:
  - csharp
  - vb
  name: SlowModeInterval
  nameWithType: TextChannelProperties.SlowModeInterval
  fullName: Discord.TextChannelProperties.SlowModeInterval
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Channels/TextChannelProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SlowModeInterval
    path: ../src/Discord.Net.Core/Entities/Channels/TextChannelProperties.cs
    startLine: 39
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the slow-mode ratelimit in seconds for this channel.\n"
  remarks: "\nSetting this value to anything above zero will require each user to wait X seconds before\nsending another message; setting this value to <code>0</code> will disable slow-mode for this channel.\n<div class=\"NOTE\"><h5>note</h5><p>\n    Users with <xref href=\"Discord.ChannelPermission.ManageMessages\" data-throw-if-not-resolved=\"false\"></xref> or \n<xref href=\"Discord.ChannelPermission.ManageChannels\" data-throw-if-not-resolved=\"false\"></xref> will be exempt from slow-mode.\n</p></div>\n"
  example: []
  syntax:
    content: public Optional<int> SlowModeInterval { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Int32}
    content.vb: 'Public Property SlowModeInterval As '
  overload: Discord.TextChannelProperties.SlowModeInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Discord.ITextChannel
  commentId: T:Discord.ITextChannel
  parent: Discord
  name: ITextChannel
  nameWithType: ITextChannel
  fullName: Discord.ITextChannel
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.GuildChannelProperties
  commentId: T:Discord.GuildChannelProperties
  parent: Discord
  name: GuildChannelProperties
  nameWithType: GuildChannelProperties
  fullName: Discord.GuildChannelProperties
- uid: Discord.GuildChannelProperties.Name
  commentId: P:Discord.GuildChannelProperties.Name
  parent: Discord.GuildChannelProperties
  name: Name
  nameWithType: GuildChannelProperties.Name
  fullName: Discord.GuildChannelProperties.Name
- uid: Discord.GuildChannelProperties.Position
  commentId: P:Discord.GuildChannelProperties.Position
  parent: Discord.GuildChannelProperties
  name: Position
  nameWithType: GuildChannelProperties.Position
  fullName: Discord.GuildChannelProperties.Position
- uid: Discord.GuildChannelProperties.CategoryId
  commentId: P:Discord.GuildChannelProperties.CategoryId
  parent: Discord.GuildChannelProperties
  name: CategoryId
  nameWithType: GuildChannelProperties.CategoryId
  fullName: Discord.GuildChannelProperties.CategoryId
- uid: Discord.TextChannelProperties.Topic*
  commentId: Overload:Discord.TextChannelProperties.Topic
  name: Topic
  nameWithType: TextChannelProperties.Topic
  fullName: Discord.TextChannelProperties.Topic
- uid: Discord.Optional{System.String}
  commentId: T:Discord.Optional{System.String}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<String>
  nameWithType: Optional<String>
  fullName: Discord.Optional<System.String>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Discord.Optional(Of System.String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Optional`1
  commentId: T:Discord.Optional`1
  parent: Discord
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: Discord.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: Discord.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.TextChannelProperties.IsNsfw*
  commentId: Overload:Discord.TextChannelProperties.IsNsfw
  name: IsNsfw
  nameWithType: TextChannelProperties.IsNsfw
  fullName: Discord.TextChannelProperties.IsNsfw
- uid: Discord.Optional{System.Boolean}
  commentId: T:Discord.Optional{System.Boolean}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<Boolean>
  nameWithType: Optional<Boolean>
  fullName: Discord.Optional<System.Boolean>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: Discord.Optional(Of System.Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.ChannelPermission.ManageMessages
  commentId: F:Discord.ChannelPermission.ManageMessages
  isExternal: true
- uid: Discord.ChannelPermission.ManageChannels
  commentId: F:Discord.ChannelPermission.ManageChannels
  isExternal: true
- uid: Discord.TextChannelProperties.SlowModeInterval*
  commentId: Overload:Discord.TextChannelProperties.SlowModeInterval
  name: SlowModeInterval
  nameWithType: TextChannelProperties.SlowModeInterval
  fullName: Discord.TextChannelProperties.SlowModeInterval
- uid: Discord.Optional{System.Int32}
  commentId: T:Discord.Optional{System.Int32}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<Int32>
  nameWithType: Optional<Int32>
  fullName: Discord.Optional<System.Int32>
  nameWithType.vb: Optional(Of Int32)
  fullName.vb: Discord.Optional(Of System.Int32)
  name.vb: Optional(Of Int32)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
