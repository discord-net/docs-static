### YamlMime:ManagedReference
items:
- uid: Discord.IntegrationAccount
  commentId: T:Discord.IntegrationAccount
  id: IntegrationAccount
  parent: Discord
  children:
  - Discord.IntegrationAccount.Id
  - Discord.IntegrationAccount.Name
  - Discord.IntegrationAccount.ToString
  langs:
  - csharp
  - vb
  name: IntegrationAccount
  nameWithType: IntegrationAccount
  fullName: Discord.IntegrationAccount
  type: Struct
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/IntegrationAccount.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IntegrationAccount
    path: ../src/Discord.Net.Core/Entities/Guilds/IntegrationAccount.cs
    startLine: 4
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public struct IntegrationAccount
    content.vb: Public Structure IntegrationAccount
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Discord.IntegrationAccount.Id
  commentId: P:Discord.IntegrationAccount.Id
  id: Id
  parent: Discord.IntegrationAccount
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IntegrationAccount.Id
  fullName: Discord.IntegrationAccount.Id
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/IntegrationAccount.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Id
    path: ../src/Discord.Net.Core/Entities/Guilds/IntegrationAccount.cs
    startLine: 9
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets the ID of the account. '
  example: []
  syntax:
    content: public string Id { get; }
    parameters: []
    return:
      type: System.String
      description: 'A <xref href="System.String" data-throw-if-not-resolved="false"></xref> unique identifier of this integration account. '
    content.vb: Public ReadOnly Property Id As String
  overload: Discord.IntegrationAccount.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.IntegrationAccount.Name
  commentId: P:Discord.IntegrationAccount.Name
  id: Name
  parent: Discord.IntegrationAccount
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IntegrationAccount.Name
  fullName: Discord.IntegrationAccount.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/IntegrationAccount.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Core/Entities/Guilds/IntegrationAccount.cs
    startLine: 12
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'Gets the name of the account. '
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
      description: 'A string containing the name of this integration account. '
    content.vb: Public ReadOnly Property Name As String
  overload: Discord.IntegrationAccount.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.IntegrationAccount.ToString
  commentId: M:Discord.IntegrationAccount.ToString
  id: ToString
  parent: Discord.IntegrationAccount
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: IntegrationAccount.ToString()
  fullName: Discord.IntegrationAccount.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Guilds/IntegrationAccount.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.Core/Entities/Guilds/IntegrationAccount.cs
    startLine: 14
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Discord.IntegrationAccount.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.IntegrationAccount.Id*
  commentId: Overload:Discord.IntegrationAccount.Id
  name: Id
  nameWithType: IntegrationAccount.Id
  fullName: Discord.IntegrationAccount.Id
- uid: Discord.IntegrationAccount.Name*
  commentId: Overload:Discord.IntegrationAccount.Name
  name: Name
  nameWithType: IntegrationAccount.Name
  fullName: Discord.IntegrationAccount.Name
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.IntegrationAccount.ToString*
  commentId: Overload:Discord.IntegrationAccount.ToString
  name: ToString
  nameWithType: IntegrationAccount.ToString
  fullName: Discord.IntegrationAccount.ToString
