### YamlMime:ManagedReference
items:
- uid: Discord.Rest.RestReaction
  commentId: T:Discord.Rest.RestReaction
  id: RestReaction
  parent: Discord.Rest
  children:
  - Discord.Rest.RestReaction.Count
  - Discord.Rest.RestReaction.Emote
  - Discord.Rest.RestReaction.Me
  langs:
  - csharp
  - vb
  name: RestReaction
  nameWithType: RestReaction
  fullName: Discord.Rest.RestReaction
  type: Class
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Messages/RestReaction.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RestReaction
    path: ../src/Discord.Net.Rest/Entities/Messages/RestReaction.cs
    startLine: 7
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nRepresents a REST reaction object.\n"
  example: []
  syntax:
    content: 'public class RestReaction : object, IReaction'
    content.vb: >-
      Public Class RestReaction
          Inherits Object
          Implements IReaction
  inheritance:
  - System.Object
  implements:
  - Discord.IReaction
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Rest.RestReaction.Emote
  commentId: P:Discord.Rest.RestReaction.Emote
  id: Emote
  parent: Discord.Rest.RestReaction
  langs:
  - csharp
  - vb
  name: Emote
  nameWithType: RestReaction.Emote
  fullName: Discord.Rest.RestReaction.Emote
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Messages/RestReaction.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Emote
    path: ../src/Discord.Net.Rest/Entities/Messages/RestReaction.cs
    startLine: 10
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nThe <xref href=\"Discord.IEmote\" data-throw-if-not-resolved=\"false\"></xref> used in the reaction.\n"
  example: []
  syntax:
    content: public IEmote Emote { get; }
    parameters: []
    return:
      type: Discord.IEmote
    content.vb: Public ReadOnly Property Emote As IEmote
  overload: Discord.Rest.RestReaction.Emote*
  implements:
  - Discord.IReaction.Emote
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestReaction.Count
  commentId: P:Discord.Rest.RestReaction.Count
  id: Count
  parent: Discord.Rest.RestReaction
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: RestReaction.Count
  fullName: Discord.Rest.RestReaction.Count
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Messages/RestReaction.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Count
    path: ../src/Discord.Net.Rest/Entities/Messages/RestReaction.cs
    startLine: 14
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the number of reactions added.\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Discord.Rest.RestReaction.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.RestReaction.Me
  commentId: P:Discord.Rest.RestReaction.Me
  id: Me
  parent: Discord.Rest.RestReaction
  langs:
  - csharp
  - vb
  name: Me
  nameWithType: RestReaction.Me
  fullName: Discord.Rest.RestReaction.Me
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/Messages/RestReaction.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Me
    path: ../src/Discord.Net.Rest/Entities/Messages/RestReaction.cs
    startLine: 18
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets whether the reactions is added by the user.\n"
  example: []
  syntax:
    content: public bool Me { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Me As Boolean
  overload: Discord.Rest.RestReaction.Me*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.IReaction
  commentId: T:Discord.IReaction
  parent: Discord
  name: IReaction
  nameWithType: IReaction
  fullName: Discord.IReaction
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Rest.RestReaction.Emote*
  commentId: Overload:Discord.Rest.RestReaction.Emote
  name: Emote
  nameWithType: RestReaction.Emote
  fullName: Discord.Rest.RestReaction.Emote
- uid: Discord.IReaction.Emote
  commentId: P:Discord.IReaction.Emote
  parent: Discord.IReaction
  name: Emote
  nameWithType: IReaction.Emote
  fullName: Discord.IReaction.Emote
- uid: Discord.IEmote
  commentId: T:Discord.IEmote
  parent: Discord
  name: IEmote
  nameWithType: IEmote
  fullName: Discord.IEmote
- uid: Discord.Rest.RestReaction.Count*
  commentId: Overload:Discord.Rest.RestReaction.Count
  name: Count
  nameWithType: RestReaction.Count
  fullName: Discord.Rest.RestReaction.Count
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Discord.Rest.RestReaction.Me*
  commentId: Overload:Discord.Rest.RestReaction.Me
  name: Me
  nameWithType: RestReaction.Me
  fullName: Discord.Rest.RestReaction.Me
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
