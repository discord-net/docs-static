### YamlMime:ManagedReference
items:
- uid: Discord.EmbedImage
  commentId: T:Discord.EmbedImage
  id: EmbedImage
  parent: Discord
  children:
  - Discord.EmbedImage.Height
  - Discord.EmbedImage.ProxyUrl
  - Discord.EmbedImage.ToString
  - Discord.EmbedImage.Url
  - Discord.EmbedImage.Width
  langs:
  - csharp
  - vb
  name: EmbedImage
  nameWithType: EmbedImage
  fullName: Discord.EmbedImage
  type: Struct
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedImage.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: EmbedImage
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedImage.cs
    startLine: 5
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: 'An image for an <xref href="Discord.Embed" data-throw-if-not-resolved="false"></xref>. '
  example: []
  syntax:
    content: public struct EmbedImage
    content.vb: Public Structure EmbedImage
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Discord.EmbedImage.Url
  commentId: P:Discord.EmbedImage.Url
  id: Url
  parent: Discord.EmbedImage
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: EmbedImage.Url
  fullName: Discord.EmbedImage.Url
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedImage.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Url
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedImage.cs
    startLine: 14
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the URL of the image.\n"
  example: []
  syntax:
    content: public string Url { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the URL of the image.\n"
    content.vb: Public ReadOnly Property Url As String
  overload: Discord.EmbedImage.Url*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.EmbedImage.ProxyUrl
  commentId: P:Discord.EmbedImage.ProxyUrl
  id: ProxyUrl
  parent: Discord.EmbedImage
  langs:
  - csharp
  - vb
  name: ProxyUrl
  nameWithType: EmbedImage.ProxyUrl
  fullName: Discord.EmbedImage.ProxyUrl
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedImage.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ProxyUrl
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedImage.cs
    startLine: 21
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets a proxied URL of this image.\n"
  example: []
  syntax:
    content: public string ProxyUrl { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the proxied URL of this image.\n"
    content.vb: Public ReadOnly Property ProxyUrl As String
  overload: Discord.EmbedImage.ProxyUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.EmbedImage.Height
  commentId: P:Discord.EmbedImage.Height
  id: Height
  parent: Discord.EmbedImage
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: EmbedImage.Height
  fullName: Discord.EmbedImage.Height
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedImage.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Height
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedImage.cs
    startLine: 29
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the height of this image.\n"
  example: []
  syntax:
    content: public int? Height { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nA <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> representing the height of this image if it can be retrieved; otherwise \n<code>null</code>.\n"
    content.vb: Public ReadOnly Property Height As Integer?
  overload: Discord.EmbedImage.Height*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.EmbedImage.Width
  commentId: P:Discord.EmbedImage.Width
  id: Width
  parent: Discord.EmbedImage
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: EmbedImage.Width
  fullName: Discord.EmbedImage.Width
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedImage.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Width
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedImage.cs
    startLine: 37
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the width of this image.\n"
  example: []
  syntax:
    content: public int? Width { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nA <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref> representing the width of this image if it can be retrieved; otherwise \n<code>null</code>.\n"
    content.vb: Public ReadOnly Property Width As Integer?
  overload: Discord.EmbedImage.Width*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.EmbedImage.ToString
  commentId: M:Discord.EmbedImage.ToString
  id: ToString
  parent: Discord.EmbedImage
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: EmbedImage.ToString()
  fullName: Discord.EmbedImage.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedImage.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedImage.cs
    startLine: 54
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the URL of the thumbnail.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA string that resolves to <xref href=\"Discord.EmbedImage.Url\" data-throw-if-not-resolved=\"false\"></xref> .\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Discord.EmbedImage.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Discord.Embed
  commentId: T:Discord.Embed
  parent: Discord
  name: Embed
  nameWithType: Embed
  fullName: Discord.Embed
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.EmbedImage.Url*
  commentId: Overload:Discord.EmbedImage.Url
  name: Url
  nameWithType: EmbedImage.Url
  fullName: Discord.EmbedImage.Url
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.EmbedImage.ProxyUrl*
  commentId: Overload:Discord.EmbedImage.ProxyUrl
  name: ProxyUrl
  nameWithType: EmbedImage.ProxyUrl
  fullName: Discord.EmbedImage.ProxyUrl
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Discord.EmbedImage.Height*
  commentId: Overload:Discord.EmbedImage.Height
  name: Height
  nameWithType: EmbedImage.Height
  fullName: Discord.EmbedImage.Height
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedImage.Width*
  commentId: Overload:Discord.EmbedImage.Width
  name: Width
  nameWithType: EmbedImage.Width
  fullName: Discord.EmbedImage.Width
- uid: Discord.EmbedImage.Url
  commentId: P:Discord.EmbedImage.Url
  isExternal: true
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.EmbedImage.ToString*
  commentId: Overload:Discord.EmbedImage.ToString
  name: ToString
  nameWithType: EmbedImage.ToString
  fullName: Discord.EmbedImage.ToString
