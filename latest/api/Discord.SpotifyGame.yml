### YamlMime:ManagedReference
items:
- uid: Discord.SpotifyGame
  commentId: T:Discord.SpotifyGame
  id: SpotifyGame
  parent: Discord
  children:
  - Discord.SpotifyGame.AlbumArtUrl
  - Discord.SpotifyGame.AlbumTitle
  - Discord.SpotifyGame.Artists
  - Discord.SpotifyGame.Duration
  - Discord.SpotifyGame.SessionId
  - Discord.SpotifyGame.ToString
  - Discord.SpotifyGame.TrackId
  - Discord.SpotifyGame.TrackTitle
  - Discord.SpotifyGame.TrackUrl
  langs:
  - csharp
  - vb
  name: SpotifyGame
  nameWithType: SpotifyGame
  fullName: Discord.SpotifyGame
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SpotifyGame
    path: ../src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
    startLine: 9
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nA user&apos;s activity for listening to a song on Spotify.\n"
  example: []
  syntax:
    content: 'public class SpotifyGame : Game, IActivity'
    content.vb: >-
      Public Class SpotifyGame
          Inherits Game
          Implements IActivity
  inheritance:
  - System.Object
  - Discord.Game
  implements:
  - Discord.IActivity
  inheritedMembers:
  - Discord.Game.Name
  - Discord.Game.Type
  - Discord.Game.Flags
  - Discord.Game.Details
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.SpotifyGame.Artists
  commentId: P:Discord.SpotifyGame.Artists
  id: Artists
  parent: Discord.SpotifyGame
  langs:
  - csharp
  - vb
  name: Artists
  nameWithType: SpotifyGame.Artists
  fullName: Discord.SpotifyGame.Artists
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Artists
    path: ../src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
    startLine: 18
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the song&apos;s artist(s).\n"
  example: []
  syntax:
    content: public IReadOnlyCollection<string> Artists { get; }
    parameters: []
    return:
      type: IReadOnlyCollection{System.String}
      description: "\nA collection of string containing all artists featured in the track (e.g. <code>Avicii</code>; <code>Rita Ora</code>).\n"
    content.vb: Public ReadOnly Property Artists As IReadOnlyCollection(Of String)
  overload: Discord.SpotifyGame.Artists*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.SpotifyGame.AlbumTitle
  commentId: P:Discord.SpotifyGame.AlbumTitle
  id: AlbumTitle
  parent: Discord.SpotifyGame
  langs:
  - csharp
  - vb
  name: AlbumTitle
  nameWithType: SpotifyGame.AlbumTitle
  fullName: Discord.SpotifyGame.AlbumTitle
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AlbumTitle
    path: ../src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
    startLine: 25
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the Spotify album title of the song.\n"
  example: []
  syntax:
    content: public string AlbumTitle { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the name of the album (e.g. <code>AVÄªCI (01)</code>).\n"
    content.vb: Public ReadOnly Property AlbumTitle As String
  overload: Discord.SpotifyGame.AlbumTitle*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.SpotifyGame.TrackTitle
  commentId: P:Discord.SpotifyGame.TrackTitle
  id: TrackTitle
  parent: Discord.SpotifyGame
  langs:
  - csharp
  - vb
  name: TrackTitle
  nameWithType: SpotifyGame.TrackTitle
  fullName: Discord.SpotifyGame.TrackTitle
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: TrackTitle
    path: ../src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
    startLine: 32
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the track title of the song.\n"
  example: []
  syntax:
    content: public string TrackTitle { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the name of the song (e.g. <code>Lonely Together (feat. Rita Ora)</code>).\n"
    content.vb: Public ReadOnly Property TrackTitle As String
  overload: Discord.SpotifyGame.TrackTitle*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.SpotifyGame.Duration
  commentId: P:Discord.SpotifyGame.Duration
  id: Duration
  parent: Discord.SpotifyGame
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: SpotifyGame.Duration
  fullName: Discord.SpotifyGame.Duration
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Duration
    path: ../src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
    startLine: 39
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the duration of the song.\n"
  example: []
  syntax:
    content: public TimeSpan? Duration { get; }
    parameters: []
    return:
      type: System.Nullable{TimeSpan}
      description: "\nA <see cref=\"!:TimeSpan\"></see> containing the duration of the song.\n"
    content.vb: Public ReadOnly Property Duration As TimeSpan?
  overload: Discord.SpotifyGame.Duration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.SpotifyGame.TrackId
  commentId: P:Discord.SpotifyGame.TrackId
  id: TrackId
  parent: Discord.SpotifyGame
  langs:
  - csharp
  - vb
  name: TrackId
  nameWithType: SpotifyGame.TrackId
  fullName: Discord.SpotifyGame.TrackId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: TrackId
    path: ../src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
    startLine: 47
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the track ID of the song.\n"
  example: []
  syntax:
    content: public string TrackId { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the Spotify ID of the track (e.g. <code>7DoN0sCGIT9IcLrtBDm4f0</code>).\n"
    content.vb: Public ReadOnly Property TrackId As String
  overload: Discord.SpotifyGame.TrackId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.SpotifyGame.SessionId
  commentId: P:Discord.SpotifyGame.SessionId
  id: SessionId
  parent: Discord.SpotifyGame
  langs:
  - csharp
  - vb
  name: SessionId
  nameWithType: SpotifyGame.SessionId
  fullName: Discord.SpotifyGame.SessionId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SessionId
    path: ../src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
    startLine: 57
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the session ID of the song.\n"
  remarks: "\nThe purpose of this property is currently unknown.\n"
  example: []
  syntax:
    content: public string SessionId { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the session ID.\n"
    content.vb: Public ReadOnly Property SessionId As String
  overload: Discord.SpotifyGame.SessionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.SpotifyGame.AlbumArtUrl
  commentId: P:Discord.SpotifyGame.AlbumArtUrl
  id: AlbumArtUrl
  parent: Discord.SpotifyGame
  langs:
  - csharp
  - vb
  name: AlbumArtUrl
  nameWithType: SpotifyGame.AlbumArtUrl
  fullName: Discord.SpotifyGame.AlbumArtUrl
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AlbumArtUrl
    path: ../src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
    startLine: 66
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the URL of the album art.\n"
  example: []
  syntax:
    content: public string AlbumArtUrl { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA URL pointing to the album art of the track (e.g. \n<code>https://i.scdn.co/image/ba2fd8823d42802c2f8738db0b33a4597f2f39e7</code>).\n"
    content.vb: Public ReadOnly Property AlbumArtUrl As String
  overload: Discord.SpotifyGame.AlbumArtUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.SpotifyGame.TrackUrl
  commentId: P:Discord.SpotifyGame.TrackUrl
  id: TrackUrl
  parent: Discord.SpotifyGame
  langs:
  - csharp
  - vb
  name: TrackUrl
  nameWithType: SpotifyGame.TrackUrl
  fullName: Discord.SpotifyGame.TrackUrl
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: TrackUrl
    path: ../src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
    startLine: 74
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the direct Spotify URL of the track.\n"
  example: []
  syntax:
    content: public string TrackUrl { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA URL pointing directly to the track on Spotify. (e.g. \n<code>https://open.spotify.com/track/7DoN0sCGIT9IcLrtBDm4f0</code>).\n"
    content.vb: Public ReadOnly Property TrackUrl As String
  overload: Discord.SpotifyGame.TrackUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.SpotifyGame.ToString
  commentId: M:Discord.SpotifyGame.ToString
  id: ToString
  parent: Discord.SpotifyGame
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SpotifyGame.ToString()
  fullName: Discord.SpotifyGame.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.Core/Entities/Activities/SpotifyGame.cs
    startLine: 85
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the full information of the song.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA string containing the full information of the song (e.g. \n<code>Avicii, Rita Ora - Lonely Together (feat. Rita Ora) (3:08)</code>\n"
    content.vb: Public Overrides Function ToString As String
  overridden: Discord.Game.ToString
  overload: Discord.SpotifyGame.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.Game
  commentId: T:Discord.Game
  parent: Discord
  name: Game
  nameWithType: Game
  fullName: Discord.Game
- uid: Discord.IActivity
  commentId: T:Discord.IActivity
  parent: Discord
  name: IActivity
  nameWithType: IActivity
  fullName: Discord.IActivity
- uid: Discord.Game.Name
  commentId: P:Discord.Game.Name
  parent: Discord.Game
  name: Name
  nameWithType: Game.Name
  fullName: Discord.Game.Name
- uid: Discord.Game.Type
  commentId: P:Discord.Game.Type
  parent: Discord.Game
  name: Type
  nameWithType: Game.Type
  fullName: Discord.Game.Type
- uid: Discord.Game.Flags
  commentId: P:Discord.Game.Flags
  parent: Discord.Game
  name: Flags
  nameWithType: Game.Flags
  fullName: Discord.Game.Flags
- uid: Discord.Game.Details
  commentId: P:Discord.Game.Details
  parent: Discord.Game
  name: Details
  nameWithType: Game.Details
  fullName: Discord.Game.Details
- uid: Discord.SpotifyGame.Artists*
  commentId: Overload:Discord.SpotifyGame.Artists
  name: Artists
  nameWithType: SpotifyGame.Artists
  fullName: Discord.SpotifyGame.Artists
- uid: IReadOnlyCollection{System.String}
  commentId: '!:IReadOnlyCollection{System.String}'
  definition: IReadOnlyCollection`1
  name: IReadOnlyCollection<String>
  nameWithType: IReadOnlyCollection<String>
  fullName: IReadOnlyCollection<System.String>
  nameWithType.vb: IReadOnlyCollection(Of String)
  fullName.vb: IReadOnlyCollection(Of System.String)
  name.vb: IReadOnlyCollection(Of String)
  spec.csharp:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<>
  nameWithType: IReadOnlyCollection<>
  fullName: IReadOnlyCollection<>
  nameWithType.vb: IReadOnlyCollection(Of )
  fullName.vb: IReadOnlyCollection(Of )
  name.vb: IReadOnlyCollection(Of )
  spec.csharp:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.SpotifyGame.AlbumTitle*
  commentId: Overload:Discord.SpotifyGame.AlbumTitle
  name: AlbumTitle
  nameWithType: SpotifyGame.AlbumTitle
  fullName: Discord.SpotifyGame.AlbumTitle
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.SpotifyGame.TrackTitle*
  commentId: Overload:Discord.SpotifyGame.TrackTitle
  name: TrackTitle
  nameWithType: SpotifyGame.TrackTitle
  fullName: Discord.SpotifyGame.TrackTitle
- uid: Discord.SpotifyGame.Duration*
  commentId: Overload:Discord.SpotifyGame.Duration
  name: Duration
  nameWithType: SpotifyGame.Duration
  fullName: Discord.SpotifyGame.Duration
- uid: System.Nullable{TimeSpan}
  commentId: '!:System.Nullable{TimeSpan}'
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullName.vb: System.Nullable(Of TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.SpotifyGame.TrackId*
  commentId: Overload:Discord.SpotifyGame.TrackId
  name: TrackId
  nameWithType: SpotifyGame.TrackId
  fullName: Discord.SpotifyGame.TrackId
- uid: Discord.SpotifyGame.SessionId*
  commentId: Overload:Discord.SpotifyGame.SessionId
  name: SessionId
  nameWithType: SpotifyGame.SessionId
  fullName: Discord.SpotifyGame.SessionId
- uid: Discord.SpotifyGame.AlbumArtUrl*
  commentId: Overload:Discord.SpotifyGame.AlbumArtUrl
  name: AlbumArtUrl
  nameWithType: SpotifyGame.AlbumArtUrl
  fullName: Discord.SpotifyGame.AlbumArtUrl
- uid: Discord.SpotifyGame.TrackUrl*
  commentId: Overload:Discord.SpotifyGame.TrackUrl
  name: TrackUrl
  nameWithType: SpotifyGame.TrackUrl
  fullName: Discord.SpotifyGame.TrackUrl
- uid: Discord.Game.ToString
  commentId: M:Discord.Game.ToString
  parent: Discord.Game
  name: ToString()
  nameWithType: Game.ToString()
  fullName: Discord.Game.ToString()
  spec.csharp:
  - uid: Discord.Game.ToString
    name: ToString
    nameWithType: Game.ToString
    fullName: Discord.Game.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Discord.Game.ToString
    name: ToString
    nameWithType: Game.ToString
    fullName: Discord.Game.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.SpotifyGame.ToString*
  commentId: Overload:Discord.SpotifyGame.ToString
  name: ToString
  nameWithType: SpotifyGame.ToString
  fullName: Discord.SpotifyGame.ToString
