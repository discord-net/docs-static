### YamlMime:ManagedReference
items:
- uid: Discord.Rest.WebhookCreateAuditLogData
  commentId: T:Discord.Rest.WebhookCreateAuditLogData
  id: WebhookCreateAuditLogData
  parent: Discord.Rest
  children:
  - Discord.Rest.WebhookCreateAuditLogData.ChannelId
  - Discord.Rest.WebhookCreateAuditLogData.Name
  - Discord.Rest.WebhookCreateAuditLogData.Type
  - Discord.Rest.WebhookCreateAuditLogData.Webhook
  - Discord.Rest.WebhookCreateAuditLogData.WebhookId
  langs:
  - csharp
  - vb
  name: WebhookCreateAuditLogData
  nameWithType: WebhookCreateAuditLogData
  fullName: Discord.Rest.WebhookCreateAuditLogData
  type: Class
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WebhookCreateAuditLogData
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookCreateAuditLogData.cs
    startLine: 10
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nContains a piece of audit log data related to a webhook creation.\n"
  example: []
  syntax:
    content: 'public class WebhookCreateAuditLogData : object, IAuditLogData'
    content.vb: >-
      Public Class WebhookCreateAuditLogData
          Inherits Object
          Implements IAuditLogData
  inheritance:
  - System.Object
  implements:
  - Discord.IAuditLogData
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Rest.WebhookCreateAuditLogData.Webhook
  commentId: P:Discord.Rest.WebhookCreateAuditLogData.Webhook
  id: Webhook
  parent: Discord.Rest.WebhookCreateAuditLogData
  langs:
  - csharp
  - vb
  name: Webhook
  nameWithType: WebhookCreateAuditLogData.Webhook
  fullName: Discord.Rest.WebhookCreateAuditLogData.Webhook
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Webhook
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookCreateAuditLogData.cs
    startLine: 47
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the webhook that was created if it still exists.\n"
  example: []
  syntax:
    content: public IWebhook Webhook { get; }
    parameters: []
    return:
      type: Discord.IWebhook
      description: "\nA webhook object representing the webhook that was created if it still exists, otherwise returns <code>null</code>.\n"
    content.vb: Public ReadOnly Property Webhook As IWebhook
  overload: Discord.Rest.WebhookCreateAuditLogData.Webhook*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.WebhookCreateAuditLogData.WebhookId
  commentId: P:Discord.Rest.WebhookCreateAuditLogData.WebhookId
  id: WebhookId
  parent: Discord.Rest.WebhookCreateAuditLogData
  langs:
  - csharp
  - vb
  name: WebhookId
  nameWithType: WebhookCreateAuditLogData.WebhookId
  fullName: Discord.Rest.WebhookCreateAuditLogData.WebhookId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WebhookId
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookCreateAuditLogData.cs
    startLine: 57
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the webhook id.\n"
  example: []
  syntax:
    content: public ulong WebhookId { get; }
    parameters: []
    return:
      type: System.UInt64
      description: "\nThe webhook identifier.\n"
    content.vb: Public ReadOnly Property WebhookId As ULong
  overload: Discord.Rest.WebhookCreateAuditLogData.WebhookId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.WebhookCreateAuditLogData.Type
  commentId: P:Discord.Rest.WebhookCreateAuditLogData.Type
  id: Type
  parent: Discord.Rest.WebhookCreateAuditLogData
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: WebhookCreateAuditLogData.Type
  fullName: Discord.Rest.WebhookCreateAuditLogData.Type
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Type
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookCreateAuditLogData.cs
    startLine: 65
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the type of webhook that was created.\n"
  example: []
  syntax:
    content: public WebhookType Type { get; }
    parameters: []
    return:
      type: Discord.WebhookType
      description: "\nThe type of webhook that was created.\n"
    content.vb: Public ReadOnly Property Type As WebhookType
  overload: Discord.Rest.WebhookCreateAuditLogData.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.WebhookCreateAuditLogData.Name
  commentId: P:Discord.Rest.WebhookCreateAuditLogData.Name
  id: Name
  parent: Discord.Rest.WebhookCreateAuditLogData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: WebhookCreateAuditLogData.Name
  fullName: Discord.Rest.WebhookCreateAuditLogData.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookCreateAuditLogData.cs
    startLine: 73
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the name of the webhook.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the name of the webhook.\n"
    content.vb: Public ReadOnly Property Name As String
  overload: Discord.Rest.WebhookCreateAuditLogData.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Rest.WebhookCreateAuditLogData.ChannelId
  commentId: P:Discord.Rest.WebhookCreateAuditLogData.ChannelId
  id: ChannelId
  parent: Discord.Rest.WebhookCreateAuditLogData
  langs:
  - csharp
  - vb
  name: ChannelId
  nameWithType: WebhookCreateAuditLogData.ChannelId
  fullName: Discord.Rest.WebhookCreateAuditLogData.ChannelId
  type: Property
  source:
    remote:
      path: src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookCreateAuditLogData.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ChannelId
    path: ../src/Discord.Net.Rest/Entities/AuditLogs/DataTypes/WebhookCreateAuditLogData.cs
    startLine: 81
  assemblies:
  - Discord.Net.Rest
  namespace: Discord.Rest
  summary: "\nGets the ID of the channel that the webhook could send to.\n"
  example: []
  syntax:
    content: public ulong ChannelId { get; }
    parameters: []
    return:
      type: System.UInt64
      description: "\nA <see cref=\"!:System.UInt64\"></see> representing the snowflake identifier of the channel that the webhook could send\nto.\n"
    content.vb: Public ReadOnly Property ChannelId As ULong
  overload: Discord.Rest.WebhookCreateAuditLogData.ChannelId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Discord.Rest
  commentId: N:Discord.Rest
  name: Discord.Rest
  nameWithType: Discord.Rest
  fullName: Discord.Rest
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.IAuditLogData
  commentId: T:Discord.IAuditLogData
  parent: Discord
  name: IAuditLogData
  nameWithType: IAuditLogData
  fullName: Discord.IAuditLogData
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Rest.WebhookCreateAuditLogData.Webhook*
  commentId: Overload:Discord.Rest.WebhookCreateAuditLogData.Webhook
  name: Webhook
  nameWithType: WebhookCreateAuditLogData.Webhook
  fullName: Discord.Rest.WebhookCreateAuditLogData.Webhook
- uid: Discord.IWebhook
  commentId: T:Discord.IWebhook
  parent: Discord
  name: IWebhook
  nameWithType: IWebhook
  fullName: Discord.IWebhook
- uid: Discord.Rest.WebhookCreateAuditLogData.WebhookId*
  commentId: Overload:Discord.Rest.WebhookCreateAuditLogData.WebhookId
  name: WebhookId
  nameWithType: WebhookCreateAuditLogData.WebhookId
  fullName: Discord.Rest.WebhookCreateAuditLogData.WebhookId
- uid: System.UInt64
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Discord.Rest.WebhookCreateAuditLogData.Type*
  commentId: Overload:Discord.Rest.WebhookCreateAuditLogData.Type
  name: Type
  nameWithType: WebhookCreateAuditLogData.Type
  fullName: Discord.Rest.WebhookCreateAuditLogData.Type
- uid: Discord.WebhookType
  commentId: T:Discord.WebhookType
  parent: Discord
  name: WebhookType
  nameWithType: WebhookType
  fullName: Discord.WebhookType
- uid: Discord.Rest.WebhookCreateAuditLogData.Name*
  commentId: Overload:Discord.Rest.WebhookCreateAuditLogData.Name
  name: Name
  nameWithType: WebhookCreateAuditLogData.Name
  fullName: Discord.Rest.WebhookCreateAuditLogData.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Rest.WebhookCreateAuditLogData.ChannelId*
  commentId: Overload:Discord.Rest.WebhookCreateAuditLogData.ChannelId
  name: ChannelId
  nameWithType: WebhookCreateAuditLogData.ChannelId
  fullName: Discord.Rest.WebhookCreateAuditLogData.ChannelId
