### YamlMime:ManagedReference
items:
- uid: Discord.Commands.Builders.CommandBuilder
  commentId: T:Discord.Commands.Builders.CommandBuilder
  id: CommandBuilder
  parent: Discord.Commands.Builders
  children:
  - Discord.Commands.Builders.CommandBuilder.AddAliases(System.String[])
  - Discord.Commands.Builders.CommandBuilder.AddAttributes(System.Attribute[])
  - Discord.Commands.Builders.CommandBuilder.AddParameter(System.String,System.Type,System.Action{Discord.Commands.Builders.ParameterBuilder})
  - Discord.Commands.Builders.CommandBuilder.AddParameter``1(System.String,System.Action{Discord.Commands.Builders.ParameterBuilder})
  - Discord.Commands.Builders.CommandBuilder.AddPrecondition(Discord.Commands.PreconditionAttribute)
  - Discord.Commands.Builders.CommandBuilder.Aliases
  - Discord.Commands.Builders.CommandBuilder.Attributes
  - Discord.Commands.Builders.CommandBuilder.IgnoreExtraArgs
  - Discord.Commands.Builders.CommandBuilder.Module
  - Discord.Commands.Builders.CommandBuilder.Name
  - Discord.Commands.Builders.CommandBuilder.Parameters
  - Discord.Commands.Builders.CommandBuilder.Preconditions
  - Discord.Commands.Builders.CommandBuilder.PrimaryAlias
  - Discord.Commands.Builders.CommandBuilder.Priority
  - Discord.Commands.Builders.CommandBuilder.Remarks
  - Discord.Commands.Builders.CommandBuilder.RunMode
  - Discord.Commands.Builders.CommandBuilder.Summary
  - Discord.Commands.Builders.CommandBuilder.WithName(System.String)
  - Discord.Commands.Builders.CommandBuilder.WithPriority(System.Int32)
  - Discord.Commands.Builders.CommandBuilder.WithRemarks(System.String)
  - Discord.Commands.Builders.CommandBuilder.WithRunMode(Discord.Commands.RunMode)
  - Discord.Commands.Builders.CommandBuilder.WithSummary(System.String)
  langs:
  - csharp
  - vb
  name: CommandBuilder
  nameWithType: CommandBuilder
  fullName: Discord.Commands.Builders.CommandBuilder
  type: Class
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: CommandBuilder
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 7
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public class CommandBuilder
    content.vb: Public Class CommandBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.Commands.Builders.CommandBuilder.Module
  commentId: P:Discord.Commands.Builders.CommandBuilder.Module
  id: Module
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: Module
  nameWithType: CommandBuilder.Module
  fullName: Discord.Commands.Builders.CommandBuilder.Module
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Module
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 14
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public ModuleBuilder Module { get; }
    parameters: []
    return:
      type: Discord.Commands.Builders.ModuleBuilder
    content.vb: Public ReadOnly Property Module As ModuleBuilder
  overload: Discord.Commands.Builders.CommandBuilder.Module*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.Builders.CommandBuilder.Name
  commentId: P:Discord.Commands.Builders.CommandBuilder.Name
  id: Name
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CommandBuilder.Name
  fullName: Discord.Commands.Builders.CommandBuilder.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 17
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Discord.Commands.Builders.CommandBuilder.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.CommandBuilder.Summary
  commentId: P:Discord.Commands.Builders.CommandBuilder.Summary
  id: Summary
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: Summary
  nameWithType: CommandBuilder.Summary
  fullName: Discord.Commands.Builders.CommandBuilder.Summary
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Summary
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 18
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public string Summary { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Summary As String
  overload: Discord.Commands.Builders.CommandBuilder.Summary*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.CommandBuilder.Remarks
  commentId: P:Discord.Commands.Builders.CommandBuilder.Remarks
  id: Remarks
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: Remarks
  nameWithType: CommandBuilder.Remarks
  fullName: Discord.Commands.Builders.CommandBuilder.Remarks
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Remarks
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 19
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public string Remarks { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Remarks As String
  overload: Discord.Commands.Builders.CommandBuilder.Remarks*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.CommandBuilder.PrimaryAlias
  commentId: P:Discord.Commands.Builders.CommandBuilder.PrimaryAlias
  id: PrimaryAlias
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: PrimaryAlias
  nameWithType: CommandBuilder.PrimaryAlias
  fullName: Discord.Commands.Builders.CommandBuilder.PrimaryAlias
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: PrimaryAlias
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 20
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public string PrimaryAlias { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PrimaryAlias As String
  overload: Discord.Commands.Builders.CommandBuilder.PrimaryAlias*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.CommandBuilder.RunMode
  commentId: P:Discord.Commands.Builders.CommandBuilder.RunMode
  id: RunMode
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: RunMode
  nameWithType: CommandBuilder.RunMode
  fullName: Discord.Commands.Builders.CommandBuilder.RunMode
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RunMode
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 21
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public RunMode RunMode { get; set; }
    parameters: []
    return:
      type: Discord.Commands.RunMode
    content.vb: Public Property RunMode As RunMode
  overload: Discord.Commands.Builders.CommandBuilder.RunMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.CommandBuilder.Priority
  commentId: P:Discord.Commands.Builders.CommandBuilder.Priority
  id: Priority
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: CommandBuilder.Priority
  fullName: Discord.Commands.Builders.CommandBuilder.Priority
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Priority
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 22
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public int Priority { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Priority As Integer
  overload: Discord.Commands.Builders.CommandBuilder.Priority*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.CommandBuilder.IgnoreExtraArgs
  commentId: P:Discord.Commands.Builders.CommandBuilder.IgnoreExtraArgs
  id: IgnoreExtraArgs
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: IgnoreExtraArgs
  nameWithType: CommandBuilder.IgnoreExtraArgs
  fullName: Discord.Commands.Builders.CommandBuilder.IgnoreExtraArgs
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: IgnoreExtraArgs
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 23
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public bool IgnoreExtraArgs { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IgnoreExtraArgs As Boolean
  overload: Discord.Commands.Builders.CommandBuilder.IgnoreExtraArgs*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.CommandBuilder.Preconditions
  commentId: P:Discord.Commands.Builders.CommandBuilder.Preconditions
  id: Preconditions
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: Preconditions
  nameWithType: CommandBuilder.Preconditions
  fullName: Discord.Commands.Builders.CommandBuilder.Preconditions
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Preconditions
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 25
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public IReadOnlyList<PreconditionAttribute> Preconditions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Discord.Commands.PreconditionAttribute}
    content.vb: Public ReadOnly Property Preconditions As IReadOnlyList(Of PreconditionAttribute)
  overload: Discord.Commands.Builders.CommandBuilder.Preconditions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.Builders.CommandBuilder.Parameters
  commentId: P:Discord.Commands.Builders.CommandBuilder.Parameters
  id: Parameters
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: Parameters
  nameWithType: CommandBuilder.Parameters
  fullName: Discord.Commands.Builders.CommandBuilder.Parameters
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Parameters
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 26
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public IReadOnlyList<ParameterBuilder> Parameters { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Discord.Commands.Builders.ParameterBuilder}
    content.vb: Public ReadOnly Property Parameters As IReadOnlyList(Of ParameterBuilder)
  overload: Discord.Commands.Builders.CommandBuilder.Parameters*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.Builders.CommandBuilder.Attributes
  commentId: P:Discord.Commands.Builders.CommandBuilder.Attributes
  id: Attributes
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: CommandBuilder.Attributes
  fullName: Discord.Commands.Builders.CommandBuilder.Attributes
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Attributes
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 27
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public IReadOnlyList<Attribute> Attributes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Attribute}
    content.vb: Public ReadOnly Property Attributes As IReadOnlyList(Of Attribute)
  overload: Discord.Commands.Builders.CommandBuilder.Attributes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.Builders.CommandBuilder.Aliases
  commentId: P:Discord.Commands.Builders.CommandBuilder.Aliases
  id: Aliases
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: Aliases
  nameWithType: CommandBuilder.Aliases
  fullName: Discord.Commands.Builders.CommandBuilder.Aliases
  type: Property
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Aliases
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 28
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public IReadOnlyList<string> Aliases { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{System.String}
    content.vb: Public ReadOnly Property Aliases As IReadOnlyList(Of String)
  overload: Discord.Commands.Builders.CommandBuilder.Aliases*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.Commands.Builders.CommandBuilder.WithName(System.String)
  commentId: M:Discord.Commands.Builders.CommandBuilder.WithName(System.String)
  id: WithName(System.String)
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: WithName(String)
  nameWithType: CommandBuilder.WithName(String)
  fullName: Discord.Commands.Builders.CommandBuilder.WithName(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithName
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 52
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public CommandBuilder WithName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Discord.Commands.Builders.CommandBuilder
    content.vb: Public Function WithName(name As String) As CommandBuilder
  overload: Discord.Commands.Builders.CommandBuilder.WithName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.CommandBuilder.WithSummary(System.String)
  commentId: M:Discord.Commands.Builders.CommandBuilder.WithSummary(System.String)
  id: WithSummary(System.String)
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: WithSummary(String)
  nameWithType: CommandBuilder.WithSummary(String)
  fullName: Discord.Commands.Builders.CommandBuilder.WithSummary(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithSummary
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 57
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public CommandBuilder WithSummary(string summary)
    parameters:
    - id: summary
      type: System.String
    return:
      type: Discord.Commands.Builders.CommandBuilder
    content.vb: Public Function WithSummary(summary As String) As CommandBuilder
  overload: Discord.Commands.Builders.CommandBuilder.WithSummary*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.CommandBuilder.WithRemarks(System.String)
  commentId: M:Discord.Commands.Builders.CommandBuilder.WithRemarks(System.String)
  id: WithRemarks(System.String)
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: WithRemarks(String)
  nameWithType: CommandBuilder.WithRemarks(String)
  fullName: Discord.Commands.Builders.CommandBuilder.WithRemarks(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithRemarks
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 62
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public CommandBuilder WithRemarks(string remarks)
    parameters:
    - id: remarks
      type: System.String
    return:
      type: Discord.Commands.Builders.CommandBuilder
    content.vb: Public Function WithRemarks(remarks As String) As CommandBuilder
  overload: Discord.Commands.Builders.CommandBuilder.WithRemarks*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.CommandBuilder.WithRunMode(Discord.Commands.RunMode)
  commentId: M:Discord.Commands.Builders.CommandBuilder.WithRunMode(Discord.Commands.RunMode)
  id: WithRunMode(Discord.Commands.RunMode)
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: WithRunMode(RunMode)
  nameWithType: CommandBuilder.WithRunMode(RunMode)
  fullName: Discord.Commands.Builders.CommandBuilder.WithRunMode(Discord.Commands.RunMode)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithRunMode
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 67
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public CommandBuilder WithRunMode(RunMode runMode)
    parameters:
    - id: runMode
      type: Discord.Commands.RunMode
    return:
      type: Discord.Commands.Builders.CommandBuilder
    content.vb: Public Function WithRunMode(runMode As RunMode) As CommandBuilder
  overload: Discord.Commands.Builders.CommandBuilder.WithRunMode*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.CommandBuilder.WithPriority(System.Int32)
  commentId: M:Discord.Commands.Builders.CommandBuilder.WithPriority(System.Int32)
  id: WithPriority(System.Int32)
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: WithPriority(Int32)
  nameWithType: CommandBuilder.WithPriority(Int32)
  fullName: Discord.Commands.Builders.CommandBuilder.WithPriority(System.Int32)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: WithPriority
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 72
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public CommandBuilder WithPriority(int priority)
    parameters:
    - id: priority
      type: System.Int32
    return:
      type: Discord.Commands.Builders.CommandBuilder
    content.vb: Public Function WithPriority(priority As Integer) As CommandBuilder
  overload: Discord.Commands.Builders.CommandBuilder.WithPriority*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.CommandBuilder.AddAliases(System.String[])
  commentId: M:Discord.Commands.Builders.CommandBuilder.AddAliases(System.String[])
  id: AddAliases(System.String[])
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: AddAliases(String[])
  nameWithType: CommandBuilder.AddAliases(String[])
  fullName: Discord.Commands.Builders.CommandBuilder.AddAliases(System.String[])
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AddAliases
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 78
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public CommandBuilder AddAliases(params string[] aliases)
    parameters:
    - id: aliases
      type: System.String[]
    return:
      type: Discord.Commands.Builders.CommandBuilder
    content.vb: Public Function AddAliases(ParamArray aliases As String()) As CommandBuilder
  overload: Discord.Commands.Builders.CommandBuilder.AddAliases*
  nameWithType.vb: CommandBuilder.AddAliases(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Commands.Builders.CommandBuilder.AddAliases(System.String())
  name.vb: AddAliases(String())
- uid: Discord.Commands.Builders.CommandBuilder.AddAttributes(System.Attribute[])
  commentId: M:Discord.Commands.Builders.CommandBuilder.AddAttributes(System.Attribute[])
  id: AddAttributes(System.Attribute[])
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: AddAttributes(Attribute[])
  nameWithType: CommandBuilder.AddAttributes(Attribute[])
  fullName: Discord.Commands.Builders.CommandBuilder.AddAttributes(System.Attribute[])
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AddAttributes
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 88
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public CommandBuilder AddAttributes(params Attribute[] attributes)
    parameters:
    - id: attributes
      type: System.Attribute[]
    return:
      type: Discord.Commands.Builders.CommandBuilder
    content.vb: Public Function AddAttributes(ParamArray attributes As Attribute()) As CommandBuilder
  overload: Discord.Commands.Builders.CommandBuilder.AddAttributes*
  nameWithType.vb: CommandBuilder.AddAttributes(Attribute())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Commands.Builders.CommandBuilder.AddAttributes(System.Attribute())
  name.vb: AddAttributes(Attribute())
- uid: Discord.Commands.Builders.CommandBuilder.AddPrecondition(Discord.Commands.PreconditionAttribute)
  commentId: M:Discord.Commands.Builders.CommandBuilder.AddPrecondition(Discord.Commands.PreconditionAttribute)
  id: AddPrecondition(Discord.Commands.PreconditionAttribute)
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: AddPrecondition(PreconditionAttribute)
  nameWithType: CommandBuilder.AddPrecondition(PreconditionAttribute)
  fullName: Discord.Commands.Builders.CommandBuilder.AddPrecondition(Discord.Commands.PreconditionAttribute)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AddPrecondition
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 93
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public CommandBuilder AddPrecondition(PreconditionAttribute precondition)
    parameters:
    - id: precondition
      type: Discord.Commands.PreconditionAttribute
    return:
      type: Discord.Commands.Builders.CommandBuilder
    content.vb: Public Function AddPrecondition(precondition As PreconditionAttribute) As CommandBuilder
  overload: Discord.Commands.Builders.CommandBuilder.AddPrecondition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.Commands.Builders.CommandBuilder.AddParameter``1(System.String,System.Action{Discord.Commands.Builders.ParameterBuilder})
  commentId: M:Discord.Commands.Builders.CommandBuilder.AddParameter``1(System.String,System.Action{Discord.Commands.Builders.ParameterBuilder})
  id: AddParameter``1(System.String,System.Action{Discord.Commands.Builders.ParameterBuilder})
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: AddParameter<T>(String, Action<ParameterBuilder>)
  nameWithType: CommandBuilder.AddParameter<T>(String, Action<ParameterBuilder>)
  fullName: Discord.Commands.Builders.CommandBuilder.AddParameter<T>(System.String, System.Action<Discord.Commands.Builders.ParameterBuilder>)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AddParameter
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 98
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public CommandBuilder AddParameter<T>(string name, Action<ParameterBuilder> createFunc)
    parameters:
    - id: name
      type: System.String
    - id: createFunc
      type: System.Action{Discord.Commands.Builders.ParameterBuilder}
    typeParameters:
    - id: T
    return:
      type: Discord.Commands.Builders.CommandBuilder
    content.vb: Public Function AddParameter(Of T)(name As String, createFunc As Action(Of ParameterBuilder)) As CommandBuilder
  overload: Discord.Commands.Builders.CommandBuilder.AddParameter*
  nameWithType.vb: CommandBuilder.AddParameter(Of T)(String, Action(Of ParameterBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Commands.Builders.CommandBuilder.AddParameter(Of T)(System.String, System.Action(Of Discord.Commands.Builders.ParameterBuilder))
  name.vb: AddParameter(Of T)(String, Action(Of ParameterBuilder))
- uid: Discord.Commands.Builders.CommandBuilder.AddParameter(System.String,System.Type,System.Action{Discord.Commands.Builders.ParameterBuilder})
  commentId: M:Discord.Commands.Builders.CommandBuilder.AddParameter(System.String,System.Type,System.Action{Discord.Commands.Builders.ParameterBuilder})
  id: AddParameter(System.String,System.Type,System.Action{Discord.Commands.Builders.ParameterBuilder})
  parent: Discord.Commands.Builders.CommandBuilder
  langs:
  - csharp
  - vb
  name: AddParameter(String, Type, Action<ParameterBuilder>)
  nameWithType: CommandBuilder.AddParameter(String, Type, Action<ParameterBuilder>)
  fullName: Discord.Commands.Builders.CommandBuilder.AddParameter(System.String, System.Type, System.Action<Discord.Commands.Builders.ParameterBuilder>)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Builders/CommandBuilder.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: AddParameter
    path: ../src/Discord.Net.Commands/Builders/CommandBuilder.cs
    startLine: 105
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands.Builders
  syntax:
    content: public CommandBuilder AddParameter(string name, Type type, Action<ParameterBuilder> createFunc)
    parameters:
    - id: name
      type: System.String
    - id: type
      type: System.Type
    - id: createFunc
      type: System.Action{Discord.Commands.Builders.ParameterBuilder}
    return:
      type: Discord.Commands.Builders.CommandBuilder
    content.vb: Public Function AddParameter(name As String, type As Type, createFunc As Action(Of ParameterBuilder)) As CommandBuilder
  overload: Discord.Commands.Builders.CommandBuilder.AddParameter*
  nameWithType.vb: CommandBuilder.AddParameter(String, Type, Action(Of ParameterBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Discord.Commands.Builders.CommandBuilder.AddParameter(System.String, System.Type, System.Action(Of Discord.Commands.Builders.ParameterBuilder))
  name.vb: AddParameter(String, Type, Action(Of ParameterBuilder))
references:
- uid: Discord.Commands.Builders
  commentId: N:Discord.Commands.Builders
  name: Discord.Commands.Builders
  nameWithType: Discord.Commands.Builders
  fullName: Discord.Commands.Builders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.Commands.Builders.CommandBuilder.Module*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.Module
  name: Module
  nameWithType: CommandBuilder.Module
  fullName: Discord.Commands.Builders.CommandBuilder.Module
- uid: Discord.Commands.Builders.ModuleBuilder
  commentId: T:Discord.Commands.Builders.ModuleBuilder
  parent: Discord.Commands.Builders
  name: ModuleBuilder
  nameWithType: ModuleBuilder
  fullName: Discord.Commands.Builders.ModuleBuilder
- uid: Discord.Commands.Builders.CommandBuilder.Name*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.Name
  name: Name
  nameWithType: CommandBuilder.Name
  fullName: Discord.Commands.Builders.CommandBuilder.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.Commands.Builders.CommandBuilder.Summary*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.Summary
  name: Summary
  nameWithType: CommandBuilder.Summary
  fullName: Discord.Commands.Builders.CommandBuilder.Summary
- uid: Discord.Commands.Builders.CommandBuilder.Remarks*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.Remarks
  name: Remarks
  nameWithType: CommandBuilder.Remarks
  fullName: Discord.Commands.Builders.CommandBuilder.Remarks
- uid: Discord.Commands.Builders.CommandBuilder.PrimaryAlias*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.PrimaryAlias
  name: PrimaryAlias
  nameWithType: CommandBuilder.PrimaryAlias
  fullName: Discord.Commands.Builders.CommandBuilder.PrimaryAlias
- uid: Discord.Commands.Builders.CommandBuilder.RunMode*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.RunMode
  name: RunMode
  nameWithType: CommandBuilder.RunMode
  fullName: Discord.Commands.Builders.CommandBuilder.RunMode
- uid: Discord.Commands.RunMode
  commentId: T:Discord.Commands.RunMode
  parent: Discord.Commands
  name: RunMode
  nameWithType: RunMode
  fullName: Discord.Commands.RunMode
- uid: Discord.Commands
  commentId: N:Discord.Commands
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
- uid: Discord.Commands.Builders.CommandBuilder.Priority*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.Priority
  name: Priority
  nameWithType: CommandBuilder.Priority
  fullName: Discord.Commands.Builders.CommandBuilder.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Discord.Commands.Builders.CommandBuilder.IgnoreExtraArgs*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.IgnoreExtraArgs
  name: IgnoreExtraArgs
  nameWithType: CommandBuilder.IgnoreExtraArgs
  fullName: Discord.Commands.Builders.CommandBuilder.IgnoreExtraArgs
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.Commands.Builders.CommandBuilder.Preconditions*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.Preconditions
  name: Preconditions
  nameWithType: CommandBuilder.Preconditions
  fullName: Discord.Commands.Builders.CommandBuilder.Preconditions
- uid: System.Collections.Generic.IReadOnlyList{Discord.Commands.PreconditionAttribute}
  commentId: T:System.Collections.Generic.IReadOnlyList{Discord.Commands.PreconditionAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<PreconditionAttribute>
  nameWithType: IReadOnlyList<PreconditionAttribute>
  fullName: System.Collections.Generic.IReadOnlyList<Discord.Commands.PreconditionAttribute>
  nameWithType.vb: IReadOnlyList(Of PreconditionAttribute)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Discord.Commands.PreconditionAttribute)
  name.vb: IReadOnlyList(Of PreconditionAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Commands.PreconditionAttribute
    name: PreconditionAttribute
    nameWithType: PreconditionAttribute
    fullName: Discord.Commands.PreconditionAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Commands.PreconditionAttribute
    name: PreconditionAttribute
    nameWithType: PreconditionAttribute
    fullName: Discord.Commands.PreconditionAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Discord.Commands.Builders.CommandBuilder.Parameters*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.Parameters
  name: Parameters
  nameWithType: CommandBuilder.Parameters
  fullName: Discord.Commands.Builders.CommandBuilder.Parameters
- uid: System.Collections.Generic.IReadOnlyList{Discord.Commands.Builders.ParameterBuilder}
  commentId: T:System.Collections.Generic.IReadOnlyList{Discord.Commands.Builders.ParameterBuilder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<ParameterBuilder>
  nameWithType: IReadOnlyList<ParameterBuilder>
  fullName: System.Collections.Generic.IReadOnlyList<Discord.Commands.Builders.ParameterBuilder>
  nameWithType.vb: IReadOnlyList(Of ParameterBuilder)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Discord.Commands.Builders.ParameterBuilder)
  name.vb: IReadOnlyList(Of ParameterBuilder)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Commands.Builders.ParameterBuilder
    name: ParameterBuilder
    nameWithType: ParameterBuilder
    fullName: Discord.Commands.Builders.ParameterBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Commands.Builders.ParameterBuilder
    name: ParameterBuilder
    nameWithType: ParameterBuilder
    fullName: Discord.Commands.Builders.ParameterBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Commands.Builders.CommandBuilder.Attributes*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.Attributes
  name: Attributes
  nameWithType: CommandBuilder.Attributes
  fullName: Discord.Commands.Builders.CommandBuilder.Attributes
- uid: System.Collections.Generic.IReadOnlyList{System.Attribute}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Attribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Attribute>
  nameWithType: IReadOnlyList<Attribute>
  fullName: System.Collections.Generic.IReadOnlyList<System.Attribute>
  nameWithType.vb: IReadOnlyList(Of Attribute)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of System.Attribute)
  name.vb: IReadOnlyList(Of Attribute)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Commands.Builders.CommandBuilder.Aliases*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.Aliases
  name: Aliases
  nameWithType: CommandBuilder.Aliases
  fullName: Discord.Commands.Builders.CommandBuilder.Aliases
- uid: System.Collections.Generic.IReadOnlyList{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<String>
  nameWithType: IReadOnlyList<String>
  fullName: System.Collections.Generic.IReadOnlyList<System.String>
  nameWithType.vb: IReadOnlyList(Of String)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of System.String)
  name.vb: IReadOnlyList(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Commands.Builders.CommandBuilder.WithName*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.WithName
  name: WithName
  nameWithType: CommandBuilder.WithName
  fullName: Discord.Commands.Builders.CommandBuilder.WithName
- uid: Discord.Commands.Builders.CommandBuilder
  commentId: T:Discord.Commands.Builders.CommandBuilder
  parent: Discord.Commands.Builders
  name: CommandBuilder
  nameWithType: CommandBuilder
  fullName: Discord.Commands.Builders.CommandBuilder
- uid: Discord.Commands.Builders.CommandBuilder.WithSummary*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.WithSummary
  name: WithSummary
  nameWithType: CommandBuilder.WithSummary
  fullName: Discord.Commands.Builders.CommandBuilder.WithSummary
- uid: Discord.Commands.Builders.CommandBuilder.WithRemarks*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.WithRemarks
  name: WithRemarks
  nameWithType: CommandBuilder.WithRemarks
  fullName: Discord.Commands.Builders.CommandBuilder.WithRemarks
- uid: Discord.Commands.Builders.CommandBuilder.WithRunMode*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.WithRunMode
  name: WithRunMode
  nameWithType: CommandBuilder.WithRunMode
  fullName: Discord.Commands.Builders.CommandBuilder.WithRunMode
- uid: Discord.Commands.Builders.CommandBuilder.WithPriority*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.WithPriority
  name: WithPriority
  nameWithType: CommandBuilder.WithPriority
  fullName: Discord.Commands.Builders.CommandBuilder.WithPriority
- uid: Discord.Commands.Builders.CommandBuilder.AddAliases*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.AddAliases
  name: AddAliases
  nameWithType: CommandBuilder.AddAliases
  fullName: Discord.Commands.Builders.CommandBuilder.AddAliases
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Discord.Commands.Builders.CommandBuilder.AddAttributes*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.AddAttributes
  name: AddAttributes
  nameWithType: CommandBuilder.AddAttributes
  fullName: Discord.Commands.Builders.CommandBuilder.AddAttributes
- uid: System.Attribute[]
  isExternal: true
  name: Attribute[]
  nameWithType: Attribute[]
  fullName: System.Attribute[]
  nameWithType.vb: Attribute()
  fullName.vb: System.Attribute()
  name.vb: Attribute()
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: System.Attribute
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Discord.Commands.Builders.CommandBuilder.AddPrecondition*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.AddPrecondition
  name: AddPrecondition
  nameWithType: CommandBuilder.AddPrecondition
  fullName: Discord.Commands.Builders.CommandBuilder.AddPrecondition
- uid: Discord.Commands.PreconditionAttribute
  commentId: T:Discord.Commands.PreconditionAttribute
  parent: Discord.Commands
  name: PreconditionAttribute
  nameWithType: PreconditionAttribute
  fullName: Discord.Commands.PreconditionAttribute
- uid: Discord.Commands.Builders.CommandBuilder.AddParameter*
  commentId: Overload:Discord.Commands.Builders.CommandBuilder.AddParameter
  name: AddParameter
  nameWithType: CommandBuilder.AddParameter
  fullName: Discord.Commands.Builders.CommandBuilder.AddParameter
- uid: System.Action{Discord.Commands.Builders.ParameterBuilder}
  commentId: T:System.Action{Discord.Commands.Builders.ParameterBuilder}
  parent: System
  definition: System.Action`1
  name: Action<ParameterBuilder>
  nameWithType: Action<ParameterBuilder>
  fullName: System.Action<Discord.Commands.Builders.ParameterBuilder>
  nameWithType.vb: Action(Of ParameterBuilder)
  fullName.vb: System.Action(Of Discord.Commands.Builders.ParameterBuilder)
  name.vb: Action(Of ParameterBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Commands.Builders.ParameterBuilder
    name: ParameterBuilder
    nameWithType: ParameterBuilder
    fullName: Discord.Commands.Builders.ParameterBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Commands.Builders.ParameterBuilder
    name: ParameterBuilder
    nameWithType: ParameterBuilder
    fullName: Discord.Commands.Builders.ParameterBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
