### YamlMime:ManagedReference
items:
- uid: Discord.MessageProperties
  commentId: T:Discord.MessageProperties
  id: MessageProperties
  parent: Discord
  children:
  - Discord.MessageProperties.Content
  - Discord.MessageProperties.Embed
  langs:
  - csharp
  - vb
  name: MessageProperties
  nameWithType: MessageProperties
  fullName: Discord.MessageProperties
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/MessageProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MessageProperties
    path: ../src/Discord.Net.Core/Entities/Messages/MessageProperties.cs
    startLine: 10
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nProperties that are used to modify an <xref href=\"Discord.IUserMessage\" data-throw-if-not-resolved=\"false\"></xref> with the specified changes.\n"
  remarks: "\nThe content of a message can be cleared with <see cref=\"!:System.String.Empty\"></see> if and only if an \n<xref href=\"Discord.Embed\" data-throw-if-not-resolved=\"false\"></xref> is present.\n"
  example: []
  syntax:
    content: 'public class MessageProperties : object'
    content.vb: >-
      Public Class MessageProperties
          Inherits Object
  seealso:
  - linkId: Discord.IUserMessage.ModifyAsync(Action{Discord.MessageProperties},Discord.RequestOptions)
    commentId: M:Discord.IUserMessage.ModifyAsync(Action{Discord.MessageProperties},Discord.RequestOptions)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.MessageProperties.Content
  commentId: P:Discord.MessageProperties.Content
  id: Content
  parent: Discord.MessageProperties
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: MessageProperties.Content
  fullName: Discord.MessageProperties.Content
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/MessageProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Content
    path: ../src/Discord.Net.Core/Entities/Messages/MessageProperties.cs
    startLine: 18
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the content of the message.\n"
  remarks: "\nThis must be less than the constant defined by <xref href=\"Discord.DiscordConfig.MaxMessageSize\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Optional<string> Content { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.String}
    content.vb: 'Public Property Content As '
  overload: Discord.MessageProperties.Content*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.MessageProperties.Embed
  commentId: P:Discord.MessageProperties.Embed
  id: Embed
  parent: Discord.MessageProperties
  langs:
  - csharp
  - vb
  name: Embed
  nameWithType: MessageProperties.Embed
  fullName: Discord.MessageProperties.Embed
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/MessageProperties.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Embed
    path: ../src/Discord.Net.Core/Entities/Messages/MessageProperties.cs
    startLine: 22
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the embed the message should display.\n"
  example: []
  syntax:
    content: public Optional<Embed> Embed { get; set; }
    parameters: []
    return:
      type: Discord.Optional{Discord.Embed}
    content.vb: 'Public Property Embed As '
  overload: Discord.MessageProperties.Embed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Discord.IUserMessage
  commentId: T:Discord.IUserMessage
  parent: Discord
  name: IUserMessage
  nameWithType: IUserMessage
  fullName: Discord.IUserMessage
- uid: Discord.Embed
  commentId: T:Discord.Embed
  parent: Discord
  name: Embed
  nameWithType: Embed
  fullName: Discord.Embed
- uid: Discord.IUserMessage.ModifyAsync(Action{Discord.MessageProperties},Discord.RequestOptions)
  commentId: M:Discord.IUserMessage.ModifyAsync(Action{Discord.MessageProperties},Discord.RequestOptions)
  isExternal: true
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.DiscordConfig.MaxMessageSize
  commentId: F:Discord.DiscordConfig.MaxMessageSize
  parent: Discord.DiscordConfig
  name: MaxMessageSize
  nameWithType: DiscordConfig.MaxMessageSize
  fullName: Discord.DiscordConfig.MaxMessageSize
- uid: Discord.MessageProperties.Content*
  commentId: Overload:Discord.MessageProperties.Content
  name: Content
  nameWithType: MessageProperties.Content
  fullName: Discord.MessageProperties.Content
- uid: Discord.Optional{System.String}
  commentId: T:Discord.Optional{System.String}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<String>
  nameWithType: Optional<String>
  fullName: Discord.Optional<System.String>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Discord.Optional(Of System.String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.DiscordConfig
  commentId: T:Discord.DiscordConfig
  parent: Discord
  name: DiscordConfig
  nameWithType: DiscordConfig
  fullName: Discord.DiscordConfig
- uid: Discord.Optional`1
  commentId: T:Discord.Optional`1
  parent: Discord
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: Discord.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: Discord.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.MessageProperties.Embed*
  commentId: Overload:Discord.MessageProperties.Embed
  name: Embed
  nameWithType: MessageProperties.Embed
  fullName: Discord.MessageProperties.Embed
- uid: Discord.Optional{Discord.Embed}
  commentId: T:Discord.Optional{Discord.Embed}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<Embed>
  nameWithType: Optional<Embed>
  fullName: Discord.Optional<Discord.Embed>
  nameWithType.vb: Optional(Of Embed)
  fullName.vb: Discord.Optional(Of Discord.Embed)
  name.vb: Optional(Of Embed)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Embed
    name: Embed
    nameWithType: Embed
    fullName: Discord.Embed
  - name: )
    nameWithType: )
    fullName: )
