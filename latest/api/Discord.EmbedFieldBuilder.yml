### YamlMime:ManagedReference
items:
- uid: Discord.EmbedFieldBuilder
  commentId: T:Discord.EmbedFieldBuilder
  id: EmbedFieldBuilder
  parent: Discord
  children:
  - Discord.EmbedFieldBuilder.Build
  - Discord.EmbedFieldBuilder.IsInline
  - Discord.EmbedFieldBuilder.MaxFieldNameLength
  - Discord.EmbedFieldBuilder.MaxFieldValueLength
  - Discord.EmbedFieldBuilder.Name
  - Discord.EmbedFieldBuilder.Value
  - Discord.EmbedFieldBuilder.WithIsInline(System.Boolean)
  - Discord.EmbedFieldBuilder.WithName(System.String)
  - Discord.EmbedFieldBuilder.WithValue(System.Object)
  langs:
  - csharp
  - vb
  name: EmbedFieldBuilder
  nameWithType: EmbedFieldBuilder
  fullName: Discord.EmbedFieldBuilder
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: EmbedFieldBuilder
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 436
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nRepresents a builder class for an embed field.\n"
  example: []
  syntax:
    content: 'public class EmbedFieldBuilder : object'
    content.vb: >-
      Public Class EmbedFieldBuilder
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.EmbedFieldBuilder.MaxFieldNameLength
  commentId: F:Discord.EmbedFieldBuilder.MaxFieldNameLength
  id: MaxFieldNameLength
  parent: Discord.EmbedFieldBuilder
  langs:
  - csharp
  - vb
  name: MaxFieldNameLength
  nameWithType: EmbedFieldBuilder.MaxFieldNameLength
  fullName: Discord.EmbedFieldBuilder.MaxFieldNameLength
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: MaxFieldNameLength
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 443
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the maximum field length for name allowed by Discord.\n"
  example: []
  syntax:
    content: public const int MaxFieldNameLength = null
    return:
      type: System.Int32
    content.vb: Public Const MaxFieldNameLength As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.EmbedFieldBuilder.MaxFieldValueLength
  commentId: F:Discord.EmbedFieldBuilder.MaxFieldValueLength
  id: MaxFieldValueLength
  parent: Discord.EmbedFieldBuilder
  langs:
  - csharp
  - vb
  name: MaxFieldValueLength
  nameWithType: EmbedFieldBuilder.MaxFieldValueLength
  fullName: Discord.EmbedFieldBuilder.MaxFieldValueLength
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: MaxFieldValueLength
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 447
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the maximum field length for value allowed by Discord.\n"
  example: []
  syntax:
    content: public const int MaxFieldValueLength = null
    return:
      type: System.Int32
    content.vb: Public Const MaxFieldValueLength As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.EmbedFieldBuilder.Name
  commentId: P:Discord.EmbedFieldBuilder.Name
  id: Name
  parent: Discord.EmbedFieldBuilder
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: EmbedFieldBuilder.Name
  fullName: Discord.EmbedFieldBuilder.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 460
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the field name.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe name of the field.\n"
    content.vb: Public Property Name As String
  overload: Discord.EmbedFieldBuilder.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.EmbedFieldBuilder.Value
  commentId: P:Discord.EmbedFieldBuilder.Value
  id: Value
  parent: Discord.EmbedFieldBuilder
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: EmbedFieldBuilder.Value
  fullName: Discord.EmbedFieldBuilder.Value
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Value
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 482
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the field value.\n"
  example: []
  syntax:
    content: public object Value { get; set; }
    parameters: []
    return:
      type: System.Object
      description: "\nThe value of the field.\n"
    content.vb: Public Property Value As Object
  overload: Discord.EmbedFieldBuilder.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.EmbedFieldBuilder.IsInline
  commentId: P:Discord.EmbedFieldBuilder.IsInline
  id: IsInline
  parent: Discord.EmbedFieldBuilder
  langs:
  - csharp
  - vb
  name: IsInline
  nameWithType: EmbedFieldBuilder.IsInline
  fullName: Discord.EmbedFieldBuilder.IsInline
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: IsInline
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 496
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets a value that indicates whether the field should be in-line with each other.\n"
  example: []
  syntax:
    content: public bool IsInline { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsInline As Boolean
  overload: Discord.EmbedFieldBuilder.IsInline*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.EmbedFieldBuilder.WithName(System.String)
  commentId: M:Discord.EmbedFieldBuilder.WithName(System.String)
  id: WithName(System.String)
  parent: Discord.EmbedFieldBuilder
  langs:
  - csharp
  - vb
  name: WithName(String)
  nameWithType: EmbedFieldBuilder.WithName(String)
  fullName: Discord.EmbedFieldBuilder.WithName(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: WithName
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 505
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the field name.\n"
  example: []
  syntax:
    content: public EmbedFieldBuilder WithName(string name)
    parameters:
    - id: name
      type: System.String
      description: The name to set the field name to.
    return:
      type: Discord.EmbedFieldBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithName(name As String) As EmbedFieldBuilder
  overload: Discord.EmbedFieldBuilder.WithName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedFieldBuilder.WithValue(System.Object)
  commentId: M:Discord.EmbedFieldBuilder.WithValue(System.Object)
  id: WithValue(System.Object)
  parent: Discord.EmbedFieldBuilder
  langs:
  - csharp
  - vb
  name: WithValue(Object)
  nameWithType: EmbedFieldBuilder.WithValue(Object)
  fullName: Discord.EmbedFieldBuilder.WithValue(System.Object)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: WithValue
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 517
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nSets the field value.\n"
  example: []
  syntax:
    content: public EmbedFieldBuilder WithValue(object value)
    parameters:
    - id: value
      type: System.Object
      description: The value to set the field value to.
    return:
      type: Discord.EmbedFieldBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithValue(value As Object) As EmbedFieldBuilder
  overload: Discord.EmbedFieldBuilder.WithValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedFieldBuilder.WithIsInline(System.Boolean)
  commentId: M:Discord.EmbedFieldBuilder.WithIsInline(System.Boolean)
  id: WithIsInline(System.Boolean)
  parent: Discord.EmbedFieldBuilder
  langs:
  - csharp
  - vb
  name: WithIsInline(Boolean)
  nameWithType: EmbedFieldBuilder.WithIsInline(Boolean)
  fullName: Discord.EmbedFieldBuilder.WithIsInline(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: WithIsInline
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 528
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nDetermines whether the field should be in-line with each other.\n"
  example: []
  syntax:
    content: public EmbedFieldBuilder WithIsInline(bool isInline)
    parameters:
    - id: isInline
      type: System.Boolean
    return:
      type: Discord.EmbedFieldBuilder
      description: "\nThe current builder.\n"
    content.vb: Public Function WithIsInline(isInline As Boolean) As EmbedFieldBuilder
  overload: Discord.EmbedFieldBuilder.WithIsInline*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Discord.EmbedFieldBuilder.Build
  commentId: M:Discord.EmbedFieldBuilder.Build
  id: Build
  parent: Discord.EmbedFieldBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: EmbedFieldBuilder.Build()
  fullName: Discord.EmbedFieldBuilder.Build()
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Build
    path: ../src/Discord.Net.Core/Entities/Messages/EmbedBuilder.cs
    startLine: 545
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nBuilds the field builder into a <xref href=\"Discord.EmbedField\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public EmbedField Build()
    return:
      type: Discord.EmbedField
      description: "\nThe current builder.\n"
    content.vb: Public Function Build As EmbedField
  overload: Discord.EmbedFieldBuilder.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Discord.EmbedFieldBuilder.MaxFieldNameLength
  commentId: F:Discord.EmbedFieldBuilder.MaxFieldNameLength
  isExternal: true
- uid: Discord.EmbedFieldBuilder.Name*
  commentId: Overload:Discord.EmbedFieldBuilder.Name
  name: Name
  nameWithType: EmbedFieldBuilder.Name
  fullName: Discord.EmbedFieldBuilder.Name
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.EmbedFieldBuilder.MaxFieldValueLength
  commentId: F:Discord.EmbedFieldBuilder.MaxFieldValueLength
  isExternal: true
- uid: Discord.EmbedFieldBuilder.Value*
  commentId: Overload:Discord.EmbedFieldBuilder.Value
  name: Value
  nameWithType: EmbedFieldBuilder.Value
  fullName: Discord.EmbedFieldBuilder.Value
- uid: Discord.EmbedFieldBuilder.IsInline*
  commentId: Overload:Discord.EmbedFieldBuilder.IsInline
  name: IsInline
  nameWithType: EmbedFieldBuilder.IsInline
  fullName: Discord.EmbedFieldBuilder.IsInline
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.EmbedFieldBuilder.WithName*
  commentId: Overload:Discord.EmbedFieldBuilder.WithName
  name: WithName
  nameWithType: EmbedFieldBuilder.WithName
  fullName: Discord.EmbedFieldBuilder.WithName
- uid: Discord.EmbedFieldBuilder
  commentId: T:Discord.EmbedFieldBuilder
  parent: Discord
  name: EmbedFieldBuilder
  nameWithType: EmbedFieldBuilder
  fullName: Discord.EmbedFieldBuilder
- uid: Discord.EmbedFieldBuilder.WithValue*
  commentId: Overload:Discord.EmbedFieldBuilder.WithValue
  name: WithValue
  nameWithType: EmbedFieldBuilder.WithValue
  fullName: Discord.EmbedFieldBuilder.WithValue
- uid: Discord.EmbedFieldBuilder.WithIsInline*
  commentId: Overload:Discord.EmbedFieldBuilder.WithIsInline
  name: WithIsInline
  nameWithType: EmbedFieldBuilder.WithIsInline
  fullName: Discord.EmbedFieldBuilder.WithIsInline
- uid: Discord.EmbedField
  commentId: T:Discord.EmbedField
  parent: Discord
  name: EmbedField
  nameWithType: EmbedField
  fullName: Discord.EmbedField
- uid: Discord.EmbedFieldBuilder.Name
  commentId: P:Discord.EmbedFieldBuilder.Name
  isExternal: true
- uid: Discord.EmbedFieldBuilder.Value
  commentId: P:Discord.EmbedFieldBuilder.Value
  isExternal: true
- uid: Discord.EmbedFieldBuilder.Build*
  commentId: Overload:Discord.EmbedFieldBuilder.Build
  name: Build
  nameWithType: EmbedFieldBuilder.Build
  fullName: Discord.EmbedFieldBuilder.Build
