### YamlMime:ManagedReference
items:
- uid: Discord.RoleProperties
  commentId: T:Discord.RoleProperties
  id: RoleProperties
  parent: Discord
  children:
  - Discord.RoleProperties.Color
  - Discord.RoleProperties.Hoist
  - Discord.RoleProperties.Mentionable
  - Discord.RoleProperties.Name
  - Discord.RoleProperties.Permissions
  - Discord.RoleProperties.Position
  langs:
  - csharp
  - vb
  name: RoleProperties
  nameWithType: RoleProperties
  fullName: Discord.RoleProperties
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Roles/RoleProperties.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: RoleProperties
    path: ../src/Discord.Net.Core/Entities/Roles/RoleProperties.cs
    startLine: 18
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nProperties that are used to modify an <xref href=\"Discord.IRole\" data-throw-if-not-resolved=\"false\"></xref> with the specified changes.\n"
  example:
  - "\nThe following example modifies the role to a mentionable one, renames the role into <code>Sonic</code>, and\nchanges the color to a light-blue.\n<pre><code class=\"lang-cs\">await role.ModifyAsync(x =>\n{\n    x.Name = &quot;Sonic&quot;;\n    x.Color = new Color(0x1A50BC);\n    x.Mentionable = true;\n});</code></pre>\n"
  syntax:
    content: 'public class RoleProperties : object'
    content.vb: >-
      Public Class RoleProperties
          Inherits Object
  seealso:
  - linkId: Discord.IRole.ModifyAsync(Action{Discord.RoleProperties},Discord.RequestOptions)
    commentId: M:Discord.IRole.ModifyAsync(Action{Discord.RoleProperties},Discord.RequestOptions)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.RoleProperties.Name
  commentId: P:Discord.RoleProperties.Name
  id: Name
  parent: Discord.RoleProperties
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RoleProperties.Name
  fullName: Discord.RoleProperties.Name
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Roles/RoleProperties.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Name
    path: ../src/Discord.Net.Core/Entities/Roles/RoleProperties.cs
    startLine: 26
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the name of the role.\n"
  remarks: "\nThis value may not be set if the role is an @everyone role.\n"
  example: []
  syntax:
    content: public Optional<string> Name { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.String}
    content.vb: 'Public Property Name As '
  overload: Discord.RoleProperties.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.RoleProperties.Permissions
  commentId: P:Discord.RoleProperties.Permissions
  id: Permissions
  parent: Discord.RoleProperties
  langs:
  - csharp
  - vb
  name: Permissions
  nameWithType: RoleProperties.Permissions
  fullName: Discord.RoleProperties.Permissions
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Roles/RoleProperties.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Permissions
    path: ../src/Discord.Net.Core/Entities/Roles/RoleProperties.cs
    startLine: 30
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the role&apos;s <xref href=\"Discord.GuildPermission\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Optional<GuildPermissions> Permissions { get; set; }
    parameters: []
    return:
      type: Discord.Optional{Discord.GuildPermissions}
    content.vb: 'Public Property Permissions As '
  overload: Discord.RoleProperties.Permissions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.RoleProperties.Position
  commentId: P:Discord.RoleProperties.Position
  id: Position
  parent: Discord.RoleProperties
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: RoleProperties.Position
  fullName: Discord.RoleProperties.Position
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Roles/RoleProperties.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Position
    path: ../src/Discord.Net.Core/Entities/Roles/RoleProperties.cs
    startLine: 37
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the position of the role. This is 0-based!\n"
  remarks: "\nThis value may not be set if the role is an @everyone role.\n"
  example: []
  syntax:
    content: public Optional<int> Position { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Int32}
    content.vb: 'Public Property Position As '
  overload: Discord.RoleProperties.Position*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.RoleProperties.Color
  commentId: P:Discord.RoleProperties.Color
  id: Color
  parent: Discord.RoleProperties
  langs:
  - csharp
  - vb
  name: Color
  nameWithType: RoleProperties.Color
  fullName: Discord.RoleProperties.Color
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Roles/RoleProperties.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Color
    path: ../src/Discord.Net.Core/Entities/Roles/RoleProperties.cs
    startLine: 44
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the color of the role.\n"
  remarks: "\nThis value may not be set if the role is an @everyone role.\n"
  example: []
  syntax:
    content: public Optional<Color> Color { get; set; }
    parameters: []
    return:
      type: Discord.Optional{Discord.Color}
    content.vb: 'Public Property Color As '
  overload: Discord.RoleProperties.Color*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.RoleProperties.Hoist
  commentId: P:Discord.RoleProperties.Hoist
  id: Hoist
  parent: Discord.RoleProperties
  langs:
  - csharp
  - vb
  name: Hoist
  nameWithType: RoleProperties.Hoist
  fullName: Discord.RoleProperties.Hoist
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Roles/RoleProperties.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Hoist
    path: ../src/Discord.Net.Core/Entities/Roles/RoleProperties.cs
    startLine: 51
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets whether or not this role should be displayed independently in the user list.\n"
  remarks: "\nThis value may not be set if the role is an @everyone role.\n"
  example: []
  syntax:
    content: public Optional<bool> Hoist { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Boolean}
    content.vb: 'Public Property Hoist As '
  overload: Discord.RoleProperties.Hoist*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.RoleProperties.Mentionable
  commentId: P:Discord.RoleProperties.Mentionable
  id: Mentionable
  parent: Discord.RoleProperties
  langs:
  - csharp
  - vb
  name: Mentionable
  nameWithType: RoleProperties.Mentionable
  fullName: Discord.RoleProperties.Mentionable
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/Entities/Roles/RoleProperties.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: Mentionable
    path: ../src/Discord.Net.Core/Entities/Roles/RoleProperties.cs
    startLine: 58
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets whether or not this role can be mentioned.\n"
  remarks: "\nThis value may not be set if the role is an @everyone role.\n"
  example: []
  syntax:
    content: public Optional<bool> Mentionable { get; set; }
    parameters: []
    return:
      type: Discord.Optional{System.Boolean}
    content.vb: 'Public Property Mentionable As '
  overload: Discord.RoleProperties.Mentionable*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Discord.IRole
  commentId: T:Discord.IRole
  parent: Discord
  name: IRole
  nameWithType: IRole
  fullName: Discord.IRole
- uid: Discord.IRole.ModifyAsync(Action{Discord.RoleProperties},Discord.RequestOptions)
  commentId: M:Discord.IRole.ModifyAsync(Action{Discord.RoleProperties},Discord.RequestOptions)
  isExternal: true
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord.RoleProperties.Name*
  commentId: Overload:Discord.RoleProperties.Name
  name: Name
  nameWithType: RoleProperties.Name
  fullName: Discord.RoleProperties.Name
- uid: Discord.Optional{System.String}
  commentId: T:Discord.Optional{System.String}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<String>
  nameWithType: Optional<String>
  fullName: Discord.Optional<System.String>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Discord.Optional(Of System.String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.Optional`1
  commentId: T:Discord.Optional`1
  parent: Discord
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: Discord.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: Discord.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.GuildPermission
  commentId: T:Discord.GuildPermission
  parent: Discord
  name: GuildPermission
  nameWithType: GuildPermission
  fullName: Discord.GuildPermission
- uid: Discord.RoleProperties.Permissions*
  commentId: Overload:Discord.RoleProperties.Permissions
  name: Permissions
  nameWithType: RoleProperties.Permissions
  fullName: Discord.RoleProperties.Permissions
- uid: Discord.Optional{Discord.GuildPermissions}
  commentId: T:Discord.Optional{Discord.GuildPermissions}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<GuildPermissions>
  nameWithType: Optional<GuildPermissions>
  fullName: Discord.Optional<Discord.GuildPermissions>
  nameWithType.vb: Optional(Of GuildPermissions)
  fullName.vb: Discord.Optional(Of Discord.GuildPermissions)
  name.vb: Optional(Of GuildPermissions)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.GuildPermissions
    name: GuildPermissions
    nameWithType: GuildPermissions
    fullName: Discord.GuildPermissions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.GuildPermissions
    name: GuildPermissions
    nameWithType: GuildPermissions
    fullName: Discord.GuildPermissions
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.RoleProperties.Position*
  commentId: Overload:Discord.RoleProperties.Position
  name: Position
  nameWithType: RoleProperties.Position
  fullName: Discord.RoleProperties.Position
- uid: Discord.Optional{System.Int32}
  commentId: T:Discord.Optional{System.Int32}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<Int32>
  nameWithType: Optional<Int32>
  fullName: Discord.Optional<System.Int32>
  nameWithType.vb: Optional(Of Int32)
  fullName.vb: Discord.Optional(Of System.Int32)
  name.vb: Optional(Of Int32)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.RoleProperties.Color*
  commentId: Overload:Discord.RoleProperties.Color
  name: Color
  nameWithType: RoleProperties.Color
  fullName: Discord.RoleProperties.Color
- uid: Discord.Optional{Discord.Color}
  commentId: T:Discord.Optional{Discord.Color}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<Color>
  nameWithType: Optional<Color>
  fullName: Discord.Optional<Discord.Color>
  nameWithType.vb: Optional(Of Color)
  fullName.vb: Discord.Optional(Of Discord.Color)
  name.vb: Optional(Of Color)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.Color
    name: Color
    nameWithType: Color
    fullName: Discord.Color
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.Color
    name: Color
    nameWithType: Color
    fullName: Discord.Color
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.RoleProperties.Hoist*
  commentId: Overload:Discord.RoleProperties.Hoist
  name: Hoist
  nameWithType: RoleProperties.Hoist
  fullName: Discord.RoleProperties.Hoist
- uid: Discord.Optional{System.Boolean}
  commentId: T:Discord.Optional{System.Boolean}
  parent: Discord
  definition: Discord.Optional`1
  name: Optional<Boolean>
  nameWithType: Optional<Boolean>
  fullName: Discord.Optional<System.Boolean>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: Discord.Optional(Of System.Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Discord.Optional`1
    name: Optional
    nameWithType: Optional
    fullName: Discord.Optional
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.RoleProperties.Mentionable*
  commentId: Overload:Discord.RoleProperties.Mentionable
  name: Mentionable
  nameWithType: RoleProperties.Mentionable
  fullName: Discord.RoleProperties.Mentionable
