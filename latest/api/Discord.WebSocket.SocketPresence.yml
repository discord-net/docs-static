### YamlMime:ManagedReference
items:
- uid: Discord.WebSocket.SocketPresence
  commentId: T:Discord.WebSocket.SocketPresence
  id: SocketPresence
  parent: Discord.WebSocket
  children:
  - Discord.WebSocket.SocketPresence.ActiveClients
  - Discord.WebSocket.SocketPresence.Activity
  - Discord.WebSocket.SocketPresence.Status
  - Discord.WebSocket.SocketPresence.ToString
  langs:
  - csharp
  - vb
  name: SocketPresence
  nameWithType: SocketPresence
  fullName: Discord.WebSocket.SocketPresence
  type: Struct
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketPresence.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: SocketPresence
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketPresence.cs
    startLine: 11
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nRepresents the WebSocket user&apos;s presence status. This may include their online status and their activity.\n"
  example: []
  syntax:
    content: 'public struct SocketPresence : IPresence'
    content.vb: >-
      Public Structure SocketPresence
          Implements IPresence
  implements:
  - Discord.IPresence
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Discord.WebSocket.SocketPresence.Status
  commentId: P:Discord.WebSocket.SocketPresence.Status
  id: Status
  parent: Discord.WebSocket.SocketPresence
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: SocketPresence.Status
  fullName: Discord.WebSocket.SocketPresence.Status
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketPresence.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Status
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketPresence.cs
    startLine: 15
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the current status of this user.\n"
  example: []
  syntax:
    content: public UserStatus Status { get; }
    parameters: []
    return:
      type: Discord.UserStatus
    content.vb: Public ReadOnly Property Status As UserStatus
  overload: Discord.WebSocket.SocketPresence.Status*
  implements:
  - Discord.IPresence.Status
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketPresence.Activity
  commentId: P:Discord.WebSocket.SocketPresence.Activity
  id: Activity
  parent: Discord.WebSocket.SocketPresence
  langs:
  - csharp
  - vb
  name: Activity
  nameWithType: SocketPresence.Activity
  fullName: Discord.WebSocket.SocketPresence.Activity
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketPresence.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Activity
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketPresence.cs
    startLine: 17
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the activity this user is currently doing.\n"
  example: []
  syntax:
    content: public IActivity Activity { get; }
    parameters: []
    return:
      type: Discord.IActivity
    content.vb: Public ReadOnly Property Activity As IActivity
  overload: Discord.WebSocket.SocketPresence.Activity*
  implements:
  - Discord.IPresence.Activity
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketPresence.ActiveClients
  commentId: P:Discord.WebSocket.SocketPresence.ActiveClients
  id: ActiveClients
  parent: Discord.WebSocket.SocketPresence
  langs:
  - csharp
  - vb
  name: ActiveClients
  nameWithType: SocketPresence.ActiveClients
  fullName: Discord.WebSocket.SocketPresence.ActiveClients
  type: Property
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketPresence.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ActiveClients
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketPresence.cs
    startLine: 19
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the set of clients where this user is currently active.\n"
  example: []
  syntax:
    content: public IImmutableSet<ClientType> ActiveClients { get; }
    parameters: []
    return:
      type: System.Collections.Immutable.IImmutableSet{Discord.ClientType}
    content.vb: Public ReadOnly Property ActiveClients As IImmutableSet(Of ClientType)
  overload: Discord.WebSocket.SocketPresence.ActiveClients*
  implements:
  - Discord.IPresence.ActiveClients
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Discord.WebSocket.SocketPresence.ToString
  commentId: M:Discord.WebSocket.SocketPresence.ToString
  id: ToString
  parent: Discord.WebSocket.SocketPresence
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SocketPresence.ToString()
  fullName: Discord.WebSocket.SocketPresence.ToString()
  type: Method
  source:
    remote:
      path: src/Discord.Net.WebSocket/Entities/Users/SocketPresence.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ToString
    path: ../src/Discord.Net.WebSocket/Entities/Users/SocketPresence.cs
    startLine: 62
  assemblies:
  - Discord.Net.WebSocket
  namespace: Discord.WebSocket
  summary: "\nGets the status of the user.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA string that resolves to <xref href=\"Discord.WebSocket.SocketPresence.Status\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Discord.WebSocket.SocketPresence.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Discord.WebSocket
  commentId: N:Discord.WebSocket
  name: Discord.WebSocket
  nameWithType: Discord.WebSocket
  fullName: Discord.WebSocket
- uid: Discord.IPresence
  commentId: T:Discord.IPresence
  parent: Discord
  name: IPresence
  nameWithType: IPresence
  fullName: Discord.IPresence
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.WebSocket.SocketPresence.Status*
  commentId: Overload:Discord.WebSocket.SocketPresence.Status
  name: Status
  nameWithType: SocketPresence.Status
  fullName: Discord.WebSocket.SocketPresence.Status
- uid: Discord.IPresence.Status
  commentId: P:Discord.IPresence.Status
  parent: Discord.IPresence
  name: Status
  nameWithType: IPresence.Status
  fullName: Discord.IPresence.Status
- uid: Discord.UserStatus
  commentId: T:Discord.UserStatus
  parent: Discord
  name: UserStatus
  nameWithType: UserStatus
  fullName: Discord.UserStatus
- uid: Discord.WebSocket.SocketPresence.Activity*
  commentId: Overload:Discord.WebSocket.SocketPresence.Activity
  name: Activity
  nameWithType: SocketPresence.Activity
  fullName: Discord.WebSocket.SocketPresence.Activity
- uid: Discord.IPresence.Activity
  commentId: P:Discord.IPresence.Activity
  parent: Discord.IPresence
  name: Activity
  nameWithType: IPresence.Activity
  fullName: Discord.IPresence.Activity
- uid: Discord.IActivity
  commentId: T:Discord.IActivity
  parent: Discord
  name: IActivity
  nameWithType: IActivity
  fullName: Discord.IActivity
- uid: Discord.WebSocket.SocketPresence.ActiveClients*
  commentId: Overload:Discord.WebSocket.SocketPresence.ActiveClients
  name: ActiveClients
  nameWithType: SocketPresence.ActiveClients
  fullName: Discord.WebSocket.SocketPresence.ActiveClients
- uid: Discord.IPresence.ActiveClients
  commentId: P:Discord.IPresence.ActiveClients
  parent: Discord.IPresence
  name: ActiveClients
  nameWithType: IPresence.ActiveClients
  fullName: Discord.IPresence.ActiveClients
- uid: System.Collections.Immutable.IImmutableSet{Discord.ClientType}
  commentId: T:System.Collections.Immutable.IImmutableSet{Discord.ClientType}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.IImmutableSet`1
  name: IImmutableSet<ClientType>
  nameWithType: IImmutableSet<ClientType>
  fullName: System.Collections.Immutable.IImmutableSet<Discord.ClientType>
  nameWithType.vb: IImmutableSet(Of ClientType)
  fullName.vb: System.Collections.Immutable.IImmutableSet(Of Discord.ClientType)
  name.vb: IImmutableSet(Of ClientType)
  spec.csharp:
  - uid: System.Collections.Immutable.IImmutableSet`1
    name: IImmutableSet
    nameWithType: IImmutableSet
    fullName: System.Collections.Immutable.IImmutableSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Discord.ClientType
    name: ClientType
    nameWithType: ClientType
    fullName: Discord.ClientType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.IImmutableSet`1
    name: IImmutableSet
    nameWithType: IImmutableSet
    fullName: System.Collections.Immutable.IImmutableSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Discord.ClientType
    name: ClientType
    nameWithType: ClientType
    fullName: Discord.ClientType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Immutable.IImmutableSet`1
  commentId: T:System.Collections.Immutable.IImmutableSet`1
  isExternal: true
  name: IImmutableSet<T>
  nameWithType: IImmutableSet<T>
  fullName: System.Collections.Immutable.IImmutableSet<T>
  nameWithType.vb: IImmutableSet(Of T)
  fullName.vb: System.Collections.Immutable.IImmutableSet(Of T)
  name.vb: IImmutableSet(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.IImmutableSet`1
    name: IImmutableSet
    nameWithType: IImmutableSet
    fullName: System.Collections.Immutable.IImmutableSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.IImmutableSet`1
    name: IImmutableSet
    nameWithType: IImmutableSet
    fullName: System.Collections.Immutable.IImmutableSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: true
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
- uid: Discord.WebSocket.SocketPresence.Status
  commentId: P:Discord.WebSocket.SocketPresence.Status
  isExternal: true
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Discord.WebSocket.SocketPresence.ToString*
  commentId: Overload:Discord.WebSocket.SocketPresence.ToString
  name: ToString
  nameWithType: SocketPresence.ToString
  fullName: Discord.WebSocket.SocketPresence.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
