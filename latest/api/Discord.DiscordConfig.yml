### YamlMime:ManagedReference
items:
- uid: Discord.DiscordConfig
  commentId: T:Discord.DiscordConfig
  id: DiscordConfig
  parent: Discord
  children:
  - Discord.DiscordConfig.APIUrl
  - Discord.DiscordConfig.APIVersion
  - Discord.DiscordConfig.CDNUrl
  - Discord.DiscordConfig.DefaultRequestTimeout
  - Discord.DiscordConfig.DefaultRetryMode
  - Discord.DiscordConfig.InviteUrl
  - Discord.DiscordConfig.LogLevel
  - Discord.DiscordConfig.MaxAuditLogEntriesPerBatch
  - Discord.DiscordConfig.MaxGuildsPerBatch
  - Discord.DiscordConfig.MaxMessageSize
  - Discord.DiscordConfig.MaxMessagesPerBatch
  - Discord.DiscordConfig.MaxUserReactionsPerBatch
  - Discord.DiscordConfig.MaxUsersPerBatch
  - Discord.DiscordConfig.RateLimitPrecision
  - Discord.DiscordConfig.UserAgent
  - Discord.DiscordConfig.UseSystemClock
  - Discord.DiscordConfig.Version
  - Discord.DiscordConfig.VoiceAPIVersion
  langs:
  - csharp
  - vb
  name: DiscordConfig
  nameWithType: DiscordConfig
  fullName: Discord.DiscordConfig
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: DiscordConfig
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 7
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nDefines various behaviors of Discord.Net.\n"
  example: []
  syntax:
    content: 'public class DiscordConfig : object'
    content.vb: >-
      Public Class DiscordConfig
          Inherits Object
  inheritance:
  - System.Object
  derivedClasses:
  - Discord.Rest.DiscordRestConfig
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Discord.DiscordConfig.APIVersion
  commentId: F:Discord.DiscordConfig.APIVersion
  id: APIVersion
  parent: Discord.DiscordConfig
  langs:
  - csharp
  - vb
  name: APIVersion
  nameWithType: DiscordConfig.APIVersion
  fullName: Discord.DiscordConfig.APIVersion
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: APIVersion
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 18
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the API version Discord.Net uses. \n"
  example: []
  syntax:
    content: public const int APIVersion = null
    return:
      type: System.Int32
      description: "\nAn <see cref=\"!:System.Int32\"></see> representing the API version that Discord.Net uses to communicate with Discord.\n<p>A list of available API version can be seen on the official \n<a href=\"https://discordapp.com/developers/docs/reference#api-versioning\">Discord API documentation</a>\n.</p>\n"
    content.vb: Public Const APIVersion As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.DiscordConfig.VoiceAPIVersion
  commentId: F:Discord.DiscordConfig.VoiceAPIVersion
  id: VoiceAPIVersion
  parent: Discord.DiscordConfig
  langs:
  - csharp
  - vb
  name: VoiceAPIVersion
  nameWithType: DiscordConfig.VoiceAPIVersion
  fullName: Discord.DiscordConfig.VoiceAPIVersion
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: VoiceAPIVersion
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 26
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the Voice API version Discord.Net uses.\n"
  example: []
  syntax:
    content: public const int VoiceAPIVersion = null
    return:
      type: System.Int32
      description: "\nAn <see cref=\"!:System.Int32\"></see> representing the API version that Discord.Net uses to communicate with Discord&apos;s\nvoice server.\n"
    content.vb: Public Const VoiceAPIVersion As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.DiscordConfig.Version
  commentId: P:Discord.DiscordConfig.Version
  id: Version
  parent: Discord.DiscordConfig
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: DiscordConfig.Version
  fullName: Discord.DiscordConfig.Version
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: Version
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 34
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the Discord.Net version, including the build number.\n"
  example: []
  syntax:
    content: public static string Version { get; }
    parameters: []
    return:
      type: System.String
      description: "\nA string containing the detailed version information, including its build number; <code>Unknown</code> when\nthe version fails to be fetched.\n"
    content.vb: Public Shared ReadOnly Property Version As String
  overload: Discord.DiscordConfig.Version*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Discord.DiscordConfig.UserAgent
  commentId: P:Discord.DiscordConfig.UserAgent
  id: UserAgent
  parent: Discord.DiscordConfig
  langs:
  - csharp
  - vb
  name: UserAgent
  nameWithType: DiscordConfig.UserAgent
  fullName: Discord.DiscordConfig.UserAgent
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: UserAgent
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 45
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets the user agent that Discord.Net uses in its clients.\n"
  example: []
  syntax:
    content: public static string UserAgent { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe user agent used in each Discord.Net request.\n"
    content.vb: Public Shared ReadOnly Property UserAgent As String
  overload: Discord.DiscordConfig.UserAgent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Discord.DiscordConfig.APIUrl
  commentId: F:Discord.DiscordConfig.APIUrl
  id: APIUrl
  parent: Discord.DiscordConfig
  langs:
  - csharp
  - vb
  name: APIUrl
  nameWithType: DiscordConfig.APIUrl
  fullName: Discord.DiscordConfig.APIUrl
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: APIUrl
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 52
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the base Discord API URL.\n"
  example: []
  syntax:
    content: public static readonly string APIUrl
    return:
      type: System.String
      description: "\nThe Discord API URL using <xref href=\"Discord.DiscordConfig.APIVersion\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Shared ReadOnly APIUrl As String
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Discord.DiscordConfig.CDNUrl
  commentId: F:Discord.DiscordConfig.CDNUrl
  id: CDNUrl
  parent: Discord.DiscordConfig
  langs:
  - csharp
  - vb
  name: CDNUrl
  nameWithType: DiscordConfig.CDNUrl
  fullName: Discord.DiscordConfig.CDNUrl
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: CDNUrl
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 59
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the base Discord CDN URL. \n"
  example: []
  syntax:
    content: public const string CDNUrl = null
    return:
      type: System.String
      description: "\nThe base Discord Content Delivery Network (CDN) URL.\n"
    content.vb: Public Const CDNUrl As String = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.DiscordConfig.InviteUrl
  commentId: F:Discord.DiscordConfig.InviteUrl
  id: InviteUrl
  parent: Discord.DiscordConfig
  langs:
  - csharp
  - vb
  name: InviteUrl
  nameWithType: DiscordConfig.InviteUrl
  fullName: Discord.DiscordConfig.InviteUrl
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: InviteUrl
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 66
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the base Discord invite URL.\n"
  example: []
  syntax:
    content: public const string InviteUrl = null
    return:
      type: System.String
      description: "\nThe base Discord invite URL.\n"
    content.vb: Public Const InviteUrl As String = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.DiscordConfig.DefaultRequestTimeout
  commentId: F:Discord.DiscordConfig.DefaultRequestTimeout
  id: DefaultRequestTimeout
  parent: Discord.DiscordConfig
  langs:
  - csharp
  - vb
  name: DefaultRequestTimeout
  nameWithType: DiscordConfig.DefaultRequestTimeout
  fullName: Discord.DiscordConfig.DefaultRequestTimeout
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: DefaultRequestTimeout
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 74
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the default timeout for requests. \n"
  example: []
  syntax:
    content: public const int DefaultRequestTimeout = null
    return:
      type: System.Int32
      description: "\nThe amount of time it takes in milliseconds before a request is timed out.\n"
    content.vb: Public Const DefaultRequestTimeout As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.DiscordConfig.MaxMessageSize
  commentId: F:Discord.DiscordConfig.MaxMessageSize
  id: MaxMessageSize
  parent: Discord.DiscordConfig
  langs:
  - csharp
  - vb
  name: MaxMessageSize
  nameWithType: DiscordConfig.MaxMessageSize
  fullName: Discord.DiscordConfig.MaxMessageSize
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MaxMessageSize
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 81
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the max length for a Discord message. \n"
  example: []
  syntax:
    content: public const int MaxMessageSize = null
    return:
      type: System.Int32
      description: "\nThe maximum length of a message allowed by Discord.\n"
    content.vb: Public Const MaxMessageSize As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.DiscordConfig.MaxMessagesPerBatch
  commentId: F:Discord.DiscordConfig.MaxMessagesPerBatch
  id: MaxMessagesPerBatch
  parent: Discord.DiscordConfig
  langs:
  - csharp
  - vb
  name: MaxMessagesPerBatch
  nameWithType: DiscordConfig.MaxMessagesPerBatch
  fullName: Discord.DiscordConfig.MaxMessagesPerBatch
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MaxMessagesPerBatch
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 88
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the max messages allowed to be in a request. \n"
  example: []
  syntax:
    content: public const int MaxMessagesPerBatch = null
    return:
      type: System.Int32
      description: "\nThe maximum number of messages that can be gotten per-batch.\n"
    content.vb: Public Const MaxMessagesPerBatch As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.DiscordConfig.MaxUsersPerBatch
  commentId: F:Discord.DiscordConfig.MaxUsersPerBatch
  id: MaxUsersPerBatch
  parent: Discord.DiscordConfig
  langs:
  - csharp
  - vb
  name: MaxUsersPerBatch
  nameWithType: DiscordConfig.MaxUsersPerBatch
  fullName: Discord.DiscordConfig.MaxUsersPerBatch
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MaxUsersPerBatch
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 95
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the max users allowed to be in a request.\n"
  example: []
  syntax:
    content: public const int MaxUsersPerBatch = null
    return:
      type: System.Int32
      description: "\nThe maximum number of users that can be gotten per-batch.\n"
    content.vb: Public Const MaxUsersPerBatch As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.DiscordConfig.MaxGuildsPerBatch
  commentId: F:Discord.DiscordConfig.MaxGuildsPerBatch
  id: MaxGuildsPerBatch
  parent: Discord.DiscordConfig
  langs:
  - csharp
  - vb
  name: MaxGuildsPerBatch
  nameWithType: DiscordConfig.MaxGuildsPerBatch
  fullName: Discord.DiscordConfig.MaxGuildsPerBatch
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MaxGuildsPerBatch
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 102
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the max guilds allowed to be in a request. \n"
  example: []
  syntax:
    content: public const int MaxGuildsPerBatch = null
    return:
      type: System.Int32
      description: "\nThe maximum number of guilds that can be gotten per-batch.\n"
    content.vb: Public Const MaxGuildsPerBatch As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.DiscordConfig.MaxUserReactionsPerBatch
  commentId: F:Discord.DiscordConfig.MaxUserReactionsPerBatch
  id: MaxUserReactionsPerBatch
  parent: Discord.DiscordConfig
  langs:
  - csharp
  - vb
  name: MaxUserReactionsPerBatch
  nameWithType: DiscordConfig.MaxUserReactionsPerBatch
  fullName: Discord.DiscordConfig.MaxUserReactionsPerBatch
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MaxUserReactionsPerBatch
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 109
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the max user reactions allowed to be in a request.\n"
  example: []
  syntax:
    content: public const int MaxUserReactionsPerBatch = null
    return:
      type: System.Int32
      description: "\nThe maximum number of user reactions that can be gotten per-batch.\n"
    content.vb: Public Const MaxUserReactionsPerBatch As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.DiscordConfig.MaxAuditLogEntriesPerBatch
  commentId: F:Discord.DiscordConfig.MaxAuditLogEntriesPerBatch
  id: MaxAuditLogEntriesPerBatch
  parent: Discord.DiscordConfig
  langs:
  - csharp
  - vb
  name: MaxAuditLogEntriesPerBatch
  nameWithType: DiscordConfig.MaxAuditLogEntriesPerBatch
  fullName: Discord.DiscordConfig.MaxAuditLogEntriesPerBatch
  type: Field
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MaxAuditLogEntriesPerBatch
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 116
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns the max audit log entries allowed to be in a request. \n"
  example: []
  syntax:
    content: public const int MaxAuditLogEntriesPerBatch = null
    return:
      type: System.Int32
      description: "\nThe maximum number of audit log entries that can be gotten per-batch.\n"
    content.vb: Public Const MaxAuditLogEntriesPerBatch As Integer = Nothing
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Discord.DiscordConfig.DefaultRetryMode
  commentId: P:Discord.DiscordConfig.DefaultRetryMode
  id: DefaultRetryMode
  parent: Discord.DiscordConfig
  langs:
  - csharp
  - vb
  name: DefaultRetryMode
  nameWithType: DiscordConfig.DefaultRetryMode
  fullName: Discord.DiscordConfig.DefaultRetryMode
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: DefaultRetryMode
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 124
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets how a request should act in the case of an error, by default.\n"
  example: []
  syntax:
    content: public RetryMode DefaultRetryMode { get; set; }
    parameters: []
    return:
      type: Discord.RetryMode
      description: "\nThe currently set <xref href=\"Discord.RetryMode\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Property DefaultRetryMode As RetryMode
  overload: Discord.DiscordConfig.DefaultRetryMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.DiscordConfig.LogLevel
  commentId: P:Discord.DiscordConfig.LogLevel
  id: LogLevel
  parent: Discord.DiscordConfig
  langs:
  - csharp
  - vb
  name: LogLevel
  nameWithType: DiscordConfig.LogLevel
  fullName: Discord.DiscordConfig.LogLevel
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: LogLevel
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 132
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the minimum log level severity that will be sent to the Log event.\n"
  example: []
  syntax:
    content: public LogSeverity LogLevel { get; set; }
    parameters: []
    return:
      type: Discord.LogSeverity
      description: "\nThe currently set <xref href=\"Discord.LogSeverity\" data-throw-if-not-resolved=\"false\"></xref> for logging level.\n"
    content.vb: Public Property LogLevel As LogSeverity
  overload: Discord.DiscordConfig.LogLevel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.DiscordConfig.RateLimitPrecision
  commentId: P:Discord.DiscordConfig.RateLimitPrecision
  id: RateLimitPrecision
  parent: Discord.DiscordConfig
  langs:
  - csharp
  - vb
  name: RateLimitPrecision
  nameWithType: DiscordConfig.RateLimitPrecision
  fullName: Discord.DiscordConfig.RateLimitPrecision
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: RateLimitPrecision
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 153
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets the level of precision of the rate limit reset response.\n"
  remarks: "\nIf set to <xref href=\"Discord.RateLimitPrecision.Second\" data-throw-if-not-resolved=\"false\"></xref>, this value will be rounded up to the\nnearest second.\n"
  example: []
  syntax:
    content: public RateLimitPrecision RateLimitPrecision { get; set; }
    parameters: []
    return:
      type: Discord.RateLimitPrecision
      description: "\nThe currently set <xref href=\"Discord.DiscordConfig.RateLimitPrecision\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Property RateLimitPrecision As RateLimitPrecision
  overload: Discord.DiscordConfig.RateLimitPrecision*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Discord.DiscordConfig.UseSystemClock
  commentId: P:Discord.DiscordConfig.UseSystemClock
  id: UseSystemClock
  parent: Discord.DiscordConfig
  langs:
  - csharp
  - vb
  name: UseSystemClock
  nameWithType: DiscordConfig.UseSystemClock
  fullName: Discord.DiscordConfig.UseSystemClock
  type: Property
  source:
    remote:
      path: src/Discord.Net.Core/DiscordConfig.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: UseSystemClock
    path: ../src/Discord.Net.Core/DiscordConfig.cs
    startLine: 171
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nGets or sets whether or not rate-limits should use the system clock.\n"
  remarks: "\nIf set to <code>false</code>, we will use the X-RateLimit-Reset-After header\nto determine when a rate-limit expires, rather than comparing the\nX-RateLimit-Reset timestamp to the system time.\n\nThis should only be changed to false if the system is known to have\na clock that is out of sync. Relying on the Reset-After header will\nincur network lag.\n\nRegardless of this property, we still rely on the system&apos;s wall-clock\nto determine if a bucket is rate-limited; we do not use any monotonic\nclock. Your system will still need a stable clock.\n"
  example: []
  syntax:
    content: public bool UseSystemClock { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseSystemClock As Boolean
  overload: Discord.DiscordConfig.UseSystemClock*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Discord.DiscordConfig.Version*
  commentId: Overload:Discord.DiscordConfig.Version
  name: Version
  nameWithType: DiscordConfig.Version
  fullName: Discord.DiscordConfig.Version
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.DiscordConfig.UserAgent*
  commentId: Overload:Discord.DiscordConfig.UserAgent
  name: UserAgent
  nameWithType: DiscordConfig.UserAgent
  fullName: Discord.DiscordConfig.UserAgent
- uid: Discord.DiscordConfig.APIVersion
  commentId: F:Discord.DiscordConfig.APIVersion
  parent: Discord.DiscordConfig
  name: APIVersion
  nameWithType: DiscordConfig.APIVersion
  fullName: Discord.DiscordConfig.APIVersion
- uid: Discord.DiscordConfig
  commentId: T:Discord.DiscordConfig
  parent: Discord
  name: DiscordConfig
  nameWithType: DiscordConfig
  fullName: Discord.DiscordConfig
- uid: Discord.RetryMode
  commentId: T:Discord.RetryMode
  parent: Discord
  name: RetryMode
  nameWithType: RetryMode
  fullName: Discord.RetryMode
- uid: Discord.DiscordConfig.DefaultRetryMode*
  commentId: Overload:Discord.DiscordConfig.DefaultRetryMode
  name: DefaultRetryMode
  nameWithType: DiscordConfig.DefaultRetryMode
  fullName: Discord.DiscordConfig.DefaultRetryMode
- uid: Discord.LogSeverity
  commentId: T:Discord.LogSeverity
  parent: Discord
  name: LogSeverity
  nameWithType: LogSeverity
  fullName: Discord.LogSeverity
- uid: Discord.DiscordConfig.LogLevel*
  commentId: Overload:Discord.DiscordConfig.LogLevel
  name: LogLevel
  nameWithType: DiscordConfig.LogLevel
  fullName: Discord.DiscordConfig.LogLevel
- uid: Discord.RateLimitPrecision.Second
  commentId: F:Discord.RateLimitPrecision.Second
  isExternal: true
- uid: Discord.DiscordConfig.RateLimitPrecision
  commentId: P:Discord.DiscordConfig.RateLimitPrecision
  parent: Discord.DiscordConfig
  name: RateLimitPrecision
  nameWithType: DiscordConfig.RateLimitPrecision
  fullName: Discord.DiscordConfig.RateLimitPrecision
- uid: Discord.DiscordConfig.RateLimitPrecision*
  commentId: Overload:Discord.DiscordConfig.RateLimitPrecision
  name: RateLimitPrecision
  nameWithType: DiscordConfig.RateLimitPrecision
  fullName: Discord.DiscordConfig.RateLimitPrecision
- uid: Discord.RateLimitPrecision
  commentId: T:Discord.RateLimitPrecision
  parent: Discord
  name: RateLimitPrecision
  nameWithType: RateLimitPrecision
  fullName: Discord.RateLimitPrecision
- uid: Discord.DiscordConfig.UseSystemClock*
  commentId: Overload:Discord.DiscordConfig.UseSystemClock
  name: UseSystemClock
  nameWithType: DiscordConfig.UseSystemClock
  fullName: Discord.DiscordConfig.UseSystemClock
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
