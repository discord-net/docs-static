### YamlMime:ManagedReference
items:
- uid: Discord.MentionUtils
  commentId: T:Discord.MentionUtils
  id: MentionUtils
  parent: Discord
  children:
  - Discord.MentionUtils.MentionChannel(System.UInt64)
  - Discord.MentionUtils.MentionRole(System.UInt64)
  - Discord.MentionUtils.MentionUser(System.UInt64)
  - Discord.MentionUtils.ParseChannel(System.String)
  - Discord.MentionUtils.ParseRole(System.String)
  - Discord.MentionUtils.ParseUser(System.String)
  - Discord.MentionUtils.TryParseChannel(System.String,System.UInt64@)
  - Discord.MentionUtils.TryParseRole(System.String,System.UInt64@)
  - Discord.MentionUtils.TryParseUser(System.String,System.UInt64@)
  langs:
  - csharp
  - vb
  name: MentionUtils
  nameWithType: MentionUtils
  fullName: Discord.MentionUtils
  type: Class
  source:
    remote:
      path: src/Discord.Net.Core/Utils/MentionUtils.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MentionUtils
    path: ../src/Discord.Net.Core/Utils/MentionUtils.cs
    startLine: 9
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nProvides a series of helper methods for parsing mentions.\n"
  example: []
  syntax:
    content: public static class MentionUtils
    content.vb: Public Module MentionUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Discord.MentionUtils.MentionUser(System.UInt64)
  commentId: M:Discord.MentionUtils.MentionUser(System.UInt64)
  id: MentionUser(System.UInt64)
  parent: Discord.MentionUtils
  langs:
  - csharp
  - vb
  name: MentionUser(UInt64)
  nameWithType: MentionUtils.MentionUser(UInt64)
  fullName: Discord.MentionUtils.MentionUser(System.UInt64)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Utils/MentionUtils.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MentionUser
    path: ../src/Discord.Net.Core/Utils/MentionUtils.cs
    startLine: 21
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns a mention string based on the user ID.\n"
  example: []
  syntax:
    content: public static string MentionUser(ulong id)
    parameters:
    - id: id
      type: System.UInt64
    return:
      type: System.String
      description: "\nA user mention string (e.g. &lt;@80351110224678912>).\n"
    content.vb: Public Shared Function MentionUser(id As ULong) As String
  overload: Discord.MentionUtils.MentionUser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.MentionUtils.MentionChannel(System.UInt64)
  commentId: M:Discord.MentionUtils.MentionChannel(System.UInt64)
  id: MentionChannel(System.UInt64)
  parent: Discord.MentionUtils
  langs:
  - csharp
  - vb
  name: MentionChannel(UInt64)
  nameWithType: MentionUtils.MentionChannel(UInt64)
  fullName: Discord.MentionUtils.MentionChannel(System.UInt64)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Utils/MentionUtils.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MentionChannel
    path: ../src/Discord.Net.Core/Utils/MentionUtils.cs
    startLine: 29
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns a mention string based on the channel ID.\n"
  example: []
  syntax:
    content: public static string MentionChannel(ulong id)
    parameters:
    - id: id
      type: System.UInt64
    return:
      type: System.String
      description: "\nA channel mention string (e.g. &lt;#103735883630395392>).\n"
    content.vb: Public Shared Function MentionChannel(id As ULong) As String
  overload: Discord.MentionUtils.MentionChannel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.MentionUtils.MentionRole(System.UInt64)
  commentId: M:Discord.MentionUtils.MentionRole(System.UInt64)
  id: MentionRole(System.UInt64)
  parent: Discord.MentionUtils
  langs:
  - csharp
  - vb
  name: MentionRole(UInt64)
  nameWithType: MentionUtils.MentionRole(UInt64)
  fullName: Discord.MentionUtils.MentionRole(System.UInt64)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Utils/MentionUtils.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: MentionRole
    path: ../src/Discord.Net.Core/Utils/MentionUtils.cs
    startLine: 37
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nReturns a mention string based on the role ID.\n"
  example: []
  syntax:
    content: public static string MentionRole(ulong id)
    parameters:
    - id: id
      type: System.UInt64
    return:
      type: System.String
      description: "\nA role mention string (e.g. &lt;@&amp;165511591545143296>).\n"
    content.vb: Public Shared Function MentionRole(id As ULong) As String
  overload: Discord.MentionUtils.MentionRole*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.MentionUtils.ParseUser(System.String)
  commentId: M:Discord.MentionUtils.ParseUser(System.String)
  id: ParseUser(System.String)
  parent: Discord.MentionUtils
  langs:
  - csharp
  - vb
  name: ParseUser(String)
  nameWithType: MentionUtils.ParseUser(String)
  fullName: Discord.MentionUtils.ParseUser(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Utils/MentionUtils.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ParseUser
    path: ../src/Discord.Net.Core/Utils/MentionUtils.cs
    startLine: 43
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nParses a provided user mention string.\n"
  example: []
  syntax:
    content: public static ulong ParseUser(string text)
    parameters:
    - id: text
      type: System.String
    return:
      type: System.UInt64
    content.vb: Public Shared Function ParseUser(text As String) As ULong
  overload: Discord.MentionUtils.ParseUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Invalid mention format.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.MentionUtils.TryParseUser(System.String,System.UInt64@)
  commentId: M:Discord.MentionUtils.TryParseUser(System.String,System.UInt64@)
  id: TryParseUser(System.String,System.UInt64@)
  parent: Discord.MentionUtils
  langs:
  - csharp
  - vb
  name: TryParseUser(String, out UInt64)
  nameWithType: MentionUtils.TryParseUser(String, out UInt64)
  fullName: Discord.MentionUtils.TryParseUser(System.String, out System.UInt64)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Utils/MentionUtils.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: TryParseUser
    path: ../src/Discord.Net.Core/Utils/MentionUtils.cs
    startLine: 52
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nTries to parse a provided user mention string.\n"
  example: []
  syntax:
    content: public static bool TryParseUser(string text, out ulong userId)
    parameters:
    - id: text
      type: System.String
    - id: userId
      type: System.UInt64
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryParseUser(text As String, ByRef userId As ULong) As Boolean
  overload: Discord.MentionUtils.TryParseUser*
  nameWithType.vb: MentionUtils.TryParseUser(String, ByRef UInt64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.MentionUtils.TryParseUser(System.String, ByRef System.UInt64)
  name.vb: TryParseUser(String, ByRef UInt64)
- uid: Discord.MentionUtils.ParseChannel(System.String)
  commentId: M:Discord.MentionUtils.ParseChannel(System.String)
  id: ParseChannel(System.String)
  parent: Discord.MentionUtils
  langs:
  - csharp
  - vb
  name: ParseChannel(String)
  nameWithType: MentionUtils.ParseChannel(String)
  fullName: Discord.MentionUtils.ParseChannel(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Utils/MentionUtils.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ParseChannel
    path: ../src/Discord.Net.Core/Utils/MentionUtils.cs
    startLine: 72
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nParses a provided channel mention string.\n"
  example: []
  syntax:
    content: public static ulong ParseChannel(string text)
    parameters:
    - id: text
      type: System.String
    return:
      type: System.UInt64
    content.vb: Public Shared Function ParseChannel(text As String) As ULong
  overload: Discord.MentionUtils.ParseChannel*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Invalid mention format.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.MentionUtils.TryParseChannel(System.String,System.UInt64@)
  commentId: M:Discord.MentionUtils.TryParseChannel(System.String,System.UInt64@)
  id: TryParseChannel(System.String,System.UInt64@)
  parent: Discord.MentionUtils
  langs:
  - csharp
  - vb
  name: TryParseChannel(String, out UInt64)
  nameWithType: MentionUtils.TryParseChannel(String, out UInt64)
  fullName: Discord.MentionUtils.TryParseChannel(System.String, out System.UInt64)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Utils/MentionUtils.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: TryParseChannel
    path: ../src/Discord.Net.Core/Utils/MentionUtils.cs
    startLine: 81
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nTries to parse a provided channel mention string.\n"
  example: []
  syntax:
    content: public static bool TryParseChannel(string text, out ulong channelId)
    parameters:
    - id: text
      type: System.String
    - id: channelId
      type: System.UInt64
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryParseChannel(text As String, ByRef channelId As ULong) As Boolean
  overload: Discord.MentionUtils.TryParseChannel*
  nameWithType.vb: MentionUtils.TryParseChannel(String, ByRef UInt64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.MentionUtils.TryParseChannel(System.String, ByRef System.UInt64)
  name.vb: TryParseChannel(String, ByRef UInt64)
- uid: Discord.MentionUtils.ParseRole(System.String)
  commentId: M:Discord.MentionUtils.ParseRole(System.String)
  id: ParseRole(System.String)
  parent: Discord.MentionUtils
  langs:
  - csharp
  - vb
  name: ParseRole(String)
  nameWithType: MentionUtils.ParseRole(String)
  fullName: Discord.MentionUtils.ParseRole(System.String)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Utils/MentionUtils.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: ParseRole
    path: ../src/Discord.Net.Core/Utils/MentionUtils.cs
    startLine: 98
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nParses a provided role mention string.\n"
  example: []
  syntax:
    content: public static ulong ParseRole(string text)
    parameters:
    - id: text
      type: System.String
    return:
      type: System.UInt64
    content.vb: Public Shared Function ParseRole(text As String) As ULong
  overload: Discord.MentionUtils.ParseRole*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Invalid mention format.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Discord.MentionUtils.TryParseRole(System.String,System.UInt64@)
  commentId: M:Discord.MentionUtils.TryParseRole(System.String,System.UInt64@)
  id: TryParseRole(System.String,System.UInt64@)
  parent: Discord.MentionUtils
  langs:
  - csharp
  - vb
  name: TryParseRole(String, out UInt64)
  nameWithType: MentionUtils.TryParseRole(String, out UInt64)
  fullName: Discord.MentionUtils.TryParseRole(System.String, out System.UInt64)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Core/Utils/MentionUtils.cs
      branch: dev
      repo: https://github.com/discord-net/Discord.Net
    id: TryParseRole
    path: ../src/Discord.Net.Core/Utils/MentionUtils.cs
    startLine: 107
  assemblies:
  - Discord.Net.Core
  namespace: Discord
  summary: "\nTries to parse a provided role mention string.\n"
  example: []
  syntax:
    content: public static bool TryParseRole(string text, out ulong roleId)
    parameters:
    - id: text
      type: System.String
    - id: roleId
      type: System.UInt64
    return:
      type: System.Boolean
    content.vb: Public Shared Function TryParseRole(text As String, ByRef roleId As ULong) As Boolean
  overload: Discord.MentionUtils.TryParseRole*
  nameWithType.vb: MentionUtils.TryParseRole(String, ByRef UInt64)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.MentionUtils.TryParseRole(System.String, ByRef System.UInt64)
  name.vb: TryParseRole(String, ByRef UInt64)
references:
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Discord.MentionUtils.MentionUser*
  commentId: Overload:Discord.MentionUtils.MentionUser
  name: MentionUser
  nameWithType: MentionUtils.MentionUser
  fullName: Discord.MentionUtils.MentionUser
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Discord.MentionUtils.MentionChannel*
  commentId: Overload:Discord.MentionUtils.MentionChannel
  name: MentionChannel
  nameWithType: MentionUtils.MentionChannel
  fullName: Discord.MentionUtils.MentionChannel
- uid: Discord.MentionUtils.MentionRole*
  commentId: Overload:Discord.MentionUtils.MentionRole
  name: MentionRole
  nameWithType: MentionUtils.MentionRole
  fullName: Discord.MentionUtils.MentionRole
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Discord.MentionUtils.ParseUser*
  commentId: Overload:Discord.MentionUtils.ParseUser
  name: ParseUser
  nameWithType: MentionUtils.ParseUser
  fullName: Discord.MentionUtils.ParseUser
- uid: Discord.MentionUtils.TryParseUser*
  commentId: Overload:Discord.MentionUtils.TryParseUser
  name: TryParseUser
  nameWithType: MentionUtils.TryParseUser
  fullName: Discord.MentionUtils.TryParseUser
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.MentionUtils.ParseChannel*
  commentId: Overload:Discord.MentionUtils.ParseChannel
  name: ParseChannel
  nameWithType: MentionUtils.ParseChannel
  fullName: Discord.MentionUtils.ParseChannel
- uid: Discord.MentionUtils.TryParseChannel*
  commentId: Overload:Discord.MentionUtils.TryParseChannel
  name: TryParseChannel
  nameWithType: MentionUtils.TryParseChannel
  fullName: Discord.MentionUtils.TryParseChannel
- uid: Discord.MentionUtils.ParseRole*
  commentId: Overload:Discord.MentionUtils.ParseRole
  name: ParseRole
  nameWithType: MentionUtils.ParseRole
  fullName: Discord.MentionUtils.ParseRole
- uid: Discord.MentionUtils.TryParseRole*
  commentId: Overload:Discord.MentionUtils.TryParseRole
  name: TryParseRole
  nameWithType: MentionUtils.TryParseRole
  fullName: Discord.MentionUtils.TryParseRole
