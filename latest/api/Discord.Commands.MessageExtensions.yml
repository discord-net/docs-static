### YamlMime:ManagedReference
items:
- uid: Discord.Commands.MessageExtensions
  commentId: T:Discord.Commands.MessageExtensions
  id: MessageExtensions
  parent: Discord.Commands
  children:
  - Discord.Commands.MessageExtensions.HasCharPrefix(Discord.IUserMessage,System.Char,System.Int32@)
  - Discord.Commands.MessageExtensions.HasMentionPrefix(Discord.IUserMessage,Discord.IUser,System.Int32@)
  - Discord.Commands.MessageExtensions.HasStringPrefix(Discord.IUserMessage,System.String,System.Int32@,StringComparison)
  langs:
  - csharp
  - vb
  name: MessageExtensions
  nameWithType: MessageExtensions
  fullName: Discord.Commands.MessageExtensions
  type: Class
  source:
    remote:
      path: src/Discord.Net.Commands/Extensions/MessageExtensions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: MessageExtensions
    path: ../src/Discord.Net.Commands/Extensions/MessageExtensions.cs
    startLine: 7
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nProvides extension methods for <xref href=\"Discord.IUserMessage\" data-throw-if-not-resolved=\"false\"></xref> that relates to commands.\n"
  example: []
  syntax:
    content: 'public static class MessageExtensions : object'
    content.vb: >-
      Public Module MessageExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Discord.Commands.MessageExtensions.HasCharPrefix(Discord.IUserMessage,System.Char,System.Int32@)
  commentId: M:Discord.Commands.MessageExtensions.HasCharPrefix(Discord.IUserMessage,System.Char,System.Int32@)
  id: HasCharPrefix(Discord.IUserMessage,System.Char,System.Int32@)
  isExtensionMethod: true
  parent: Discord.Commands.MessageExtensions
  langs:
  - csharp
  - vb
  name: HasCharPrefix(IUserMessage, Char, ref Int32)
  nameWithType: MessageExtensions.HasCharPrefix(IUserMessage, Char, ref Int32)
  fullName: Discord.Commands.MessageExtensions.HasCharPrefix(Discord.IUserMessage, System.Char, ref System.Int32)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Extensions/MessageExtensions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: HasCharPrefix
    path: ../src/Discord.Net.Commands/Extensions/MessageExtensions.cs
    startLine: 18
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nGets whether the message starts with the provided character.\n"
  example: []
  syntax:
    content: public static bool HasCharPrefix(this IUserMessage msg, char c, ref int argPos)
    parameters:
    - id: msg
      type: Discord.IUserMessage
      description: The message to check against.
    - id: c
      type: System.Char
      description: The char prefix.
    - id: argPos
      type: System.Int32
      description: References where the command starts.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the message begins with the char <code data-dev-comment-type=\"paramref\" class=\"paramref\">c</code>; otherwise <code>false</code>.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasCharPrefix(msg As IUserMessage, c As Char, ByRef argPos As Integer) As Boolean
  overload: Discord.Commands.MessageExtensions.HasCharPrefix*
  nameWithType.vb: MessageExtensions.HasCharPrefix(IUserMessage, Char, ByRef Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.Commands.MessageExtensions.HasCharPrefix(Discord.IUserMessage, System.Char, ByRef System.Int32)
  name.vb: HasCharPrefix(IUserMessage, Char, ByRef Int32)
- uid: Discord.Commands.MessageExtensions.HasStringPrefix(Discord.IUserMessage,System.String,System.Int32@,StringComparison)
  commentId: M:Discord.Commands.MessageExtensions.HasStringPrefix(Discord.IUserMessage,System.String,System.Int32@,StringComparison)
  id: HasStringPrefix(Discord.IUserMessage,System.String,System.Int32@,StringComparison)
  isExtensionMethod: true
  parent: Discord.Commands.MessageExtensions
  langs:
  - csharp
  - vb
  name: HasStringPrefix(IUserMessage, String, ref Int32, StringComparison)
  nameWithType: MessageExtensions.HasStringPrefix(IUserMessage, String, ref Int32, StringComparison)
  fullName: Discord.Commands.MessageExtensions.HasStringPrefix(Discord.IUserMessage, System.String, ref System.Int32, StringComparison)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Extensions/MessageExtensions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: HasStringPrefix
    path: ../src/Discord.Net.Commands/Extensions/MessageExtensions.cs
    startLine: 31
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nGets whether the message starts with the provided string.\n"
  example: []
  syntax:
    content: public static bool HasStringPrefix(this IUserMessage msg, string str, ref int argPos, StringComparison comparisonType = null)
    parameters:
    - id: msg
      type: Discord.IUserMessage
    - id: str
      type: System.String
    - id: argPos
      type: System.Int32
    - id: comparisonType
      type: StringComparison
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasStringPrefix(msg As IUserMessage, str As String, ByRef argPos As Integer, comparisonType As StringComparison = Nothing) As Boolean
  overload: Discord.Commands.MessageExtensions.HasStringPrefix*
  nameWithType.vb: MessageExtensions.HasStringPrefix(IUserMessage, String, ByRef Int32, StringComparison)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.Commands.MessageExtensions.HasStringPrefix(Discord.IUserMessage, System.String, ByRef System.Int32, StringComparison)
  name.vb: HasStringPrefix(IUserMessage, String, ByRef Int32, StringComparison)
- uid: Discord.Commands.MessageExtensions.HasMentionPrefix(Discord.IUserMessage,Discord.IUser,System.Int32@)
  commentId: M:Discord.Commands.MessageExtensions.HasMentionPrefix(Discord.IUserMessage,Discord.IUser,System.Int32@)
  id: HasMentionPrefix(Discord.IUserMessage,Discord.IUser,System.Int32@)
  isExtensionMethod: true
  parent: Discord.Commands.MessageExtensions
  langs:
  - csharp
  - vb
  name: HasMentionPrefix(IUserMessage, IUser, ref Int32)
  nameWithType: MessageExtensions.HasMentionPrefix(IUserMessage, IUser, ref Int32)
  fullName: Discord.Commands.MessageExtensions.HasMentionPrefix(Discord.IUserMessage, Discord.IUser, ref System.Int32)
  type: Method
  source:
    remote:
      path: src/Discord.Net.Commands/Extensions/MessageExtensions.cs
      branch: docs
      repo: https://github.com/discord-net/Discord.Net
    id: HasMentionPrefix
    path: ../src/Discord.Net.Commands/Extensions/MessageExtensions.cs
    startLine: 44
  assemblies:
  - Discord.Net.Commands
  namespace: Discord.Commands
  summary: "\nGets whether the message starts with the user&apos;s mention string.\n"
  example: []
  syntax:
    content: public static bool HasMentionPrefix(this IUserMessage msg, IUser user, ref int argPos)
    parameters:
    - id: msg
      type: Discord.IUserMessage
    - id: user
      type: Discord.IUser
    - id: argPos
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function HasMentionPrefix(msg As IUserMessage, user As IUser, ByRef argPos As Integer) As Boolean
  overload: Discord.Commands.MessageExtensions.HasMentionPrefix*
  nameWithType.vb: MessageExtensions.HasMentionPrefix(IUserMessage, IUser, ByRef Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Discord.Commands.MessageExtensions.HasMentionPrefix(Discord.IUserMessage, Discord.IUser, ByRef System.Int32)
  name.vb: HasMentionPrefix(IUserMessage, IUser, ByRef Int32)
references:
- uid: Discord.IUserMessage
  commentId: T:Discord.IUserMessage
  parent: Discord
  name: IUserMessage
  nameWithType: IUserMessage
  fullName: Discord.IUserMessage
- uid: Discord.Commands
  commentId: N:Discord.Commands
  name: Discord.Commands
  nameWithType: Discord.Commands
  fullName: Discord.Commands
- uid: System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Discord
  commentId: N:Discord
  name: Discord
  nameWithType: Discord
  fullName: Discord
- uid: Discord.Commands.MessageExtensions.HasCharPrefix*
  commentId: Overload:Discord.Commands.MessageExtensions.HasCharPrefix
  name: HasCharPrefix
  nameWithType: MessageExtensions.HasCharPrefix
  fullName: Discord.Commands.MessageExtensions.HasCharPrefix
- uid: System.Char
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Int32
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Discord.Commands.MessageExtensions.HasStringPrefix*
  commentId: Overload:Discord.Commands.MessageExtensions.HasStringPrefix
  name: HasStringPrefix
  nameWithType: MessageExtensions.HasStringPrefix
  fullName: Discord.Commands.MessageExtensions.HasStringPrefix
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: StringComparison
  commentId: '!:StringComparison'
  isExternal: true
  name: StringComparison
  nameWithType: StringComparison
  fullName: StringComparison
- uid: Discord.Commands.MessageExtensions.HasMentionPrefix*
  commentId: Overload:Discord.Commands.MessageExtensions.HasMentionPrefix
  name: HasMentionPrefix
  nameWithType: MessageExtensions.HasMentionPrefix
  fullName: Discord.Commands.MessageExtensions.HasMentionPrefix
- uid: Discord.IUser
  commentId: T:Discord.IUser
  parent: Discord
  name: IUser
  nameWithType: IUser
  fullName: Discord.IUser
